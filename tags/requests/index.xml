<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Requests on jdhao's digital space</title><link>https://jdhao.github.io/tags/requests/</link><description>Recent content in Requests on jdhao's digital space</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Thu, 08 Apr 2021 23:54:08 +0800</lastBuildDate><atom:link href="https://jdhao.github.io/tags/requests/index.xml" rel="self" type="application/rss+xml"/><item><title>Post Nested Data Structure to the Server Using Requests</title><link>https://jdhao.github.io/2021/04/08/send_complex_data_in_python_requests/</link><pubDate>Thu, 08 Apr 2021 23:54:08 +0800</pubDate><guid>https://jdhao.github.io/2021/04/08/send_complex_data_in_python_requests/</guid><description>&lt;p>In this post, I will share how to post complex data and decode it in the server
side in Python.&lt;/p></description></item><item><title>Using Proxy in Python Requests package</title><link>https://jdhao.github.io/2021/02/07/python_requests_with_proxy/</link><pubDate>Sun, 07 Feb 2021 23:34:47 +0800</pubDate><guid>https://jdhao.github.io/2021/02/07/python_requests_with_proxy/</guid><description>&lt;p>If we need to access the internet via a proxy server, we should set proxy
properly when making HTTP/HTTPS requests using the &lt;a href="https://requests.readthedocs.io/en/master/" target="_blank">Requests&lt;/a> package.&lt;/p></description></item><item><title>Note on Using requests package</title><link>https://jdhao.github.io/2020/07/09/requests_notes/</link><pubDate>Thu, 09 Jul 2020 23:30:14 +0800</pubDate><guid>https://jdhao.github.io/2020/07/09/requests_notes/</guid><description>How to check request header and body? # When making requests, we may want to see exactly what are being requested. With requests, it is easy do access the request header and request body:
import requests url = &amp;#34;http://httpbin.org/post&amp;#34; payload = {&amp;#34;apple&amp;#34;: 10, &amp;#34;pear&amp;#34;: [20, 30], &amp;#34;img&amp;#34;: &amp;#34;http://example.com/demo.jpg&amp;#34;} r = requests.post(url, json=payload) print(f&amp;#34;request headers: {r.request.headers}&amp;#34;) print(f&amp;#34;request body: {r.request.body}&amp;#34;) A sample output is:
request headers: {&amp;#39;User-Agent&amp;#39;: &amp;#39;python-requests/2.19.1&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;*/*&amp;#39;, &amp;#39;Connection&amp;#39;: &amp;#39;keep-alive&amp;#39;, &amp;#39;Content-Length&amp;#39;: &amp;#39;69&amp;#39;, &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39;} request body: b&amp;#39;{&amp;#34;apple&amp;#34;: 10, &amp;#34;pear&amp;#34;: [20, 30], &amp;#34;img&amp;#34;: &amp;#34;http://example.</description></item><item><title>Downloading Images Faster with requests Sessions</title><link>https://jdhao.github.io/2020/06/21/faster_im_download_with_requests/</link><pubDate>Sun, 21 Jun 2020 22:13:05 +0800</pubDate><guid>https://jdhao.github.io/2020/06/21/faster_im_download_with_requests/</guid><description>&lt;p>In my &lt;a href="https://jdhao.github.io/2020/06/17/download_image_from_url_python/" target="_blank">previous post&lt;/a>,
I write about how to download an image from URL using &lt;a href="https://github.com/psf/requests" target="_blank">requests&lt;/a>.
In this post, I want to share ways to make the download speed faster.&lt;/p></description></item><item><title>How to Download Image from URL using Python</title><link>https://jdhao.github.io/2020/06/17/download_image_from_url_python/</link><pubDate>Wed, 17 Jun 2020 09:19:30 +0800</pubDate><guid>https://jdhao.github.io/2020/06/17/download_image_from_url_python/</guid><description>&lt;p>Recently, I want to download some images using Python.
This is what I&amp;rsquo;ve learned after the survey.&lt;/p></description></item><item><title>Build Web API with Flask --- Work with JSON-like Dict</title><link>https://jdhao.github.io/2020/04/13/build_webapi_with_flask_s3/</link><pubDate>Mon, 13 Apr 2020 22:29:23 +0800</pubDate><guid>https://jdhao.github.io/2020/04/13/build_webapi_with_flask_s3/</guid><description>&lt;p>This is a simple post about how to send JSON-like Dict data to a Flask server
via &lt;a href="https://requests.readthedocs.io/en/master/" target="_blank">requests&lt;/a> package.&lt;/p></description></item><item><title>Build Web API with Flask -- Post and Receive Image</title><link>https://jdhao.github.io/2020/04/12/build_webapi_with_flask_s2/</link><pubDate>Sun, 12 Apr 2020 20:11:52 +0800</pubDate><guid>https://jdhao.github.io/2020/04/12/build_webapi_with_flask_s2/</guid><description>&lt;p>In this post, I want to write about how to build a simple image processing web
API that returns the size of an image. The topics include how to build this web
API with Flask and how to post image to this web API and get response.&lt;/p></description></item><item><title>Build A Web API Service Using Flask -- The Basics</title><link>https://jdhao.github.io/2020/04/06/build_webapi_with_flask_s1/</link><pubDate>Mon, 06 Apr 2020 22:05:07 +0800</pubDate><guid>https://jdhao.github.io/2020/04/06/build_webapi_with_flask_s1/</guid><description>&lt;p>Web API is a kind of web application. Simply put, web APIs are built for other
applications to get info from the web server. For Python,
&lt;a href="https://flask.palletsprojects.com/en/1.1.x/" target="_blank">Flask&lt;/a> can be used to build web
applications. In this post, I want to share how to build web APIs with Flask.&lt;/p></description></item></channel></rss>
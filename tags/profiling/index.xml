<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Profiling on Blowfish</title><link>https://jdhao.github.io/tags/profiling/</link><description>Recent content in Profiling on Blowfish</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Tue, 12 Sep 2023 23:31:38 +0200</lastBuildDate><atom:link href="https://jdhao.github.io/tags/profiling/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Profile Your Python Script/Module</title><link>https://jdhao.github.io/2023/09/12/python_profiling_visualization/</link><pubDate>Tue, 12 Sep 2023 23:31:38 +0200</pubDate><guid>https://jdhao.github.io/2023/09/12/python_profiling_visualization/</guid><description>&lt;p>In my &lt;a href="https://jdhao.github.io/2020/11/06/profile_python_line_profiler/" target="_blank">previous post&lt;/a>, I shared how to profile a single function using line_profiler.
In this post, I want to share how to profile Python script/module and visualize the profile stat to pinpoint the slow part of the code.&lt;/p></description></item><item><title>Profiling Python Code with line_profiler</title><link>https://jdhao.github.io/2020/11/06/profile_python_line_profiler/</link><pubDate>Fri, 06 Nov 2020 01:03:18 +0800</pubDate><guid>https://jdhao.github.io/2020/11/06/profile_python_line_profiler/</guid><description>&lt;p>To profile Python code line by line, we can use &lt;a href="https://github.com/pyutils/line_profiler" target="_blank">line_profiler&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item></channel></rss>
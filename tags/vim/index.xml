<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on jdhao's digital space</title><link>https://jdhao.github.io/tags/vim/</link><description>Recent content in Vim on jdhao's digital space</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Tue, 21 Dec 2021 23:01:41 +0800</lastBuildDate><atom:link href="https://jdhao.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Sort lines based on a column in Vim/Nvim</title><link>https://jdhao.github.io/2021/12/21/sort_lines_based_on_a_column_nvim/</link><pubDate>Tue, 21 Dec 2021 23:01:41 +0800</pubDate><guid>https://jdhao.github.io/2021/12/21/sort_lines_based_on_a_column_nvim/</guid><description>&lt;p>I have a file where each line has several comma-separated items. I want to sort
the lines, based on a certain column. How do we do it inside Vim/Nvim?&lt;/p></description></item><item><title>Show Git Diff When Doing Git Commit</title><link>https://jdhao.github.io/2021/07/24/git_show_diff_when_commiting/</link><pubDate>Sat, 24 Jul 2021 11:07:16 +0800</pubDate><guid>https://jdhao.github.io/2021/07/24/git_show_diff_when_commiting/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/20210724122638.jpg" width="800">
&lt;/p>
&lt;p>I saw on YouTube &lt;a href="https://www.youtube.com/watch?v=xv9cp7NyK5Y" target="_blank">a video&lt;/a> made by
&lt;a href="https://github.com/tjdevries" target="_blank">TJ DeVries&lt;/a> on how to contribute to the &lt;a href="https://neovim.io/" target="_blank">neovim
project&lt;/a>. There is a scene where he commit via &lt;code>git commit&lt;/code>,
and whoa, a Neovim instance appeared with three split, with top left the commit
message area, top right the git-status area, and on the right the git-diff info,
which is really cool.&lt;/p></description></item><item><title>Vim 实现的输入法体验</title><link>https://jdhao.github.io/2021/02/26/ime_inside_vim/</link><pubDate>Fri, 26 Feb 2021 23:34:36 +0800</pubDate><guid>https://jdhao.github.io/2021/02/26/ime_inside_vim/</guid><description>&lt;p>文接&lt;a href="https://jdhao.github.io/2021/02/25/nvim_ime_mode_auto_switch/" target="_blank">上回&lt;/a>，Vim 虽然贵为编辑器之神，有一个没有解决好的问题就是输入中文，以及中英文的切换问题。最近也尝试了一些试图利用 Vim 提供的功能，在 Vim 中实现输入法的插件。本文做一总结点评。&lt;/p></description></item><item><title>记录我的 2020</title><link>https://jdhao.github.io/2021/02/11/life_in_2020/</link><pubDate>Thu, 11 Feb 2021 19:17:08 +0800</pubDate><guid>https://jdhao.github.io/2021/02/11/life_in_2020/</guid><description>&lt;p>用文字记录生活，给自己的生命留下印迹，我的 2020。&lt;/p></description></item><item><title>Bracketed Paste Mode in Terminal</title><link>https://jdhao.github.io/2021/02/01/bracketed_paste_mode/</link><pubDate>Mon, 01 Feb 2021 23:34:02 +0800</pubDate><guid>https://jdhao.github.io/2021/02/01/bracketed_paste_mode/</guid><description>&lt;p>A note on bracketed paste mode in terminal and Neovim.&lt;/p></description></item><item><title>A Beginner's Guide on Creating Your Own Text Objects from Scratch in Neovim/Vim</title><link>https://jdhao.github.io/2020/11/15/nvim_text_objects/</link><pubDate>Sun, 15 Nov 2020 15:00:06 +0800</pubDate><guid>https://jdhao.github.io/2020/11/15/nvim_text_objects/</guid><description>&lt;p>Shortly after I started using &lt;a href="https://github.com/neovim/neovim" target="_blank">Neovim&lt;/a>, I learned about the concept of &lt;a href="https://neovim.io/doc/user/motion.html#text-objects" target="_blank">text objects&lt;/a>.
For example, when the cursor is inside a pair of &lt;code>[]&lt;/code>, we can use &lt;code>ci]&lt;/code> to
change text inside them. This is definitely one of the greatest moments on my
road of learning Vim. However, I haven&amp;rsquo;t really thought about how does text
object really work.&lt;/p></description></item><item><title>How to Insert Unicode Characters in Neovim/Vim</title><link>https://jdhao.github.io/2020/10/07/nvim_insert_unicode_char/</link><pubDate>Wed, 07 Oct 2020 16:57:53 +0800</pubDate><guid>https://jdhao.github.io/2020/10/07/nvim_insert_unicode_char/</guid><description>&lt;p>Except for the ASCII characters, it is often not straightforward to insert Unicode characters into Vim/Neovim.
Below I will summarize a few ways to enter Unicode characters inside Neovim/Vim.&lt;/p></description></item><item><title>Why You Should Use Snippets in Vim/Neovim</title><link>https://jdhao.github.io/2020/05/27/why_you_should_use_snippets_in_vim/</link><pubDate>Wed, 27 May 2020 22:46:19 +0800</pubDate><guid>https://jdhao.github.io/2020/05/27/why_you_should_use_snippets_in_vim/</guid><description>&lt;p>If you find yourself repeatedly type some similar-structured text in Vim/Nvim,
you need to ask yourself if there is a better way to do it.&lt;/p></description></item><item><title>Highlight Yanked Region in Nvim/Vim</title><link>https://jdhao.github.io/2020/05/22/highlight_yank_region_nvim/</link><pubDate>Fri, 22 May 2020 20:48:26 +0800</pubDate><guid>https://jdhao.github.io/2020/05/22/highlight_yank_region_nvim/</guid><description>&lt;p>&lt;strong>update (2020-09-19): update the settings for Nvim to reflect the latest
changes in API.&lt;/strong>&lt;/p>
&lt;p>In Vim or Neovim, showing the yanked region in color gives use visual feedback
on what we have copied. Here is how you can highlight yanked region in Vim or
Neovim.&lt;/p></description></item><item><title>Git Learning Notes (2)</title><link>https://jdhao.github.io/2020/05/07/git_learning_notes_s2/</link><pubDate>Thu, 07 May 2020 00:35:45 +0800</pubDate><guid>https://jdhao.github.io/2020/05/07/git_learning_notes_s2/</guid><description>&lt;p>My Git learning notes.&lt;/p></description></item><item><title>Search and Replace in Multiple Files in Vim/Neovim</title><link>https://jdhao.github.io/2020/03/14/nvim_search_replace_multiple_file/</link><pubDate>Sat, 14 Mar 2020 23:20:06 +0800</pubDate><guid>https://jdhao.github.io/2020/03/14/nvim_search_replace_multiple_file/</guid><description>In Sublime-Text and other editors, we can press Ctrl-Shift-F to invoke the search and replace UI. We can also accomplish this task easily in Vim or Neovim with the built-in features. Here is how.
There are two steps involved in this task. The first step is to find the files containing the search pattern under the current project or directory. The second step is to perform replacement for each file found in 1st step.</description></item><item><title>Vim 和 Neovim 的前世今生</title><link>https://jdhao.github.io/2020/01/12/vim_nvim_history_development/</link><pubDate>Sun, 12 Jan 2020 11:48:43 +0800</pubDate><guid>https://jdhao.github.io/2020/01/12/vim_nvim_history_development/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/202202021242998.jpg" width="800">
&lt;/p>
&lt;h1 class="relative group">引子
&lt;div id="%E5%BC%95%E5%AD%90" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E5%BC%95%E5%AD%90" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>从完全使用 &lt;a href="https://neovim.io/" target="_blank">Neovim&lt;/a> 进行日常&lt;a href="https://jdhao.github.io/2018/12/24/centos_nvim_install_use_guide_en/" target="_blank">项目开发&lt;/a>与&lt;a href="https://jdhao.github.io/2019/01/15/markdown_edit_preview_nvim/" target="_blank">文档写作&lt;/a>到现在，已经过去大约一年半的时间。一年半以前，我对 Vim 的了解还处在非常初级的阶段，甚至还不知道 Neovim，经过长时间的&lt;a href="https://jdhao.github.io/categories/Nvim/" target="_blank">使用与学习&lt;/a>，目前已经达到了熟练使用的程度。当然，Vim 的知识过于庞大，即便我已经使用了一年半的时间，还有很多 Vim/Neovim 的特性或者知识仍然有待了解与发掘。&lt;/p>
&lt;p>在使用 Neovim 的过程中，我对 Neovim 和 Vim 的历史以及它们之间的&lt;em>恩怨情仇&lt;/em>也产生了兴趣，散布在互联网上各处的博客、视频以及论坛讨论让我对过去的历史有了一定了解。&lt;/p>
&lt;p>P.S., 我建立了一个 &lt;a href="https://t.me/nvim_zh" target="_blank">nvim 中文用户 tg 群&lt;/a>，有兴趣可以加入。&lt;/p></description></item><item><title>Doing Number Arithmetics in Vim/Neovim Substitutions</title><link>https://jdhao.github.io/2020/01/10/nvim_number_arithmetic_in_substitute/</link><pubDate>Fri, 10 Jan 2020 23:48:25 +0800</pubDate><guid>https://jdhao.github.io/2020/01/10/nvim_number_arithmetic_in_substitute/</guid><description>&lt;p>In this post, I want to share how to do number arithmetic quickly and get what
you want in specified format. More specifically, the topic is:&lt;/p>
&lt;blockquote>
&lt;p>How do we add, subtract, multiply or divide a value to each number in a
range?&lt;/p>
&lt;/blockquote></description></item><item><title>Creating Markdown Front Matter with Ultisnips</title><link>https://jdhao.github.io/2019/12/22/ultisnips_avoid_content_update/</link><pubDate>Sun, 22 Dec 2019 13:45:25 +0800</pubDate><guid>https://jdhao.github.io/2019/12/22/ultisnips_avoid_content_update/</guid><description>&lt;h1 class="relative group">Introduction
&lt;div id="introduction" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#introduction" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>Currently, I write my blog posts in Markdown and build the blog using
&lt;a href="https://gohugo.io/" target="_blank">Hugo&lt;/a>. Hugo supports &lt;a href="https://gohugo.io/content-management/front-matter/" target="_blank">front matter&lt;/a> for Markdown so that you can
attach metadata for a post, such as title, date, tags, categories, etc.&lt;/p></description></item><item><title>Nifty Nvim Techniques That Make My Life Easier -- Series 6</title><link>https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/</link><pubDate>Sat, 21 Dec 2019 23:18:00 +0800</pubDate><guid>https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/</guid><description>&lt;p>This is the 6th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.&lt;/p>
&lt;details>
&lt;summary>&lt;font size="3" color="red">Click here to check other posts in this series.&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>Series 11: &lt;a href="https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/" target="_blank">https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/&lt;/a>&lt;/li>
&lt;li>Series 10: &lt;a href="https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/" target="_blank">https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/&lt;/a>&lt;/li>
&lt;li>Series 9: &lt;a href="https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/" target="_blank">https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/&lt;/a>&lt;/li>
&lt;li>Series 8: &lt;a href="https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/" target="_blank">https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/&lt;/a>&lt;/li>
&lt;li>Series 7: &lt;a href="https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/" target="_blank">https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/&lt;/a>&lt;/li>
&lt;li>Series 5: &lt;a href="https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/" target="_blank">https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/&lt;/a>&lt;/li>
&lt;li>Series 4: &lt;a href="https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/" target="_blank">https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/&lt;/a>&lt;/li>
&lt;li>Series 3: &lt;a href="https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/" target="_blank">https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/&lt;/a>&lt;/li>
&lt;li>Series 2: &lt;a href="https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/" target="_blank">https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/&lt;/a>&lt;/li>
&lt;li>Series 1: &lt;a href="https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/" target="_blank">https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>macOS 下如何为视频制作字幕</title><link>https://jdhao.github.io/2019/12/15/mac_video_subtitle_make/</link><pubDate>Sun, 15 Dec 2019 18:24:34 +0800</pubDate><guid>https://jdhao.github.io/2019/12/15/mac_video_subtitle_make/</guid><description>&lt;p>几周之前，在 YouTube 上看到了 Vim 创始人 Bram Moolenaar 在 &lt;a href="https://vimconf.org/2018/" target="_blank">Vim Conf 2018&lt;/a> 上的&lt;a href="https://www.youtube.com/watch?v=ES1L2SPgIDI" target="_blank">主题报告&lt;/a>，介绍了 Vim 的历史以及可能要添加的一些新特性，萌生了给这个视频配字幕的想法。&lt;/p></description></item><item><title>Running Command Asynchronously inside Neovim</title><link>https://jdhao.github.io/2019/12/09/vim_asynchronous_command_run/</link><pubDate>Mon, 09 Dec 2019 23:27:10 +0800</pubDate><guid>https://jdhao.github.io/2019/12/09/vim_asynchronous_command_run/</guid><description>&lt;h1 class="relative group">Introduction
&lt;div id="introduction" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#introduction" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>When I am writing some prototyping code inside Neovim, I want to run the script
without going to the terminal and typing &lt;code>python toy_script.py&lt;/code>. Of course, we
can use &lt;code>:!python %&lt;/code> in the command line to run the script (see &lt;code>:h :!&lt;/code>). The
problem is that running external command will block Nvim/Vim, and we can not
move the cursor until the script finishes running.&lt;/p></description></item><item><title>Building A Vim Statusline from Scratch</title><link>https://jdhao.github.io/2019/11/03/vim_custom_statusline/</link><pubDate>Sun, 03 Nov 2019 14:22:20 +0800</pubDate><guid>https://jdhao.github.io/2019/11/03/vim_custom_statusline/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/20191103144006.png">
&lt;/p>
&lt;p>I have been using &lt;a href="https://github.com/vim-airline/vim-airline" target="_blank">vim-airline&lt;/a> to
customize my statusline ever since I started using Neovim. It works great.
Recently, I started &lt;a href="https://github.com/jdhao/minimal_vim" target="_blank">a repo&lt;/a> named
&lt;code>minimal_vim&lt;/code> to create a minimal configuration without external plugins for
both Vim and Neovim. During the process, I learned how to build a custom
statusline from scratch.&lt;/p></description></item><item><title>Generating Table of Contents for Markdown with Tagbar</title><link>https://jdhao.github.io/2019/10/15/tagbar_markdown_setup/</link><pubDate>Tue, 15 Oct 2019 01:01:01 +0800</pubDate><guid>https://jdhao.github.io/2019/10/15/tagbar_markdown_setup/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/20191015001602.png">
&lt;/p>
&lt;p>I have been using Vim plugin Tagbar for viewing and navigating tags inside my
source file. However, for Markdown files, there is no support out of the box.
In this post, I would like to share how to set up tagbar to show tags for
Markdown.&lt;/p></description></item><item><title>Nifty Nvim Techniques That Make My Life Easier -- Series 4</title><link>https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/</link><pubDate>Tue, 17 Sep 2019 23:04:55 +0800</pubDate><guid>https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/</guid><description>&lt;p>This is the 4th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.&lt;/p>
&lt;details>
&lt;summary>&lt;font size="3" color="red">Click here to check other posts in this series.&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>Series 11: &lt;a href="https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/" target="_blank">https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/&lt;/a>&lt;/li>
&lt;li>Series 10: &lt;a href="https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/" target="_blank">https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/&lt;/a>&lt;/li>
&lt;li>Series 9: &lt;a href="https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/" target="_blank">https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/&lt;/a>&lt;/li>
&lt;li>Series 8: &lt;a href="https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/" target="_blank">https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/&lt;/a>&lt;/li>
&lt;li>Series 7: &lt;a href="https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/" target="_blank">https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/&lt;/a>&lt;/li>
&lt;li>Series 6: &lt;a href="https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/" target="_blank">https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/&lt;/a>&lt;/li>
&lt;li>Series 5: &lt;a href="https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/" target="_blank">https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/&lt;/a>&lt;/li>
&lt;li>Series 3: &lt;a href="https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/" target="_blank">https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/&lt;/a>&lt;/li>
&lt;li>Series 2: &lt;a href="https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/" target="_blank">https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/&lt;/a>&lt;/li>
&lt;li>Series 1: &lt;a href="https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/" target="_blank">https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>How to Create Proper Folding for Vim/Nvim Configuration</title><link>https://jdhao.github.io/2019/08/16/nvim_config_folding/</link><pubDate>Fri, 16 Aug 2019 22:56:20 +0800</pubDate><guid>https://jdhao.github.io/2019/08/16/nvim_config_folding/</guid><description>&lt;p>
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" src="https://blog-resource-1257868508.file.myqcloud.com/20190817223054.png" alt="Folded config" />
&lt;/figure>
&lt;/p></description></item><item><title>How Do I Show the Current File Path In Neovim?</title><link>https://jdhao.github.io/2019/07/31/nvim_show_file_path/</link><pubDate>Wed, 31 Jul 2019 23:10:27 +0800</pubDate><guid>https://jdhao.github.io/2019/07/31/nvim_show_file_path/</guid><description>&lt;p>I saw on &lt;a href="https://vi.stackexchange.com/questions/104/how-can-i-see-the-full-path-of-the-current-file/20768#20768" target="_blank">StackExchange&lt;/a>
that someone asked about how to see the full path of current file in Vim. I
think it would be helpful to write about how I do it.&lt;/p></description></item><item><title>Exclusive and Inclusive Motion in Neovim/Vim</title><link>https://jdhao.github.io/2019/05/18/nvim_exclusive_inclusive_motion/</link><pubDate>Sat, 18 May 2019 01:18:28 +0800</pubDate><guid>https://jdhao.github.io/2019/05/18/nvim_exclusive_inclusive_motion/</guid><description>&lt;h1 class="relative group">Introduction
&lt;div id="introduction" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#introduction" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>Suppose that we have the following text in normal mode (cursor is indicated by
&lt;code>^&lt;/code>):&lt;/p>
&lt;pre tabindex="0">&lt;code>hello world
^
&lt;/code>&lt;/pre>&lt;p>If we use &lt;code>dw&lt;/code>, we delete &lt;code>hello&amp;lt;Space&amp;gt;&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> and only &lt;code>world&lt;/code> is left; if we
use &lt;code>de&lt;/code>, &lt;code>hello&lt;/code> is deleted and &lt;code>&amp;lt;Space&amp;gt;world&lt;/code> is left. Have you ever wondered
about why &lt;code>dw&lt;/code> do not delete &lt;code>w&lt;/code> while &lt;code>de&lt;/code> will delete the &lt;code>o&lt;/code> in &lt;code>hello&lt;/code>? It
seems that motion &lt;code>e&lt;/code> and &lt;code>w&lt;/code> are somewhat inconsistent in their behaviours. It
turns out that it has something to do with the exclusivity of motions in Vim.&lt;/p></description></item><item><title>Nifty Nvim Techniques Which Make My Life Easier -- Series 3</title><link>https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/</link><pubDate>Tue, 14 May 2019 22:37:04 +0800</pubDate><guid>https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/</guid><description>&lt;p>This is the 3rd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.&lt;/p>
&lt;details>
&lt;summary>&lt;font size="3" color="red">Click here to check other posts in this series.&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>Series 11: &lt;a href="https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/" target="_blank">https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/&lt;/a>&lt;/li>
&lt;li>Series 10: &lt;a href="https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/" target="_blank">https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/&lt;/a>&lt;/li>
&lt;li>Series 9: &lt;a href="https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/" target="_blank">https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/&lt;/a>&lt;/li>
&lt;li>Series 8: &lt;a href="https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/" target="_blank">https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/&lt;/a>&lt;/li>
&lt;li>Series 7: &lt;a href="https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/" target="_blank">https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/&lt;/a>&lt;/li>
&lt;li>Series 6: &lt;a href="https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/" target="_blank">https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/&lt;/a>&lt;/li>
&lt;li>Series 5: &lt;a href="https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/" target="_blank">https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/&lt;/a>&lt;/li>
&lt;li>Series 4: &lt;a href="https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/" target="_blank">https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/&lt;/a>&lt;/li>
&lt;li>Series 2: &lt;a href="https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/" target="_blank">https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/&lt;/a>&lt;/li>
&lt;li>Series 1: &lt;a href="https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/" target="_blank">https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>Vim-like Editing inside Browser</title><link>https://jdhao.github.io/2019/05/11/nvim_text_input_browser/</link><pubDate>Sat, 11 May 2019 12:14:06 +0800</pubDate><guid>https://jdhao.github.io/2019/05/11/nvim_text_input_browser/</guid><description>&lt;p>Vim/Nvim has powerful ability in editing texts. But if you are in a browser and
want to input some text, can we somehow utilize the editing power of Vim? In
this post, I would like to share several ways to use Vim or Vim-like editing
when you are working inside a browser.&lt;/p></description></item><item><title>Spell Checking in Nvim</title><link>https://jdhao.github.io/2019/04/29/nvim_spell_check/</link><pubDate>Mon, 29 Apr 2019 22:35:54 +0800</pubDate><guid>https://jdhao.github.io/2019/04/29/nvim_spell_check/</guid><description>&lt;details>
&lt;summary>&lt;font size="2" color="red">Update log&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>&lt;font color="blue">2021-10-17: add &lt;code>spellsuggest&lt;/code> option.&lt;/font>&lt;/li>
&lt;/ul>
&lt;/details>
&lt;p>In this post, I want to talk about how to enable the built-in spell checking
feature in Nvim.&lt;/p></description></item><item><title>English Words Completion inside Neovim/Vim</title><link>https://jdhao.github.io/2019/04/26/words_completion_nvim/</link><pubDate>Fri, 26 Apr 2019 02:15:05 +0800</pubDate><guid>https://jdhao.github.io/2019/04/26/words_completion_nvim/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/20190430093054.png" alt="">
&lt;/p>
&lt;p>Some words are hard to type, it is handy if Neovim can provide auto-completion
for the words we are typing. We can achieve word completion in Neovim in two
ways.&lt;/p></description></item><item><title>Nifty Little Nvim Techniques to Make My Life Easier -- Series 2</title><link>https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/</link><pubDate>Wed, 17 Apr 2019 00:49:06 +0800</pubDate><guid>https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/</guid><description>&lt;p>This is the 2nd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.&lt;/p>
&lt;details>
&lt;summary>&lt;font size="3" color="red">Click here to check other posts in this series.&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>Series 11: &lt;a href="https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/" target="_blank">https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/&lt;/a>&lt;/li>
&lt;li>Series 10: &lt;a href="https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/" target="_blank">https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/&lt;/a>&lt;/li>
&lt;li>Series 9: &lt;a href="https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/" target="_blank">https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/&lt;/a>&lt;/li>
&lt;li>Series 8: &lt;a href="https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/" target="_blank">https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/&lt;/a>&lt;/li>
&lt;li>Series 7: &lt;a href="https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/" target="_blank">https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/&lt;/a>&lt;/li>
&lt;li>Series 6: &lt;a href="https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/" target="_blank">https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/&lt;/a>&lt;/li>
&lt;li>Series 5: &lt;a href="https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/" target="_blank">https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/&lt;/a>&lt;/li>
&lt;li>Series 4: &lt;a href="https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/" target="_blank">https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/&lt;/a>&lt;/li>
&lt;li>Series 3: &lt;a href="https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/" target="_blank">https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/&lt;/a>&lt;/li>
&lt;li>Series 1: &lt;a href="https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/" target="_blank">https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>Nifty Little Nvim Techniques to Make My Life Easier -- Series 1</title><link>https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/</link><pubDate>Thu, 28 Mar 2019 00:24:33 +0800</pubDate><guid>https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/</guid><description>&lt;p>This is the 1st post of a series posts on nifty techniques that make my editing experience in &lt;a href="https://github.com/neovim/neovim" target="_blank">Neovim&lt;/a> smoother.&lt;/p>
&lt;details>
&lt;summary>&lt;font size="3" color="red">Click here to check other posts in this series.&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>Series 11: &lt;a href="https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/" target="_blank">https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/&lt;/a>&lt;/li>
&lt;li>Series 10: &lt;a href="https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/" target="_blank">https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/&lt;/a>&lt;/li>
&lt;li>Series 9: &lt;a href="https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/" target="_blank">https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/&lt;/a>&lt;/li>
&lt;li>Series 8: &lt;a href="https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/" target="_blank">https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/&lt;/a>&lt;/li>
&lt;li>Series 7: &lt;a href="https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/" target="_blank">https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/&lt;/a>&lt;/li>
&lt;li>Series 6: &lt;a href="https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/" target="_blank">https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/&lt;/a>&lt;/li>
&lt;li>Series 5: &lt;a href="https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/" target="_blank">https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/&lt;/a>&lt;/li>
&lt;li>Series 4: &lt;a href="https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/" target="_blank">https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/&lt;/a>&lt;/li>
&lt;li>Series 3: &lt;a href="https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/" target="_blank">https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/&lt;/a>&lt;/li>
&lt;li>Series 2: &lt;a href="https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/" target="_blank">https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/details></description></item><item><title>An Introduction to Lookaround Regular Expression in Neovim/Vim</title><link>https://jdhao.github.io/2018/10/18/regular_expression_nvim/</link><pubDate>Thu, 18 Oct 2018 19:34:00 +0800</pubDate><guid>https://jdhao.github.io/2018/10/18/regular_expression_nvim/</guid><description>&lt;p>Today I want to use some regular expressions for searching and replacing in my
files. But I found that Nvim/Vim regular expression engine has its own flavor,
which is different from the regex engine used by Sublime Text&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. I ended up
learning some of the basics of Nvim-style regex. In this post, I want to share
about how to use lookaround&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> in Nvim.&lt;/p></description></item><item><title>Fixing the nerdtree Window Problem with `bd` Command in Nvim</title><link>https://jdhao.github.io/2018/10/09/nerdtree_windows_issue_bd_vim/</link><pubDate>Tue, 09 Oct 2018 12:19:00 +0800</pubDate><guid>https://jdhao.github.io/2018/10/09/nerdtree_windows_issue_bd_vim/</guid><description>&lt;p>If you have a nerdtree file navigation window on the left of the current buffer
and use &lt;code>:bd&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, you will find that the nerdtree window will occupy the whole
window. When you open another buffer, you have to manually resize the nerdtree
window to a smaller size, which is super annoying.&lt;/p>
&lt;p>How to prevent this behaviour?&lt;/p></description></item><item><title>Vim-like Settings for Tmux</title><link>https://jdhao.github.io/2018/09/30/tmux_settings_for_vim_users/</link><pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate><guid>https://jdhao.github.io/2018/09/30/tmux_settings_for_vim_users/</guid><description>&lt;p>I am a &lt;a href="https://neovim.io/" target="_blank">Neovim&lt;/a> (or Nvim in abbreviation) user. In Nvim, we
use &lt;code>Ctrl-W&lt;/code> as prefix for window-related operations. However, the default
prefix is &lt;code>Ctrl-B&lt;/code> in Tmux. As a result, I often mistakenly press &lt;code>Ctrl-W&lt;/code> when
trying to change panes inside Tmux, which is annoying. Why not change tmux
prefix to be more vim-like?&lt;/p></description></item><item><title>How to Switch between Buffers Quickly in Neovim/Vim</title><link>https://jdhao.github.io/2018/09/29/switching_buffers_quickly_neovim/</link><pubDate>Sat, 29 Sep 2018 16:41:00 +0800</pubDate><guid>https://jdhao.github.io/2018/09/29/switching_buffers_quickly_neovim/</guid><description>&lt;p>When working on real projects using Neovim, we often open several files in a
window. Each file corresponds to a buffer. How to switch between these buffers
quickly?&lt;/p></description></item><item><title>Intro to Nvim File Explorer Plugin Nerdtree</title><link>https://jdhao.github.io/2018/09/10/nerdtree_usage/</link><pubDate>Mon, 10 Sep 2018 11:44:43 +0800</pubDate><guid>https://jdhao.github.io/2018/09/10/nerdtree_usage/</guid><description>&lt;p>&lt;a href="https://github.com/scrooloose/nerdtree" target="_blank">Nerdtree&lt;/a> is a file explorer for
Vim/Neovim. It will generate a file navigation window just like an IDE. We can
operate on files easily in the nerdtree window. In this post, I will summarize
some of its configurations and usages.&lt;/p></description></item></channel></rss>
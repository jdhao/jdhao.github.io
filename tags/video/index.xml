<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Video on Blowfish</title><link>https://jdhao.github.io/tags/video/</link><description>Recent content in Video on Blowfish</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Sat, 25 Dec 2021 17:58:47 +0800</lastBuildDate><atom:link href="https://jdhao.github.io/tags/video/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Extract Key Frames from A Video with FFmpeg</title><link>https://jdhao.github.io/2021/12/25/ffmpeg-extract-key-frame-video/</link><pubDate>Sat, 25 Dec 2021 17:58:47 +0800</pubDate><guid>https://jdhao.github.io/2021/12/25/ffmpeg-extract-key-frame-video/</guid><description>&lt;p>In order to get enough information from videos, we often need to extract video frames.
However, we do not want to extract every frame from a video due to:&lt;/p>
&lt;ul>
&lt;li>information redundancy in successive video frames.&lt;/li>
&lt;li>huge storage space needed by these video frames.&lt;/li>
&lt;/ul>
&lt;p>In this post, I want to share how to extract &lt;em>key&lt;/em> frames from video to reduce the storage,
but still capture enough information from a video.&lt;/p></description></item><item><title>PyAV for video processing</title><link>https://jdhao.github.io/2021/11/04/pyav-video-processing/</link><pubDate>Thu, 04 Nov 2021 22:17:51 +0800</pubDate><guid>https://jdhao.github.io/2021/11/04/pyav-video-processing/</guid><description>&lt;p>&lt;a href="https://www.ffmpeg.org/" target="_blank">ffmpeg&lt;/a> is an excellent tool for video processing.
However, using ffmpeg directly inside Python is not convenient enough.
Previously, I have been using &lt;a href="https://github.com/kkroening/ffmpeg-python" target="_blank">ffmpeg-python&lt;/a>, which is a thin wrapper around the &lt;code>ffmpeg&lt;/code> command line executable.&lt;/p></description></item><item><title>How Does The YouTube Content ID System Work?</title><link>https://jdhao.github.io/2021/08/02/the_youtube_content_id_system/</link><pubDate>Mon, 02 Aug 2021 01:27:05 +0800</pubDate><guid>https://jdhao.github.io/2021/08/02/the_youtube_content_id_system/</guid><description>&lt;p>Google introduced the &lt;a href="https://support.google.com/youtube/answer/2797370?hl=en" target="_blank">content ID system&lt;/a> in 2007 to cope with the
unauthorized use of copyrighted music and video content. The content ID system
has successfully helped the copyright owners to find the pirated content and
paid billions of dollars to the copyright owners&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item><item><title>基于内容的视频检索/视频指纹的应用</title><link>https://jdhao.github.io/2021/07/24/application_of_duplicate_video_retrieval/</link><pubDate>Sat, 24 Jul 2021 21:43:31 +0800</pubDate><guid>https://jdhao.github.io/2021/07/24/application_of_duplicate_video_retrieval/</guid><description>&lt;p>基于内容的视频检索（或视频指纹），是指根据视频内容，从数据库中找到和当前视频在画面上重复高的视频。&lt;/p></description></item><item><title>Notes on FFmpeg (1)</title><link>https://jdhao.github.io/2021/04/16/ffmpeg_notes_1/</link><pubDate>Fri, 16 Apr 2021 00:33:01 +0800</pubDate><guid>https://jdhao.github.io/2021/04/16/ffmpeg_notes_1/</guid><description>Install ffmpeg # If we have root rights, we can install FFmpeg via package manager. On CentOS 7, run the following command:
yum install epel-release yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm yum install ffmpeg ffmpeg-devel If you want to download binary releases, this site can help you. It has binary release for FFmpeg, ffprobe for different systems. It seems that the provided ffmpeg is statically linked, so all you need is that one file to get to work.</description></item><item><title>macOS 下如何为视频制作字幕</title><link>https://jdhao.github.io/2019/12/15/mac_video_subtitle_make/</link><pubDate>Sun, 15 Dec 2019 18:24:34 +0800</pubDate><guid>https://jdhao.github.io/2019/12/15/mac_video_subtitle_make/</guid><description>&lt;p>几周之前，在 YouTube 上看到了 Vim 创始人 Bram Moolenaar 在 &lt;a href="https://vimconf.org/2018/" target="_blank">Vim Conf 2018&lt;/a> 上的&lt;a href="https://www.youtube.com/watch?v=ES1L2SPgIDI" target="_blank">主题报告&lt;/a>，介绍了 Vim 的历史以及可能要添加的一些新特性，萌生了给这个视频配字幕的想法。&lt;/p></description></item></channel></rss>
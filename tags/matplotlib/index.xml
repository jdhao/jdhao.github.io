<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Matplotlib on jdhao's digital space</title><link>https://jdhao.github.io/tags/matplotlib/</link><description>Recent content in Matplotlib on jdhao's digital space</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Sat, 22 Feb 2020 11:41:09 +0800</lastBuildDate><atom:link href="https://jdhao.github.io/tags/matplotlib/index.xml" rel="self" type="application/rss+xml"/><item><title>解决 Matplotlib 使用中文乱码问题</title><link>https://jdhao.github.io/2020/02/22/guide-on-how-to-use-chinese-with-matplotlib_zh/</link><pubDate>Sat, 22 Feb 2020 11:41:09 +0800</pubDate><guid>https://jdhao.github.io/2020/02/22/guide-on-how-to-use-chinese-with-matplotlib_zh/</guid><description>&lt;p>注：这是一篇&lt;a href="https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/" target="_blank">旧文&lt;/a>的中文翻译版本。&lt;/p>
&lt;p>前不久，我在使用 Matplotlib 画图的时候，发现一些 Unicode 字符(例如，汉字) 无法正常显示：在生成的图片中，汉字是乱码的，显示为一个方框。经过大量的查找和阅读，我终于明白了如何在使用 Matplotlib 时，正确渲染 Unicode 字符&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p></description></item><item><title>How to Change Intersection Point of X and Y Axis in Matplotlib</title><link>https://jdhao.github.io/2018/05/21/matplotlib-change-axis-intersection-point/</link><pubDate>Mon, 21 May 2018 11:02:09 +0800</pubDate><guid>https://jdhao.github.io/2018/05/21/matplotlib-change-axis-intersection-point/</guid><description>In this post, I will share how to position the intersection of x and y axis at a specific point using Matplotlib.
The spines # In order to re-position x and y axis, we need to understand an important concept in Matplotlib &amp;mdash;spines. According to Matplotlib documentation:
Spines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions.</description></item><item><title>How to Plot Unicode Characters with Matplotlib</title><link>https://jdhao.github.io/2018/04/08/matplotlib-unicode-character/</link><pubDate>Sun, 08 Apr 2018 22:33:46 +0800</pubDate><guid>https://jdhao.github.io/2018/04/08/matplotlib-unicode-character/</guid><description>&lt;p>This is a post which follows up my previous post on &lt;a href="https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/" target="_blank">how to use Chinese
characters with
Matplotlib&lt;/a>.&lt;/p></description></item><item><title>How To Put Legend outside of Axes Properly in Matplotlib?</title><link>https://jdhao.github.io/2018/01/23/matplotlib-legend-outside-of-axes/</link><pubDate>Tue, 23 Jan 2018 14:51:45 +0800</pubDate><guid>https://jdhao.github.io/2018/01/23/matplotlib-legend-outside-of-axes/</guid><description>&lt;p>When we want to put legend somewhere in a figure using Matplotlib, most of the
time, the option &lt;code>loc='best'&lt;/code> will produce the desired results. However,
sometimes, we may want to have finer control over where the legend should be in
the image. For example, we may want to put the legend outside of the axes,
which is impossible using &lt;code>loc='best'&lt;/code>.&lt;/p></description></item><item><title>Working with Fonts in Matplotlib</title><link>https://jdhao.github.io/2018/01/18/mpl-plotting-notes-201801/</link><pubDate>Thu, 18 Jan 2018 21:13:00 +0800</pubDate><guid>https://jdhao.github.io/2018/01/18/mpl-plotting-notes-201801/</guid><description>&lt;p>This post continues my &lt;a href="https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/" target="_blank">previous post&lt;/a>
on various tips and tricks collected during the process of using Matplotlib.&lt;/p>
&lt;p>&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/18-1-18/39303776.jpg"
title="Different math symbols produced by Matplotlib and LaTeX"
style="float: middle;">&lt;/p></description></item><item><title>Matplotlib Plotting Notes -- Series 1</title><link>https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/</link><pubDate>Thu, 16 Nov 2017 21:41:00 +0800</pubDate><guid>https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/</guid><description>&lt;p>This post records my collected notes on various tricks in using Matplotlib.&lt;/p></description></item><item><title>How to Plot Only One Colorbar for Multiple Plot Using Matplotlib</title><link>https://jdhao.github.io/2017/06/11/mpl_multiplot_one_colorbar/</link><pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate><guid>https://jdhao.github.io/2017/06/11/mpl_multiplot_one_colorbar/</guid><description>&lt;p>In some situations, we have several subplots and we want to use only one
colorbar for all the subplots. How to do this in Matplotlib?&lt;/p></description></item><item><title>How to Set the Aspect Ratio of Image (or Axes) in Matplotlib?</title><link>https://jdhao.github.io/2017/06/03/change-aspect-ratio-in-mpl/</link><pubDate>Sat, 03 Jun 2017 00:58:00 +0800</pubDate><guid>https://jdhao.github.io/2017/06/03/change-aspect-ratio-in-mpl/</guid><description>&lt;p>In Matplotlib, &lt;a
href="https://matplotlib.org/api/axes_api.html">&lt;code>Axes&lt;/code>&lt;/a> is
the primary place where we put plot elements, such as lines, texts and
legends. However, for a long time, I failed to grasp the meaning of
aspect ratio in Matplotlib, thus was constantly frustrated by the
behavior of Maplotlib every time I attempted to change the aspect ratio
of a plot. This post is the result of my attempt to understand it and my
findings. Hope it can help you too.&lt;/p></description></item><item><title>A Guide on Using Unicode Characters in Matplotlib</title><link>https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/</link><pubDate>Sat, 13 May 2017 21:36:26 +0800</pubDate><guid>https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/</guid><description>&lt;p>A few days ago, I found that Matplotlib can not show some Unicode characters
(some Chinese characters) using its default settings. In the rendered output
image, Chinese characters are shown as blank boxes. After reading a lot of
posts on this issue, I am finally clear about how to use Unicode characters
properly in Matplotlib.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p></description></item></channel></rss>
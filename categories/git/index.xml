<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on jdhao's digital space</title><link>https://jdhao.github.io/categories/git/</link><description>Recent content in Git on jdhao's digital space</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2017 - 2024 ❤️ jdhao</copyright><lastBuildDate>Wed, 21 Feb 2024 23:11:43 +0100</lastBuildDate><atom:link href="https://jdhao.github.io/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git line ending config</title><link>https://jdhao.github.io/2024/02/21/git_line_ending_config/</link><pubDate>Wed, 21 Feb 2024 23:11:43 +0100</pubDate><guid>https://jdhao.github.io/2024/02/21/git_line_ending_config/</guid><description>&lt;p>This post is about how to set up Git so that people using different operating systems can work in the same repository,
without messing up the line ending of source files.&lt;/p></description></item><item><title>How to Change Commit Author Info in Git</title><link>https://jdhao.github.io/2022/08/05/update_commit_author_info_git/</link><pubDate>Fri, 05 Aug 2022 00:22:34 +0800</pubDate><guid>https://jdhao.github.io/2022/08/05/update_commit_author_info_git/</guid><description>&lt;p>This post summarizes how to update author info of Git commits.&lt;/p></description></item><item><title>Push to GitHub with Personal Access Token (PAT)</title><link>https://jdhao.github.io/2022/04/23/github_access_token/</link><pubDate>Sat, 23 Apr 2022 14:30:06 +0800</pubDate><guid>https://jdhao.github.io/2022/04/23/github_access_token/</guid><description>&lt;p>To promote security, starting from Aug. 2021, many GitHub operations require use of personal access tokens (PAT).&lt;/p></description></item><item><title>Merging Branches with Git Rebase</title><link>https://jdhao.github.io/2022/03/07/git_merge_branch_with_rebase/</link><pubDate>Mon, 07 Mar 2022 22:45:16 +0800</pubDate><guid>https://jdhao.github.io/2022/03/07/git_merge_branch_with_rebase/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/202202021114754.jpg" width="800">
&lt;/p>
&lt;p>When merging branches, the most direct way we can use is to &lt;code>git merge&lt;/code>.
However, with git-merge, the commit history and graph will be messy if there are a lot of branches.&lt;/p></description></item><item><title>Selected Questions from LinkedIn Git Assessment</title><link>https://jdhao.github.io/2022/01/14/linkedin_git_assessment/</link><pubDate>Fri, 14 Jan 2022 19:06:57 +0800</pubDate><guid>https://jdhao.github.io/2022/01/14/linkedin_git_assessment/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/202202012337737.jpg" width="600">
&lt;/p>
&lt;p>I took the &lt;a href="https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/tree/master/git" target="_blank">LinkedIn Git assessment&lt;/a> and got a certificate&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, but found that I am not super clear on some of the questions.
Here is an analysis of some of the questions and their answers.&lt;/p></description></item><item><title>How to Squash Last N Commits in Git?</title><link>https://jdhao.github.io/2022/01/09/git_squash_last_n_commits/</link><pubDate>Sun, 09 Jan 2022 11:47:17 +0800</pubDate><guid>https://jdhao.github.io/2022/01/09/git_squash_last_n_commits/</guid><description>&lt;p>We often need to squash several related commits to make the commit history cleaner.
There are several different ways to achieve this.&lt;/p></description></item><item><title>Git Learning Notes (4)</title><link>https://jdhao.github.io/2021/11/27/git_notes_s4/</link><pubDate>Sat, 27 Nov 2021 22:29:36 +0800</pubDate><guid>https://jdhao.github.io/2021/11/27/git_notes_s4/</guid><description>&lt;p>My Git learning notes.&lt;/p></description></item><item><title>Git Diff Setup</title><link>https://jdhao.github.io/2021/10/24/git_diff_setup/</link><pubDate>Sun, 24 Oct 2021 01:39:09 +0800</pubDate><guid>https://jdhao.github.io/2021/10/24/git_diff_setup/</guid><description>&lt;p>When we run git-diff, git uses its internal diff algorithm to generate diff for
changed files.&lt;/p></description></item><item><title>Hands on with Three Git TUI Clients</title><link>https://jdhao.github.io/2021/09/11/git_tui_clients_hands_on/</link><pubDate>Sat, 11 Sep 2021 00:33:12 +0800</pubDate><guid>https://jdhao.github.io/2021/09/11/git_tui_clients_hands_on/</guid><description>&lt;p>If you are not accustomed to typing git commands on the command line, there are
also some TUI clients for easing the use of git.&lt;/p></description></item><item><title>Is GitHub Down Today?</title><link>https://jdhao.github.io/2021/08/11/is_github_down/</link><pubDate>Wed, 11 Aug 2021 00:57:37 +0800</pubDate><guid>https://jdhao.github.io/2021/08/11/is_github_down/</guid><description>update:
On 2021-11-28, we expericence another GitHub outage which lasts more than two hours, see here. On 2021-08-10 23:30 CST, I observed that I cannot push to my GitHub repo even with --force. After checking the GitHub status site, it seems that the GitHub API is down1.
It is not the first time that GitHub is down. There has been several failure reports last year (2020), due to MySQL and other issues.</description></item><item><title>Show Git Diff When Doing Git Commit</title><link>https://jdhao.github.io/2021/07/24/git_show_diff_when_commiting/</link><pubDate>Sat, 24 Jul 2021 11:07:16 +0800</pubDate><guid>https://jdhao.github.io/2021/07/24/git_show_diff_when_commiting/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/20210724122638.jpg" width="800">
&lt;/p>
&lt;p>I saw on YouTube &lt;a href="https://www.youtube.com/watch?v=xv9cp7NyK5Y" target="_blank">a video&lt;/a> made by
&lt;a href="https://github.com/tjdevries" target="_blank">TJ DeVries&lt;/a> on how to contribute to the &lt;a href="https://neovim.io/" target="_blank">neovim
project&lt;/a>. There is a scene where he commit via &lt;code>git commit&lt;/code>,
and whoa, a Neovim instance appeared with three split, with top left the commit
message area, top right the git-status area, and on the right the git-diff info,
which is really cool.&lt;/p></description></item><item><title>A Guide on Squashing Commits with git-rebase</title><link>https://jdhao.github.io/2021/06/28/squash_commits_with_git_rebase/</link><pubDate>Mon, 28 Jun 2021 23:43:56 +0800</pubDate><guid>https://jdhao.github.io/2021/06/28/squash_commits_with_git_rebase/</guid><description>&lt;p>In this post, I would like to share how to squash commits using &lt;a href="https://git-scm.com/book/en/v2/Git-Branching-Rebasing" target="_blank">git-rebase&lt;/a>.&lt;/p></description></item><item><title>How to Use The Git-tag Feature</title><link>https://jdhao.github.io/2021/05/08/git_tag_notes/</link><pubDate>Sat, 08 May 2021 00:16:06 +0800</pubDate><guid>https://jdhao.github.io/2021/05/08/git_tag_notes/</guid><description>&lt;p>My notes on using tag feature of Git.&lt;/p></description></item><item><title>How To Install Latest Version of Git on Linux</title><link>https://jdhao.github.io/2021/03/27/upgrade_git_on_linux/</link><pubDate>Sat, 27 Mar 2021 21:48:34 +0800</pubDate><guid>https://jdhao.github.io/2021/03/27/upgrade_git_on_linux/</guid><description>&lt;details>
&lt;summary>&lt;font size="3" color="red">Update log&lt;/font>&lt;/summary>
&lt;p>&lt;font color="blue">2021-12-10: update endpoint rpm link for git&lt;/font>&lt;/p>
&lt;/details>
&lt;p>The version of the default git bundled with the Linux system is often too old,
and lacks certain features, which may &lt;a href="https://github.com/lewis6991/gitsigns.nvim/issues/103" target="_blank">break some tools&lt;/a>.
This post summarizes how to install newer versions of Git on Linux.&lt;/p></description></item><item><title>Git Learning Notes (3)</title><link>https://jdhao.github.io/2021/02/17/git_notes_s3/</link><pubDate>Wed, 17 Feb 2021 15:24:46 +0800</pubDate><guid>https://jdhao.github.io/2021/02/17/git_notes_s3/</guid><description>&lt;p>Git learning notes.&lt;/p></description></item><item><title>Git Directory and Work-Tree Explained</title><link>https://jdhao.github.io/2020/12/25/git_directory_work-tree_explained/</link><pubDate>Fri, 25 Dec 2020 22:39:22 +0800</pubDate><guid>https://jdhao.github.io/2020/12/25/git_directory_work-tree_explained/</guid><description>&lt;p>Git has two option &lt;code>--git-dir&lt;/code> and &lt;code>--work-tree&lt;/code>. What is the use for them?&lt;/p></description></item><item><title>Find Line History in Git</title><link>https://jdhao.github.io/2020/09/14/git_find_line_history/</link><pubDate>Mon, 14 Sep 2020 23:57:01 +0800</pubDate><guid>https://jdhao.github.io/2020/09/14/git_find_line_history/</guid><description>&lt;p>When we are working on a real project, we may want to know from which commit a particular line is introduced.&lt;/p></description></item><item><title>A List of Common Git-branch Operations</title><link>https://jdhao.github.io/2020/09/03/git_branch_operations/</link><pubDate>Thu, 03 Sep 2020 23:41:00 +0800</pubDate><guid>https://jdhao.github.io/2020/09/03/git_branch_operations/</guid><description>&lt;p align="center">
&lt;img src="https://blog-resource-1257868508.file.myqcloud.com/202202021114754.jpg" width="800">
&lt;/p>
&lt;details>
&lt;summary>&lt;font size="2" color="red">Update log&lt;/font>&lt;/summary>
&lt;ul>
&lt;li>&lt;font color="blue">2022-08-20: Add how to remove remote tracking branches that does not exist anymore&lt;/font>&lt;/li>
&lt;/ul>
&lt;/details>
&lt;p>This post summarizes some commonly used Git commands related to branch operations.&lt;/p></description></item><item><title>Git Learning Notes (2)</title><link>https://jdhao.github.io/2020/05/07/git_learning_notes_s2/</link><pubDate>Thu, 07 May 2020 00:35:45 +0800</pubDate><guid>https://jdhao.github.io/2020/05/07/git_learning_notes_s2/</guid><description>&lt;p>My Git learning notes.&lt;/p></description></item><item><title>Git Learning Notes (1)</title><link>https://jdhao.github.io/2020/04/23/git_learning_notes_s1/</link><pubDate>Thu, 23 Apr 2020 00:05:20 +0800</pubDate><guid>https://jdhao.github.io/2020/04/23/git_learning_notes_s1/</guid><description>&lt;p>This is my personal note on learning Git.&lt;/p></description></item><item><title>Resolving Merge Conflict after Git Stash Pop</title><link>https://jdhao.github.io/2019/12/03/git_stash_merge_conflict_handling/</link><pubDate>Tue, 03 Dec 2019 00:57:11 +0800</pubDate><guid>https://jdhao.github.io/2019/12/03/git_stash_merge_conflict_handling/</guid><description>&lt;p>Sometimes, when we are working with our local changes in a Git repo, we may
want to pull the latest updates from the remote repository. To avoid code
conflict between remote files and local files. We can use &lt;code>git stash&lt;/code> to store
the unfinished local work temporarily.&lt;/p></description></item><item><title>How to Push Local Git Repo to Remote Repo in GitHub</title><link>https://jdhao.github.io/2018/05/16/git-push-local-to-remote/</link><pubDate>Wed, 16 May 2018 16:22:54 +0800</pubDate><guid>https://jdhao.github.io/2018/05/16/git-push-local-to-remote/</guid><description>There are two basic cases when we push our local repo to remote repo. These two cases differ in their settings. But sometimes, we are easily confused.
First scenario # The first case is that you have created a local repo and want to store it on GitHub later. In this case, your usual work flow for local repo is:
Initialize the local repo (git init) Write you code and document, etc.</description></item></channel></rss>
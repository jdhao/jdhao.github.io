[{"content":"Welcome to my personal website! I am glad to hear what brings you here. Do not hesitate to share in the comment below!\nWho am I? # Hi, I am jdhao, a machine learning engineer who is passionate about working with computer vision. I am experienced in tools like NumPy, OpenCV, and PIL, and also in data visualization tools like Matplotlib. I have broad experiences working on various vision-related projects, ranging from image retrieval, OCR, document image analysis and reconstruction, to video deduplication.\nGitHub: https://github.com/jdhao\nStack Overflow: https://stackoverflow.com/users/6064933/jdhao Things I like # I enjoy programming. I am most familiar with Python and fairly proficient in using Numpy, Matplotlib and others. I use Pandoc to generate beautiful document from my daily notes.\nMy favorite editor is Neovim. I have been using Neovim for everything related to text editing, e.g., from writing Python to editing my notes, for over three years. My Neovim config is here. I frequently write posts about Nvim. A list of nvim-related posts I have written can be found here.\nI am a big advocator for Stack Overflow. Thanks to all these wonderful guys on Stack Overflow, I really learned a lot. You can find me on Stack Overflow most of the time.\nI enjoy reading fictions, non-fictions (science, biography, history) etc. One of my long-time favorite is Note of Hiding in the East by Pu Zong, which depicts the lives of academics of China\u0026rsquo;s top university during the WWII, in the remote south western province Yunnan.\nI enjoy listening to songs by Cheer Chen and Deserts Chang.\nI like to learn new things and I enjoy playing with digital devices (smart phones, Kindle, iPad, etc.).\nHow is this blog built? # This blog is created using static blog generator and hosted by the wonderful GitHub pages service. Currently, I am using Hugo for its high performance. I am also using utterances as my comment system. Previously, I have been using Hexo to build this blog. Migration process is recorded here.\nI have also shared how I manage my blog in this post.\nHow to contact # My Email: jdhao at hotmail dot com. You can also comment on my posts using the builtin comment system.\nFAQ # Q1: Why do you have those annoying ads on your blog?\nA1: Because hosting the images on this site costs money monthly. I need to make ends meet by using ads. If you do not like ads, you can use ad blocker to block those ads.\nQ2: Why do you write your blogs?\nA2: The reason is two-fold. First and foremost, most of my knowledge here come from the free resource shared by numerous other people. Sharing my knowledge here can act as a contribution to the Internet and help other people. Second, my blog servers as a public note so that when I want to check specific detail about a subject, I can find it easily via search engine.\nQ3: Are you interested in optimizing your blog?\nA3: No, I am not interested. I constantly get emails stating that my blog is ill-optimized for mobile devices or has design issues. To those people, I do not intend to do the so-called optimizations. Do not email me, and I will not respond to these kind of emails.\n","externalUrl":null,"permalink":"/about/","section":"jdhao's digital space","summary":"Welcome to my personal website! I am glad to hear what brings you here. Do not hesitate to share in the comment below! Who am I? # Hi, I am jdhao, a machine learning engineer who is passionate about working with computer vision. I am experienced in tools like NumPy, OpenCV, and PIL, and also in data visualization tools like Matplotlib. I have broad experiences working on various vision-related projects,","title":"About","type":"page"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/tags/gcp/","section":"Tags","summary":"","title":"GCP","type":"tags"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/","section":"jdhao's digital space","summary":"","title":"jdhao's digital space","type":"page"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/archives/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/categories/python/","section":"Categories","summary":"","title":"Python","type":"categories"},{"content":"When we use one of the google cloud python clients to communicate with GCP, there may be errors occurring sometime calling the client API methods.\nHow to retry # For example, for the pubsub client, a lot of the method provide retry parameter to let you configure how you want to retry. We can use the Retry from the google api.core to customize how our retry policy will be.\nfrom google.api_core.retry import Retry from google.api_core import exceptions def is_retriable_excpetion(exc) -\u0026gt; bool: # In the following page, we can find a list exceptions and whether they should be retried: # https://cloud.google.com/pubsub/docs/reference/error-codes my_exceptions = ( exceptions.BadGateway, exceptions.DeadlineExceeded, ) return isinstance(exc, my_exceptions) my_retry_policy = Retry( predicate=is_retriable_excpetion ) The predicate parameter from Retry class accept a function. The function receives an exception and check whether it can be retried. You can customize a list of exceptions inside the function.\nWe can also use if_exception_type from api_core to create a predicate:\nmy_retry_policy = Retry( predicate=api_core.retry.if_exception_type( api_core.exceptions.Aborted, api_core.exceptions.DeadlineExceeded, api_core.exceptions.InternalServerError, api_core.exceptions.ResourceExhausted, api_core.exceptions.ServiceUnavailable, api_core.exceptions.Unknown, api_core.exceptions.Cancelled, ), ) The Retry class has also other parameters to configure the minimum and maximum delay between retries.\nReferences # https://cloud.google.com/python/docs/reference/storage/latest/retry_timeout#configuring-retries pubsub with retry setting: https://cloud.google.com/pubsub/docs/samples/pubsub-publisher-retry-settings#pubsub_publisher_retry_settings-python exponential backoff retry: https://blog.salrashid.dev/articles/2021/exponential_backoff_retry/ ","date":"8 October 2024","externalUrl":null,"permalink":"/2024/10/08/gcloud_client_retry/","section":"Posts","summary":"\u003cp\u003eWhen we use one of the google cloud python clients to communicate with GCP,\nthere may be errors occurring sometime calling the client API methods.\u003c/p\u003e","title":"Retry for Google Cloud Client","type":"posts"},{"content":"","date":"8 October 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2 October 2024","externalUrl":null,"permalink":"/tags/food/","section":"Tags","summary":"","title":"Food","type":"tags"},{"content":"","date":"2 October 2024","externalUrl":null,"permalink":"/categories/life/","section":"Categories","summary":"","title":"Life","type":"categories"},{"content":"今天来总结一下土豆金枪鱼沙拉的做法。\n原料 # 土豆三个，金枪鱼罐头一盒1，鸡蛋两个，蛋黄酱，原味酸奶，小葱，洋葱，盐，黑胡椒\n制作步骤 # 锅内加水，放入鸡蛋，水开后煮八分钟，取出鸡蛋放凉水中降温 土豆去皮，切成小块，锅内加水，加入适量食盐，水开放土豆，煮 15 分钟 取小葱，只要葱绿，切成葱花备用 取半个洋葱，切成洋葱碎备用 取沙拉碗，放入土豆捣碎，放入金枪鱼罐头搅碎，放入煮好的去壳鸡蛋，碾碎，加入葱花和洋葱碎，加入适量的食用盐和黑胡椒，加入蛋黄酱和酸奶，把所有材料搅拌均匀即可食用。 沙拉可以配和面包一起吃，也可以单独吃。\n德超都有卖不同种类的金枪鱼罐头\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 October 2024","externalUrl":null,"permalink":"/2024/10/02/potato_tuna_salad/","section":"Posts","summary":"\u003cp\u003e今天来总结一下土豆金枪鱼沙拉的做法。\u003c/p\u003e","title":"菜谱：土豆金枪鱼沙拉","type":"posts"},{"content":"本次来总结一下椰汁咖喱鸡的做法。\n原料及准备 # 鸡腿肉，洋葱，土豆，椰奶，咖喱块，青椒，大蒜，盐，胡椒，生抽，蚝油，食用油\n食材准备 # 鸡肉切块，鸡肉块要大一些，否则炒制以后太小，加入适量食盐，胡椒粉，生抽，适量蚝油，适量食用油，拌匀腌制十分钟 3-4头大蒜切成沫，青椒一个切丝，洋葱一个切丝 土豆洗净去皮，切成小块备用 制作步骤 # 平底锅火上加热，待锅热以后加入适量食用油，放入腌制好的鸡块，平铺在锅中煎，不要翻动，等鸡肉下面煎至有焦黄，再搅动，煎其他面 鸡肉煎好盛出备用，锅内根据油的多少再适当增加一些油，加入蒜末，洋葱翻炒，再加入土豆煎制，土豆煎三分钟左右，然后加入少量的清水，不超过土豆即可（如果要椰奶味浓郁，可以只加椰奶不加清水） 加入咖喱块，椰奶 200ml，拌匀，大火烧开，然后转中小火，炖煮约 20 分钟，注意搅拌，不要糊锅，快出锅前加入青椒丝 椰汁咖喱鸡配合米饭非常不错。\n","date":"26 September 2024","externalUrl":null,"permalink":"/2024/09/26/coco_milk_curry_chicken/","section":"Posts","summary":"\u003cp\u003e本次来总结一下椰汁咖喱鸡的做法。\u003c/p\u003e","title":"菜谱：椰香咖喱鸡","type":"posts"},{"content":"本次来总结凉拌绿豆宽粉的做法。\n原料及准备 # 原料：绿豆宽粉（亚超购买），洋葱，黄瓜，小葱，大蒜，芝麻酱，陈醋，生抽，辣椒油，白糖，盐，辣椒粉\n原料准备：\n准备一个洋葱切丝，一根黄瓜切丝 小葱切葱花，大蒜切碎 制作步骤 # 锅内烧水，待水沸以后加入绿豆宽粉再煮 4 分钟，捞出用凉水冲凉备用 碗中加入葱花和大蒜沫，加入适量辣椒粉，热适量的油，待油热泼入碗中，再加入陈醋，生抽，适量白糖，盐。喜欢吃芝麻酱再加入适量芝麻酱。能吃辣的话，可以再加入辣椒油。 绿豆粉从凉水中捞出沥干水分，加入切好的洋葱和黄瓜丝，加入调好的料汁，加入适量食盐，拌匀即可食用 ","date":"23 September 2024","externalUrl":null,"permalink":"/2024/09/23/lv_dou_kuan_fen_salad/","section":"Posts","summary":"\u003cp\u003e本次来总结凉拌绿豆宽粉的做法。\u003c/p\u003e","title":"凉拌绿豆宽粉制作","type":"posts"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/logging/","section":"Tags","summary":"","title":"Logging","type":"tags"},{"content":"When deploying a Python application to GCP Kuberntes Engine, we may see issues that the logging level is not correct in the cloud logging explorer. In order for the Python logging package to work with GCP, we need some additional configurations.\nstructured logging # The GCP logging is using structured logging. The logging message from the Python default logging library is not structured. That is why we are using the google cloud logging client to reformat the logging messages. We can find the structure for the logEntry used by google cloud logging here.\nref:\nstructured logging: https://cloud.google.com/logging/docs/structured-logging#use-api Using the gcloud logging client # Install the GCP logging client for Python is simple:\npip install --upgrade google-cloud-logging The google-cloud-logging package will transform the log message to a format required by the Gcloud logging platform. It will work under the hood to make sure the log severity level is correct and also add other fields to the log message.\nThe official instruction from here tells us to do the following:\nroot_logger = logging.getLogger() root_logger.setLevel(LOG_LEVEL) gcloud_log_client = google.cloud.logging.Client() gcloud_log_client.setup_logging(log_level=logging.DEBUG) And in your actual code, you do something like this:\nimport logging logger = logging.getLogger(__name__) logger.info(\u0026#34;this is an info message\u0026#34;) The setup_logging() method will add a custom handler from the gcloud logging package, so that the messages from the Python logging package is transformed to a format required by google cloud logging. When the application is running in (GKE), the following handler is added to the root logger\ngoogle.cloud.logging_v2.handlers.structured_log.StructuredLogHandler When the application is running locally, the following handler is added to the root logger:\ngoogle.cloud.logging_v2.handlers.handlers.CloudLoggingHandler The difference between CloudLoggingHandler and StructuredLogHandler can be found here.\nHowever, this plain way has several potential issues:\nThe log message is not going be printed in the console, if you are developing the code locally If you also add other handlers to the root logger, you will see duplicated logging messages in the GCP cloud logging explorer1. You need to run gcloud auth application-default login to autenticate yourself when running the application locally. Separate logging setup for local and GCP # It is better to have separate setup for the root logger when running the code locally2. Something like this should suffice:\nimport logging import google.cloud.logging root_logger = logging.getLogger() root_logger.setLevel(LOG_LEVEL) formatter = logging.Formatter(\u0026#34;%(name)s:%(lineno)d - %(levelname)s - %(message)s\u0026#34;) # running_in_gcp_k8s() check whether the code is running in GCP kubernetes engine (GKE) if running_in_gcp_k8s(): gcloud_log_client = google.cloud.logging.Client() gcloud_log_client.setup_logging(log_level=logging.DEBUG) else: # for local running, use a plain stream handler stream_handler = logging.StreamHandler() stream_handler.setLevel(LOG_LEVEL) stream_handler.setFormatter(formatter) # add stream handler to root_logger root_logger.addHandler(stream_handler) formatter for gcloud logging handler? # By default, if you use the setup_logging() method above, only the plain message is printed. If we want to include logRecord attributes like module name, line number, level name etc, we need to define our own formatter.\nimport logging import google.cloud.logging_v2 gcloud_log_client = google.cloud.logging.Client() gcloud_log_client.setup_logging(log_level=logging.DEBUG) formatter = logging.Formatter(\u0026#34;%(name)s:%(lineno)d - %(levelname)s - %(message)s\u0026#34;) gcp_handler = [for h in logging.getLogger().handlers if isinstance(h, google.cloud.logging_v2.handlers.StructuredLogHandler)][0] gcp_handler.setFormatter(formatter) log extra field # With cloud logging, we can also log extra meta data, like trace, labels etc.\nlogger.info( \u0026#34;logging test, info level with extra field\u0026#34;, extra={\u0026#34;json_fields\u0026#34;: {\u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;}, \u0026#34;trace\u0026#34;: \u0026#34;1234\u0026#34;, \u0026#34;labels\u0026#34;: {\u0026#34;foo\u0026#34;: \u0026#34;bar\u0026#34;}}, ) WTF is stackdriver logging? # In short, it is an old name for Google cloud logging. There are more explanations in this post.\nReferences # integration with standard lib: https://cloud.google.com/python/docs/reference/logging/latest/std-lib-integration fastapi with google cloud run: https://dev.to/floflock/enable-feature-rich-logging-for-fastapi-on-google-cloud-logging-j3i Also discussed in this github issue\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAlso suggested in this issue\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 September 2024","externalUrl":null,"permalink":"/2024/09/20/python_logging_in_gcp/","section":"Posts","summary":"\u003cp\u003eWhen deploying a Python application to GCP Kuberntes Engine,\nwe may see issues that the \u003ca href=\"https://stackoverflow.com/q/75361466/6064933\" target=\"_blank\"\u003elogging level is not correct\u003c/a\u003e in the cloud logging explorer.\nIn order for the \u003ca href=\"https://docs.python.org/3/library/logging.html\" target=\"_blank\"\u003ePython logging package\u003c/a\u003e to work with GCP, we need some additional configurations.\u003c/p\u003e","title":"Make Python logging Work in GCP","type":"posts"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"Kubernetes","type":"tags"},{"content":"Readiness and Liveness probe # The readiness probe checks if the service in pod can accept traffic. Kubernetes will remove the pod if the readiness probe fails.\nThe liveness probe is used to check whether the pod is still alive and functioning. If the liveness check fails, the pod will be restarted by Kubernetes.\nTypes of readiness and liveness probe # We can use HTTP, command or TCP probe.\nGet configuration for liveness and readiness # We can run the following command to get the pod configuration:\nkubectl -n \u0026lt;your-namespace\u0026gt; get pod \u0026lt;your-pod-name\u0026gt; -o yaml You will get the configuration for this pod in YAML format. The liveness setting is under section livenessProbe, and the readiness setting is under section readinessProbe.\nYou can also go to the GCP console (https://console.cloud.google.com/), select your projects. Then go to Kubernetes Engine --\u0026gt; Workloads, click your service name and go to the pod overview page. Then you can click the YAML tab page to see the configuration for this pod.\nFor the liveness probe, you will see something like this:\nlivenessProbe: failureThreshold: 3 httpGet: path: /health_check port: 8080 scheme: HTTP initialDelaySeconds: 15 periodSeconds: 5 successThreshold: 1 timeoutSeconds: 1 References # liveness, readiness probe: https://kubernetes.io/docs/concepts/configuration/liveness-readiness-startup-probes/ configuration liveness and readiness: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/ Kubernetes best practice, set up health check: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes?hl=en ","date":"20 September 2024","externalUrl":null,"permalink":"/2024/09/20/kubernetes_liveness_readiness_check/","section":"Posts","summary":"Readiness and Liveness probe # The readiness probe checks if the service in pod can accept traffic. Kubernetes will remove the pod if the readiness probe fails.\nThe liveness probe is used to check whether the pod is still alive and functioning. If the liveness check fails, the pod will be restarted by Kubernetes.\nTypes of readiness and liveness probe # We can use HTTP, command or TCP probe.\nGet configuration for liveness and readiness # We can run the following command to get the pod configuration:","title":"Liveness and Readiness Check in Kubernetes","type":"posts"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/categories/note/","section":"Categories","summary":"","title":"Note","type":"categories"},{"content":"Use the SEARCH() function with care # In the GCP Log Explorer, if you type some thing in the search bar without quote, the SEARCH() method is used.\nThe SEARCH() function is case insensitive. Note also that SEARCH() function uses text analyzer to tokenize the string. The SEARCH() function performs exact matches, not partial matching. So SEARCH(\u0026quot;world\u0026quot;) will not be able to match worldwide. Another example, suppose in some of the log entries, you may have \u0026ldquo;today is 202408180429\u0026rdquo;, if you use SEARCH(\u0026quot;20240818\u0026quot;), you will find nothing matching, which you may not expect.\ncontain, regex match, regex unmatch # The following operators are very useful when searching for patterns/strings\n:: contains ~=: regex match !~: regex unmatch For example,\ntextPayload =~ '.*foo.*': check if textPayload contains foo somewhere textPayload !~ '.*foo.*': check if textPayload does not contain foo somewhere textPayload:'foo': check if textPayload contains foo somewhere The syntax used for the regex is RE2 syntax.\nref:\nThe GCP logging query language: https://cloud.google.com/logging/docs/view/logging-query-language log retention period # In GCP console, you can search for \u0026ldquo;log storage\u0026rdquo;, there are different log buckets. For each bucket, you can see their retention period, which may differ from bucket to bucket.\nYou can configure custom retention period if you want: https://cloud.google.com/logging/docs/buckets#custom-retention.\nref:\nlog retention period: https://cloud.google.com/logging/quotas#logs_retention_periods how to see logs around a log entry # Sometimes we may be interested the context for a certain log entry, i.e., what happens before and after the logging entry. We can do this in two ways.\nWe can manually specify the time interval using the timestamp field. See official doc on how to do it. You can also do it in the query editing UI by selecting the time interval.\nWe can also pin the message we are interested first. This message will show in the timeline histogram. Then we refine the query filter and click the pin message. The context menu shows and choose Zoom to log entry. You can do this multiple times to make the time interval to be more precise.\nref:\nhow to see logs after and before: https://stackoverflow.com/q/53899757/6064933 ","date":"16 September 2024","externalUrl":null,"permalink":"/2024/09/16/gcp_logging_notes/","section":"Posts","summary":"Use the SEARCH() function with care # In the GCP Log Explorer, if you type some thing in the search bar without quote, the SEARCH() method is used.\nThe SEARCH() function is case insensitive. Note also that SEARCH() function uses text analyzer to tokenize the string. The SEARCH() function performs exact matches, not partial matching. So SEARCH(\u0026quot;world\u0026quot;) will not be able to match worldwide. Another example, suppose in some of the log entries, you may have \u0026ldquo;today is 202408180429\u0026rdquo;, if you use SEARCH(\u0026quot;20240818\u0026quot;), you will find nothing matching, which you may not expect.","title":"Notes on Using GCP Logging","type":"posts"},{"content":"","date":"16 September 2024","externalUrl":null,"permalink":"/tags/regex/","section":"Tags","summary":"","title":"Regex","type":"tags"},{"content":"本次来复刻一下在网上看到的西班牙土豆饼。\n原料及工具 # 土豆（2-3个，根据自己需求），大洋葱（1个），鸡蛋（5-6个），黑胡椒，盐，橄榄油或普通植物油，奶酪片，大盘子\n制作 # 原料准备 # 土豆去皮，然后切成小丁，洋葱去皮，切成小丁 鸡蛋 5 - 6 个打碎，放盐，黑胡椒，搅拌均匀备用 制作过程 # 锅内倒入适量的油，中小火，油热以后，倒入土豆和洋葱翻炒几分钟，加上适量的食盐调味，然后盖上锅盖小火焖 10 分钟，直到土豆用铲子可以碾碎，注意看土豆，火不要太大，否则容易糊锅。 把炒好的土豆丁倒入鸡蛋液中，搅拌混合均匀，把其中一半倒入锅中，待鸡蛋液稍微成型，放三四片奶酪片 待奶酪片稍微融化，再倒入剩余的蛋液，盖上锅盖，等几分钟让蛋液成型，注意火不能大，否则下面的鸡蛋容易糊底 待下层的鸡蛋已经变硬变得稍微焦黄，这时候拿个大盘子扣在锅中，把鸡蛋饼扣在盘子里，然后把鸡蛋饼放入锅中，让另外一面也煎一下，煎到焦黄即可出锅 参考 # https://www.bilibili.com/video/BV1JqsKeuEks/ ","date":"12 September 2024","externalUrl":null,"permalink":"/2024/09/12/potato_omelette_spanish_style/","section":"Posts","summary":"\u003cp\u003e本次来复刻一下在网上看到的西班牙土豆饼。\u003c/p\u003e","title":"西班牙土豆饼制作","type":"posts"},{"content":"","date":"11 September 2024","externalUrl":null,"permalink":"/tags/elasticsearch/","section":"Tags","summary":"","title":"Elasticsearch","type":"tags"},{"content":"The version conflict error is often seen when doing document indexing operations in Elasticsearch.\nEach document in Elasticsearch has two fields _seq_no and _primary_term records the state for this document. When we do concurrent changes to a document, each change has its own _seq_no and _primary_term. Elasticsearch will compare the _seq_no and _primary_term to avoid older changes overwrite the changes of newer changes.\nWhen you update a document, you can specify sequence number and primary term, to make sure that there are no other changes made between when you get the sequence number/primary term and when you make your change. If the sequence number and primary term you specify does not match the one in the document, you will get 409 conflict error.\nFirst, index document to my_index:\nPUT my_index/_doc/123 { \u0026#34;title\u0026#34;: \u0026#34;monday\u0026#34; } This is the result you get.\n{ \u0026#34;_index\u0026#34;: \u0026#34;my_index\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;123\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 0, \u0026#34;_primary_term\u0026#34;: 1 } If you check what is in document 123:\nGET my_index/_doc/123 Result is:\n{ \u0026#34;_index\u0026#34;: \u0026#34;my_index\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;123\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;_seq_no\u0026#34;: 0, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;found\u0026#34;: true, \u0026#34;_source\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;monday\u0026#34; } } If you do another update to the document 123:\nPUT my_index/_doc/123 { \u0026#34;title\u0026#34;: \u0026#34;monday\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;this is monday\u0026#34; } You see something like this:\n{ \u0026#34;_index\u0026#34;: \u0026#34;my_index\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;123\u0026#34;, \u0026#34;_version\u0026#34;: 2, \u0026#34;result\u0026#34;: \u0026#34;updated\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 1, \u0026#34;_primary_term\u0026#34;: 1 } The sequence number/primary term for document 123 will be changed (GET my_index/_doc/123):\n{ \u0026#34;_index\u0026#34;: \u0026#34;my_index\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;123\u0026#34;, \u0026#34;_version\u0026#34;: 2, \u0026#34;_seq_no\u0026#34;: 1, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;found\u0026#34;: true, \u0026#34;_source\u0026#34;: { \u0026#34;title\u0026#34;: \u0026#34;monday\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;this is monday\u0026#34; } } In the document index API, we can also specify if_seq_no and if_primary_term parameter:\nPUT my_index/_doc/123?if_seq_no=2\u0026amp;if_primary_term=1 { \u0026#34;title\u0026#34;: \u0026#34;monday\u0026#34; } Since the sequence number and primary term does not match the document exactly, we see error:\n{ \u0026#34;error\u0026#34;: { \u0026#34;root_cause\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[123]: version conflict, required seqNo [2], primary term [1]. current document has seqNo [1] and primary term [1]\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; } ], \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[123]: version conflict, required seqNo [2], primary term [1]. current document has seqNo [1] and primary term [1]\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; }, \u0026#34;status\u0026#34;: 409 } For document Delete API, we can also specify if_seq_no and if_primary_term:\nDELETE my_index/_doc/123?if_seq_no=2\u0026amp;if_primary_term=1 Document 123 is there, but the sequence number and primary term does not match, you see errors:\n{ \u0026#34;error\u0026#34;: { \u0026#34;root_cause\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[123]: version conflict, required seqNo [2], primary term [1]. current document has seqNo [1] and primary term [1]\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; } ], \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[123]: version conflict, required seqNo [2], primary term [1]. current document has seqNo [1] and primary term [1]\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; }, \u0026#34;status\u0026#34;: 409 } If the document does not exist (for example, if you do DELETE my_index/_doc/183244?if_primary_term=1\u0026amp;if_seq_no=1), you see error like this:\n{ \u0026#34;error\u0026#34;: { \u0026#34;root_cause\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[183244]: version conflict, required seqNo [1], primary term [1]. but no document was found\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; } ], \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[183244]: version conflict, required seqNo [1], primary term [1]. but no document was found\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;n_LbDCbbT4O5mwgGWLOOKA\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;my_index\u0026#34; }, \u0026#34;status\u0026#34;: 409 } This conflict error can also happen when you use delete_by_query API.\nsequence number and primary term # Sequence number represent the operation number that is performed on a document. Primary term means how many times that the primary shard for the index has been changed. If you create a new index and index a document, you see that the primary term is 1.\nThe primary term is introduced to solve doc version problems in a distributed system as Elasticsearch. You can find more about the motivation in this official blog1.\nElasticsearch delete versioning # If you have a delete operation that targets at version 1000 of a document, but later you have an index operation that targets version 999 of the same document, if the delete operation is immediately and ES does not keep the version of the document, then the new index operation will succeed. However, the index operation targets an old version of the document, so it shouldn\u0026rsquo;t succeed. The document should still be deleted, not indexed again.\nThe index.gc_deletes setting is used to solve the above issue. It specifies how long the version number of deleted document is kept. By default, it is kept for 60 seconds.\nref:\nElasticsearch version support (this is old, but still worth reading): https://www.elastic.co/blog/elasticsearch-versioning-support explanation of versioning in the delete API: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete.html#delete-versioning index.gc_deletes is under dynamic index settings: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#dynamic-index-settings version conflict when using delete by query # When we use delete_by_query to delete a document, we will see potentially the ConflictError exception.\ntypical error # The typical error message you see like this in the reason:\nversion conflict, required seqNo [0], primary term [1]. current document has seqNo [1] and primary term [1]\nThis means that you are getting an older version of the document. This can happen, for example, if you have a document in the index, then you index a new version of the docment, then immediately run the delete_by_query to delete the document. Below is a simple snippet to reproduce the error:\nfrom elasticsearch import Elasticsearch es_client = Elasticsearch(...) index_name = \u0026#34;demo_index\u0026#34; _id = \u0026#34;123456\u0026#34; doc_old = {\u0026#34;title\u0026#34;: \u0026#34;old title\u0026#34;} doc_new = {\u0026#34;title\u0026#34;: \u0026#34;new title\u0026#34;} if es_client.indices.exists(index=index_name): es_client.indices.delete(index=index_name) es_client.index(index=index_name, document=doc_old, id=_id) es_client.indices.refresh(index=index_name) search_response = es_client.search(index=index_name, seq_no_primary_term=True) print(f\u0026#34;first search response: {search_response}\u0026#34;) # index updated doc es_client.index(index=index_name, document=doc_new, id=_id) # this refresh below is very important # es_client.indices.refresh(index=index_name) second_response = es_client.search(index=index_name, seq_no_primary_term=True) print(f\u0026#34;second search response: {second_response}\u0026#34;) deletion_result = es_client.delete_by_query( index=index_name, query={\u0026#34;bool\u0026#34;: {\u0026#34;should\u0026#34;: [{\u0026#34;term\u0026#34;: {\u0026#34;_id\u0026#34;: _id}}]}} ) print(f\u0026#34;deletion result: {deletion_result}\u0026#34;) but why? This is because after the second index operation using doc_new, the updated doc version is not immediately for search. You have to wait for Elasticsearch to refresh the index to make the new document searchable, which happens every 1 second by default and is controlled by setting index.refresh_interval. Or you can use the refresh api to refresh the index.\nUnder the hood, the API delete_by_query() search for the matching document and then delete them. However, the document version it gets is an older version. Actually if we compare the first response and second response, they are the same:\nfirst search response: [{\u0026#39;_index\u0026#39;: \u0026#39;demo_index\u0026#39;, \u0026#39;_id\u0026#39;: \u0026#39;123456\u0026#39;, \u0026#39;_seq_no\u0026#39;: 0, \u0026#39;_primary_term\u0026#39;: 1, \u0026#39;_score\u0026#39;: 1.0, \u0026#39;_source\u0026#39;: {\u0026#39;title\u0026#39;: \u0026#39;old title\u0026#39;}}] second search response: [{\u0026#39;_index\u0026#39;: \u0026#39;demo_index\u0026#39;, \u0026#39;_id\u0026#39;: \u0026#39;123456\u0026#39;, \u0026#39;_seq_no\u0026#39;: 0, \u0026#39;_primary_term\u0026#39;: 1, \u0026#39;_score\u0026#39;: 1.0, \u0026#39;_source\u0026#39;: {\u0026#39;title\u0026#39;: \u0026#39;old title\u0026#39;}}] If you uncomment the es_client.indices.refresh() call in the above snippet, the delete_by_query call should run without issues.\nanother error # Another conflict error I see is somewhat different, which has the following error reason:\nversion conflict, required seqNo [0], primary term [1]. but no document was found\nThis can happen, for example, when you use delete_by_query to delete a document from index. Then immediately you try to run delete_by_query again to delete the same document. Try the below code snippet:\nfrom elasticsearch import Elasticsearch es_client = Elasticsearch(...) index_name = \u0026#34;demo_index\u0026#34; _id = \u0026#34;123456\u0026#34; doc_old = {\u0026#34;title\u0026#34;: \u0026#34;old title\u0026#34;} if es_client.indices.exists(index=index_name): es_client.indices.delete(index=index_name) es_client.index(index=index_name, document=doc_old, id=_id) es_client.indices.refresh(index=index_name) search_response = es_client.search(index=index_name, seq_no_primary_term=True) print(f\u0026#34;first search response: {search_response[\u0026#39;hits\u0026#39;][\u0026#39;hits\u0026#39;]}\u0026#34;) deletion_result = es_client.delete_by_query( index=index_name, query={\u0026#34;bool\u0026#34;: {\u0026#34;should\u0026#34;: [{\u0026#34;term\u0026#34;: {\u0026#34;_id\u0026#34;: _id}}]}} ) print(f\u0026#34;deletion result: {deletion_result}\u0026#34;) second_response = es_client.search(index=index_name, seq_no_primary_term=True) print(f\u0026#34;second search response: {second_response[\u0026#39;hits\u0026#39;][\u0026#39;hits\u0026#39;]}\u0026#34;) # es_client.indices.refresh(index=index_name) deletion_result = es_client.delete_by_query( index=index_name, query={\u0026#34;bool\u0026#34;: {\u0026#34;should\u0026#34;: [{\u0026#34;term\u0026#34;: {\u0026#34;_id\u0026#34;: _id}}]}} ) print(f\u0026#34;deletion result: {deletion_result}\u0026#34;) Remember the section on delete versioning. Actually after the you call the first delete_by_query, the document deletion is not yet fully done. The second search in the snippet can still show the document! So your second call to delete_by_query() gets an older version of the document and tries to delete it, but actually the document is not there anymore (searchable, but actually not there).\nIf we uncomment the es_client.indices.refresh() line, then the second call to delete_by_query() will not run into errors.\nref:\nsequence number and version number: https://stackoverflow.com/a/58762025/6064933 Elasticsearch version conflict when using delete by query: https://stackoverflow.com/q/55382702/6064933 document refresh: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-refresh.html https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#optimistic-concurrency-control-index https://www.elastic.co/guide/en/elasticsearch/reference/current/optimistic-concurrency-control.html You can check the local and global checkpoint mentioned in this post using the cat-shards API\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 September 2024","externalUrl":null,"permalink":"/2024/09/11/elasticsearch_version_conflict_error/","section":"Posts","summary":"\u003cp\u003eThe version conflict error is often seen when doing document indexing operations in Elasticsearch.\u003c/p\u003e","title":"Elasticsearch Version Conflict Error","type":"posts"},{"content":"In Elasticsearch (ES), you can run a task and check its status with the task API. For example, if you use the reindex API in ES with parameter with_for_completion=False, ES will not wait for the process to finish and will return a task instead.\nCheck running tasks # To check the running tasks, we can use:\nGET _tasks This will return a list of running tasks. You can also specify the query parameters, for example, to filter based on reindex action, you can use:\nGET _tasks?action=*reindex* The above API will return response in JSON format. If you do not want to parse the result and just want to get human readable output, you can use cat task API:\nGET _cat/tasks?action=*cluster* Get status of a task # If you know the task id of a task, you can check its detailed status using the get task API:\nGET _tasks/\u0026lt;your-task-id\u0026gt; It will show you if the task is completed, how long does it takes, and how many documents are processed etc.\nCancel a task # To cancel a task, we can use the following API:\nPOST _tasks/\u0026lt;task-id\u0026gt;/_cancel Note this is a POST request instead of GET.\nref:\ncancel a task: https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html#task-cancellation Check info about finished tasks? # Currently there is no API to check finished tasks, unless you know the task id (use the get task API above to check task details).\nHowever, all task information is stored in a special index .tasks. We can query this index just like a normal index1. For example, you can do this:\nGET .tasks/_search { \u0026#34;query\u0026#34;: { \u0026#34;bool\u0026#34;: { \u0026#34;filter\u0026#34;: [ { \u0026#34;term\u0026#34;: { \u0026#34;completed\u0026#34;: true } }, { \u0026#34;term\u0026#34;: { \u0026#34;task.action\u0026#34;: \u0026#34;indices:data/write/reindex\u0026#34; } } ] } } } The above query will filter tasks based on completion status and action type.\nReferences # View completed tasks: https://stackoverflow.com/q/58125914/6064933 We can do this for now, but in a future major version, direct access to system indices will be prevented by default, as suggested by Elasticsearch\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 August 2024","externalUrl":null,"permalink":"/2024/08/15/elasticsearch_task_api/","section":"Posts","summary":"\u003cp\u003eIn Elasticsearch (ES), you can run a task and check its status with the \u003ca href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html\" target=\"_blank\"\u003etask API\u003c/a\u003e.\nFor example, if you use the \u003ccode\u003ereindex\u003c/code\u003e API in ES with parameter \u003ccode\u003ewith_for_completion=False\u003c/code\u003e,\nES will not wait for the process to finish and will return a task instead.\u003c/p\u003e","title":"How to Use the Elasticsearch task API","type":"posts"},{"content":"In Elasticsearch, there is index API where you can index a single document to an index.\nHowever, if you have a lot of documents and index them with this API one by one, the indexing speed is quite slow.\nFor large number of document indexing, it is better to use the bulk API from the elasticsearch.helpers submodule. It has three different bulk method:\nhelpers.bulk() helpers.streaming_bulk() helpers.parallel_bulk() If you have a lot of products, the official doc recommends using of streaming_bulk():\nWhen errors are being collected original document data is included in the error dictionary which can lead to an extra high memory usage. If you need to process a lot of data and want to ignore/collect errors please consider using the streaming_bulk() helper which will just return the errors and not store them in memory.\nUsually the bulk API is way faster than the sequential indexing method. Here is a short code snippet to benchmark the different ways of indexing:\nimport time from contextlib import contextmanager from elasticsearch.helpers import streaming_bulk, parallel_bulk @contextmanager def report_time(procedure_name): start = time.time() yield end = time.time() print(f\u0026#34;time spent for {procedure_name}: {end - start}\u0026#34;) def sequential_index(client, docs, index_name): for doc in docs: client.index(index=index_name, document=doc) def bulk_index(client, docs, index_name, bulk_type): def gen_actions(docs): for i, doc in enumerate(docs): action = {\u0026#34;_id\u0026#34;: i, \u0026#34;_index\u0026#34;: index_name, \u0026#34;_source\u0026#34;: doc} yield action if bulk_type == \u0026#34;streaming\u0026#34;: for success, status in streaming_bulk( client, actions=gen_actions(docs), chunk_size=500 ): if not success: print(status) if bulk_type == \u0026#34;parallel\u0026#34;: for success, status in parallel_bulk( client, actions=gen_actions(docs), chunk_size=500 ): if not success: print(status) def recreate_index(client, index_name): if client.indices.exists(index=index_name): client.indices.delete(index=index_name) client.indices.create(index=index_name) if __name__ == \u0026#34;__main__\u0026#34;: n = 1000 index_name = \u0026#34;my_index\u0026#34; # set up the client es_client = Elasticsearch(...) docs = [] for i in range(n): doc = {\u0026#34;title\u0026#34;: f\u0026#34;this is document {i}\u0026#34;, \u0026#34;date\u0026#34;: \u0026#34;2024-07-25\u0026#34;} docs.append(doc) recreate_index(es_client, index_name) with report_time(\u0026#34;sequential indexing\u0026#34;): sequential_index(es_client, docs, index_name) recreate_index(es_client, index_name) with report_time(\u0026#34;streaming bulk\u0026#34;): bulk_index(es_client, docs, index_name, \u0026#34;streaming\u0026#34;) recreate_index(es_client, index_name) with report_time(\u0026#34;parallel bulk\u0026#34;): bulk_index(es_client, docs, index_name, \u0026#34;parallel\u0026#34;) This is the testing result from my machine:\ntime spent for sequential indexing: 123.88939809799194 time spent for streaming bulk: 0.6672859191894531 time spent for parallel bulk: 0.45793724060058594 References # Elasticsearch helpers from Elastic-py: https://elasticsearch-py.readthedocs.io/en/v8.14.0/helpers.html ","date":"26 July 2024","externalUrl":null,"permalink":"/2024/07/26/elasticsearch_bulk_indexing/","section":"Posts","summary":"\u003cp\u003eIn Elasticsearch, there is \u003ca href=\"https://elasticsearch-py.readthedocs.io/en/v8.14.0/api/elasticsearch.html#elasticsearch.Elasticsearch.index\" target=\"_blank\"\u003eindex API\u003c/a\u003e where you can index a single document to an index.\u003c/p\u003e","title":"Speed up document indexing in Elasticsearch via bulk indexing","type":"posts"},{"content":"Recently when I was working with Elasticsearch, I found this weird issue that the document count for the newly created index is not correct. Also there are problems with reindex, if you reindex the source index to dst index, there is nothing in the dst index despite no errors.\nHere is a short code to reproduce the issue:\nfrom elasticsearch import Elasticsearch # set up client es_client = Ealsticsearch(...) n = 100 index_name = \u0026#34;my_index\u0026#34; if es_client.indices.exists(index=index_name): es_client.indices.delete(index=index_name) docs = [] for i in range(n): doc = {\u0026#34;title\u0026#34;: f\u0026#34;this is document {i}\u0026#34;} docs.append(doc) for doc in docs: es_client.index(index=index_name, document=doc) response = es_client.count(index=index_name) print(\u0026#34;count: \u0026#34;, response) In the above code, we create a index named my_index and try to index 100 document into it. The print out message shows the number of document in my_index is actually not 100.\nHowever, if you wait for a few seconds and run the count API from kibana or you run the count API only, the number of doc in my_index is correct.\nThis has something to do with the inner workings of Elasticsearch. After immediately indexing document to the index, they are not available for search. Elasticsearch will refresh the index every index.refresh_interval1, and the interval is by default 1 second. Only after this refresh, you can search the document.\nThere are two solutions for this:\nafter the indexing operation, use the refresh API to refresh the index manually. However, the refresh operation may be expensive. We can also wait for the periodic refresh of Elasticsearch. If you use the bulk index or index API, we can set the parameter refresh to wait_for. This will make sure there is a refresh before your search operation. references # near real-time search: https://www.elastic.co/guide/en/elasticsearch/reference/current/near-real-time.html the refresh param for index, delete, update, bulk API: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-refresh.html https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-refresh-interval-setting\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 July 2024","externalUrl":null,"permalink":"/2024/07/24/elasticsearch_doc_count_not_correct/","section":"Posts","summary":"\u003cp\u003eRecently when I was working with Elasticsearch, I found this weird issue that the document count for the newly created index is not correct.\nAlso there are problems with reindex, if you reindex the source index to dst index, there is nothing in the dst index despite no errors.\u003c/p\u003e","title":"Index refresh issue in Elasticsearch","type":"posts"},{"content":"Some notes on using the Google Cloud storage.\nInstall client Library # We need to install the gcloud storage client to use the storage API. For Python, use pip to install the client:\npip install google-cloud-storage test in local env # When we run the gcloud storage client in local PC and want to connect to our project, we need to do the authentication:\ngcloud auth application-default login Follow the instructions and finish the authentication. Then we can use the client locally for testing.\nuse the correct bucket name # Note that bucket names refer to the top level folders when you click Cloud Storage --\u0026gt; Buckets. Under each bucket, you can define sub-folder structures. However, when we want to get a bucket, these sub-folders should not be part of the bucket name!!\ncheck whether a file exists? # from google.cloud import storage storage_client = storage.Client() bucket_name = \u0026#34;my-bucket\u0026#34; bucket = storage_client.bucket(bucket_name) file_path = \u0026#34;path/to/your_file/under/the/bucket\u0026#34; blob = bucket.blob(file_path) print(blob.exists()) ref:\ncheck whether a file exists in gcloud: https://stackoverflow.com/q/13525482/6064933 Save Python dict in gcloud storage? # We need to convert the dict to string using JSON package and then use the method provided by blob to upload it. Here is a working code example:\nimport json from google.cloud import storage storage_client = storage.Client() bucket_name = \u0026#34;my-bucket\u0026#34; bucket = storage_client.bucket(bucket_name) file_path = \u0026#34;path/to/your_file/under/the/bucket\u0026#34; blob = bucket.blob(file_path) content = {\u0026#34;message\u0026#34;: \u0026#34;hello world\u0026#34;, \u0026#39;code\u0026#39;: 0} blob.upload_from_string(json.dumps(content)) ref:\nhttps://cloud.google.com/storage/docs/uploading-objects-from-memory download file and convert to dict # We can download the file as string and then convert it to the desired type:\nimport json from google.cloud import storage storage_client = storage.Client() bucket_name = \u0026#34;my-bucket\u0026#34; bucket = storage_client.bucket(bucket_name) file_path = \u0026#34;path/to/your_file/under/the/bucket\u0026#34; blob = bucket.blob(file_path) content = blob.download_as_string() content_real = json.loads(content) ref:\nhttps://cloud.google.com/storage/docs/downloading-objects-into-memory ","date":"10 July 2024","externalUrl":null,"permalink":"/2024/07/10/gcloud_storage_usage/","section":"Posts","summary":"\u003cp\u003eSome notes on using the \u003ca href=\"https://cloud.google.com/storage/docs/introduction#quickstarts\" target=\"_blank\"\u003eGoogle Cloud storage\u003c/a\u003e.\u003c/p\u003e","title":"Google Cloud Storage Usage","type":"posts"},{"content":"在德国的德超很少能见到羊肉，不过在土耳其超市可以很方便买到羊肉。 本期我来做一个煎羊排，之所以不是因为烤羊排是因为我没有合适的烤盘和锡箔纸，所以没有尝试。\n原料 # 洋葱，羊排，大蒜，辣椒碎，胡椒粉，五香粉，孜然粉，植物油\n制作 # 羊排准备 # 羊排泡水几个小时，去除血水，清洗干净，再用厨房纸吸干水分 洋葱大蒜切碎，加入羊肉，再加入辣椒碎，胡椒粉，五香粉，孜然粉，加入适量食盐，最后加入适量植物油，用手抓羊肉，把羊肉和料混合均匀，然后保鲜膜密封放入冰箱腌制一个小时以上 煎羊排 # 平底锅加油，小火加热油，油热加入腌制好的羊排，待一面煎至焦黄，再煎另外一面，全部煎到焦黄即可。注意 火一定不能大，否则洋葱和蒜末容易变糊。\n参考 # 奥地利小胡煎羊排：https://www.youtube.com/watch?v=tWbaWcQutKY 香煎法式羊排：https://www.youtube.com/watch?v=yIKfDbdeM_I 小高姐烤羊排：https://www.youtube.com/watch?v=DxMLu80eKmE ","date":"9 April 2024","externalUrl":null,"permalink":"/2024/04/09/pan-fried-lamb-chops/","section":"Posts","summary":"\u003cp\u003e在德国的德超很少能见到羊肉，不过在土耳其超市可以很方便买到羊肉。\n本期我来做一个煎羊排，之所以不是因为烤羊排是因为我没有合适的烤盘和锡箔纸，所以没有尝试。\u003c/p\u003e","title":"家常煎羊排制作","type":"posts"},{"content":"本文简单总结凉拌茄子的制作方法。\n原料 # 新鲜的茄子，青椒，大蒜，香菜，醋，生抽，辣椒面，胡椒，五香粉，盐，白糖，蚝油\n步骤 # 茄子洗干净，切成小条，泡在加白醋的清水中一分钟，然后捞出茄子，上锅蒸五分钟。 制作料汁：青椒和大蒜适量，切沫，放入小碗，加辣椒面，胡椒粉，五香粉。锅内热油，油热以后加入放青椒和蒜末的碗中，然后加入盐，白糖，生抽，醋，蚝油，搅拌均匀。 把蒸好的茄子放入盘中，加入料汁，搅拌均匀，喜欢吃香菜，可以放一些香菜，即可食用。 参考 # 小高姐：https://www.youtube.com/watch?v=aqGJMloZWRc ","date":"9 April 2024","externalUrl":null,"permalink":"/2024/04/09/eggplant_salad/","section":"Posts","summary":"\u003cp\u003e本文简单总结凉拌茄子的制作方法。\u003c/p\u003e","title":"凉拌茄子制作","type":"posts"},{"content":"Apart from directly configuring the Python logging in the code itself. We can also configuring the logging using fileConfig or dictConfig.\ndictConfig in logging # The dictConfig is more powerful than fileConfig and is the recommended way to configure logging.\nimport json import logging with open(\u0026#34;path/to/logging_conf.json\u0026#34;) as f: conf = json.load(f) logging.config.dictConfig(conf) The content of logging_conf.json:\n{ \u0026#34;version\u0026#34;: 1, \u0026#34;disable_existing_loggers\u0026#34;: True, \u0026#34;formatters\u0026#34;: { \u0026#34;standard\u0026#34;:{ \u0026#34;format\u0026#34;: \u0026#34;%(asctime)s [%(levelname)s] [%(name)s:%(lineno)d]: %(message)s\u0026#34; } }, \u0026#34;handlers\u0026#34;: { \u0026#34;console\u0026#34;:{ \u0026#34;level\u0026#34;: \u0026#34;DEBUG\u0026#34;, \u0026#34;formatter\u0026#34;: \u0026#34;standard\u0026#34;, \u0026#34;class\u0026#34;: \u0026#34;logging.StreamHandler\u0026#34;, \u0026#34;stream\u0026#34;: \u0026#34;ext://sys.stdout\u0026#34; } }, \u0026#34;loggers\u0026#34;:{ \u0026#34;requests\u0026#34;:{ \u0026#34;level\u0026#34;: \u0026#34;WARNING\u0026#34; }, \u0026#34;my_module\u0026#34;:{ \u0026#34;level\u0026#34;: \u0026#34;INFO\u0026#34; } }, \u0026#34;root\u0026#34;: { \u0026#34;level\u0026#34;: \u0026#34;DEBUG\u0026#34;, \u0026#34;handlers\u0026#34;: [\u0026#34;console\u0026#34;] } } Note that the ext://sys.stdout is a special syntax to refer to internal Python object. More info can be found in https://docs.python.org/3/library/logging.config.html#access-to-external-objects.\nYou can also write the logging configuration in YAML format (easier to write) and read it using the yaml package.\nversion: 1 disable_existing_loggers: true formatters: standard: format: \u0026#39;%(asctime)s [%(levelname)s] [%(name)s:%(lineno)d]: %(message)s\u0026#39; handlers: console: level: DEBUG formatter: standard class: logging.StreamHandler stream: ext://sys.stdout loggers: requests: level: WARNING my_module: level: INFO root: level: DEBUG handlers: [\u0026#39;console\u0026#39;] disable_existing_loggers # Note that you should be very careful with disable_existing_loggers. If this option is set to True, any logger that is defined before calling logging.config.dictConfig() will be disabled. This may cause subtle logging issues that are hard to debug.\nFor example, suppose you have a module my_module.py:\nimport logging logger = logging.getLogger(__name__) # .... def some_func(): logger.info(\u0026#34;some message from my_module\u0026#34;) # ... other statements In your entry point to this project, you have something like this:\nimport logging import my_module logging.config.dictConfig(\u0026#34;/path/to/config/json\u0026#34;) my_module.some_func() The logging message from my_module will not be printed. You need to set disable_existing_loggers to False, or you need to configure the logger for my_module.py explicitly under the loggers keys in the JSON config file.\nUnder the key loggers, you can configure the behavior of different loggers.\nDisable logging for 3rd party package/modules # To disable logging from 3rd party packages/modules, e.g., \u0026ldquo;urllib3\u0026rdquo;, we can configure their logging level in the configuration file like this:\nloggers: urllib3: level: WARNING Or you can also use Python code to disable the logging for a module completely:\nlogging.getLogger(\u0026#34;urllib3\u0026#34;).disabled = True Check existing logger config? # Sometimes, we way to check the configuration for a logger to debug the logging issue. To check the existing loggers, we can use logging.root.manager.loggerDict. The keys are the module names and the value are the respecitve loggers.\nimport logging current_logger = logging.root.manager.loggerDict[\u0026#39;__main__\u0026#39;] print(current_logger.level, current_logger.disabled) After you get the loggers, you can check the handlers associated with the loggers. Further, you can also check the formatter that is used by a handler. In this way, you can get an idea of the configuration for the different loggers.\nNote that logging.root.manager.loggerDict does not contain the root logger. To get the root logger, you can call logging.getLogger() with empty argument:\nroot_logger = logging.getLogger() print(root_logger.handlers[0].formatter._fmt) References # dictConfig doc: https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig dictConfig schema: https://docs.python.org/3/library/logging.config.html#configuration-dictionary-schema examples of dictConfig: https://stackoverflow.com/a/7507842/6064933 named logger not logging when using dictConfig: https://stackoverflow.com/a/65621451/6064933 how to list existing loggers: https://stackoverflow.com/q/53249304/6064933 dump existing logging config: https://stackoverflow.com/q/72624883/6064933 ","date":"11 March 2024","externalUrl":null,"permalink":"/2024/03/11/python-logging-dictconfig/","section":"Posts","summary":"\u003cp\u003eApart from directly configuring the Python logging in the code itself.\nWe can also configuring the logging using \u003ca href=\"https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig\" target=\"_blank\"\u003efileConfig\u003c/a\u003e or \u003ca href=\"https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig\" target=\"_blank\"\u003edictConfig\u003c/a\u003e.\u003c/p\u003e","title":"Configure Python logging with dictConfig","type":"posts"},{"content":"A short summary on how to debug Wezterm issues.\nuse the logging function # Wezterm provides three logging functions which you can use for logging:\nlog_error log_info log_warn Use the debug overlay # We can press Ctrl + shift + l to active the ShowDebugOverlay feature. If there are some errors running your Wezterm configuration, they will be printed out.\nYou can use ESC to close the debug overlay.\nlaunch wezterm from a shell # You can also directly start the wezterm application from the command line. After running wezterm, it will launch another wezterm window. Any errors when running your configuration will be shown in the shell where you run wezterm.\nOn macOS, if Wezterm is installed via Homebrew, the executable wezterm is available for the shell. If Wezterm is installed manually, the executable is under /Applications/WezTerm.app/Contents/MacOS.\n","date":"26 February 2024","externalUrl":null,"permalink":"/2024/02/26/debug_wezterm_issue/","section":"Posts","summary":"\u003cp\u003eA short summary on how to debug \u003ca href=\"https://wezfurlong.org/wezterm/index.html\" target=\"_blank\"\u003eWezterm\u003c/a\u003e issues.\u003c/p\u003e","title":"Debugging Wezterm Issues","type":"posts"},{"content":"","date":"26 February 2024","externalUrl":null,"permalink":"/tags/terminal/","section":"Tags","summary":"","title":"Terminal","type":"tags"},{"content":"","date":"26 February 2024","externalUrl":null,"permalink":"/categories/tools/","section":"Categories","summary":"","title":"Tools","type":"categories"},{"content":"This post is about how to set up black, the popular code formatter for Python projects.\nBasic usage # Format the file inplace :\nblack your_script.py If we only want to check if the file needs reformat, we can use --check:\nblack --check your_script.py Show the diffs between old and new file if black were to reformat:\nblack --diff --color your_script.py skip formatting for some code # To skip formatting for a single line, you can add # fmt: skip at the end of the line. To skip formatting for a block of code, you need to add # fmt: off and # fmt:on before and after the block.\nConfiguration # Black offers very little configuration. You can put the configuration inside pyproject.toml under the section [tool.black]:\n[tool.black] # The keys are the long option names what black accept on the command line. line-length = 100 skip-string-normalization = true The pyproject.toml file should be put at the root of the project.\nref:\nbasic configuration: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html the black style: https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html Integration to Editor/IDE # PyCharm # For latest version of PyCharm, open settings, and go to Tools --\u0026gt; Black, you can configure how black should be run for a file.\nVisual Studio Code # Install the black formatter extension from Microsoft. Open the command plate (shift + command + P), and search Open User Settings (JSON), and open the user setting. Add the following config:\n\u0026#34;[python]\u0026#34;: { \u0026#34;editor.defaultFormatter\u0026#34;: \u0026#34;ms-python.black-formatter\u0026#34;, \u0026#34;editor.formatOnSave\u0026#34;: true, } Neovim # For neovim you can use dedicated formatter plugins from here.\nYou can also use python-language-server and black as the formatter. The detailed configuration can be found here.\nCI/CD integration # GitHub action # For GitHub action integration, please check the official doc: https://black.readthedocs.io/en/stable/integrations/github_actions.html\nAzure DevOps # For Azure DevOps, we can add a custom step to check the code formatting:\n- script: | pip install black black --check --diff . displayName: Check code format with black Ref:\nhttps://10xlearner.com/2022/03/23/checking-your-python-code-format-on-azure-pipelines/ Ignore the code reformat commit # Create a file named .git-blame-ignore-revs in the project root and add the commit that reformat the code:\n# reformat the code using black \u0026lt;the-full-commit-hash\u0026gt; Then when using git blame, we can provide this to ignore certain commit:\ngit blame your_script.py --ignore-revs-file .git-blame-ignore-revs ref:\nhttps://black.readthedocs.io/en/stable/guides/introducing_black_to_your_project.html ","date":"22 February 2024","externalUrl":null,"permalink":"/2024/02/22/black_formatter_setup/","section":"Posts","summary":"\u003cp\u003eThis post is about how to set up \u003ca href=\"https://github.com/psf/black\" target=\"_blank\"\u003eblack\u003c/a\u003e, the popular code formatter for Python projects.\u003c/p\u003e","title":"Black Formatter Setup for Python Project","type":"posts"},{"content":"","date":"22 February 2024","externalUrl":null,"permalink":"/tags/nvim/","section":"Tags","summary":"","title":"Nvim","type":"tags"},{"content":"","date":"21 February 2024","externalUrl":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git","type":"tags"},{"content":"","date":"21 February 2024","externalUrl":null,"permalink":"/categories/git/","section":"Categories","summary":"","title":"Git","type":"categories"},{"content":"This post is about how to set up Git so that people using different operating systems can work in the same repository, without messing up the line ending of source files.\nSettings for personal use (not good, not recommended) # We can change the core.autocrlf setting:\ngit config --global core.autocrlf true By setting core.autocrlf to true, if your original file line ending is CRLF, it will not change, but when you commit your files, git will normalize the line ending to LF.\nAfter the above setup, you can run the following command:\ngit add --renormalize . This will put the normalized text files in your repo to the git index, You can then commit the changes:\ngit commit -m \u0026#34;Renormalize line ending to LF\u0026#34; Note that the files in your local working tree still have original line ending. For example, if foo.py has CRLF line ending, and bar.py has LF line ending, they will remain so in your working tree.\nFor repository # The above setting is not enforceable, because everyone has to set it up individually. So it is not really ideal way to make sure everyone has the correct line ending setup.\nWe can use the .gitattributes file to enforce this. Create a file named .gitattributes in the root directory of the project:\n* text=auto # mark this file as always have crlf line ending on checkout *.bat text eol=crlf # mark pattern as binary file *.jpg binary The setting here will overwrite the core.autocrlf setting.\nWe can then run the re-normalize command to normalize the line ending:\ngit add --renormalize . git commit -m \u0026#34;Renormalize line ending to LF\u0026#34; But this will not change the line ending for the file in the working tree. If we run the following command:\ngit ls-files --eol It shows something like this:\ni/lf w/lf attr/text=auto .gitattributes i/lf w/lf attr/text=auto another-file.md i/lf w/crlf attr/text=auto demo.txt i/lf w/crlf attr/text eol=crlf execute.bat i/lf means the file copy at index is using LF line ending. w/lf or w/crlf means the line ending used in the working tree. In this case, for demo.txt, the file copy in the working tree is still using the CRLF line ending.\nTo correct this and use LF line ending also for text file not explicitly specified to use CRLF, we can run the following command:\ngit rm --cached -r . git reset --hard HEAD After this, if you run the ls-files command again, you should be able to see something like this:\ni/lf w/lf attr/text=auto .gitattributes i/lf w/lf attr/text=auto another-file.md i/lf w/lf attr/text=auto demo.txt i/lf w/crlf attr/text eol=crlf execute.bat References # a clear explanation of core.autocrlf: https://stackoverflow.com/a/20653073/6064933 https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings official doc: https://git-scm.com/docs/gitattributes#_end_of_line_conversion An excellent post about newline setting for git: https://www.aleksandrhovhannisyan.com/blog/crlf-vs-lf-normalizing-line-endings-in-git/ ","date":"21 February 2024","externalUrl":null,"permalink":"/2024/02/21/git_line_ending_config/","section":"Posts","summary":"\u003cp\u003eThis post is about how to set up Git so that people using different operating systems can work in the same repository,\nwithout messing up the line ending of source files.\u003c/p\u003e","title":"Git line ending config","type":"posts"},{"content":"","date":"4 February 2024","externalUrl":null,"permalink":"/categories/digital/","section":"Categories","summary":"","title":"Digital","type":"categories"},{"content":"","date":"4 February 2024","externalUrl":null,"permalink":"/tags/garmin/","section":"Tags","summary":"","title":"Garmin","type":"tags"},{"content":"In this post, I want to share a list of tips/setups for the Garmin Forerunner 965 watch. Some of the settings are also applicable to other Garmin watches.\nGarmin connect and connect IQ APP # Garmin has two APPs for their watches, one is Garmin connect, which is used to show your activity and health info and set up the watches. The other APP is connect IQ, which is used to manage applications and watchfaces and sync to your Garmin watch.\nData screen setup for activity # For each activity, we can create some data screens to show different info during the activity. For each data screen, you can choose the layout (how many fields to show) and which data to show for each field. All this can be done using the Garmin watch only, without using your phone.\nHowever, I find it easier to set up the data screens using the Garmin connect APP once it is paired with your watch. In the connect APP, we can click More --\u0026gt; Garmin Devices, then click the device. Now we are in the watch configuration page, which is essentially a mirror of settings in your watch. Click Activities \u0026amp; Apps, select an activity, e.g., walk, then click the Data Screens. In the Data Screens pages, we can manage the data screens in a much easier and faster way. These settings will be synced to your watch automatically.\nFree maps for Garmin # The maps that are preinstalled on Forerunner 965 depend on the region. If we go to other parts of the world, we may need to download the maps manually. The following two websites have some good maps for different countries/regions:\nhttps://garmin.opentopomap.org/ https://alternativaslibres.org/zh/downloads.php#Asia How to connect Garmin watch with macOS # For Windows, it is easier to connect your Garmin watch to the system. For macOS, there is no native support for the Garmin watches. Some tutorials recommend using the Application Android File Transfer, which has limited featured. Another good option is the openmtp application, which can be downloaded from GitHub.\nwatchfaces # In the connect IQ store, there are a lot of watchfaces that you can install for your watch. You can also install watchfaces from the website watchfacebuilder.\nweather # Garmin has its own weather app, which can be used by different watchfaces as the weather source.\nAlso some watchfaces also support open weather map (OWM). To use OWM, you to need to sign up and verify your account, then you can get your API keys under the user page. It is free if you call the OWM API less than 1000/day, which is enough for the watchfaces.\nThere are also some weather APPs built for Garmin watches. The APP Weather Pro Widget is quite good an app for checking the weather.\nNavigation settings # Keep the map zoom # During an activity, in the map view, we can long press the Up button to change the zoom level of the map. However, the zoom level changes automatically if we hit the Back button, which is annoying. To fix this issue, go to the watch settings page, click the Map setting. Scroll down and turn of the Auto Zoom feature.\nChange the navigation course line color # By default, Garmin use a purple color to represent the course in the map, which can not be changed in the watch. There are some hacky ways to change the navigation course color. You can connect Garmin watch to your computer. Under the directory Garmin/MAPTHEMES, there are some predefined map themes. We can create new map themes based on the existing themes. I tried the method, but it didn\u0026rsquo;t work well for me. There are some decoding issues, the watch can not show the name custom defined color theme correctly: only part of the name is shown or some garbled text is shown. Except the missing styles, the format should be correct xml. Not sure why this happens.\nRef:\nhttps://forums.garmin.com/outdoor-recreation/outdoor-recreation/f/fenix-6-series/204247/how-to-change-the-colour-of-navigation-course-follow-line-with-your-own-map-theme?pifragment-1292=2#pifragment-1292=6 References # https://post.m.smzdm.com/p/aoo62p77/ https://www.dcrainmaker.com/2019/08/how-to-installing-free-maps-on-your-garmin-fenix-5-plus-forerunner-945-or-marq-series-watch.html ","date":"4 February 2024","externalUrl":null,"permalink":"/2024/02/04/garmin_forrunner_setup/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share a list of tips/setups for the Garmin Forerunner 965 watch.\nSome of the settings are also applicable to other Garmin watches.\u003c/p\u003e","title":"Garmin Forerunner 965 Essential Tips and Setups","type":"posts"},{"content":"","date":"21 November 2023","externalUrl":null,"permalink":"/tags/databricks/","section":"Tags","summary":"","title":"Databricks","type":"tags"},{"content":"In this post, I want to share the complete process and setup to download files from GCP in a Databricks workspace notebook. Since the notebook itself is non-interactive when you run the shell command, the setup process is a bit different from the normal GCP authentication.\nInstall gcloud cli # For my Databricks clusters, I checked that the under system is Ubuntu Linux (version 20.04). So we can use apg-get to update and install packages like a normal Ubuntu system.\nFirst we need to update the dependency libraries:\nsudo apt-get update sudo apt-get install apt-transport-https ca-certificates gnupg curl sudo Set up the correct public GPG key for the google cloud deb source:\n# download the google cloud gpg key, turn it into binary format and save it under directory /user/share/keyrings/. # you can use the `file` command to check it: `file /usr/share/keyrings/cloud.google.gpg` curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor | sudo tee -a /usr/share/keyrings/cloud.google.gpg \u0026gt; /dev/null # create the google cloud source entry under directory /etc/apt/sources.list.d/, # the signed-by field specifies the key file to use for authentication, # which is exactly the keyring we created in the first command. echo \u0026#34;deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\u0026#34; | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026gt; /dev/null In the above commands, we import and google cloud repo keyring and set up the meta info about the repo.\nNow we should be able to install gcloud cli without issue:\nsudo apt-get update \u0026amp;\u0026amp; sudo apt-get install google-cloud-cli ref:\nadd repo and public key in Debian/Ubuntu https://unix.stackexchange.com/q/332672/221410 why apt-key add is deprecated: https://askubuntu.com/a/1307181/768311 format for sources.list file: https://askubuntu.com/q/737498/768311 https://manpages.ubuntu.com/manpages/mantic/en/man5/sources.list.5.html install gcloud cli: https://cloud.google.com/sdk/docs/install#deb Authentication # User or service account credential # If you want to user or service account credentials, you need to do it interactively in a shell. This is difficult to do in the databricks notebooks, because the shell command you run in notebooks can not accept input. However, if you have access to the web terminal provided by databricks, you can do the authentication interactively:\ngcloud auth application-default login Note that the authentication is not permanent, it will be gone when you restart your cluster. So you need to do this authentication each time you run your code.\nref:\nenable web terminal in databricks: https://learn.microsoft.com/en-us/azure/databricks/administration-guide/clusters/web-terminal Service account keys # First, we need to create a service account key, the documentation is here. After getting the key file (JSON format), we can upload it to databricks workspace. Usually, we just set the environment variable GOOGLE_APPLICATION_CREDENTIALS to point to the key file path. But this does not work for databricks if you use shell commands: %sh export GOOGLE_APPLICATION_CREDENTIALS=\u0026quot;/path/to/key_file\u0026quot;. Instead, we can directly set this environment variable in the Python code:\nimport os os.environ[\u0026#34;GOOGLE_APPLICATION_CREDENTIALS\u0026#34;] = \u0026#34;/path/to/key_file\u0026#34; ref:\nset up application credential: https://cloud.google.com/docs/authentication/provide-credentials-adc#local-dev how application default credential works: https://cloud.google.com/docs/authentication/application-default-credentials#personal Download file from cloud storage # First, install the gcloud storage package:\npip install --upgrade google-cloud-storage Then you can download a file from cloud storage bucket like this:\nfrom google.cloud import storage import os # this is for authentication os.environ[\u0026#34;GOOGLE_APPLICATION_CREDENTIALS\u0026#34;] = \u0026#34;/path/to/key_file\u0026#34; # Initialise a client storage_client = storage.Client(\u0026#34;\u0026lt;project-name\u0026gt;\u0026#34;) # Create a bucket object for our bucket bucket = storage_client.get_bucket(\u0026#34;\u0026lt;bucket-name\u0026gt;\u0026#34;) # Create a blob object from the filepath blob = bucket.blob(\u0026#34;\u0026lt;sub-directory\u0026gt;/file_name.ext\u0026#34;) # Download the file to a destination blob.download_to_filename(\u0026#39;./my_file.ext\u0026#39;) ref:\ncloud storage python client examples: https://github.com/googleapis/python-storage/tree/main/samples cloud storage download objects: https://cloud.google.com/storage/docs/downloading-objects#storage-download-object-python ","date":"21 November 2023","externalUrl":null,"permalink":"/2023/11/21/databricks-notebook-gcloud-storage-download/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share the complete process and setup to download files from GCP in a Databricks workspace notebook.\nSince the notebook itself is non-interactive when you run the shell command,\nthe setup process is a bit different from the normal GCP authentication.\u003c/p\u003e","title":"How to Download Files from Google Cloud Storage in the Databricks Workspace Notebook","type":"posts"},{"content":"","date":"21 November 2023","externalUrl":null,"permalink":"/tags/ubuntu/","section":"Tags","summary":"","title":"Ubuntu","type":"tags"},{"content":"We can use the Databricks cli to interact with Databricks workspaces programmatically on the command line. In this post, I want to share simple usage about Databricks cli.\nInstall and setup # On macOS, we can install databricks cli via Homebrew:\nbrew tap databricks/tap brew install databricks Personal access token:\nUser setting --\u0026gt; Developer --\u0026gt; Access tokens, there, you can generate a new token for connection in the cli.\nConnect to databricks:\ndatabricks configure Paste the databricks workspace URL: https://adb-\u0026lt;workspace-id\u0026gt;.azuredatabricks.net/ and the personal access token.\nmultiple profiles # To add a second profile, just edit ~/.databrickscfg, and add a new section:\n[new_profile_name] host = xxxxx token = xxxxx profile = profile_name Show a list of configured profiles:\ndatabricks auth profiles Show info about a profile:\ndatabricks auth env --profile \u0026lt;profile_name\u0026gt; references # https://github.com/databricks/cli personal access token: https://learn.microsoft.com/en-gb/azure/databricks/dev-tools/auth#pat tutorial: https://learn.microsoft.com/en-gb/azure/databricks/dev-tools/cli/tutorial profiles: https://learn.microsoft.com/en-gb/azure/databricks/dev-tools/cli/profiles ","date":"21 November 2023","externalUrl":null,"permalink":"/2023/11/21/databricks-cli-usage/","section":"Posts","summary":"\u003cp\u003eWe can use the \u003ca href=\"https://learn.microsoft.com/en-us/azure/databricks/dev-tools/cli/\" target=\"_blank\"\u003eDatabricks cli\u003c/a\u003e to interact with Databricks workspaces programmatically on the command line.\nIn this post, I want to share simple usage about Databricks cli.\u003c/p\u003e","title":"Databricks Cli Usage","type":"posts"},{"content":"Some observation and finding in working with Databricks workspace files.\nHow to read/access workspace files # For regular Python # The behavior to access the workspace file is also different based on the databricks runtime (abbreviation, DBR) version. For the following code:\nwith open(\u0026#39;/Workspace/Users/\u0026lt;user-email\u0026gt;/path/to/file\u0026#39;) as f: content = f.readlines() print(content) In DBR 10.4, I get the following error:\nFileNotFoundError: [Errno 2] No such file or directory: \u0026lsquo;/Workspace/Users//path/to/file\u0026rsquo;\nSince DBR 11.3, we can access the files under the databricks workspace using their absolute paths (source here). So the above code should work as expected to print the file content. However, this does not apply to the notebooks under the workspace (source here). I think this is fine, because most people don\u0026rsquo;t have such needs to read notebooks directly.\nSince DBR 14.0, as discussed later, the current working directory is changed to the folder where the notebook is run. So you can additionally use relative path to access workspace files. For example, if there is test.py in the folder as the notebook, you can run the following code without error:\nwith open(\u0026#39;./test.py\u0026#39;, \u0026#39;r\u0026#39;) as f: content = f.readlines() print(content) For spark code # For spark code, it is also possible to access the workspace files. However, there are two requirements:\nyou must use the fully-qualified path for the workspace files, e.g., the path should be something like file:/Workspace/Users/\u0026lt;user-name\u0026gt;/\u0026lt;folder-name\u0026gt;/MOCK_DATA.csv the cluster can\u0026rsquo;t be in shared access mode, otherwise, you will see the following error when trying to access the workspace files: java.lang.SecurityException: Cannot use com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem - local filesystem access is forbidden\nIf both condition is satisfied, you should be able to run the following code without error:\ndf = spark.read.csv(\u0026#34;file:/Workspace/Users/\u0026lt;user-name\u0026gt;/\u0026lt;folder-name\u0026gt;/MOCK_DATA.csv\u0026#34;, header=True) display(df) comparison # yeah, databricks just makes things f*king complicated. I am scratching my hair out trying to figuring out these complicated rules and cases. Here is a comparison table (hopefully it makes it easier to understand):\nDBR versions open() with absolute path open() with relative path spark.read with absolute path spark.read with relative path DBR 11.3 single user ✅ not supported, cwd is not workspace folder ✅ ❌, path must be absolute DBR 11.3 shared ✅ not supported, cwd is not workspace folder ❌ ❌, path must be absolute DBR 14.1 single user ✅ ✅ ✅ ❌, path must be absolute DBR 14.1 shared ✅ ✅ ❌ ❌, path must be absolute ref:\nhow to access databricks workspace files: https://stackoverflow.com/q/77498069/6064933 read workspace files: https://learn.microsoft.com/en-us/azure/databricks/files/workspace-interact#read-data-workspace-files Current working directory # In the old DBR, when you run the Python code, the current working directory is /databricks/driver. To check the DBR version and your current working directory, use this:\nimport os print(spark.conf.get(\u0026#34;spark.databricks.clusterUsageTags.sparkVersion\u0026#34;)) print(os.path.abspath(\u0026#39;./\u0026#39;)) In my DBR 10.4 (single user access mode, the directory is different if you use shared access mode), I see the following output:\n10.4.x-scala2.12 /databricks/driver Starting in databricks 14.0, the current working directory is changed to the directory where the notebook runs (source here). In DBR 14.1 cluster, I see the following output:\n14.1.x-scala2.12 /Workspace/Users/\u0026lt;user-email\u0026gt;/\u0026lt;current-folder-name\u0026gt; You can use relative path to write and read file, but their location is different in different DBR. For example, for the following code:\nwith open(\u0026#39;./demo.txt\u0026#39;, \u0026#39;w\u0026#39;) as f: f.write(\u0026#34;hello world\\n\u0026#34;) If you use 10.4, the file is saved in /databricks/driver/demo.txt, under the driver node. If you use 11.3, the file is saved in /home/spark-\u0026lt;some-random-string\u0026gt;/demo.txt If you use 14.1, the file is saved in /Workspace/\u0026lt;user-email\u0026gt;/\u0026lt;current-folder\u0026gt;/demo.txt.\nref:\ndefault current working directory in dbr 14.0: https://learn.microsoft.com/en-us/azure/databricks/files/cwd-dbr-14 ","date":"18 November 2023","externalUrl":null,"permalink":"/2023/11/18/databricks-workspace-files/","section":"Posts","summary":"\u003cp\u003eSome observation and finding in working with Databricks workspace files.\u003c/p\u003e","title":"Working with Databricks Workspace Files","type":"posts"},{"content":"这次我来复刻手抓羊肉饭。\n原料以及准备 # 羊腿肉或羊排（在德国土耳其超市可以买到），胡萝卜，红葱头或者白洋葱，青椒，孜然粒，葡萄干，长粒米 basmati rice（或者茉莉香米 jasmin rice，最好是长粒米）\n原料准备 # 羊腿肉切块，根据自己喜好，可以切大块或者小一点的块，撒入适量的食盐搅拌均匀腌制 15 分钟左右，后洗净备用 胡萝卜切稍粗的丝 洋葱切片或切丝，青椒切丝 孜然在锅内炒香，碾碎 长粒米洗干净，洗掉表面的淀粉，然后提前泡水半小时或者一小时 制作步骤 # 锅内烧油，最好是菜籽油，油热加入切好的羊肉块翻炒 羊肉翻炒一会以后，加入洋葱翻炒，此时应该会出水，油水混合物为白色浑浊液体，需要不断翻炒，直至水汽蒸发完毕，把油脂炒出来，此时锅底的油应该是比较澄清的，不再浑浊 加入切好的胡萝卜丝，继续翻炒，翻炒一会以后，加入青椒继续翻炒，加入适量的盐 把所有食材盛出加入到电饭煲，铺到电饭煲底部，把泡水的大米铺平到顶部，如果水不够，可以加入适量的水，注意水不能多，刚刚好和大米的面平齐即可，甚至可以少一点 开始煮米饭，中途可以加入一些葡萄干 米饭煮好以后，焖五分钟，开盖，用铲子轻微翻动散热 参考 # 小高姐：https://youtu.be/2VRRTq7FhEA?si=DLrUyEWKMv7btXc6 老饭骨：https://youtu.be/I52nN86uhO0?si=-kTxBskiSWsLU1XU ","date":"9 November 2023","externalUrl":null,"permalink":"/2023/11/09/lamb_pilaf/","section":"Posts","summary":"\u003cp\u003e这次我来复刻手抓羊肉饭。\u003c/p\u003e","title":"手抓羊肉饭制作","type":"posts"},{"content":"General # Init script is just a shell script, which will be run for each node in the cluster, before Apache Spark driver or executor JVM starts.\nA cluster can have multiple init script if you want. These init scripts will be executed in the order provided.\nCluster scope init script # If your cluster is not in Edit mode, you can not see the button to add init script. You need to click Edit in the cluster configuration page, then you can add init script to your cluster settings.\nNote that if you use a workspace folder to store the init script, you do not need to specify the top level /Workspace in the script path. For example, if you init script path is /Workspace/Shared/cluster-conf.sh, in the cluster init setup, if you choose Workspace, the path you need to fill in is /Shared/cluster-conf.sh.\nYou can also store init script in DBFS path and ABFSS path, but DBFS path is being deprecated by Databricks. Here is how you can create and update the content of the init script if you use DBFS:\ndbutils.fs.mkdir(\u0026#34;dbfs:/databricks/cluster-init/\u0026#34;) dbutils.fs.put(\u0026#34;dbfs:/databricks/cluster-init/cluster-init.sh\u0026#34;, \u0026#34;\u0026#34;\u0026#34; #!/bin/bash timedatectl set-timezone Asia/Shanghai \u0026#34;\u0026#34;\u0026#34;, overwrite=True) For ABFSS path, the setup is the same.\nEnvironment variables # Databricks exposes some environment variables for the init script. For the details, refer to documentation here.\nGlobal init script # It is not recommended by Databricks official to use global init script.\nInit script logs # There will possibly be some errors when running the init scripts. The logging path for init scripts can be configured in the advanced configuration section for the cluster. Go to edit mode of cluster, under Advanced options for cluster, in the logging tab, we configure the log path. For example, the default options is dbfs:/cluster-logs.\nThe init script log path will be the following format:\ndbfs:/cluster-logs/\u0026lt;cluster-id\u0026gt;/init_scripts/\u0026lt;cluster-id\u0026gt;_\u0026lt;node-ip\u0026gt; Under the above path, there will log for stdout and stderr. You can check them using the dbutils.fs utilities like this:\n%fs head dbfs:/cluster-logs/\u0026lt;cluster-id\u0026gt;/init_scripts/\u0026lt;cluster-id\u0026gt;_\u0026lt;node-ip\u0026gt;/\u0026lt;time-stamp\u0026gt;_\u0026lt;init-script-name\u0026gt;.stderr.log ref:\nhttps://learn.microsoft.com/en-gb/azure/databricks/init-scripts/logs ","date":"21 October 2023","externalUrl":null,"permalink":"/2023/10/21/databricks-init-scripts/","section":"Posts","summary":"General # Init script is just a shell script, which will be run for each node in the cluster, before Apache Spark driver or executor JVM starts.\nA cluster can have multiple init script if you want. These init scripts will be executed in the order provided.\nCluster scope init script # If your cluster is not in Edit mode, you can not see the button to add init script. You need to click Edit in the cluster configuration page, then you can add init script to your cluster settings.","title":"Databricks Init Scripts","type":"posts"},{"content":"Using a virtual environment for Project dev in Python is a good practice. venv is module that is available since Python 3.3. It can help us to manage the virtual environment in a simple way.\nManage virtual env # Create a virtual env # Normally, we create a virtual environment under the project root directory:\npython -m venv paht/to/project-root/venv The name we give to this virtual env is venv. Under the directory venv, there are different files and folders. Under my macOS system, it has the following files:\nbin/ include/ lib/ pyvenv.cfg Activate and de-activate # To activate the virtual environment, run this command:\nsource venv/bin/activate Then your shell prompt changes and tells you are now in the virtual environment. When the environment has been activated, the VIRTUAL_ENV env variable is set to the path of the environment.\nTo deactivate the virtual environment, just run deactivate.\nref:\nPython venv: https://docs.python.org/3/library/venv.html use venv in Linux: https://www.youtube.com/watch?v=Kg1Yvry_Ydk Make jupyter work with virtual env # First, we need to install the ipykernel package inside the virtual env:\npip install ipykernel Then we can generate a kernelspec for jupyter:\npython -m ipykernel install --user --name \u0026lt;spec-name\u0026gt; # output: Installed kernelspec venv in /Users/\u0026lt;your-user-name\u0026gt;/Library/Jupyter/kernels/\u0026lt;spec-name\u0026gt; Now we can open the notebook:\njupyter notebook \u0026lt;your-notebook-name\u0026gt;.ipynb In the opened browser tab for jupyter, we can click the Kernel menu and click change kernel to switch the kernel.\nKernelspec management # To list your kernelspecs:\njupyter kernelspec list To remove the virtual env spec:\njupyter kernelspec remove \u0026lt;spec-name\u0026gt; ref:\nhttps://janakiev.com/blog/jupyter-virtual-envs/#add-virtual-environment-to-jupyter-notebook ipython kernelspec: https://ipython.readthedocs.io/en/stable/install/kernel_install.html#kernels-for-different-environments ","date":"11 October 2023","externalUrl":null,"permalink":"/2023/10/11/python-use-venv/","section":"Posts","summary":"\u003cp\u003eUsing a virtual environment for Project dev in Python is a good practice.\n\u003ca href=\"https://docs.python.org/3/library/venv.html\" target=\"_blank\"\u003evenv\u003c/a\u003e is module that is available since Python 3.3.\nIt can help us to manage the virtual environment in a simple way.\u003c/p\u003e","title":"Using Virutal Environment in Python with venv","type":"posts"},{"content":"A summary of different file systems in Databricks.\nDBFS # DBFS in databricks is a distributed file system, which maps the cloud storage to a file system for ease of use.\nThere are two different styles of notation when we work with file paths in DBFS. The first is the spark API format: dbfs:/some/path/. The second is the file API format: /dbfs/some/path/\nspark API format # We use the spark API format when:\nwe are using the spark operations: spark.write.format('csv').save('dbfs:/path/to/my-csv') spark.read.load('dbfs:/path/to/my-csv') we are using the dbutils.fs interface: dbutils.fs.ls('dbfs:/some/path') we can also use the %fs magic for DBFS operations: %fs ls dbfs:/path/to/file we run spark sql statement: SELECT * FROM JSON.`dbfs:/FileStore/shared_uploads/my-json-table` ref:\nselect from a file: https://spark.apache.org/docs/latest/sql-ref-syntax-qry-select-file.html file API format # We use the file API format when:\nwe use shell command: %sh ls -l /dbfs/path/to/file when use python code that is not related to spark: f = open('/dbfs/path/to/file') we use other packages that does not support spark. Local driver file system # When we want to specify file path in local driver node, for bash and Python code, we just use the path as is:\nshell: %sh ls /usr/include/zlib.h python: f = open('/usr/include/zlib.h') However, if want to access the local driver file system using the dbutils.fs interface, we need to use this notation: file:/path/to/file:\ndbutils.fs.ls('file:/usr/include/zlib.h') %fs ls file:/usr/include/zlib.h move file from local file system to DBFS # We can also move a file from local file system to DBFS:\ndbutils.fs.mv(\u0026#34;file:/tmp/some_file.csv\u0026#34;, \u0026#34;dbfs:/tmp/my_file.csv\u0026#34;) ref:\nhttps://learn.microsoft.com/en-us/azure/databricks/files/download-internet-files#moving-data-with-dbutils access file in local driver file system: https://learn.microsoft.com/en-us/azure/databricks/files/#--access-files-on-the-driver-filesystem Workspace files # To read a file under workspace folder in spark, we need to use the full path with file: notation. For example:\ndf = spark.read.csv(\u0026#39;file:/some/csv/file/path/under/workspace\u0026#39;, header=True) ref:\nworkspace file: https://learn.microsoft.com/en-us/azure/databricks/files/workspace-interact references # DBFS: https://learn.microsoft.com/en-gb/azure/databricks/dbfs/ DBFS default locations: https://learn.microsoft.com/en-gb/azure/databricks/dbfs/root-locations DBFS vs files on local driver: https://www.youtube.com/watch?v=ThjvQt3QBvI how to specify DBFS path: https://kb.databricks.com/dbfs/how-to-specify-dbfs-path ","date":"3 October 2023","externalUrl":null,"permalink":"/2023/10/03/databricks-dbfs-and-other-filesystem/","section":"Posts","summary":"\u003cp\u003eA summary of different file systems in Databricks.\u003c/p\u003e","title":"File Systems in Databricks","type":"posts"},{"content":"For array type column, explode() will convert it to n rows, where n is the number of elements in the array. For map/dictionary type column, explode() will convert it to nx2 shape, i.e., n rows, 2 columns (for key and value).\nExplode for array # CREATE TABLE IF NOT EXISTS my_table (name STRING, books ARRAY\u0026lt;STRING\u0026gt;, grades ARRAY\u0026lt;FLOAT\u0026gt;); INSERT INTO my_table VALUES (\u0026#34;Tom\u0026#34;, array(\u0026#39;abc\u0026#39;, \u0026#39;efs\u0026#39;), array(85, 70, 91)), (\u0026#39;Alice\u0026#39;, array(\u0026#39;wer\u0026#39;, \u0026#39;mzdf\u0026#39;), array(70, 80, 90)) LATERAL VIEW explode will generate the different combinations of exploded columns. In the above case, column books has 2 elements, and column grades has 3 elements. So for each name, you now have 2x3=6 rows.\nSELECT name, book_name, grade FROM my_table LATERAL VIEW explode(books) AS book_name LATERAL VIEW explode(grades) AS grade The generated table is like this:\nname book_name grade Alice wer 70 Alice wer 80 Alice wer 90 Alice mzdf 70 Alice mzdf 80 Alice mzdf 90 Tom abc 85 Tom abc 70 Tom abc 91 Tom efs 85 Tom efs 70 Tom efs 91 Explode for map # CREATE TABLE IF NOT EXISTS demo_table (name STRING, cnt MAP\u0026lt;STRING, INT\u0026gt;); INSERT INTO demo_table VALUES (\u0026#34;ABC\u0026#34;, map_from_entries(array((\u0026#34;k1\u0026#34;, 1), (\u0026#34;k2\u0026#34;, 2)))), (\u0026#34;BCD\u0026#34;, map_from_entries(array((\u0026#34;k1\u0026#34;, 3), (\u0026#34;K2\u0026#34;, 5)))), (\u0026#34;YUV\u0026#34;, map_from_entries(array((\u0026#34;k1\u0026#34;, 9), (\u0026#34;k2\u0026#34;, 8), (\u0026#34;k3\u0026#34;, 7)))) The demo_table:\nname cnt YUV {\u0026ldquo;k1\u0026rdquo;:9,\u0026ldquo;k2\u0026rdquo;:8,\u0026ldquo;k3\u0026rdquo;:7} ABC {\u0026ldquo;k1\u0026rdquo;:1,\u0026ldquo;k2\u0026rdquo;:2} BCD {\u0026ldquo;k1\u0026rdquo;:3,\u0026ldquo;K2\u0026rdquo;:5} We can run LATERAL VIEW explode on the column cnt:\nSELECT name, key, val FROM nn_ecp.demo_table LATERAL VIEW explode(cnt) AS key, val The generated table is like this:\nname key val YUV k1 9 YUV k2 8 YUV k3 7 ABC k1 1 ABC k2 2 BCD k1 3 BCD K2 5 references # explode: https://spark.apache.org/docs/3.1.3/api/python/reference/api/pyspark.sql.functions.explode.html lateral view: https://spark.apache.org/docs/latest/sql-ref-syntax-qry-select-lateral-view.html map_from_entries() method: https://learn.microsoft.com/en-us/azure/databricks/sql/language-manual/functions/map_from_entries explode() vs explode_outer() vs posexplode() vs posexplode_outer(): https://www.youtube.com/watch?v=ZIWdx204-0E ","date":"26 September 2023","externalUrl":null,"permalink":"/2023/09/26/spark_lateral_view_explode/","section":"Posts","summary":"\u003cp\u003eFor array type column, \u003ccode\u003eexplode()\u003c/code\u003e will convert it to \u003ccode\u003en\u003c/code\u003e rows, where \u003ccode\u003en\u003c/code\u003e is the number of elements in the array.\nFor map/dictionary type column, \u003ccode\u003eexplode()\u003c/code\u003e will convert it to \u003ccode\u003enx2\u003c/code\u003e shape, i.e., n rows, 2 columns (for key and value).\u003c/p\u003e","title":"LATERAL VIEW EXPLODE in Spark","type":"posts"},{"content":"","date":"26 September 2023","externalUrl":null,"permalink":"/tags/spark/","section":"Tags","summary":"","title":"Spark","type":"tags"},{"content":"","date":"26 September 2023","externalUrl":null,"permalink":"/categories/sql/","section":"Categories","summary":"","title":"SQL","type":"categories"},{"content":"本文总结麻婆豆腐的做法。\n原料 # 豆腐，牛肉沫，四川豆瓣酱，大蒜，姜，花椒，干辣椒，生抽，淀粉\n原料准备 # 豆腐在德国可以到超市 vegan 区购买，例如 rewe，如果要买嫩豆腐，可以选择 seidentoufu。豆腐切成小块备用。 准备适量大蒜切末，适量姜切末 准备淀粉水（淀粉可以选择土豆淀粉，或者玉米淀粉，德国超市可以买 Speisestärke） 制作过程 # 刀口辣椒制作 # 锅中加入少量油，油热以后，加入适量花椒和干辣椒，炒 15 秒左右。把花椒和干辣椒碾碎，如果有破壁机，也可以直接用破壁机搅碎。\n豆腐焯水 # 锅中加水，放入一些食盐，加入切好块的豆腐，煮一两分钟捞出。\n炒肉沫 # 起锅，加入少量的油，油热加入牛肉沫，把水分炒干，加入蒜末和姜，继续翻炒，加入一勺的豆瓣酱，加入刀口辣椒，翻炒均匀，让肉沫均匀裹上红油。\n炖煮与勾芡 # 锅中加入少量的清水，不要太多，水开以后，煮两三分钟，然后分三次加入调好的淀粉水，三次勾芡，制作完成。\n参考 # 老饭骨麻婆豆腐：https://www.youtube.com/watch?v=kpA7rFpNE7Q\u0026t=7s 王刚版麻婆豆腐：https://www.youtube.com/watch?v=USoC8AqirVA ","date":"23 September 2023","externalUrl":null,"permalink":"/2023/09/23/mapo_tou_fu/","section":"Posts","summary":"\u003cp\u003e本文总结麻婆豆腐的做法。\u003c/p\u003e","title":"菜谱：麻婆豆腐","type":"posts"},{"content":"本次来复刻台湾卤肉饭。\n原料 # 五花肉，鸡蛋，红洋葱/红葱头，大葱，蒜，干香菇，生抽，老抽，胡椒粉，黄冰糖/白糖\n准备 # 干香菇提前洗干净，然后泡水，等香菇泡软了，取出香菇，切成小丁备用，注意泡香菇的水不要倒掉，后续卤肉可以用 德国超市五花肉不算常见，有的超市没有卖，可以去 kaufland, rewe 和 edeka 这些超市，选择 schweinebauch 即可。五花肉注意看肉皮有没有猪毛，如果不干净，直接把猪皮去掉再使用，或者把锅烧热，烫一下猪皮。五花肉先切片，再根据个人喜好切成细条或者切成小丁 红洋葱切成丝，大葱取一些葱白切成丝，大蒜切成蒜末。 制作过程 # 煮鸡蛋 # 锅内烧水，水开后放入鸡蛋，煮八分钟即可。到时间取出鸡蛋，放入冷水降温备用。\n炸红洋葱 # 锅中加入稍微多一点油，中小火，等到油没有完全热，就可以放入大部分切好的红洋葱，注意要不断搅拌，放置洋葱被炸焦变苦，等洋葱变成金黄，即可关火，把洋葱捞出，沥干油备用。\n炒五花肉 # 另起锅，注意不用加油，直接放入五花肉，放入剩下的红洋葱，大葱，蒜末，不断翻炒五花肉，把五花肉水气炒干，一直到炒出猪肉里面的油脂，这时猪肉开始冒比较大的泡，可以加入适量的生抽，五香粉，胡椒粉，加入黄冰糖，继续翻炒，等到肉颜色开始变深，五花肉就差不多炒好了。如果猪肉油脂比较多，到后面析出的猪油太多，可以舀出来放到碗中以后使用，否则做出来的卤肉饭太油腻。\n炖煮 # 锅中加入泡香菇的水，水量没过肉一些即可，加入炸好的红洋葱，加入切好的香菇粒，搅拌均匀，根据颜色可以补一些老抽调色，卤肉饭颜色深一些卖相会比较好。根据咸淡，可以适当放一些食盐。最后还需要放入之前煮的鸡蛋，直接剥皮放入即可。\n中小火炖煮一个小时，如果想要软烂，就加长炖煮的时间，注意看水分，不要烧干了，等水分不多了，最后收汁即可。\n参考 # 老饭骨卤肉饭：https://youtu.be/RRgDVvskHIM?si=9Qbsz5LMe8CNHxd2 ","date":"22 September 2023","externalUrl":null,"permalink":"/2023/09/22/taiwan_lu_rou_fan/","section":"Posts","summary":"\u003cp\u003e本次来复刻台湾卤肉饭。\u003c/p\u003e","title":"在德国做台湾卤肉饭","type":"posts"},{"content":"","date":"20 September 2023","externalUrl":null,"permalink":"/tags/fastapi/","section":"Tags","summary":"","title":"FastAPI","type":"tags"},{"content":"Some notes on developing a web application with FastAPI.\nTesting # FastAPI provides a fastapi.testclient module to help us test the application.\n# content of application.py from fastapi import FastAPI app = FastAPI() @app.get(\u0026#34;/\u0026#34;) def index(): return {\u0026#39;msg\u0026#39;: \u0026#39;hello world!\u0026#39;} You can test the endpoints with TestClient class from testclient module.\n# content of test_application.py from application import app from fastapi.testclient import TestClient from fastapi import status client = TestClient(app) def test_root(): response = app.get(\u0026#39;/\u0026#39;) assert response.status_code == status.HTTP_200_OK assert response.json() == {\u0026#39;msg\u0026#39;: \u0026#39;hello world!\u0026#39;} Then you can test your application with pytest:\npytest . ref:\nhttps://fastapi.tiangolo.com/tutorial/testing/ Generate OpenAPI specification # The app we create using FastAPI has a openapi() method. Under the hood, it is calling the get_openapi() method from the module fastapi.openapi.utils.\nWe can override this method to customize the OpenAPI schema.\n# content of application.py from fastapi import FastAPI from fastapi.openapi.utils import get_openapi app = FastAPI() @app.get(\u0026#34;/\u0026#34;) def index(): return {\u0026#39;msg\u0026#39;: \u0026#34;hello world\u0026#34;} def custom_openapi(): if app.openapi_schema: return app.openapi_schema openapi_schema = get_openapi( title=\u0026#34;My Awesome Application\u0026#34;, version=app.version, contact={ \u0026#34;name\u0026#34;: \u0026#34;Your Name\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;your_name@host.com\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://www.example.com\u0026#34; }, openapi_version=app.openapi_version, summary=\u0026#34;This implements my awesome application with fastAPI\u0026#34;, description=\u0026#34;\u0026#34;\u0026#34; some long description about your application. \u0026#34;\u0026#34;\u0026#34;, routes=app.routes, ) app.openapi_schema = openapi_schema return app.openapi_schema app.openapi = custom_openapi Then if you want to generate the OpenAPI spec, it is easy:\n# content of generate_openapi_spec.py import json from application import app with open(\u0026#39;path/to/openapi.json\u0026#39;, \u0026#39;w\u0026#39;) as f: json.dump(app.openapi(), indent=4) ref:\ngenerate OpenAPI programmatically: https://github.com/tiangolo/fastapi/discussions/7690 https://fastapi.tiangolo.com/how-to/extending-openapi/ ","date":"20 September 2023","externalUrl":null,"permalink":"/2023/09/20/fastapi-testing-and-openapi-spec/","section":"Posts","summary":"\u003cp\u003eSome notes on developing a web application with FastAPI.\u003c/p\u003e","title":"FastAPI testing and OpenAPI doc generation","type":"posts"},{"content":"","date":"20 September 2023","externalUrl":null,"permalink":"/tags/openapi/","section":"Tags","summary":"","title":"OpenAPI","type":"tags"},{"content":"The Databricks cluster is using UTC as the default timezone. So when you run some time-related code, the displayed time is not the local time, which is not ideal. In this post, I want to share how to change the timezone setting for Databricks cluster.\nChange the system timezone # In the notebook cell, run the following to check what Linux system Databricks is using:\n%sh lsb_release -a It shows the underlying system is Ubuntu. On Ubuntu, we can use timedatectl command line tool to change the timezone.\nList timezones:\n%sh timedatectl list-timezones Pick a timezone we want:\n%sh timedatectl set-timezone Asia/Shanghai Note the above command does not impact the timezone setting of spark, since spark has already been started.\nref:\nchange timezone Ubuntu: https://askubuntu.com/a/594186/768311 Change timezone for databricks spark # For the current session # If you only want to set the timezone for current spark session, just run the following statement:\nspark.conf.set(\u0026#39;spark.sql.session.timeZone\u0026#39;, \u0026#39;Asia/Shanghai\u0026#39;) The explanation for spark.sql.session.timeZone:\nThe ID of session local timezone in the format of either region-based zone IDs or zone offsets. Region IDs must have the form \u0026lsquo;area/city\u0026rsquo;, such as \u0026lsquo;America/Los_Angeles\u0026rsquo;. Zone offsets must be in the format \u0026lsquo;(+|-)HH\u0026rsquo;, \u0026lsquo;(+|-)HH: mm\u0026rsquo; or \u0026lsquo;(+|-)HH:mm:ss\u0026rsquo;, e.g \u0026lsquo;-08\u0026rsquo;, \u0026lsquo;+01:00\u0026rsquo; or \u0026lsquo;-13:33:33\u0026rsquo;. Also \u0026lsquo;UTC\u0026rsquo; and \u0026lsquo;Z\u0026rsquo; are supported as aliases of \u0026lsquo;+00:00\u0026rsquo;. Other short names are not recommended to use because they can be ambiguous.\nThen you can run display(spark.sql(\u0026quot;select current_timezone()\u0026quot;)) in Databricks notebook cell to verify the change. However, if you create a new notebook using the same cluster, the timezone setting does not persist.\nref:\nspark configuration: https://spark.apache.org/docs/latest/configuration.html#runtime-sql-configuration set default timezone databricks: https://stackoverflow.com/a/68268838/6064933 use different timezone for spark session: https://stackoverflow.com/a/68957356/6064933 In the cluster config # In the Advanced options section of cluster setting page, under Spark tab, you can add the following config:\nspark.sql.session.timeZone Asia/Shanghai This will make sure every notebooks that attached to this cluster has the correct timezone setup.\ndatabricks cluster init script # You can also set up the timezone in init script for the cluster. Just add someting like the following to the cluster init script:\ntimedatectl set-timezone Asia/Shanghai Precedence of different settings # The precedence of setting up timezone of the above three methods:\nsetting in notebook session \u0026gt; cluster config \u0026gt; init script ref:\nwhat are init script: https://learn.microsoft.com/en-us/azure/databricks/init-scripts/ cluster-scope init script: https://learn.microsoft.com/en-us/azure/databricks/init-scripts/cluster-scoped ","date":"15 September 2023","externalUrl":null,"permalink":"/2023/09/15/databricks-spark-change-timezone/","section":"Posts","summary":"\u003cp\u003eThe Databricks cluster is using UTC as the default timezone.\nSo when you run some time-related code, the displayed time is not the local time, which is not ideal.\nIn this post, I want to share how to change the timezone setting for Databricks cluster.\u003c/p\u003e","title":"Change Timezone in Databricks Spark","type":"posts"},{"content":"In my previous post, I shared how to profile a single function using line_profiler. In this post, I want to share how to profile Python script/module and visualize the profile stat to pinpoint the slow part of the code.\nGenerate the raw profiling stat # In Python, we can use cProfile to generate the raw profile result:\npython -m cProfile -o {script_name}.prof {your_script}.py [script_argument] The -o options tells cProfile to generate a profile stat file, which is in binary format and not human readable. In order to interpret the profiling stat easily, we need to install some tools to visualize the result.\nstatic profile graph generation # flameprof # flameprof can generate a flame graph in SVG format. It is not actively maintained anymore.\npip install flameprof flameprof input.prof \u0026gt; output.svg gprof2dot # gprof2dot can generate a directed call graph for your script with their running time.\npip install gprof2dot gprof2dot -f pstats input.prof | dot -Tsvg -o output.svg interactive profile graph generation # snakeviz # snakeviz can also generate flamegraph from cProfile stat. It also has great interactive UI to explore the profiling result.\npip install snakeviz snakeviz input.prof tuna # Tuna is like snakeviz, but it claims to solve some of the limitation of snakeviz. The UI is less polished compared to snakeviz, though.\nPy-spy # py-spy can work with speedscope to generate flamegraph.\npip install py-spy # on macOS, needs sudo to run py-spy sudo py-spy record --format speedscope -r 500 -F -o output.speedscope python some_script.py chown -R {your-user-name} output.speedscope # use speedscope to open the file, https://www.speedscope.app/ py-spy can also profile the running program without interrupting it.\npyinstrument # pyinstrument is another tool you can use to generate profiling graph. You can directly show the result in terminal:\npip install pyinstrument pyinstrument your_script.py You can also generate other output format:\npyinstrument -r html your_script.py # or generate speedscope file, then inspect with speedscope pyinstrument -r speedscope your_script.py references # https://docs.python.org/3/library/profile.html flame graph: https://www.youtube.com/watch?v=6uKZXIwd6M0 https://roman.pt/posts/python-performance-profiling/ ","date":"12 September 2023","externalUrl":null,"permalink":"/2023/09/12/python_profiling_visualization/","section":"Posts","summary":"\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2020/11/06/profile_python_line_profiler/\" target=\"_blank\"\u003eprevious post\u003c/a\u003e, I shared how to profile a single function using line_profiler.\nIn this post, I want to share how to profile Python script/module and visualize the profile stat to pinpoint the slow part of the code.\u003c/p\u003e","title":"How to Profile Your Python Script/Module","type":"posts"},{"content":"","date":"12 September 2023","externalUrl":null,"permalink":"/tags/profiling/","section":"Tags","summary":"","title":"Profiling","type":"tags"},{"content":"家常少油版本茄子肉沫制作。\n材料 # 长茄子，猪肉沫（最好有肥有瘦，否则太干），青椒，大蒜，姜，红洋葱，耗油，黄豆酱，干黄酱，老抽\n制作过程 # 材料准备 # 青椒切片，姜切沫，大蒜切沫，洋葱切丝，取适量耗油、黄豆酱，干黄酱加水搅拌均匀调个碗汁 如果不是猪肉沫，需要猪肉切沫 炒肉沫 # 锅内加入油，油热加入猪肉沫翻炒，加入切好的洋葱，姜沫，部分蒜沫，继续翻炒，加入适量料酒或者白酒，一直翻炒，加入适量老抽上色，翻炒直到把水汽炒干，肉沫开始变得轻盈，盛出备用\n茄子制作 # 锅内加入少量的油，长茄子掰成段放进去，一定要中小火（如果是 6 级，用 level 2 或者 3 即可），盖上锅盖煎三分钟，然后开盖把茄子翻面，再煎三分钟\n完成 # 此时茄子到了一捣就碎的程度，倒入炒好的肉沫，翻炒，加入青椒片，继续翻炒，加入调的碗汁，水不够加水，没过茄子差不多，中小火煮一下，等水分少了以后，加入剩下的蒜末，搅拌均匀，待水分快干时关火。\n","date":"9 September 2023","externalUrl":null,"permalink":"/2023/09/09/eggplant_with_minced_meat/","section":"Posts","summary":"\u003cp\u003e家常少油版本茄子肉沫制作。\u003c/p\u003e","title":"菜谱：茄子肉沫","type":"posts"},{"content":"TL;DR: Lazy.nvim is amazing. It is easy to switch and reduce your startup time immensely. Just try it!\nI think Packer.nvim has been a revolutionary plugin manager after nvim 0.5. It introduces a lot of lazy loading techniques to speed up the startup process of Neovim.\nBackground and history # I migrated from vim-plug to Packer.nvim in July 2021 and haven been happily using it since. The advanced lazy-loading reduced my startup time to around 250ms.\nHowever, packer does have its own issues:\nIt introduces the packer_compiled.lua file. Each time you made changes to packer config, you need to run Packer Compile or Packer Sync to sync your changes. This is error-prone and not user-friendly, especially for novice users. The Lazy loading mechanisms provided by Packer is somewhat complicated. There are settings such as cond, cmd, key, ft to control the plugin lazy loading. At the beginning of this year (2023), the renowned plugin author folke introduced Lazy.nvim1, which quickly gained the attention of Neovim users and has been widely adopted.\nSince this year, packer hasn\u0026rsquo;t been actively maintained anymore, presumably due to the introduce of Lazy.nvim. Not too long ago, Packer has officially announced that it is no longer maintained. This is the last straw that prompts me to try Lazy.nvim.\nMigrating from Packer to Lazy.nvim # In Lazy.nvim, each plugin has a plugin spec, which specifies how you want to install the plugin and other conditions.\nSimple changes # The documentation of Lazy has a section on migrating from Packer.nvim: https://github.com/folke/lazy.nvim#packernvim. It mainly deals with some key changes for the Lazy plugin spec.\nLazy-loading events # Lazy.nvim provides a special autocmd event called VeryLazy. Basically, you can use VeryLazy for all plugins that do not require immediate use after Nvim startup. However, for some plugins, setting the Lazy loading events to VeryLazy leads to issues. After nvim startup, these plugins do not work properly for me:\nandymass/vim-matchup: We need to use BufRead as the event. akinsho/bufferline.nvim: If we use VeryLazy for bufferline.nvim, the tabline can not be shown. I have to use BufEnter event as the trigger. nvim-cmp and nvim-lspconfig: The lsp can not be attached to the current buffer if we use VeryLazy. As a result, nvim-cmp can not auto-complete using the nvim-lsp source. I changed the event to { 'BufRead', 'BufNewFile' }, and it works. Conditional installation # Previously when I use Packer, if I want to install a plugin based on some condition, I need to wrap the use{} statement inside the install condition:\nif vim.g.is_mac then use { \u0026#34;nvim-treesitter/nvim-treesitter\u0026#34;, ... } end For Lazy.nvim, we can use the enabled key from the plugin spec to control the installation condition, some thing like this:\n-- only install nvim-tree on macOS { \u0026#34;nvim-treesitter/nvim-treesitter\u0026#34;, enabled = function() if vim.g.is_mac then return true end return false end, ... }, Multi-level dependencies? # If plugin A depends on plugin B (A needs to be loaded after B, since A needs some functions from B), and plugin B depends on plugin C. In Packer, you would write something like this:\nuse { \u0026#39;A\u0026#39;, after = \u0026#39;B\u0026#39; } use { \u0026#39;B\u0026#39;, after = \u0026#39;C\u0026#39; } use { \u0026#39;C\u0026#39; } In Lazy.nvim, I am not sure how to express this?\n{ \u0026#39;B\u0026#39;, dependencies = { \u0026#39;A\u0026#39; } }, { \u0026#39;C\u0026#39;, dependencies = { \u0026#39;B\u0026#39; } }, { \u0026#39;A\u0026#39; } Not sure if this is the correct way to do this in Lazy.nvim?\nLazy vs Packer # After switching to Lazy.nvim, even without excessive optimization, my startup time has been decreased to around 40-70ms. Compared to previous startup time of 250ms by Packer.nvim, lazy.nvim is truly amazing.\nLazy.nvim also has a beautiful and feature-rich UI compared to the more primitive Packer UI. You can install, update, sync, profile plugins startup time with ease.\nFor anymore interested, you can check my current Lazy.nvim config here.\nReferences # Migrate from Packer to Lazy nvim: https://www.youtube.com/watch?v=aqlxqpHs-aQ https://www.reddit.com/r/neovim/comments/107bd3d/introducing_lazyvim/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 September 2023","externalUrl":null,"permalink":"/2023/09/02/from_packer_to_lazy_nvim/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eTL;DR: Lazy.nvim is amazing. It is easy to switch and reduce your startup time immensely. Just try it!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI think \u003ca href=\"https://github.com/wbthomason/packer.nvim\" target=\"_blank\"\u003ePacker.nvim\u003c/a\u003e has been a revolutionary plugin manager after nvim 0.5.\nIt introduces a lot of lazy loading techniques to speed up the startup process of Neovim.\u003c/p\u003e","title":"Migrating from Packer.nvim to Lazy.nvim","type":"posts"},{"content":"","date":"2 September 2023","externalUrl":null,"permalink":"/categories/nvim/","section":"Categories","summary":"","title":"Nvim","type":"categories"},{"content":"","date":"2 September 2023","externalUrl":null,"permalink":"/tags/plugin/","section":"Tags","summary":"","title":"Plugin","type":"tags"},{"content":"To extract pdf pages from several files, we can use the open source tool qpdf.\nFirst we can install qpdf using homebrew:\nbrew install qpdf Suppose you want to extract page 1-2 from A.pdf, page 1 from B.pdf and page 3-4 from C.pdf, you can run the following command:\nqpdf --empty --pages A.pdf 1-2 B.pdf 1 C.pdf 3-4 -- output.pdf --empty means there is no input pdf, we are trying to produce a new PDF from existing ones. Between --page and final --, we can specify multiple PDF files with range, password info in this format:\nfilename [--password=password] [page-range] Both password and page-range is optional. If you don\u0026rsquo;t specify the page range, it will take the whole pdf. For more details, run the following command on command line:\nqpdf --help=page-selection References # https://qpdf.readthedocs.io/en/stable/overview.html How can I extract a page range / a part of a PDF: https://askubuntu.com/a/672001/768311 ","date":"24 August 2023","externalUrl":null,"permalink":"/2023/08/24/extract_pdf_macos/","section":"Posts","summary":"\u003cp\u003eTo extract pdf pages from several files, we can use the open source tool \u003ca href=\"https://github.com/qpdf/qpdf\" target=\"_blank\"\u003eqpdf\u003c/a\u003e.\u003c/p\u003e","title":"How to Extract PDF file on macOS","type":"posts"},{"content":"","date":"24 August 2023","externalUrl":null,"permalink":"/categories/mac/","section":"Categories","summary":"","title":"Mac","type":"categories"},{"content":"","date":"24 August 2023","externalUrl":null,"permalink":"/tags/pdf/","section":"Tags","summary":"","title":"PDF","type":"tags"},{"content":"","date":"1 August 2023","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"In post, I want to summarize the complete steps to deploy a demo web service implemented with FastAPI in Docker container.\nCreate the service # Preparations # First, we can create the simple project and a Python virtual environment:\nmkdir fastapi-hello-world cd fastapi-hello-world # create the virtual environment python -m venv venv # activate the virutal env source venv/bin/activate Install all the packages we need for the development:\npip install fastapi uvicorn FastAPI is the web framework and Uvicorn is used as the web server for handling requests.\nBuild the simple application # Create a file named application.py (the filename does not matter):\nfrom fastapi import FastAPI app = FastAPI() @app.get(\u0026#34;/\u0026#34;) def greet(): return {\u0026#34;status\u0026#34;: \u0026#34;ok\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;hello world!\u0026#34;} You can run it locally to make sure that it works:\nuvicorn application:app --host 0.0.0.0 --port 1234 For --host option, we use 0.0.0.0, which tells the server to accept connection from anywhere, not just the localhost. Without --host 0.0.0.0, you can only request this service using localhost. This is especially important when we later dockerize the application. Without the --host option, you can not request this service in your host computer or other network.\nThe --port option specifies the port that this service will listen to. If you do not specify it, the default will be port 8000.\nTo avoid typing the command, we can create a start_service.sh script to start the service:\nuvicorn application:app --host 0.0.0.0 --port 1234 Dockerize the service # Generate requirements.txt # We need to create a requirements.txt file for the dependencies:\npip freeze \u0026gt; requirements.txt create Dockerfile # The Docker file looks like this:\nFROM python:3.10-slim WORKDIR /app COPY ./requirements.txt /app COPY ./ /app RUN pip install --no-cache-dir -r requirements.txt EXPOSE 1234 CMD [\u0026#34;/bin/bash\u0026#34;, \u0026#34;start_service.sh\u0026#34;] Do not use only EXPOSE to try to expose an internal port, it does not work. The official doc about EXPOSE is clear on this:\nThe EXPOSE instruction does not actually publish the port. It functions as a type of documentation between the person who builds the image and the person who runs the container, about which ports are intended to be published. To actually publish the port when running the container, use the -p flag on docker run to publish and map one or more ports, or the -P flag to publish all exposed ports and map them to high-order ports.\nSo we should use -p to map the internal port to port in the host machine.\nBuild docker image and run # To build the image, run:\ndocker build -t fastapi-hello-world . # for example, docker build -t hello-world . It will build the image based on the Dockerfile.\nTo start the web service, we can run the following command:\ndocker run -p 1234:1234 --rm --name hello-world fastapi-hello-world Then you can request this service in your browser using http://127.0.0.1:1234.\nThe service cannot be stopped by using Ctrl-C1. We can use docker stop to stop the container instead:\ndocker stop hello-world references # https://www.youtube.com/watch?v=2a5414BsYqw Adding -it option to docker run can also solve this issue, also discussed here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"1 August 2023","externalUrl":null,"permalink":"/2023/08/01/fastapi-app-deployment-docker/","section":"Posts","summary":"\u003cp\u003eIn post, I want to summarize the complete steps to deploy a demo web service implemented with FastAPI in Docker container.\u003c/p\u003e","title":"How to Deploy Fastapi Application with Docker","type":"posts"},{"content":"","date":"25 July 2023","externalUrl":null,"permalink":"/tags/font/","section":"Tags","summary":"","title":"Font","type":"tags"},{"content":"When I upgrade wezterm from April release to July release, I noticed that some of the unicode icons in my neovim config are shown as box.\nCause # I checked the wezterm repo and it introduced some breaking changes for handling Nerd Fonts in this commit. This adjustment is needed to deal with the breaking changes in Nerd Fonts v3.0.0.\nThe code points for some icons is changed. The complete list can be found in this comment. You can replace the old obsolete icon manually based on the translation table, or you can use nerdfix to help you accelerate the process.\nSolution/Fix # nerdfix check /path/to/your/file/with/nerd-icons It will indicate the obsolete icons/characters in your file and point out possible replacements. Inside wezterm, you can press Ctrl + Shift + U to invoke the wezterm character finder to find good replacement.\nYou can also use nerdfix fix /path/to/your/file/with/nerd-icons to fix the issue interactively.\nReferences # wezterm debug font display issue: https://wezfurlong.org/wezterm/troubleshooting.html#debugging-font-display wezterm trouble shooting fonts: https://wezfurlong.org/wezterm/config/fonts.html#troubleshooting-fonts wezterm Private Use Area support disappeared: https://github.com/wez/wezterm/issues/3854 ","date":"25 July 2023","externalUrl":null,"permalink":"/2023/07/25/wezterm_icon_missing/","section":"Posts","summary":"\u003cp\u003eWhen I upgrade wezterm from \u003ca href=\"https://github.com/wez/wezterm/releases/tag/20230408-112425-69ae8472\" target=\"_blank\"\u003eApril release\u003c/a\u003e to \u003ca href=\"https://github.com/wez/wezterm/releases/tag/20230712-072601-f4abf8fd\" target=\"_blank\"\u003eJuly release\u003c/a\u003e,\nI noticed that some of the unicode icons in my neovim config are shown as box.\u003c/p\u003e","title":"Nerdfont Icon Missing after Wezterm Upgrade","type":"posts"},{"content":"","date":"25 July 2023","externalUrl":null,"permalink":"/tags/unicode/","section":"Tags","summary":"","title":"Unicode","type":"tags"},{"content":"","date":"22 July 2023","externalUrl":null,"permalink":"/tags/lsp/","section":"Tags","summary":"","title":"LSP","type":"tags"},{"content":"TL;DR: my config for pylsp can be found here.\nIn this post, I would like to share my latest setup for Pylsp in Neovim.\nInstallation # pylsp install: pip install \u0026quot;python-lsp-server[all]\u0026quot; 3rd party plugins: python-lsp-isort: pip install python-lsp-isort pylsp-mypy: pip install pylsp-mypy pylsp-black: pip install python-lsp-black I also tried with pylsp-rope, but it works like sh*t, so I won\u0026rsquo;t waste my time on it.\nNeovim lsp configuration # Use your favorite plugin manager to install nvim-lspconfig. Here is my configuration for nvim-lsp with the help of nvim-lspconfig.\nlspconfig = require(\u0026#34;lspconfig\u0026#34;) lspconfig.pylsp.setup { on_attach = custom_attach, settings = { pylsp = { plugins = { -- formatter options black = { enabled = true }, autopep8 = { enabled = false }, yapf = { enabled = false }, -- linter options pylint = { enabled = true, executable = \u0026#34;pylint\u0026#34; }, pyflakes = { enabled = false }, pycodestyle = { enabled = false }, -- type checker pylsp_mypy = { enabled = true }, -- auto-completion options jedi_completion = { fuzzy = true }, -- import sorting pyls_isort = { enabled = true }, }, }, }, flags = { debounce_text_changes = 200, }, capabilities = capabilities, } Note that for some of the plugins, you can pass other configuration to the execute, but I prefer to control their behavior using in their configuration files, not using nvim-lsp.\nref:\npython-lsp configuration: https://github.com/python-lsp/python-lsp-server/blob/develop/CONFIGURATION.md Configuration pylint and black in pyproject.toml # pyproject.toml # For project-specific settings, it is convenient to configure all this in the file pyproject.toml.\nRef:\nlearn toml: https://learnxinyminutes.com/docs/toml/ Pylint # Pylint recognizes configurations in pyproject.toml file. However, configuring pylint in pyproject.toml requires a bit understanding. First, we can generate a full pylint configuration for later reference:\npylint --generate-rcfile \u0026gt; pylintrc We can see that pylint configuration is separated into multiple sections (or table by TOML\u0026rsquo;s jargon). When we want to configure a certain option for Pylint, we must know its table in pylintrc. For example, suppose we want to set max-line-length to 100, first check which table it belongs to in the original pylintrc. After checking, we know it belongs to FORMAT table, then we can use either two confs in pyproject.toml:\n[tool.pylint.format] max-line-length = 100 or\n[tool.pylint.\u0026#39;FORMAT\u0026#39;] max-line-length = 100 Note that for values which are a list, we must use a list notation in pyproject.toml. For example, if we want to disable both missing-module-docstring and missing-function-docstring, we can write the config as this:\n[tool.pylint.\u0026#39;MESSAGES CONTROL\u0026#39;] disable = [\u0026#34;missing-module-docstring\u0026#34;, \u0026#34;missing-function-docstring\u0026#34;] The following also works:\n[tool.pylint.messages_control] disable = [\u0026#34;missing-module-docstring\u0026#34;, \u0026#34;missing-function-docstring\u0026#34;] In this case, the syntax is not the same as pylintrc, where you only need to separated the warnings with comma.\nAs another way, we can also use pylint --generate-toml-config to generate a copy of pylintrc options in toml format. This would be much easier for hand-picking the options that we want to change.\nThere are a lot of examples on using pylint in pyproject.toml in GitHub, e.g., in AiiDA, jax, example conf from pylint offical.\nref:\npylint\u0026rsquo;s support for pyproject.toml: https://pylint.pycqa.org/en/latest/user_guide/usage/run.html#command-line-options handle rich types in TOML: https://github.com/pylint-dev/pylint/commit/489508cc68705cf07e9fea8acd2b449ea88aa962 how to decide what option belongs to which section: https://github.com/pylint-dev/pylint/issues/3181#issuecomment-846129966 search pylint config in setup.cfg and pyproject.toml: https://github.com/pylint-dev/pylint/issues/617#issuecomment-541474172 Black # Configuration can be inside pyproject.toml, the section of black is [tool.black]. For example, your configuration may look like the following:\n[tool.black] line-length = 100 You can also check how the black project configures itself here.\nref:\nhttps://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#what-on-earth-is-a-pyproject-toml-file Make Pylsp work inside a virtual env # In my computer, pylsp, mypy, black, pylint and isort are all installed globally. I do not want to install all of these tools separately for each virtual env I use. For black and isort, they seem to work fine without any additional settings.\nFor Pylsp, there seem to be not much mature solution1. I experimented with different configuration and find what is working for me.\nChange PYTHONPATH # We can also update the PYTHONPATH variable to make the global pylint and mypy be aware of the packages installed inside the virtual environment. That is we can set variable to the package directory for the virtual environment:\nexport PYTHONPATH=$PYTHONPATH:/path/to/project/venv/lib/\u0026lt;python-version\u0026gt;/site-packages After this setup, pylint and mypy seem to work fine.\nref:\nhttps://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH\nChange config for individual tool # Pylint # For pylint installed globally, it can not recognize the packages installed inside the virtual environment, even if we are inside the virtual env. First, we can install pylint-venv in the global level (outside the virtual env):\npip install pylint-venv Then inside the pyproject.toml file for this project, we can configure a init-hook for pylint:\n[tool.pylint.main] init-hook =\u0026#34;\u0026#34;\u0026#34; try: import pylint_venv except ImportError: pass else: pylint_venv.inithook() \u0026#34;\u0026#34;\u0026#34; This seems to work pretty good to prevent pylint from complaining missing package errors.\nmypy # To use global mypy, we need to instruct mypy the python path inside the virtual environment.\n[tool.mypy] python_executable=\u0026#34;../venv/bin/python\u0026#34; Another way to do this is to directly change the options passed to mypy in neovim-lsp configuration:\nlocal venv_path = os.getenv(\u0026#39;VIRTUAL_ENV\u0026#39;) local py_path = nil -- decide which python executable to use for mypy if venv_path ~= nil then py_path = venv_path .. \u0026#34;/bin/python3\u0026#34; else py_path = vim.g.python3_host_prog end lspconfig.pylsp.setup { on_attach = custom_attach, settings = { pylsp = { plugins = { -- formatter options black = { enabled = true }, autopep8 = { enabled = false }, yapf = { enabled = false }, -- linter options pylint = { enabled = true, executable = \u0026#34;pylint\u0026#34; }, ruff = { enabled = false }, pyflakes = { enabled = false }, pycodestyle = { enabled = false }, -- type checker pylsp_mypy = { enabled = true, overrides = { \u0026#34;--python-executable\u0026#34;, py_path, true }, report_progress = true, live_mode = false }, -- auto-completion options jedi_completion = { fuzzy = true }, -- import sorting isort = { enabled = true }, }, }, }, flags = { debounce_text_changes = 200, }, capabilities = capabilities, } ref:\nmypy and pyproject.toml: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file mypy and virtual env: https://github.com/python/mypy/issues/7360#issuecomment-522255927 pylsp-mypy configuration: https://github.com/python-lsp/pylsp-mypy#configuration References # install language server globally or in virtual env: https://www.reddit.com/r/emacs/comments/13ezfq9/python_do_you_install_the_language_server/ https://www.reddit.com/r/neovim/comments/137u0z8/general_python_lspcompletion_advice/ For pyright, there seems to be a simple solution using pyrightconfig.json, as discussed here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 July 2023","externalUrl":null,"permalink":"/2023/07/22/neovim-pylsp-setup/","section":"Posts","summary":"\u003cp\u003eTL;DR: my config for pylsp can be found \u003ca href=\"https://github.com/jdhao/nvim-config/blob/4d8ef868ad0ef7f6433d91332aa6649186d9a2fb/lua/config/lsp.lua\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn this post, I would like to share my latest setup for Pylsp in Neovim.\u003c/p\u003e","title":"Pylsp setup for Neovim in 2023","type":"posts"},{"content":"In HTTP request, same query parameter with multiple values are allowed. For example, for query parameter brand, the query string looks like this: brand=foo\u0026amp;brand=bar. How to parse value of this parameter to a list in FastAPI? There are several different ways.\nUsing Type annotation and Query # If you already know which parameter is going to have multiple values, you can use the following method (based on discussion here):\nfrom fastapi import FastAPI, Request, Query app = FastAPI() @app.get(\u0026#39;/multi_value\u0026#39;) def multi_value(brand: List[str] = Query(default=None)): return {\u0026#34;brand\u0026#34;: brand} In this way, the query parameter brand will be known by FastAPI to have a list of values. If you access the API like this: http://127.0.0.1:8000/multi_value?brand=foo\u0026amp;brand=bar, you can get correct response:\n{\u0026#34;brand\u0026#34;:[\u0026#34;foo\u0026#34;,\u0026#34;bar\u0026#34;]} Deal with the request directly # If you do not know which parameter is going to have multiple values, you can also directly handle it with using the request object from FastAPI.\n@app.get(\u0026#39;/foo\u0026#39;) def foo(request: Request): query_params = request.query_params params_dict = {} for k in query_params.keys(): params_dict[k] = query_params.getlist(k] return params_dict If a query parameter can appear multiple time in the query, we shouldn\u0026rsquo;t use query_params.get() to get its values, because it will only return the last value. Similarly, query_params.items() and query_params.values() also only contain the last value for the query parameter.\nAnother way is to use parse_qs from urllib to parse the query string manually.\n@app.get(\u0026#39;/foo\u0026#39;) def foo(request: Request): # `request.url` is the complete URL for the HTTP request. # `request.url.query` contains only the query part from the whole URL. For example, if your complete # URL is http://127.0.0.1:8000/search2/foo?q=schuhe\u0026amp;color=blue\u0026amp;color=black, then the value for # request.url.query would be \u0026#34;q=schuhe\u0026amp;color=blue\u0026amp;color=black\u0026#34; params_dict = parse_qs(request.url.query, keep_blank_values=True) return params_dict parse_qs() can handle parameter with several values correctly. It has a parameter keep_blank_values, if it is set to True, query parameter with no value will also be kept in the parsed result, and the corresponding value is set to an empty string.\n","date":"13 July 2023","externalUrl":null,"permalink":"/2023/07/13/fastapi-query-param-with-multiple-value/","section":"Posts","summary":"\u003cp\u003eIn HTTP request, same query parameter with multiple values are allowed.\nFor example, for query parameter \u003ccode\u003ebrand\u003c/code\u003e, the query string looks like this: \u003ccode\u003ebrand=foo\u0026amp;brand=bar\u003c/code\u003e.\nHow to parse value of this parameter to a list in FastAPI?\nThere are several different ways.\u003c/p\u003e","title":"How to Parse Query Param With Multiple Values in FastAPI","type":"posts"},{"content":"","date":"13 July 2023","externalUrl":null,"permalink":"/tags/http/","section":"Tags","summary":"","title":"HTTP","type":"tags"},{"content":"本文总结简易版“土豆胡萝卜烧牛肉”做法。\n原料 # 原料：牛腩，土豆，胡萝卜，姜，大葱，大蒜，青椒，红椒，洋葱，干辣椒，黄酒/白酒，八角，桂皮，花椒 调料：老抽，蚝油，胡椒粉，盐，四川豆瓣酱\n原料准备 # 土豆洗干净去皮切成大一些的块，胡萝卜洗净切块。 姜切片，大蒜切片，青椒，红椒切片，洋葱切片，大葱少量切成段 桂皮一小段，八角两颗，少量花椒，干辣椒两个，有香叶也可以放点 牛腩肉先切条，再切成块，块不要太小，否则焯水炒了以后太小 制作过程 # 牛肉焯水 # 锅中加冷水，牛肉块冷水下锅，加入几片姜片，加入大葱段，加入少量白酒 中小火煮牛肉，保持水似开非开，及时撇去血沫，撇去血沫以后，可以再加一些冷水，重复三四次这个过程，直到把血沫清理干净 煮牛肉的汤不要倒掉，后续炖牛肉可以用到 炒制牛肉 # 炒锅内加入油，不用等油特别热，加入准备好的桂皮，八角，香叶，花椒，姜，洋葱片/大葱，干辣椒炒制 加入晾干水分的牛肉继续炒制，并加入适量白酒继续炒牛肉 加入一小勺豆瓣酱/甜面酱，继续炒牛肉，直至牛肉被豆瓣酱均匀上色 加入切好的青椒，红椒片，加入土豆块和胡萝卜块继续翻炒均匀 锅内加入刚才焯水时候剩下的牛肉汤，直到没过食材，大火烧开 水开以后，加入少量蚝油，适量的胡椒粉，加入少量老抽调颜色，根据咸淡加入适量的盐 电饭锅炖煮 # 把所有食材带汤转移到电饭锅炖煮 炖煮时间可以长一些，可以选择两个小时 参考 # 王刚土豆烧牛肉，https://www.youtube.com/watch?v=hdOn2XeLDrE 老饭骨红烧牛肉，https://www.youtube.com/watch?v=6M0b7zLQl8Q 回民炖牛肉：https://www.youtube.com/watch?v=ujDwKaw68KY ","date":"1 July 2023","externalUrl":null,"permalink":"/2023/07/01/beef_potatoo_carrot/","section":"Posts","summary":"\u003cp\u003e本文总结简易版“土豆胡萝卜烧牛肉”做法。\u003c/p\u003e","title":"菜谱：土豆胡萝卜烧牛肉","type":"posts"},{"content":"","date":"16 June 2023","externalUrl":null,"permalink":"/tags/zsh/","section":"Tags","summary":"","title":"Zsh","type":"tags"},{"content":"In this post, I want to share what I find about the Zsh startup files and their loading order in macOS.\nlogin and interactive shell # There are a lot of posts discussing what a login and interactive shell is. These two aspects are independent.\nIn different mode, zsh will source different startup files when it is started. In Zsh, to test if the shell is login shell, we can test login option:\nif [[ -o login ]]; then echo \u0026#39;yes\u0026#39; else echo \u0026#39;no\u0026#39; fi You can also use echo $0 and check if the first character in output is -.\nYou can exit login/non-login shell using exit. For the login shell, logout also works (it does not work for non-login shell).\nwezterm # In wezterm, every time we open a new tab, it will by default start a login shell using the $SHELL env variable. The way it does this is via prefixing argv0 with - when spawning the shell.\nIt is a standard way in Linux to check if the shell is a login shell. You can use echo $0 and check if the first character is -.\nref:\nhttps://wezfurlong.org/wezterm/config/launch.html#launching-programs wezterm commit, use -$SHELL to launch login shell, https://github.com/wez/wezterm/commit/bc0766396d76813961de85d7ef15979197f0bc97 Zsh startup file source order # According to man zsh (the section about STARTUP/SHUTDOWN FILES), the loading order of startup file is:\n/etc/zshenv $ZDOTDIR/.zshenv if login_shell: /etc/zprofile $ZDOTDIR/.zprofile endif if interactive_shell: /etc/zshrc $ZDOTDIR/.zshrc endif if login_shell: /etc/zlogin $ZDOTDIR/.zlogin endif When the shell exit or logout, then the following script:\n/etc/zlogout $ZDOTDIR/.zlogout For the login file, you can add something that is best done once for the login. For example, showing some greetings.\nFor the log out file, you can add some snippet to save the logout time:\nlogfile=\u0026#34;$HOME/logoutfile\u0026#34; if [[ -f $logfile ]] then echo \u0026#34;logging out: $(date)\u0026#34; \u0026gt;\u0026gt; $logfile else echo \u0026#34;logging out: $(date)\u0026#34; \u0026gt; $logfile fi These config files do not have to exist in the system at all. When you know their loading order, you can then customize based on your preference.\nOn macOS, the file /etc/zprofile is especially evil, it run a utility called path_helper, which changes the PATH variable in a weird way. You can also my other posts for the details.\nref:\nwhat goes where, zshenv, zprofile, zshrc, zlogin, https://apple.stackexchange.com/q/388622/285595 this post has good digram on shell startup: https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html zsh user guide (section 2.2 all the startup file): https://zsh.sourceforge.io/Guide/zshguide02.html#l6 ","date":"16 June 2023","externalUrl":null,"permalink":"/2023/06/16/zsh_startup_file/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share what I find about the Zsh startup files and their loading order in macOS.\u003c/p\u003e","title":"Zsh Startup Files in macOS","type":"posts"},{"content":"Recently, I met a strange issue related to Tmux. After open a tmux session, the PATH variable is changed and is different from outside tmux.\nThis strange behavior breaks my Python:\noutside tmux: python3 points to Python installed by Miniconda inside tmux: python3 points to Python3 installed by Apple The cause # The reason is that when you start a tmux session, it will start a shell (in the latest macOS, it is zsh by default) in login mode. So certain zsh config files are sourced again (the culprit is /etc/zprofile), which leads to messed up PATH variable. This is also caused by macOS\u0026rsquo;s special way to construct the PATH variable.\nThe content of /etc/zprofile is:\nif [ -x /usr/libexec/path_helper ]; then eval `/usr/libexec/path_helper -s` fi When zsh is used as a login shell, the file /etc/zprofile will be sourced. So when we run tmux command and it initialize a zsh shell, this file is source again, which messes up our PATH variable due to the behavior of path_helper.\nIn order to confirm this, we can do an experiment (credit here):\n\u0026gt; PATH=BEG:$PATH:END \u0026gt; echo $PATH # output: BEG:/opt/homebrew/Caskroom/miniconda/base/bin:/opt/homebrew/Caskroom/miniconda/base/condabin:/Users/hao/.local/share/zinit/polaris/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:END \u0026gt; source /etc/zprofile \u0026gt; echo $PATH # output: /usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:BEG:/opt/homebrew/Caskroom/miniconda/base/bin:/opt/homebrew/Caskroom/miniconda/base/condabin:/Users/hao/.local/share/zinit/polaris/bin:/opt/homebrew/bin:/opt/homebrew/sbin:END What path_helper does is to construct PATH from /etc/paths and /etc/path.d. Append the current PATH variable to the constructed PATH and remove the duplicated items: I think it is just looping through the item in the PATH variable and remove items that have appeared before.\nThis explains why unique item inside BEG:END structure is kept and duplicate items are removed.\nHow to prevent # One thing I see people do is to change /etc/zprofile, adding one line to empty PATH:\nif [ -x /usr/libexec/path_helper ]; then PATH=\u0026#34;\u0026#34; #empty the PATH eval `/usr/libexec/path_helper -s` fi For me, it is hacky. I do not want to change the system default settings.\nAnother method is to tell tmux to start a non-login shell instead via default-command option:\n# default command should be path to zsh executable on your system set -g default-command /bin/zsh If zsh is started as a non-login shell, /etc/zprofile won\u0026rsquo;t be sourced, so PATH is not changed. To check if we are running a login shell or not (zsh-only), run the following (source here):\nif [[ -o login ]]; then print yes else print no fi After this setup, to make sure it work, run killall tmux and exit your terminal and restart it again.\nReferences # does tmux sort PATH variable? https://superuser.com/q/544989/736190 prevent tmux from filling global PATH: https://stackoverflow.com/q/13058578/6064933 configure tmux to use zsh: https://unix.stackexchange.com/q/214068/221410 ","date":"12 June 2023","externalUrl":null,"permalink":"/2023/06/12/macos_path_changed_inside_tmux/","section":"Posts","summary":"\u003cp\u003eRecently, I met a strange issue related to Tmux.\nAfter open a tmux session, the \u003ccode\u003ePATH\u003c/code\u003e variable is changed and is different from outside tmux.\u003c/p\u003e","title":"PATH Variable Changed inside Tmux on macOS?","type":"posts"},{"content":"","date":"12 June 2023","externalUrl":null,"permalink":"/tags/shell/","section":"Tags","summary":"","title":"Shell","type":"tags"},{"content":"","date":"12 June 2023","externalUrl":null,"permalink":"/tags/tmux/","section":"Tags","summary":"","title":"Tmux","type":"tags"},{"content":"In this post, I want to share how you can work effectively with JSON file inside Neovim.\nFormat JSON file # Use Python json module # If you have Python installed, you can use the following command to format JSON file:\n:%!python -m json.tool Use jq # Otherwise, we need to install jq for this:\nbrew install jq Then open the JSON file and run the following command:\n:%!jq . In the above command, % means the whole file, !{some-command} will run the text in the external some-command and write the output back to replace the original text. See also :help :range! inside neovim.\nDefine a command for this # We can also define a command to format JSON file:\ncommand! -range JSONFormat \u0026lt;line1\u0026gt;,\u0026lt;line2\u0026gt;!python -m json.tool Then you can call %JSONFormat to format the JSON file.\nFold JSON file # Use the syntax fold # We can fold JSON file with the old syntax way:\nset filetype=json syntax on set foldmethod=syntax Use nvim-treesitter # If you are using nvim and nvim-treesitter. You can also use treesitter to fold JSON files.\nConfig for nvim-treesitter:\nrequire(\u0026#34;nvim-treesitter.configs\u0026#34;).setup { ensure_installed = { \u0026#34;python\u0026#34;, \u0026#34;cpp\u0026#34;, \u0026#34;lua\u0026#34;, \u0026#34;vim\u0026#34;, \u0026#34;json\u0026#34; }, ignore_install = {}, -- List of parsers to ignore installing highlight = { enable = true, -- false will disable the whole extension disable = { \u0026#39;help\u0026#39; }, -- list of language that will be disabled }, } Make sure that JSON parser for treesitter is installed.\nThen create after/ftplugin/json.vim with following config:\nset foldmethod=expr set foldexpr=nvim_treesitter#foldexpr() Open a valid JSON file, you should be able to see the files are folded properly.\nReferences # use external commands to modify text in vim: https://vi.stackexchange.com/a/7189/15292 format JSON in vim: https://vi.stackexchange.com/q/16906/15292 vim JSON format: https://salferrarello.com/vim-json-format/ treesitter JSON fold setup: https://github.com/nvim-treesitter/nvim-treesitter/issues/1337#issuecomment-864205387 how to fold text in JSON: https://vi.stackexchange.com/q/10562/15292 ","date":"12 June 2023","externalUrl":null,"permalink":"/2023/06/12/neovim-json-file/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how you can work effectively with JSON file inside Neovim.\u003c/p\u003e","title":"Work with JSON File in Neovim","type":"posts"},{"content":"Databricks is centered around notebooks for doing a lot of works. As a result, it is often not obvious how to run or re-use code from another notebook or Python module. In this post, I want to share how to do this in the Databricks.\nRun/import code from another notebook # Suppose that we have the following notebook1:\nfoo = dbutils.widgets.get(\u0026#34;foo\u0026#34;) bar = dbutils.widgets.get(\u0026#34;bar\u0026#34;) result = foo + \u0026#39;\u0026amp;\u0026#39; + bar def show(): print(result) dbutils.notebook.exit(result) In another notebook, we have two ways to \u0026ldquo;run\u0026rdquo; the code in notebook1.\n%run command # We can use the %run magic to run the code in notebook1:\n%run ./path/to/notebook1 $foo=“hello” $bar=“world” The path of notebook1 is its relative path to the current notebook. We can give parameters to notebook1 via the \u0026lsquo;$\u0026rsquo; assignment. In notebook1, you can then retrieve the value via dbutils.notebook.get() method.\nIt will “import” the functions and variables from notebook1 to the current notebooks. So you can use those functions in your current notebook. In this sense, it it like from some_module import * in Python.\nusing dbutils.notebook.run() # We can also run notebook1 like this:\ndbutils.notebook.run(‘path/to/notebook1’, 30, {‘foo’: “fooVal”, ‘bar’: “barVal”}) The parameters for notebook1 is provided in the 3rd argument.\nThis will run notebook1 in a ephemeral job. No functions or variable from that notebook will be exposed to your current notebook.\nTo return results from called notebook, we can use dbutils.notebook.exit(“result_str”). This is rather limited, but it seems currently only string result is supported. You can be creative in how to interpret the returned string though, e.g., as the name of table.\nImport a Python module # Since Databricks runtime 11.3, we can import Python module in the workspace. Create a normal Python module like you often do, and you can then import that module in a notebook. It conforms better to the Python ideology of “explicit is better than implicit”.\nI create a demo directory test the feature, which has the following structure.\n. |____hello.py |____my-notebook |____utility | |____math_ops.py Content of math_ops.py:\ndef power(x, y): return x**y Content of hello.py:\nprint(\u0026#34;hello\u0026#34;) In the notebook my-notebook, we can run the following code without error:\nimport hello import utility.math_ops as m_op m_op.power(2, 3) autoreload # Since Databricks runtime 11.0, for the notebooks, it is using the Ipython kernel under the hood (source here). Note that like typical Ipython notebook, when you import a Python module, the module is not reloaded when there are changes to the module code by default. For example, if you add a new method or change method code for the module, it will not work.\nInstead, we need to load the autoreload extension for the notebook (also mentioned in the official doc):\n%load_ext autoreload %autoreload 2 To check the documentation of autoreload, you can run %autoreload?.\nIf you don\u0026rsquo;t want to the autoreload magic, to make your module update work, you have to manually detach and attach to the cluster.\nref:\nhttps://learn.microsoft.com/en-us/azure/databricks/files/workspace-modules#import-python-and-r-modules autoreload doc: https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html#autoreload Ipython reload module: https://stackoverflow.com/q/5364050/6064933 References # databricks notebook love hate relation: https://towardsdatascience.com/databricks-notebooks-a-love-hate-relationship-8f73e5b291fb difference between %run and dbutils.notebook.run(), https://community.databricks.com/s/question/0D53f00001GHVd5CAH/whats-the-difference-between-run-vs-dbutilsnotebookrun comparison of %run and dbutils.notebook.run(): https://learn.microsoft.com/en-gb/azure/databricks/notebooks/notebook-workflows#comparison-of-run-and-dbutilsnotebookrun share Python source file, https://learn.microsoft.com/en-gb/azure/databricks/notebooks/share-code https://medium.com/@YuhengD/best-practice-of-databricks-notebook-modulization-d2797dd29dd3 databricks widgets, https://learn.microsoft.com/en-gb/azure/databricks/notebooks/widgets ","date":"6 June 2023","externalUrl":null,"permalink":"/2023/06/06/databricks-run-import-code/","section":"Posts","summary":"\u003cp\u003eDatabricks is centered around notebooks for doing a lot of works.\nAs a result, it is often not obvious how to run or re-use code from another notebook or Python module.\nIn this post, I want to share how to do this in the Databricks.\u003c/p\u003e","title":"Running/importing Python code/module in Databricks","type":"posts"},{"content":"","date":"24 May 2023","externalUrl":null,"permalink":"/tags/agile/","section":"Tags","summary":"","title":"Agile","type":"tags"},{"content":"This is my learning notes for Agile and Scrum.\nNotes # Jira is just one of many tools or platforms for agile working approach.\nHierarchy: Topic —\u0026gt; Epic —\u0026gt; User Story —\u0026gt; tasks —\u0026gt; sub-tasks\nUser story is just a fancy and templated way to describe a feature for the product.\nStory points (a measure of the amount work, complexity and also uncertainty involved in a user story).\nThe scrum process: planning, building, testing, review, retrospective.\nMVP: In Agile development, it usually stands for minimum viable product.\ndifference between Sprint review and retrospective.\ntopic is different: review talks about the product, it will check the output of the sprint, and discuss how to make the product better, retrospective talks how to make the team work better people attending is different: in review, the stakeholders will also join, but in retrospective, only the team and PO attend the outcome: for review, the outcome is like what changes will be made to the product, what changes to make in the product backlog etc. but for retrospective, the outcome may be what changes to made to the team, what tools to add etc. to make the team work more efficiently. Relationship between PO (product owner) and the development team? # The Product Owner and Scrum Master participate on the team as a servant leader and peer to the rest of the team. The Product Owner has no authority over the Development Team. But this role represents stakeholders with a particular political “weight” in the organization\nExcerpt from https://medium.com/serious-scrum/the-product-owner-is-part-of-the-scrum-team-not-above-them-982b7ca8fca3.\nreferences # Jira and scrum https://www.youtube.com/watch?v=uM_m6EzMg3k what is scrum, very short and clear, https://www.youtube.com/watch?v=9TycLR0TqFA scrum in 10 mins, https://www.youtube.com/watch?v=XU0llRltyFM sprint review VS retrospective: https://www.youtube.com/watch?v=WB4mgF75uy4 agile software development MIT, https://www.youtube.com/watch?v=UxMpn92vGXs what is agile, https://www.youtube.com/watch?v=Z9QbYZh1YXY user story, https://www.youtube.com/watch?v=apOvF9NVguA scrum in a nutshell https://www.youtube.com/watch?v=L_sAo93ASTU agile product ownership in a nutshell, https://www.youtube.com/watch?v=502ILHjX9EE scrum in 20 min, https://www.youtube.com/watch?v=SWDhGSZNF9M Epic and user story, https://www.youtube.com/watch?v=ogV2r9579WI story points, https://www.youtube.com/watch?v=VsSaolMtkKU ","date":"24 May 2023","externalUrl":null,"permalink":"/2023/05/24/agile_scrum/","section":"Posts","summary":"\u003cp\u003eThis is my learning notes for \u003ca href=\"https://en.wikipedia.org/wiki/Agile_software_development\" target=\"_blank\"\u003eAgile\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Scrum_%28software_development%29\" target=\"_blank\"\u003eScrum\u003c/a\u003e.\u003c/p\u003e","title":"Agile and Scrum","type":"posts"},{"content":"","date":"24 May 2023","externalUrl":null,"permalink":"/tags/scrum/","section":"Tags","summary":"","title":"Scrum","type":"tags"},{"content":"","date":"24 May 2023","externalUrl":null,"permalink":"/categories/work/","section":"Categories","summary":"","title":"Work","type":"categories"},{"content":"本文总结简易版凉拌牛肉的做法。\n原料 # 牛肉，大葱/洋葱，姜，胡萝卜（没有可不放），白酒/料酒，青椒，蒜，花椒，朝天椒，生抽，醋，蚝油，白糖\n制作过程 # 卤牛肉 # 超市买的牛肉，直接冷水下锅，水开以后，焯水五分钟，然后把水倒掉，把牛肉上的血沫清洗干净。 重新起锅加入冷水，放入牛肉，然后加入切片的生姜，大葱段，胡萝卜，大火把水烧开，然后转中小火，煮一个小时。 一个小时后关火，让牛肉再浸泡一个小时，然后取出牛肉，放冰箱冷藏备用。 凉拌牛肉 # 把卤好的牛肉切成薄片 取 3-4 个大蒜切成蒜末，取小葱切成葱花，一根青椒切成碎，取 2 个朝天椒切段。 取小碗，放入切好的蒜末，葱花，青椒碎。 起锅加入植物油，量不要太多，油热以后加入朝天椒，加入干花椒，略微翻炒即可。 把热油泼在小碗中的蒜末葱花上，加入适量食盐，一点点白糖，加入生抽，醋，蚝油，拌匀。 将拌匀的料汁加入牛肉，然后搅拌均匀即可食用。 喜欢吃香菜的可以放一些香菜点缀。 参考 # 凉拌牛肉做法，https://www.youtube.com/watch?v=KFuoK805WTE ","date":"21 May 2023","externalUrl":null,"permalink":"/2023/05/21/cold_beef_with_sauce/","section":"Posts","summary":"\u003cp\u003e本文总结简易版凉拌牛肉的做法。\u003c/p\u003e","title":"菜谱：凉拌牛肉","type":"posts"},{"content":"In this post, I want to share some command line tools written in Rust, which are good alternatives to some of the original tools used in command line.\nexa: an alternative to ls use exa -F\nhttps://github.com/ogham/exa\nlsd: another alternative to ls use: lsd -F --icon=never\nhttps://github.com/Peltoche/lsd\nripgrep: a blazing fast grep tool https://github.com/BurntSushi/ripgrep\ndelta: a pager for git, diff and grep https://github.com/dandavison/delta\nbat: alternative to cat https://github.com/sharkdp/bat\nRef:\nhttps://zaiste.net/posts/shell-commands-rust/ https://towardsdatascience.com/awesome-rust-powered-command-line-utilities-b5359c38692 broot: alternative to tree https://github.com/Canop/broot\ntokei: alternative to cloc https://github.com/XAMPPRocky/tokei\nSimilarly, scc (but written in Go)\nhyperfine: commandline benchmark tool https://github.com/sharkdp/hyperfine\n","date":"15 May 2023","externalUrl":null,"permalink":"/2023/05/15/terminal_tool_alternative_written_in_rust/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share some command line tools written in Rust,\nwhich are good alternatives to some of the original tools used in command line.\u003c/p\u003e","title":"Awesome Command Line Tools Written in Rust","type":"posts"},{"content":"In this post, I summarize how to get or set a Databricks spark configuration/property.\nget the value for a specific setting/configuration # To get all configurations in Python:\nfrom pyspark.sql import SparkSession spark = SparkSession.builder.getOrCreate() all_conf = spark.sparkContext.getConf().getAll() This will show all the configurations available. To get the value for a specific conf, e.g., for \u0026lsquo;spark.databricks.clusterUsageTags.region\u0026rsquo;, use the following code instead:\nspark.conf.get(\u0026#34;spark.databricks.clusterUsageTags.region\u0026#34;) refs:\nget all spark conf: https://stackoverflow.com/a/45029640/6064933 get or set specific conf, https://kb.databricks.com/data/get-and-set-spark-config Check Databricks version # To check the Databricks runtime version, use the following code:\nfrom pyspark.sql import SparkSession spark = SparkSession.builder.getOrCreate() spark.conf.get(\u0026#34;spark.databricks.clusterUsageTags.sparkVersion\u0026#34;) ref:\ncheck databricks spark version: https://stackoverflow.com/q/53740967/6064933 Set the value for a configuration # To set a specific configuration for spark, we can use:\nspark.conf.set(\u0026#34;spark.sql.session.timeZone\u0026#34;, \u0026#34;Asia/Shanghai\u0026#34;) ","date":"13 May 2023","externalUrl":null,"permalink":"/2023/05/13/databricks-spark-get-set-conf/","section":"Posts","summary":"\u003cp\u003eIn this post, I summarize how to get or set a Databricks spark configuration/property.\u003c/p\u003e","title":"How to get or set Databricks spark configuration","type":"posts"},{"content":"I got a Macbook with a German keyboard layout, and I am not accustomed to it. This post summarizes some tweaks made to the German version of Macbook to make it work for me.\nAdd an input source for US keyboard # Luckily I have also got a magic keyboard with US keyboard layout. To use it, we need to add a new input source for it, go to keyboard section in system settings. In Text Input --\u0026gt; Input Sources, click edit and then click + in the bottom left corner to add new keyboard. Choose English, and then select a keyboard layout. For example, we can use ABC or US, they are more or less the same.\nHow to type special German characters easily # In the US keyboard, we can not type special German chars directly, but there are some shortcuts to input them.\nTo type umlaut character, i.e., äöü. Press option key and u together, release now, and then press the un-umlauted character to get its umlaut char. To type ß, simply press Option and s at the same time. references:\ntype special German char on macOS, https://www.nthuleen.com/teach/misc/typingumlauts.html Switch the Fn and function keys in macOS # When I press functions keys on my macOS, they perform the functions printed on the keyboard, for example, if I press F12, the system volume is turned up, instead Fn + F12 works as real F12. I do not like this behavior, and would like to switch the behavior. How to do this?\nOpen system settings, open keyboard settings pane, click Keyboard shortcuts.... In the opened page, click Function Keys and turn on the option Use F1, F2, etc. keys as standard function keys.\nreferences:\ntoggle between fn and function keys in mac, https://superuser.com/q/1755750/736190 https://support.apple.com/en-au/HT204436 ","date":"21 April 2023","externalUrl":null,"permalink":"/2023/04/21/macos_german_version_setup/","section":"Posts","summary":"\u003cp\u003eI got a Macbook with a German keyboard layout, and I am not accustomed to it.\nThis post summarizes some tweaks made to the German version of Macbook to make it work for me.\u003c/p\u003e","title":"Set Up German Version macOS","type":"posts"},{"content":"Vimium is a Chrome extension that lets us to browse the internet with our fingers, rather than using the mouse. In this post, I will going to share how to add a custom search engine for Vimium.\nThere are some background knowledge we need to be clear.\nVomnibar # If you have installed Vimium, in a normal web page, you can press o, a long bar will appear and wait for your input. Here we can type keywords to search through history and bookmarks, or just search through the default Google search engine. This long text bar is called Vomnibar by Vimium.\nAdd custom search engine # For example, suppose that we want to add google translate as our custom search engine. First, open the Vimium options, in the lower part, there is \u0026ldquo;Custom search engine\u0026rdquo; part. In the text box, add the following new line:\ngt: https://translate.google.com/?sl=de\u0026amp;tl=en\u0026amp;text=%s\u0026amp;op=translate Gtranslate In this example, the alias for Google translate is gt. In the URL part, we need to replace the actual search query with %s (the query text will be URL-encoded, to avoid URL-encode, use %S instead). Gtranslate is custom name for this new search engine, and can be empty.\nThen click Save changes in the bottom right. The new search engine should be added with success.\nUse the new search Engine # Open a normal webpage, press o1, we should see the Vomnibar. Then press gt + \u0026lt;Space\u0026gt;, we are now prompted to enter the query text. After entering the text, use return key to search.\nReferences # https://github.com/philc/vimium/wiki/Search-Engines This will open a new search result in the same tab, to open the result in new tab, press capital O instead.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 April 2023","externalUrl":null,"permalink":"/2023/04/18/vimium_custom_search_engine/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/philc/vimium\" target=\"_blank\"\u003eVimium\u003c/a\u003e is a Chrome extension that lets us to browse the internet with our fingers, rather than using the mouse.\nIn this post, I will going to share how to add a custom search engine for Vimium.\u003c/p\u003e","title":"Add A Custom Search Engine for Vimium","type":"posts"},{"content":"","date":"18 April 2023","externalUrl":null,"permalink":"/categories/technique/","section":"Categories","summary":"","title":"Technique","type":"categories"},{"content":"","date":"21 March 2023","externalUrl":null,"permalink":"/categories/android/","section":"Categories","summary":"","title":"Android","type":"categories"},{"content":"","date":"21 March 2023","externalUrl":null,"permalink":"/tags/miui/","section":"Tags","summary":"","title":"MIUI","type":"tags"},{"content":"要使用 Google Pay 需要谷歌服务的支持，小米手机至少旗舰机型都是自带谷歌服务的，但是默认没有打开。以我的小米 12S Pro 为例，直接在系统设置界面搜索 “谷歌”，有个“谷歌基础服务”，打开即可。\n安装 Google Play # 接下来，直接从 apkpure 下载 Google Play 安装包安装即可。\n安装 Google wallet # Google Pay 之前的应用名字也叫 Google Pay，现在改名叫 Google Wallet 了(吐槽一下谷歌命名产品真 tm 混乱，给用户造成不少困扰)，由于 play 商店的奇怪设置1，你可能从 play 商店无法下载 wallet，可以直接从 apkpure 下载 apk 安装 wallet。\n绑定银行卡/信用卡 # 注意所有内地(中国大陆)银行的借记卡和 Visa 信用卡都无法绑定 Google Pay，我尝试了目前手里所有的信用卡：浦发的银联 Visa 双标卡，招行 master card，招行 Visa 卡，中国银行卓隽 Visa 卡，都无法绑定，提示下面错误信息\n此卡无法设置感应式付款功能 您的银行不支持您在手机上使用卡进行感应式付款。请联系银行了解详情或添加其他卡。\n参考 # 小米手机开启 Google Pay: https://www.xiaohongshu.com/discovery/item/635bd0d20000000014027022 Google Pay 支持的国家以及银行参考下面的链接(这个链接也没有中国大陆地区): https://support.google.com/wallet/answer/12059326?visit_id=638148978781353990-4057730968\u0026p=banklist\u0026rd=2 例如本应用不支持在你所在的国家或地区下载之类的。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 March 2023","externalUrl":null,"permalink":"/2023/03/21/xiaomi_google_pay/","section":"Posts","summary":"\u003cp\u003e要使用 \u003ca href=\"https://en.wikipedia.org/wiki/Google_Pay_%28payment_method%29\" target=\"_blank\"\u003eGoogle Pay\u003c/a\u003e 需要谷歌服务的支持，小米手机至少旗舰机型都是自带谷歌服务的，但是默认没有打开。以我的小米 12S Pro 为例，直接在系统设置界面搜索 “谷歌”，有个“谷歌基础服务”，打开即可。\u003c/p\u003e","title":"中国大陆小米手机如何使用 Google Pay","type":"posts"},{"content":"","date":"21 March 2023","externalUrl":null,"permalink":"/tags/%E5%B0%8F%E7%B1%B3/","section":"Tags","summary":"","title":"小米","type":"tags"},{"content":"","date":"4 March 2023","externalUrl":null,"permalink":"/tags/city/","section":"Tags","summary":"","title":"City","type":"tags"},{"content":"由于疫情的影响，已经有两年没有在老家过春节。中国国内疫情管控放开以后，终于有机会回乡过春节。\n我的老家在山西省运城市平陆县曹川镇下面的一个小村子，平陆至晚在周朝就被称为「虞」，和平陆紧邻的河南三门峡被称为「虢」，历史上 「假虞伐虢」 所讲的故事就发生在这片土地。由于国家的农村迁置政策，前几年县政府在县城北边靠近黄河的地方建了移民小区，村里的人大部分已经陆续住进了移民小区，成了所谓的“县城人”。自从大学毕业以后，我们家就搬到了县里居住，再也没有回过我的小村子了，听家人说村里的房子大部分已经被推倒了，只留了少数房子。前几年，爸爸回家处理了老房子里的家具还有其他物品，我们和老房子做了彻底的诀别。当然我们的户口还是原来的户口，只是住的地方变了，在这个意义上，我们成了永远的流浪者，永远回不了所谓的”老家” 了。\n在深圳呆久了，习惯了清新的空气，回到冬天的北方，就闻到了那熟悉的味道，一股淡淡的烧煤味。\n平陆近邻黄河，与三门峡隔河相望，这里也是中国大天鹅越冬的重要栖息地之一，闲来无事自己也走路去了一趟，大天鹅栖息地位于三湾村，距离县城有五六公里，走路单程需要一个多小时。\n抽空和妈妈一起去了三门峡陕州公园玩，参观了三门峡博物馆，去了三门峡的天鹅公园，由于疫情的影响，之前从平陆到三门峡的公交也停了，只能打车过去。\n小地方的公共交通相对大城市差很多，一点都不便利，很多人都自己买车，否则出行困难。从三门峡高铁站到平陆只能打出租车，而且半天打不到车。\n平陆的工资低到发指，如果不是公务员，银行国企员工，普通人一般工资也就 2000 左右，如果去做保洁这些，工资更低，只有 1500 左右，而且这些一般是不管保险的。当然县城的房子也便宜，价格就 3000 左右。\n最令人满意的是各种美食，有豆腐脑，油条，各种包子，饼子，煎饼，鸡蛋灌饼，炸鸡柳，烤面筋等等，还有油泼面，烩面，大盘鸡各种面食。其中，平陆的油泼面最有名，个人认为比陕西的油泼面要更好吃，因为平陆油泼面加的料更多，有芝麻，牛肉，葱，料汁，非常香。闲来无事，也去尝试了几家不同的油泼面，要排个顺序的话，就是\n民族饭店，做的最好，很香 爻里尹清斋油泼面，味道还行 清雅斋油泼面和刁记油泼面，味道一般，不够香 ","date":"4 March 2023","externalUrl":null,"permalink":"/2023/03/04/hometown_2023/","section":"Posts","summary":"\u003cp\u003e由于疫情的影响，已经有两年没有在老家过春节。中国国内疫情管控放开以后，终于有机会回乡过春节。\u003c/p\u003e","title":"春节回乡记","type":"posts"},{"content":"我在高中还是大学读了宗璞的《野葫芦引》，其中的《西征记》描写了滇西抗战的经历，所以我一直想去腾冲走一趟，去拜访一下国殇墓园，苦于打工人没有时间，这个愿望在今年实现了。\n昆明 # 昆明是个不错的城市。\n坐高铁的话，如果可以，还是到达昆明站比较方便，昆明南到市中心，地铁都要一个多小时。\n昆明已经有六条地铁，但是覆盖面还不广，想坐地铁到某个地方，经常发现要走一段路才能到。不过你可以选择骑共享电动车，遍地都是。\n美食 # 小锅米线 铁朋小锅米线，在塘子巷地铁站边上，口味很多，可以加不同的冒，也就是菜码。价格不贵，小份 10 元，辣椒放的比较多，分粗米线和细米线，根据喜好选择。\n南强夜市，有当地小吃也有网红小吃。三块一拾，灌浆豆腐，味道还可以。\n嘉华鲜花饼，皮酥馅多味道好，可以入手。\n过桥米线，吃了云南盛过桥米线厂牌，在翠湖公园边上，逛完翠湖可以顺便去吃一下。\n豆花米线, 礼宸记，豆花，肉沫，蒜苗，味道不错。\n篆新市场，傣味烧茄子，15 一份，火烤茄子，加柠檬汁，烧青椒，加大蒜，调料制作，吃不习惯，吃两口扔了。篆新市场附近有个大观美食街，可以去吃东西。\n闲逛 # 滇池边有海鸥，翠湖公园也有不少海鸥。\n大理 # 大理洱海的风景挺漂亮，但也没那么好，小心被骗了。从大理站到古城，乘坐八路即可，不用自己打车。\n古城到双廊，古城东门坐车，中巴，15 一个人，也会经过喜洲，最早九点左右？ 大巴，大理旅游服务公众号订票，30 一位，古城南门客运站坐车。\n大理古城面积挺大，遍布各种商铺，里面还有学校，医院。住宿的地方基本都不在古城内，民宿差不多都围绕古城，还有一些民宿建在洱海边，如果不是自驾，前往感觉不是很方便。古城里面吃饭的地方挺多，还有卖咖啡，果汁，小吃等等。\n避坑一日游！报了一个一日游，120 元，环绕洱海一圈，有点坑，没去喜洲古镇和双廊古镇里面，生态廊道给了一小时，观景点给了十五分钟，带去了两个推销点，一个是推销段氏雪花银，一个是白族园（推销茶叶）。中午包一餐，但是不好吃。有时间还是自己坐车去想去的景点，时间也自由。\n保山 # 大理坐动车可达保山。市区交通可以用共享电动车，或者打车，市区很小。\n美食 # 金锅贴，味道还可以，比较油，一个人全部吃完有点腻。 缅昌茶苑，缅甸甩饼，也叫缅甸甩粑粑，有多种口味，葱花鸡蛋的味道很好，酥脆油香。香蕉味的会放炼乳，很甜，感觉不如葱花鸡蛋的好吃。泡鲁达也可以试试。 腾冲 # 由于大瑞铁路目前只通到保山，保山到瑞丽的铁路还在修建中，所以再往西的交通只能靠汽车了。保山到腾冲，微信小程序“保交行”上预订，89 一位，司机会按照指定的地点直接去接你，时间大约两个半小时。\n花溪牛羊肉米线，味道在线，距离国殇墓园不远，出来吃的。\n稀豆粉，小吃类型，豌豆磨粉做成的美食，加上花生碎以及辣椒，还有其他调料，味道可以，还可以加上油条一起吃。\n明记烧肉米线，只有下午开门，没吃上，随便找了一家烧肉米线，料很丰富，比较辣，吃完感觉比较油腻，可能是因为烧肉里面有肥肉，喜欢清淡饮食慎点。\n国殇墓园加上抗战纪念馆，如果想要认真看一遍，需要预留六个小时时间，纪念馆有十一个展厅，需要花时间去看。值得注意，现在看到的国殇墓园都是文革以后重建的，文革中纪念碑以及墓园的墓碑都被破坏了。\n腾冲火山热海景区，距离市区不算远，门票略贵，50，火山大滚锅，在景区最里面，整个景区最多两小时可以逛一遍。\n芒市 # 腾冲到芒市，83 一位，司机开车来接，时间大约一个半小时。\n树包塔，树把塔包在了里面，树根已经嵌入塔体，周围环境有点寒碜，是建筑工地，围了一圈铁皮。\n勐焕大金塔，大银塔，都是收门票的，晚上随便外面看看就行，不值得进去。\n傣族小镇,晚上比较热闹，小吃，小东西摊贩挺多，买了一个铁板豆腐，很辣，但是很香。\n瑞丽 # 芒市到瑞丽，保交行，71 一位。\n畹町口岸，事先没做攻略，所以直接打车过去 70 左右，后面了解到可以在瑞丽市区勐卯边境派出所对面坐面包车，20 一位。到了畹町，由于接近中缅边境，我的小米手机自动变成漫游模式，无法上网了，真他妈无语。另外当地的 ATM 也无法跨行取款的，据说是为了防电信诈骗。畹町有一个口岸，还有”南洋华侨机工纪念馆“，纪念抗战时期回国支援的华侨。畹町回瑞丽，在史迪威公立起点纪念碑那里有面包车，15 一位到瑞丽市区。\n瑞丽口岸附近有很多卖玉石的摊贩，不过周围的店铺都是关门的，疫情三年对瑞丽的冲击是巨大的，听司机说五十多万人走得最后只剩下十几万人了。\n美食 # 缅泰特优茶餐厅，牛肉油面，干拌的，很香，推荐。 凉拌茶叶豆，西红柿，包菜，茶叶豆（吃起来感觉像干蚕豆），酸泡椒，生蒜片，还有一种不知名的蔬菜，酸辣口味，很辣，个人有点不习惯。\n冰咖啡，太甜了，齁甜齁甜。\n返程，瑞丽回保山，保交行订票，140 一位，时间大约三个小时。保山回昆明，可以坐动车。\n","date":"1 March 2023","externalUrl":null,"permalink":"/2023/03/01/yun-nan-2023/","section":"Posts","summary":"\u003cp\u003e我在高中还是大学读了宗璞的\u003ca href=\"https://book.douban.com/subject/30425634/\" target=\"_blank\"\u003e《野葫芦引》\u003c/a\u003e，其中的《西征记》描写了滇西抗战的经历，所以我一直想去腾冲走一趟，去拜访一下国殇墓园，苦于打工人没有时间，这个愿望在今年实现了。\u003c/p\u003e","title":"滇西之行 2023","type":"posts"},{"content":"每次去贵阳都是浮光掠影，因为它不是我的终点站。这次是因为去云南，需要在贵阳转车停留一晚。\n这次是从贵阳东站下车，这个站很偏，可以坐 272 公交车可以到喷水池，在喷水池附近住比较好，周围可以吃饭的餐馆很多。\n交通 # 贵阳地铁目前只有两条线，出行还是靠公交或者打车比较多，道路很不规则，几乎没有横平竖直的路，在市中心有时候过马路还要到地下通道，再走上去，痛苦的体验。\n贵阳很多地方还很荒凉，市中心云岩区看起来像个省会城市。\n美食 # 小满牛肉粉店 （蔡家街），酸粉，粉质地比较软，吃起来不像湖南米粉那么顺滑弹牙，有点像泡发的面条口感。\n胖子馅饼，不要被名字骗了，它不是肉馅饼，而是类似绿豆饼的东西，有花生，芝麻，玫瑰，桂花等多种馅。\n遵义老城豆花面饭（凯发家园店），点了一份豆花面，面是宽面，有嚼劲，比较辣，放了肉丁，味道不错，还附赠一碗豆浆，价格亲民。\n","date":"20 February 2023","externalUrl":null,"permalink":"/2023/02/20/guiyang_2023/","section":"Posts","summary":"\u003cp\u003e每次去贵阳都是浮光掠影，因为它不是我的终点站。这次是因为去云南，需要在贵阳转车停留一晚。\u003c/p\u003e","title":"贵阳行 2023","type":"posts"},{"content":"找海外工作很重要的一个要求语言过关，根据国家的不同，对语言的要求也不同，英语国家当然英语就足够了，有的欧洲国家公司还会要求你掌握当地语言，如果你不会，那投递简历时就可以跳过这些公司了。本文谈一谈我的英语学习经验，仅供参考。英语主要分为听说读写四个方面，下面就分开写一写我的经验。\n听力 # 要提高听力，没有别的办法，就是要多听，就可以提高自己的听力水平，不要相信什么灵丹妙药，不存在的。大学的时候，试过听 BBC 英语，然后尝试自己去把听到的东西转译成文字，这样能够确保自己听懂了，这种方式比较浪费时间，不过对听力的提升我认为是有帮助的。\n我还尝试过看电影或者电视去提高听力，但是个人感觉效果很有限，美剧或者电影，角色讲话速度一般较快，难以跟上，另外经常会被剧情吸引，专注不到听力本身，有的电视剧或者电影字幕都是内嵌的，看着看着就开始看字幕了，总之这种方式在我身上收效甚微。\n另外一种方式是直接看 YouTube 视频，这是我推荐的方式。研究生毕业的时候，我的听力水平还不高，后面提升听力，就主要是通过看 YouTube 视频，自己感兴趣的内容，各种话题，各种口音的英语内容都会去看，接收了大量听力内容的洗礼。关于口音，一般美国人或者英国人纯正的英语只要速度不是非常快，都比较容易懂，印度英语带口音，就比较难懂，欧洲人英语速度一般不是很快，也容易听懂。另外 YouTube 可以开倍速，用 1.25 或者 1.5 倍速度放视频，如果你不看自动字幕听起来无压力，那你的英语水平应对面试没问题。\n如果喜欢听 podcast，也可以使用 spotify 或者其他 app 听科技播客，也是不错的提升听力的方式。不过很多 podcast 没有字幕，如果听力水平不行，听起来会比较吃力。\n口语 # 在开始面试之前，其实我也没有专门练习过口语。如果经常听英语，对口语也会有帮助，你下意识就会知道怎么去应对，怎么说话。\n如果需要练习口语，可以在网上找母语是英语的外国人聊天。有一些付费的软件，例如 cambly，也可以从淘宝上找付费的外教练习口语。当然也有一些免费的语言交换，推荐 reddit 的 language exchange 板块，可以在上面找到一些练习语言的伙伴。\n口语的目的是要让自己的表达被别人听懂，而不是自己的口音有多么的纯正，国人经常犯这个错误，批评别人的口音，其实毫无意义。流利的表达比纯正的美音或者英音更重要。\n阅读 # 英语阅读是长期积累，不可能短期提升。看一些自己感兴趣的英文书可以提升自己的英语阅读能力，推荐非虚构类作品，例如名人传记类，历史类，科学类。不推荐阅读英语原著小说，小说通常阅读难度要更大，而且有不少生单词，经常遇到生单词会挫败人的阅读乐趣。\n阅读工具，推荐使用电子产品（iPad，kindle 等），而不是使用书，使用电子产品如果遇到不懂的单词可以随时查字典，很方便，也可以加入到自己的生词本，书用起来就很麻烦。\n写作 # 我提升写作的经验就是多写，一般遇到技术问题，我都会用英语写成文章放到自己的博客上面，经常输出，就会逐渐提升自己的写作速度和水平。如果担心语法不过关，可以用 grammarly 检查。\n工作 # 对于程序员来说，日常工作也要尽可能使用英语，不会用英语的程序员不是好程序员。大量的最新的技术都是用英语写成，中文互联网的质量堪忧，平时搜索问题都是使用英语的机会。\n在 GitHub 上提问或者回答别人的问题，也都需要使用英语，都是锻炼自己英语的机会。\n","date":"18 February 2023","externalUrl":null,"permalink":"/2023/02/18/work_overseas_english/","section":"Posts","summary":"\u003cp\u003e找海外工作很重要的一个要求语言过关，根据国家的不同，对语言的要求也不同，英语国家当然英语就足够了，有的欧洲国家公司还会要求你掌握当地语言，如果你不会，那投递简历时就可以跳过这些公司了。本文谈一谈我的英语学习经验，仅供参考。英语主要分为听说读写四个方面，下面就分开写一写我的经验。\u003c/p\u003e","title":"程序员海外工作---语言篇","type":"posts"},{"content":"大学毕业以后，就没去过长沙了，来深圳工作几年也没去过长沙一次，正好趁着这次有时间去长沙逛一下。\n美食 # 甘长顺，五一广场地铁站 8 号口附近，点了一份肉丝面，味道不错，很香，汤也好喝。\n公交新村米粉，去了太平街店，这家店好像是 24 小时营业，点了一份杂酱的，粉比较咸，味道还不错。\n向群锅饺，本来想去吃坡子街店，去的时候没开门，就去了南门店，饺子比较小，略油腻，干酥，味道香。在长沙上学的时候，偶尔会吃向群锅饺，第一次吃的时候就觉得很好吃，那还是 2011 年的时候，不过不能多吃，吃多了太腻。\n刘聋子粉馆，五一广场店，点了麻辣牛肉粉，16 元，牛肉很干，味道还可以。\n会友 # 和小华、朱朱吃了个饭，小华已经是有娃的人，开始焦虑娃的教育，怎么赢在起跑线。。长沙还是比较宜居的，房价没那么贵，教育也不错，好的高中当然也不是那么容易进去的。\n闲逛 # 回中南大学闲逛了一下，到了升华公寓，还是放假期间，没什么人，去了新校区，也是没什么人，似乎又新盖了一些建筑。\n到了中南大学本部，又爬岳麓山，走了一条人不多的上山路，一度以为走错了，路线： 丁文江墓 \u0026mdash;\u0026gt; 长沙会战碑 \u0026mdash;\u0026gt; 麓山寺 \u0026mdash;\u0026gt; 蔡锷墓 \u0026mdash;\u0026gt; 黄兴墓 \u0026mdash;\u0026gt; 观光长廊 \u0026mdash;\u0026gt; 岳麓山东门\n交通 # 我们毕业的时候长沙还没地铁，七八年过去，长沙已经有好几条地铁线了，但是有的地铁口设计不合理，经常只在路一边\n网红化 # 长沙也变得网红化，一个明显感受就是街上人特别多，网红化带动人口增长？黄兴路步行街和五一广场比以前更热闹了，年轻人很多，我上学的时候感觉人没那么多，黑色经典臭豆腐和茶颜悦色排队的人都不少，不明白。\n","date":"10 February 2023","externalUrl":null,"permalink":"/2023/02/10/changsha_2023/","section":"Posts","summary":"\u003cp\u003e大学毕业以后，就没去过长沙了，来深圳工作几年也没去过长沙一次，正好趁着这次有时间去长沙逛一下。\u003c/p\u003e","title":"2023 长沙行","type":"posts"},{"content":"如果你要问我心中第一美食之都，我会说是西安。西安我此前已经去过两次了，但仍意犹未尽。\n今年其实去了两次西安，一次是从深圳回老家，在西安转车，在西安住了一晚，第二天就走了。刚到西安的晚上，就点了心心念念的西安胡辣汤，这味道太赞了。个人认为，西安胡辣汤比河南胡辣汤更好吃，西安胡辣汤加了牛肉丸，豆角，包菜，土豆，红萝卜等等，料更足。\n第二天想去买个肉夹馍，发现大部分店都关了，去了回民街，人还挺多，可能全西安的游客都集中到了回民街。在回民街老金家又吃了胡辣汤，还点了蛋菜夹馍，胡辣汤不错，蛋菜夹馍不好吃，鸡蛋就是个蛋黄，菜是咸菜加花生等等，很干。回民街上的黄桂柿饼也不错，有多种味道。回民街相对于我 2016 年来的时候更加商业化，网红小吃不少，根本不是地方特色。回民街还有一个令人诟病的地方是李鬼太多，什么老金家，老米家，老刘家，都有好几个，作为游客根本无法分辨到底哪个才是正宗的羊肉泡馍。\n第二次去西安是回家呆了几天，过了正月初七去的，本来以为人应该不多了，没想到西安的人还是那么多。\n去了洒金桥美食街，人非常多，摩肩接踵，在这里也碰到了李鬼，有个牌匾上面也写着“洒金桥”（后面看新闻这个地方被游客投诉了，然后被拆掉了），里面美食不少，有牛肉饼，烧烤，饮料，也有一些非当地的网红小吃，价格都是偏贵的，有点名气的小店都要排队购买。\n头一次去了碑林博物馆，碑林博物馆是收费的，不过门票也不贵，博物馆展馆有七个，还有一些石刻展馆，认真去看一天都不够。请个专业讲解也是必要的，否则自己看也只能看看热闹。\n去了西安钟楼附近的柳巷面，之前来西安就想尝一下，不过当时时间太紧就没去，这次有时间就去了，店面较以前有装修，面的价格在西安算是挺贵的，大腕 20，小碗 17，面是很劲道很粗的面，哨子是牛肉做的，有胡椒的麻味，味道非常不错的，值得一试。\n去了西安的永兴坊，里面有陕西各地的美食，不过感觉并不是很正宗，比较商业化，游客也不少，特别是有个摔碗酒排队体验的人不少。\n西安的肉夹馍当然是必吃的，秦豫肉夹馍据说不错，但是店有点少，而且总店只营业到下午两点，没吃上。子午路张记的肉夹馍价格是偏贵的，来西安就不要太迷信这些肉夹馍牌子了，街边六块钱的肉夹馍也很不错。\n有空和伦哥吃了个饭，工作挺卷，项目也很忙，经常需要加班，一般晚上 10 点多才下班。之前 17 年来西安，伦哥还在公司实习，当时碰面带了一份熏肉大饼，味道太好了，多少年都没忘记，记忆中的美味。晚上还去大唐不夜城随便逛了一下，简直是人山人海，和之前 16/17 年来的时候，完全不是一个景象，街灯、树上的灯都设计的都不错，有美感，就是人太多了。\n在西安只呆了两三天就走了，时间太短，还有很多想逛的地方没去，留待下次再去。\n","date":"3 February 2023","externalUrl":null,"permalink":"/2023/02/03/xi_an_2023/","section":"Posts","summary":"\u003cp\u003e如果你要问我心中第一美食之都，我会说是西安。西安我此前已经去过两次了，但仍意犹未尽。\u003c/p\u003e","title":"2023 西安行","type":"posts"},{"content":"","date":"18 January 2023","externalUrl":null,"permalink":"/tags/visa/","section":"Tags","summary":"","title":"Visa","type":"tags"},{"content":"拿到德国工作 offer 以后，我们需要申请合适的签证前往德国。本文将会详细总结德国工签（欧盟蓝卡）申请需要的材料，填写细节，以及面签的流程，希望能够帮助到有同样疑惑的人。\nDisclaimer: 本文仅仅代表个人经历，非官方权威建议，仅供各位读者参考。\n申请签证类型以及材料 # 签证主要分为短期签证以及长期签证，短期签证一般针对到德国旅游的人，长期签证针对工作，学习，商务等类型的需求。也可以用签证选择器，查看自己要申请什么类型签证：https://visa.diplo.de/en/index.html#/vib 。工作签证肯定是要选择长期居留签证。其实领事馆签发的签证只是临时签证（称为 D-visa)，有效期只有 3-6 个月，到了德国以后，需要联系移民局，提交材料，换成 residence permit (蓝卡是一种特殊形式的居留许可)，并不是在中国内就直接给蓝卡。\n长期居留签证需要的材料 ，这个网页列出了不同类型的人需要材料: https://china.diplo.de/cn-zh/service/visa-einreise/nationales-visum/1345434\n对于工作签证，需要的材料：https://china.diplo.de/blob/1341662/7635a9ffa0559a27faad71ed35d4ce3b/pdf-merkblatt-natvisum-arbeitsaufnahme-data.pdf\n长期居留常见问题: https://china.diplo.de/cn-zh/service/visa-einreise/faq-national-visa/1434978?openAccordionId=item-1427052-14-panel\n德国使领馆 # 工作签证必须本人去大使馆或者领事馆提交材料面签，不能他人代劳。德国在中国大陆有多个使领馆，北京，上海，沈阳，广州，成都都有，申请签证要根据目前所在地，选择对应的使领馆。德国驻华使领馆一览：https://china.diplo.de/cn-zh/vertretungen\n驻华大使馆链接：https://china.diplo.de/cn-zh/vertretungen/botschaft?view= 沈阳领事馆链接：https://china.diplo.de/cn-zh/vertretungen/gk-shenyang?view= 成都领事馆链接：https://china.diplo.de/cn-zh/vertretungen/gk-chengdu?view= 上海领事馆链接：https://china.diplo.de/cn-zh/vertretungen/gk-shanghai?view= 广州领事馆链接：https://china.diplo.de/cn-zh/vertretungen/gk-kanton 签证预约 # 德国在中国有多个使领馆，按照预约的说明，要预约目前居住地对应的领事馆，例如我居住在深圳，那就要预约广州领事馆（领区包括广东、广西、福建、海南）。12 月初广州还在疫情封控之中，广州领事馆 12 月的预约都没有，但是其他有的领事馆还有预约名额，由于担心疫情的发展，所以我发邮件咨询了广州领事馆，是否能够预约其他使领馆，例如北京或者成都领事馆，领事馆回复是只能在广州领事馆预约，因为深圳属于广州领事馆的管辖范围。\n在这个签证与入境页面 (https://china.diplo.de/cn-zh/service/visa-einreise?view=)，有一些提示，根据疫情状况会更新，下面有「短期逗留」和「长期居留」模块，工签的话就选择长期签证。\n在这个页面可以找到中国不同领事馆的预约网页链接：https://china.diplo.de/cn-zh/service/visa-einreise/nationales-visum/1345434?openAccordionId=item-1345436-2-panel\u0026view=\n签证预约有不同的类型，要选择对不同的类型预约，例如有 ZAV pre-approval，申请签证的时候就要选择带有那一项的签证，预约网页:\nlongterm-visa (national visa)/长期签证（德国签证） - work holders of ZAV issued pre-consent ONLY / 持有德国联邦劳动署出具的预先核准信的工作\n不过不同领事馆预约界面可能不一样，具体灵活处理吧。\n注意点 # 预约要趁早，大使馆每个月放出来的名额感觉不是很多，从预约到交材料可能需要花费不少时间，不要等材料全部弄好才预约 预约系统需要填写姓名，邮箱，出生日期，护照号码，手机号码等信息。填写护照号码时候，遇到问题，EA 后面数字 1 还是字母 I (实际上是数字 1)，不是很清楚，辨别方法参考 https://www.thepaper.cn/newsDetail_forward_4186634 工作签证需要的材料清单 # 以下是需要的材料清单，注意其中有一些材料没有在他们给的 pdf 格式的材料清单列出，例如「关于签证申请的声明书」，「合同」，「在德国工作必要性说明」，后两个是在长期签证预约网页上写的需要：\n必须递交一份工作职位的证明（如劳动合同）和一份雇主证明，说明从事的工作从经济角度考虑非常必要，并在时间上不能推迟或在国外无法完成。\n签证预约邮件，打印一份（这个没用到，直接给大厦前台看了预约签证后收到的邮件） 签证申请表，打印两份，需要写上地点日期，签名，签名要和护照一致，中国护照上签名是中文，签名也写中文即可 关于签证申请的声明书 (领事馆网站可以下载到)，这个我没打印，后面到了领事馆，工作人员给了两份这个文件，让我签名，中文和德语只需要签一个，我签了德语的（签名还是中文签） 合同，打印两份 (有的合同很长，只打印相关的部分即可) 个人护照信息页，打印两份 个人简历，打印两份 之前单位的工作证明，打印两份 工作证明翻译，打印两份 雇主的雇佣关系声明表，打印两份 专业人才加快程序说明，打印两份，签字 旅行医疗保险，打印两份 硕士学位证，打印两份 (我的硕士学位证本来就有英语版本，所以无需翻译) 硕士毕业证，硕士毕业证翻译(打印两份) anabin 数据库学位评定，打印两份 anabin 数据库大学评定，打印两份 在德国工作必要性说明(来自雇主)，打印两份 以上材料如果有原件的话，需要把原件也带上，例如个人护照，毕业证，学位证，工作证明等，如果有文件本来就是 PDF 格式，例如合同（我的合同都是网上签约，最后生成 PDF，没有纸质文件），只需要打印两份 (专门发邮件咨询了德国广州领事馆)\n关于打印格式，网上说法很多，单面还是双面，是否需要彩色打印，发邮件咨询了领事馆，回答是都可以，没有具体要求必须是单面打印和彩打。\n长期签证申请表填写 # 大使馆网站的长期签证文件下载区，申请表模块有 「长期签证申请表」，但是不建议用这个，就用在线填写即可，生成的文件只需要自己签名，比较方便。\n申请表在线填写地址：https://videx-national.diplo.de/videx/visum-erfassung/#/videx-langfristiger-aufenthalt ，默认界面是德语，左上角可以改成英语。\n保存，导入，导出 # 填写过程中的信息可以随时保存，保存按钮在页面的最底下，保存格式是 json 文件。后续打开网页，可以导入本地保存的文件继续填写，所有信息填写完毕，页面下方的 continue 按钮就可以点击了，点击以后会提示你下载 pdf 格式的申请表。\n问题与注意事项 # 申请表填写的信息都是大写，输入的时候网站会自动转换，就算你没开大写锁定，进去的还是大写字母。 日期格式是 日日.月月.年年年年，不是国内常用的 年年年年.月月.日日 格式。 place of birth 填写到省或者直辖市，看护照上怎么写的，不是写具体城市。 有一项是填写在德国呆多久 (Intended duration of stay in the Federal Republic of Germany)，我只知道大概的开始日期，但是不确定结束日期，问了一些人，最后结束日期那里填的是 DEPEND ON THE CONTRACT. 注意填写开始日期要和买的保险保持一直，例如保险生效是 2 月 10 号，那么签证申请表填写的开始日期也要是 2 月 10 号。 需要填写公司相关信息，提前要准备好，以免到时候慌乱，必须填写的项目如下： 公司名称 联系人姓名 街道，house number，邮编，城市，国家 联系电话 (联系电话的 country code，系统好像不接受 + 号，所以我用了 0 代替，例如德国 +49 就写成 049 应该是可以的) 专业人才加快程序说明 # 这个在官方给出的材料清单里是可选的材料，我咨询了公司请的顾问，说是直接勾选没有申请加速那一项即可。\n学历认证与证明 # 这个视频讲了是否需要学历认证: https://youtu.be/l7pOzc1olWs\nanabin 学校学位数据库: https://anabin.kmk.org/anabin.html\n学校评级: https://anabin.kmk.org/no_cache/filter/institutionen.html 学历评级: https://anabin.kmk.org/no_cache/filter/hochschulabschluesse.html 学历评级下面有列了一些学校，但是这些学校并不是所有学校，所以我们同时需要学校和学历评级两个资料。\n注意如果学校的评级为 H+，学历的评级被评为 “同等” (德语 Entspricht)，那么不需要做 ZAB 学历认证，否则可能需要做 ZAB 学历认证，这个过程比较复杂，需要准备比较多的材料，寄到德国，时间可能需要一个月。\n参考\nanabin 使用: https://www.youtube.com/watch?v=FVSfSAJao_A anabin 使用：https://zhuanlan.zhihu.com/p/507393871 make it Germany anabin 使用：https://www.youtube.com/watch?v=0Wtl1-xjHGE 蓝卡申请 蓝卡申请指导：https://www.youtube.com/watch?v=I7-Jnsd4Jso ZAB 学历认证(可能会需要): https://www.youtube.com/watch?v=gbdtzAtXGK4\u0026list=PLNTtAztiLNX_zctunldpVsjV7J5R3GeEB 德国学历认证 (H+ 似乎不需要认证): https://zhuanlan.zhihu.com/p/512949308?utm_id=0 之前的工作证明 # 材料上要求的是需要过去三年的工作证明，写清楚职位，起止时间，每个月的薪资，公司名称，地址，联系方式等。 需要用公司枱头信纸，就是页眉需要用公司的名称 logo 的模板，如果没有的话，可以做一个模板。 参考\n旅行签证工作证明：https://vacations.ctrip.com/notes/1849.html 旅行保险 # 申请签证也需要一份旅行保险，这个保险是覆盖从你到达德国到你正式开始工作这段时间的，因为正式工作以后，需要买德国的公立保险了，为了保险起见，可以买从到达德国的时间，直到工作开始的当月末。旅行保险可以直接在支付宝上买，或者从保险的官网买，选择申根旅行保险即可。我买的是安联保险，从他们的微信公众号购买的，价格和购买的时间长短有关系。\n由于行程的不确定，到达德国具体时间可能有变化，所以保险生效起始时间可能药更改，咨询了安联客服，保险生效开始时间可以自己变更 5 次。我是通过微信公众号办理的保险，更改起始时间方法如下：\n进入「安联在线」公众号，点击「在线商城」，在弹出的菜单，点击「在线商城」 在出来的页面右下角，点击「我的」这个按钮，出来个人信息页面，然后点击「保单服务」 在「境外险保单服务」项目下，点击「变更生效日目的地」，然后提示操作即可变更生效日期 宣誓翻译 # 中文的文件有的需要经过所谓 “宣誓翻译” 才有法律效力，不能随便翻译。我的工作证明和毕业证翻译都在淘宝找了宣誓翻译，花了 700 元人民币，每份文件价格 350 人民币。也有人说不需要宣誓翻译，自己在淘宝上找的便宜翻译也可以通过材料审核，具体自己判断，我也不清楚。\n不同语言的宣誓翻译人员可以查看这个网站：https://www.justiz-dolmetscher.de/Recherche/en/Suchen\nZAV Pre-approval # pre-approval 指的是德国联邦劳工署的审核，通过审核以后，可以加快后续申请签证的速度，根据官方材料，申请 Eu-blue card 不需要 pre-approval 也可以 (当然蓝卡需要一定的薪资以及学历条件)。\npre-approval 需要的材料如下：\n代理公司发的 power of attorney 文件签字，相当于授权他们代理我办理相关手续 护照复印件 (护照信息页有英语，无需翻译) 宣誓翻译的目前公司的雇佣证明 硕士毕业证以及学位证 (需要德语或者英语) 硕士学习期间成绩单 (需要德语或者英语) 但是最后和公司找的代理沟通，我的学历以及工资都达到要求，申请德国蓝卡并不需要 pre-approval，所以最后并没有去搞 pre-approval。\n德国蓝卡标准 # 最新的签证申请材料上写明 IT 专业需要的年薪需要达到 45552 欧元，一般职业需要达到的年薪为 58400 欧元，并且蓝卡人员的学校以及学历都需要达到一定的标准。\n欧盟蓝卡申请: https://zhuanlan.zhihu.com/p/532907960?utm_id=0\n参考\n蓝卡说明：https://handbookgermany.de/en/eu-blue-card Pre-approval: https://www.youtube.com/watch?v=B8dGZcSD8Lc 前往面签 # 广州领事馆地址：广州市天河区粤海天河大厦 14 楼。有两种方式可以到\n从旁边是天河城购物中心进去，然后前往北门(有指示牌)，有一家星巴克，旁边有一个小走廊，通往天河城大厦。 直接到达：天河城大厦入口在东门，外面是天河城大街，很短的一条街，对面是天环广场，可以看到星巴克和 Puma 等。 天河城大厦一层坐电梯处有门禁，可以找大厦的前台工作人员拿卡，出示自己的预约邮件以及身份证，然后会给一张访客卡（访客卡下楼以后，门禁可以直接回收，不需要给前台人员了）。\n到达 14 楼，需要把带的电子设备还有包都放到储物柜，只能带和签证相关的材料和现金等，过一个安检，然后安检会问你的名字，然后给一个预约号码。我大概下午一点四十左右到达，我的预约时间是两点二十，差不多等到那个时候才叫我的。刚开始是一个中国工作人员，会检查你的文件，然后会问一些问题，例如公司是做什么的，你的工作内容是什么，月薪是多少，什么学历，哪里毕业，本科是哪里的，目前住在哪里等等。然后需要交签证费，工作签证费用是 75 欧元，根据当时的汇率换算为人民币，不支持支付宝、微信，所以提前准备人民币现金，我办的时候，收了我 560 人民币。工作人员会问是否需要快递签证，如果需要的话，会让填写一个 EMS 单，快递是到付，所以不用现场付快递费。不过据这篇文章说明，还需要 32 元的快递费，可能不同城市不一样。最后是按指纹，左右手的指纹都要留，按照提示操作即可。\n这一系列流程大概花了 30 分钟。交完钱以后，工作人员让我到大厅等待面谈，等了一会，然后叫号让我过去面谈，签证官是德国人。\n我说了句 Guten Tag，他以为我会说德语，用德语开始面试，😅他问我在哪毕业，专业是什么？我说是毕业于中国科学院，专业是模式识别和人工智能。\n你去德国做什么，哪家公司，我说是 xx，然后解释 xx，他说不用解释，everybody knows xx in Germany\n然后他问我具体的工作内容，我解释了主要是电商价格预测之类，然后他说德国大家买 grocery 一般是线下。\n他问我打算去德国哪里，我说是 Berlin，但是公司总部不在 Berlin，在 Neckarsulm，xx 是施瓦茨公司的一部分，但是那个地方太小了，我不会说德语，所以还是选择柏林。\n他问我找好房子了吗，我说还没有，打算签证下来，先找个短期的，然后找长期的，听说长期住宿不好找，他说确实很糟糕。\n他问我打算什么时候过去，我说二月中旬，因为不知道签证什么时候能下来，他说明天就可以下来 😂他问需要提前吗，保险上写的是从 2.15 开始，我说不用提前，然后他提到了新年，我问你们过新年吗，他说会过新年，我说打算在中国过新年，旅游，所以不会过去那么早。然后面谈就结束了。\n说了句德语的 Auf Wiedersehen，结果他回的德语我不懂，尴尬，最后 byebye 结束。。\n前往德国 # 自2023年2月22日起,中国前往德国已经不需要再进行核酸检测。\n目前德国重新要求中国前往德国需要出示核酸检测证明 深圳可以提供核酸检测的医院：http://wjw.sz.gov.cn/bmfw/wycx/ggws/kzxgbdhscyfwjg/index.html 不是所有的医院都可以提供中英文证明，需要注意。\n","date":"18 January 2023","externalUrl":null,"permalink":"/2023/01/18/german_work_visa_guide/","section":"Posts","summary":"\u003cp\u003e拿到德国工作 offer 以后，我们需要申请合适的签证前往德国。本文将会详细总结德国工签（欧盟蓝卡）申请需要的材料，填写细节，以及面签的流程，希望能够帮助到有同样疑惑的人。\u003c/p\u003e\n\u003cp\u003e\u003cfont color=\"red\"\u003eDisclaimer: 本文仅仅代表个人经历，非官方权威建议，仅供各位读者参考。\u003c/font\u003e\u003c/p\u003e","title":"德国工签申请指南","type":"posts"},{"content":"2022 年总共写了 49 篇博客 1，大部分博客很短，没花太多时间就可以写完。从类别上看，大部分都是技术相关的，关于 Neovim，Lua，机器学习，SQL，Python 使用等等，可能并没有太多人看，主要是自己总结留给自己以后参考，有几篇是记录自己平时做菜的过程，还有一些是自己对一些问题的思考或者记录，例如 如何提技术问题 以及 对新冠的记录。\n数据中看博客 # 根据 Google search console 的统计，2022 年博客总点击量达到了 571k，博客的流量大约每个月 47.6k，平均 CTR 5.4%，在谷歌搜索平均显示位置 11.1,并不算靠前。\nTOP 3 访问量文章 # 2022 年总共写了 49 篇文章，看了博客的统计数据，TOP 3 访问量文章分别是：\nnvim 文件浏览插件总结，把目前已知的 neovim 可用的文件浏览器以及优缺点稍微总结了一下，访问量 5300+ read write PLY 文件, 这篇文章是面试一家公司时一个题目用到了 PLY 文件，现学的，随手总结了一下，没想到访问量还挺多，大约 4140+ nvim 0.8.0 版本更新记录，这篇文章总结了 nvim 0.8 版本的新特性以及改动，当时发到了 reddit 社区，所以访问量也比较多，大约 4120+ TOP 5 query # 谷歌会统计用户通过谷歌搜索搜到博客，并且点击进去的次数，根据统计，TOP 5 搜索 query 依次为：\nlatex 中文，点击量 3416 sublime regex，点击量 1944 pandoc markdown to pdf，点击量 1919 imagemagick convert pdf to jpg，点击量 1701 git push local repo to remote，点击量 1683 TOP 5 博客页面 # 不限文章写作年份，2022 年访问量最高的 5 篇文章分别如下：\nneovim windows 配置，点击量 19440 sublime text regex cheatsheet，点击量 18257 如何利用 imagemagick 把 PDF 转为图片，点击量 18094 CentOS 下 neovim 配置指南，点击量 17078 如何处理 git stash pop 以后的 merge 冲突，点击量 16533 那两篇 neovim 配置的文章都是好几年前写的了，现在有的配置已经不太适合最新的 neovim，毕竟配置已经全面 lua 化，现在还吸引了这么多流量，后续考虑再写一篇最新的配置指南，帮助新手上车 neovim。\nTOP 5 访问者所在国家 # United States，点击量 131894 Germany，点击量 45172 India，点击量 38479 China，点击量 23551 United Kingdom，22434 因为我的博客主要都是一些技术文章，所以吸引的主要是码农，来自美国的点击量一骑绝尘，比其他国家高了很多，中国的点击量很低，应该跟博客内容主要是英语有关，国内绝大多数程序员搜索技术内容还是用中文搜索，不过 强烈建议使用英语搜索 技术问题，坚持下去，你会打开新的天地。\n来自德国的流量占第二，倒是有点惊讶，印象中德国的技术氛围不是特别浓厚，码农人数应该也没那么多，而且还是用英语搜索。\nTOP 3 访问设备 # Desktop: 540503 Mobile: 28773 Tablet: 1541 由于博客内容主要是关于技术，所以使用笔记本或者台式机浏览博客的占绝对优势，占 94.7%。\n写博客赚钱吗？ # 先说结论，并不赚钱。博客目前挂的是 Google adsense 广告2，当初之所以挂广告，主要是为了抵消博客图片托管的开支，如果不习惯广告，用一些 Chrome 广告屏蔽插件可以完全屏蔽掉这些广告。\n过去三个月，广告收入主要来自这几个国家：\n美国，110.49 美元 德国，13.33 美元 英国，10.45 美元 加拿大，9.24 美元 香港，5.84 美元 那我到底赚了多少钱？根据 Google adsense 统计，我的博客每天广告收入大约 2-3 美元，所以每个月的收入大概 60 美元左右，例如过去 30 天收入为 60.9 美元，过去三个月，平均月收入为 68.2 美元，并不多，但是覆盖博客的开支已经绰绰有余了。有人希望通过博客来赚钱，个人认为想靠博客赚钱是很困难的，除非是一些访问量巨大的博客，再加上一些带货，可能收入会不错，对于大部分程序员，如果抱着赚钱目的，不如去做一些其他能够有更多收入的工作。\n2023 年展望 # 写博客现在已经成为一种习惯，不管有没有读者，都会继续写下去。不过 2023 年希望自己能够多写一些有深度的东西，少写一些很短的博客，所以 2023 年博客的数量可能会比 2022 年少一些了。\n关于我为何写博客，参考我之前写的文章：https://jdhao.github.io/2021/11/28/how_i_write_blog/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n关于如何申请以及在 Hugo 中配置 adsense，参考这篇文章：https://jdhao.github.io/2019/09/22/google_adsense_hugo_config/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"6 January 2023","externalUrl":null,"permalink":"/2023/01/06/blog-2022/","section":"Posts","summary":"2022 年总共写了 49 篇博客 1，大部分博客很短，没花太多时间就可以写完。从类别上看，大部分都是技术相关的，关于 Neovim，Lua，机器学习，SQL","title":"2022 年博客回顾","type":"posts"},{"content":"","date":"6 January 2023","externalUrl":null,"permalink":"/tags/adsense/","section":"Tags","summary":"","title":"Adsense","type":"tags"},{"content":"","date":"6 January 2023","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"2 January 2023","externalUrl":null,"permalink":"/tags/covid19/","section":"Tags","summary":"","title":"Covid19","type":"tags"},{"content":"在 2022 年 12 月底，我也感染了 omicron 病毒，本文对感染过程做一记录。\n正如在 另外一篇博客 介绍的：\n在 2022 年 12 月初的开放之后，新冠的流行已经是板上钉钉，最开始大规模感染的是北京，朋友圈里很多在北京的人都最先被感染。到了 12 月中旬，深圳也开始了大流行，由于之前愚蠢的集中收治与禁止民众自己治疗自己的政策，以及政策的突然 180 度大转变，所有的准备措施都没做，所有和感冒发烧相关的药品都极度紧缺，布洛芬，对乙酰胺基酚等治疗感冒发烧的药品在药店基本上已经买不到了，连温度计都不好买到了。\n2022 年 12 月中旬，公司就有人开始感染 omicron，也看到了北京大量感染的例子，不过心里没有太恐慌，觉得自己不会马上感染吧。12 月 17 号周六还出去到外面走了走，一切正常。然而到了第二天 12 月 18 号早上，我刚醒来没多久，就觉得嗓子有点痒，无其他感觉，嗓子痒一般是我要发烧的典型症状，果然，到了晚上开始觉得冷，应该是开始发烧了，晚上睡觉几乎睡不着。后续的发展：\n第二天 (12 月 19 号)，继续发烧，因为没有温度计，不清楚具体温度，估计可能 38 度多一些，腿上肌肉酸痛，白天晚上还是睡不着。 第三天 (12 月 20 号)：发烧有所缓解，腿还是有点酸疼，开始有少量咳嗽，晚上睡觉开始出汗。 第四天 (12 月 21 号)：继续恢复，体温基本正常了，咳嗽比较严重，开始鼻塞，味觉有一点恢复，但是吃咸的仍然不舒服，甚至恶心。晚上咳嗽睡不着。 第五天 (12 月 22 号)：不再发热，味觉仍未恢复，咳嗽继续，鼻塞加重。 第六天 (12 月 23 号)：鼻塞严重，味觉未恢复，其他无明显不适。 第七天 (12 月 24 号)：鼻塞，味觉嗅觉未恢复。 第八天 (12 月 25 号)：鼻塞消失，味觉和嗅觉有稍微恢复，尝试去吃了一次麦当劳，发现吃东西味道完全变了，除了甜味之外的味道仍然不正常。 第九天 (12 月 26 号)：味觉还没恢复，吃东西有一种烟熏味。 整个过程中，很幸运没有出现非常严重的症状，没有出现“吞刀嗓”，也没有出现呕吐，持续长时间咳嗽等。不过后遗症还是有的，感染后第二周，味觉和嗅觉未完全恢复，闻味道时灵时不灵，一瞬间可以闻到，再闻又闻不到味道了，甚至屎的味道都不怎么能闻到了🥲\n我在 v2ex 上也发了 一个帖子，讲述嗅觉味觉部分丧失，收到了一些回复，看来是比较普遍的现象。\n查了一点资料，不论是 omicron 还是之前的 delta ，感染以后，都有部分人存在这种后遗症，嗅觉丧失主要是病毒攻击了大脑对味道进行处理的细胞，要恢复估计得等这些细胞重新换一次（两三个月时间）。\n推荐的自我恢复方式，拿几种自己认识的味道，譬如玫瑰花香，每天闻两次，帮助自己恢复嗅觉。\n截至 2022 年 12 月 30 号，公司的人基本上都阳了，传播的速度非常迅速。\n","date":"2 January 2023","externalUrl":null,"permalink":"/2023/01/02/i-got-covid/","section":"Posts","summary":"\u003cp\u003e在 2022 年 12 月底，我也感染了 omicron 病毒，本文对感染过程做一记录。\u003c/p\u003e","title":"感染 omicron 记录","type":"posts"},{"content":"A very common confusion for new users of Neovim is that their option settings for a particular filetype does not work in init.vim (or init.lua).\nFor non-indent related option # For non-indent related option, to make sure you option settings have the precedence over builtin. For filetype foo, you can create {NVIM_CONF_DIR}/after/ftplugin/foo.vim or (foo.lua) and write your setting their. For example,\nsetlocal expandtab setlocal tabstop=2 setlocal shiftwidth=2 setlocal softtabstop=2 For indent related options # Someone asked a question on stack overflow about php. The issue is that setting smartindent and indentexpr in ~/.config/nvim/after/ftplugin/php.lua does not work. After opening a php file, smartindent and indentexpr are still set by the php.vim under nvim runtimepath:\n$VIMRUNTIME/runtime/indent/php.vim\nThis is because script under indent/ and syntax/ directory is sourced after script in ftplugin/. The source order is as follows:\n\u0026#34; first wave ftplugin/foo.vim $VIMRUNTIME/ftplugin/foo.vim after/ftplugin/foo.vim \u0026#34; second wave indent/foo.vim $VIMRUNTIME/indent/foo.vim after/indent/foo.vim \u0026#34; third wave syntax/foo.vim $VIMRUNTIME/syntax/foo.vim after/syntax/foo.vim So in order for the user\u0026rsquo;s indent setting to take precedence, we need to put it under ~/.config/after/indent/.\nHere is what works for me.\ncreate the file ~/.config/nvim/after/indent/php.lua\nadd the settings there:\nvim.o.smartindent = true vim.o.indentexpr = \u0026#39;\u0026#39; ","date":"2 December 2022","externalUrl":null,"permalink":"/2022/12/02/nvim-override-default-options/","section":"Posts","summary":"\u003cp\u003eA very common confusion for new users of Neovim is that their option settings for a particular filetype does not work in \u003ccode\u003einit.vim\u003c/code\u003e (or \u003ccode\u003einit.lua\u003c/code\u003e).\u003c/p\u003e","title":"How to Override Default Options in Neovim","type":"posts"},{"content":"","date":"2 December 2022","externalUrl":null,"permalink":"/categories/lua/","section":"Categories","summary":"","title":"Lua","type":"categories"},{"content":"In Lua, to pass variable number of arguments, we can use ... (three ellipses) syntax in function argument.\nLua tutorial here tells us to use arg variable to access variadic arguments passed to functions. According to discussions here, this only works for Lua 5.0 and has been removed in Lua 5.1. See also changelog here:\nThe vararg system changed from the pseudo-argument arg with a table with the extra arguments to the vararg expression. (See compile-time option LUA_COMPAT_VARARG in luaconf.h.) Instead, we can emulate that using the following code:\nlocal arg = {...} To get the number of extra arguments, we can use select('#', ...):\nfunction my_fun(a, b, ...) local n = select(\u0026#39;#\u0026#39;, ...) print(\u0026#39;num of extra arg:\u0026#39;, n) end Note that when first argument to select is a number, select() will return all variable arguments starting from that index.\nlocal v1, v2, v3, v4 = select(1, \u0026#39;ab\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;) -- v1: \u0026#39;ab\u0026#39;, v2: \u0026#39;b\u0026#39;, v3: \u0026#39;c\u0026#39;, v4: nil local v1, v2, v3, v4 = select(2, \u0026#39;ab\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;) -- v1: \u0026#39;b\u0026#39;, v2: \u0026#39;c\u0026#39;, v3: nil, v4: nil local v1, v2, v3, v4 = select(3, \u0026#39;ab\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;) -- v1: \u0026#39;c\u0026#39;, v2: nil, v3: nil, v4: nil local v1, v2, v3, v4 = select(4, \u0026#39;ab\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;) -- all these variable is nil As another example, we can calculate the sum of all arguments:\nlocal fun = function (a, b, ...) local sum = 0 sum = sum + a sum = sum + b local vararg = {...} for _, v in pairs(vararg) do sum = sum + v end return sum end print(fun(1, 2, 3, 4)) References # arg is nil: https://stackoverflow.com/a/38749326/6064933 https://forum.defold.com/t/lua-arg-variable-not-working-solved/22271/2 ","date":"2 December 2022","externalUrl":null,"permalink":"/2022/12/02/lua-variadic-arguments/","section":"Posts","summary":"\u003cp\u003eIn Lua, to pass variable number of arguments, we can use \u003ccode\u003e...\u003c/code\u003e (three ellipses) syntax in function argument.\u003c/p\u003e","title":"Variadic Arguments in Lua","type":"posts"},{"content":"Introduction # In Python, some packages are written mainly or partially in C++, and the Python interfaces are just wrappers around the binary C++ module. Among these packages, there is OpenCV.\nWhen I use python-lsp-server or pyright with Neovim1, I can not get method completion for the OpenCV package. This is because the OpenCV projects is developed using C++ and does not have stub files2 shipped yet.\nUsing stub file from project python-type-stubs # Fortunately, the project python-type-stubs provides stub files for several projects including OpenCV. To use the stub file, first find where OpenCV is installed on your system:\npython -c \u0026#39;import os, cv2; print(os.path.dirname(cv2.__file__))\u0026#39; Then download the stub file and put it in the same directory as OpenCV.\ncurl -sSL https://raw.githubusercontent.com/microsoft/python-type-stubs/main/cv2/__init__.pyi \\ -o path/to/opencv/directory/__init__.pyi Then restart nvim, the auto-completion for OpenCV should work as expected.\nUsing stubgen # We can also use stubgen to generate the stub files, like this:\n# stubgen is installed via mypy package pip install -U mypy stubgen -m cv2 The stub file will be saved under the out/ directory. However, the stub file generated by stubgen lacks doc and is not as good as stub file provided by project python-type-stubs.\nFor more info on using stubgen, visit its page.\nReferences # what is the use of stub files in Python: https://stackoverflow.com/q/59051631/6064933 relevant issue on OpenCV repo: https://github.com/opencv/opencv/issues/14590 discussion on pylance repo: https://github.com/microsoft/pylance-release/issues/138#issuecomment-874363285 you can check my nvim LSP config here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://peps.python.org/pep-0484/#stub-files\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 November 2022","externalUrl":null,"permalink":"/2022/11/16/auto_completion_opencv/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eIn Python, some packages are written mainly or partially in C++,\nand the Python interfaces are just wrappers around the binary C++ module.\nAmong these packages, there is \u003ca href=\"https://github.com/opencv/opencv\" target=\"_blank\"\u003eOpenCV\u003c/a\u003e.\u003c/p\u003e","title":"How to Enable Method Autocompletion for OpenCV","type":"posts"},{"content":"I am using MySQL server version 8.0.30 on my macOS. I try to read a local csv file into a mysql table using LOAD DATA LOCAL INFILE following some post1, but unfortunately I get the following error:\nError Code: 3948. Loading local data is disabled; this must be enabled on both the client and server sides\nFollowing the guide of some posts on the Internet, I tried to change the variable local_infile to 1:\nSET GLOBAL local_infile=1; Then I got the following error when loading csv file:\nError Code: 2068. LOAD DATA LOCAL INFILE file request rejected due to restrictions on access.\nThe right way to load local csv file # Here I will summarize what is working for me on macOS.\nchange the variable local_infile # First we need to run the following command when we are still connecting to the server:\nSET GLOBAL local_infile=1; Then use SHOW GLOBAL VARIABLES LIKE '%local_infile%'; to check if the change has taken effect. You should see the following output:\n+---------------+-------+ | Variable_name | Value | +---------------+-------+ | local_infile | ON | +---------------+-------+ 1 row in set (0.01 sec) Restart the server and establish new client connection # Then stop the mysql server and restart the server. If you are using macOS and install mysql via HomeBrew, this is easy to do\nbrew services stop mysql brew services start mysql Then stop the client connection.\nReconnect client to server # If you are using mysql command line client to connect to the server, run this:\nmysql --local-infile=1 -u root -p If you are using other SQL client to connect to the mysql server, the settings may vary. For MySQL Workbench, go to Database --\u0026gt; Manage Connections, select the connection, under Connection --\u0026gt; Advanced, there is a Others text box, add the following conf (in new line):\nOPT_LOCAL_INFILE=1 Then click the button Reconnect to DBMS in the toolbar. You should be able to load csv files into a table.\nLoad the csv file # Finally, we can load the local csv file. The csv file looks like this:\nfield1,field2 foobar,1 hello,2 great,3 First, we need to create a table to load the csv:\nCREATE TABLE my_table ( col1 VARCHAR(255), col2 INT ); The SQL query I use to load the data is:\nLOAD DATA LOCAL INFILE \u0026#39;/path/to/my_csv\u0026#39; INTO TABLE my_table -- load the csv data to my_table FIELDS TERMINATED BY \u0026#39;,\u0026#39; -- field separator LINES TERMINATED BY \u0026#39;\\n\u0026#39; -- line ending IGNORE 1 ROWS; -- ignore the header line References # Connect with local-infile Option in MySQL Workbench: https://stackoverflow.com/a/59408954/6064933 mysql 3948 error: https://stackoverflow.com/a/60717467/6064933 mysql LOAD DATA manual: https://dev.mysql.com/doc/refman/8.0/en/load-data.html https://stackoverflow.com/q/3635166/6064933\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 October 2022","externalUrl":null,"permalink":"/2022/10/15/mysql_read_csv/","section":"Posts","summary":"\u003cp\u003eI am using MySQL server version \u003ccode\u003e8.0.30\u003c/code\u003e on my macOS.\nI try to read a local csv file into a mysql table using \u003ccode\u003eLOAD DATA LOCAL INFILE\u003c/code\u003e following some post\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e,\nbut unfortunately I get the following error:\u003c/p\u003e","title":"How to Read Local CSV File to Table in MySQL","type":"posts"},{"content":"","date":"15 October 2022","externalUrl":null,"permalink":"/tags/mysql/","section":"Tags","summary":"","title":"MySQL","type":"tags"},{"content":"This is not a complete list of changes. Just what I have noticed. Complete release note for nvim 0.8 is here.\nNvim-lsp update # server capabilities # The old client.resolved_capabilities table is changed to client.server_capabilities, and the keys have also changed.\nold new client.resolved_capabilities.document_formatting client.server_capabilities.documentFormattingProvider client.resolved_capabilities.document_range_formatting client.server_capabilities.documentRangeFormattingProvider client.resolved_capabilities.document_highlight client.server_capabilities.documentHighlightProvider To check the complete server_capabilities table for a file, open that file, and run the following command:\nlua =vim.lsp.get_active_clients()[1].server_capabilities It will print the full table.\nmethod changes # Lsp format method has changed, both vim.lsp.buf.formatting_sync() and vim.lsp.buf.formatting() are deprecated. Now we should use vim.lsp.buf.format(), which has async param (default false) to control whether formatting should be async.\nvim.lsp.buf.range_formatting() is also deprecated. Now the formatexpr option for your buffer will be set to vim.lsp.formatexpr() if it is not set by user. To format the selected code, you just press gq instead.\nothers # This reddit post also shares other changes, like the LspAttach and LspDetach events, tagfunc, omnifunc support etc.\nOptions and defaults # mouse # Mouse is enabled by default1 and mousescroll option is added, you can define how many lines to scroll like this:\nset mousescroll=ver:1,hor:5 Also if you set mousemodel=popup, nvim now shows a popup menu. To disable this, just use set mousemodel=extend.\nwinbar/cmdline # Nvim has added a winbar option, it is like statusline, but on top of your window.\nFor cmdline, you can use set cmdheight=0 to hide it completely, and it will show when you run some commands. You may see the press enter message often when some messages are printed, which may be annoying. There is also a plugin noice.nvim made to ease the issue.\nclickable statusline and winbar # Nvim 0.8 adds clickable element in statusline and winbar, the syntax is %@some_func@text_shown%X. some_func is the function that will be run when you click text_shown.\nHere is a demo in Lua:\nfunction Hello(...) local arg = {...} arg = vim.inspect(arg) print(\u0026#39;hello world, arg:\u0026#39;, arg) end local w = vim.fn.winwidth(0) local pos = math.floor(w/2) local stl = string.rep(\u0026#34; \u0026#34;, pos) stl = stl .. \u0026#34;%5@v:lua.Hello@click me%X\u0026#34; vim.o.statusline=stl Save it as test.lua, then run nvim -u test.lua. Click the text click me on the statusline, you will see the message printed.\nState dir change # The directory for storing shada, undo, swap, log, lsp-log is changed from ~/.local/share/nvim to ~/.local/state/nvim. Check the exact directory with command echo stdpath('state'). See also https://github.com/neovim/neovim/issues/14090#issuecomment-1125055183.\nfiletype.lua by default # The new filetype.lua system will be used by default, and the following config should be removed:\nvim.g.do_filetype_lua = 1 vim.g.did_load_filetypes = 0 * and # can search selected text # * and # can now search selected text literally2. Previously I was using vim-asterisk together with nvim-hlslens. Now I can remove vim-asterisk, with a little hack:\nkeymap.set(\u0026#34;n\u0026#34;, \u0026#34;*\u0026#34;, \u0026#34;\u0026#34;, { callback = function() vim.fn.execute(\u0026#34;normal! *N\u0026#34;) hlslens.start() end, }) keymap.set(\u0026#34;n\u0026#34;, \u0026#34;#\u0026#34;, \u0026#34;\u0026#34;, { callback = function() vim.fn.execute(\u0026#34;normal! #N\u0026#34;) hlslens.start() end, }) It does has limitations, for example, you can not search multi-line selections.\nTreesitter # Now the treesitter parser for vim, lua, and help is enabled by default. But currently the help doc parser seems to have issues regarding conceal, as reported in issue here.\nMisc # Man command improve # It is implemented in lua and should be faster compared to its old vim implementation3. In buffer opened by :Man, you can type gO to show the argument list view4. Check command or map location # If the lua mapping is defined the via callback, we can now see its defined location.\nvim.keymap.set(\u0026#34;n\u0026#34;, \u0026#34;\u0026lt;leader\u0026gt;sv\u0026#34;, \u0026#34;\u0026#34;, { silent = true, desc = \u0026#34;reload init.lua\u0026#34;, callback = function() vim.cmd([[ update $MYVIMRC source $MYVIMRC ]]) vim.notify(\u0026#34;Nvim config successfully reloaded!\u0026#34;, vim.log.levels.INFO, { title = \u0026#34;nvim-config\u0026#34; }) end, }) For example, I have the above mapping, now I can see where it is defined with verb nmap ,sv (my leader key is comma).\nHowever, for mapping defined via right hand side string, we only see that the mapping is set from lua, but not the exact location.\nBy right hand side string, I mean mapping like the following:\nvim.keymap.set(\u0026#34;n\u0026#34;, \u0026#34;\u0026lt;leader\u0026gt;p\u0026#34;, \u0026#34;m`o\u0026lt;ESC\u0026gt;p``\u0026#34;, { desc = \u0026#34;paste below current line\u0026#34; }) This is unlike the mapping defined in vim script. To see the mapping location, start nvim with nvim -V1, then use the :verbose command again, we should see the mapping location.\nThis is still not perfect and confusing even for experienced users like me.\nvim.fs module # vim.fs (:h lua-fs) aims to provide some functions for common path operations like os.path in Python. For example:\nlocal d = vim.fs.dirname(\u0026#39;~/.config/nvim/init.lua\u0026#39;) print(d) startup time for require # Now time for require() is also shown for nvim --startuptime time.log like this:\n.... 206.153 000.101 000.101: require(\u0026#39;lualine_require\u0026#39;) 206.558 000.632 000.531: require(\u0026#39;lualine\u0026#39;) 214.826 000.150 000.150: require(\u0026#39;lualine.utils.mode\u0026#39;) 216.924 000.140 000.140: require(\u0026#39;lualine.extensions.nerdtree\u0026#39;) 217.125 011.338 010.417: require(\u0026#39;config.statusline\u0026#39;) .... change of support for old systems # Linux # Nvim build env for Linux is updated to Ubuntu 20.04, so the nightly release may not work for old machines any more5. I tested latest nvim nightly on CentOS 7.4, and it can not work anymore, with the following error:\n/lib64/libc.so.6: version `GLIBC_2.28\u0026rsquo; not found\nOther people is building nvim for old Linux systems, see discussions here.\nWindows # For Windows, only Windows 10 version 1809 or later is supported6.\nhttps://github.com/neovim/neovim/pull/19290\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/neovim/neovim/pull/18538\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/neovim/neovim/pull/19912\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/neovim/neovim/pull/17558\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/neovim/neovim/commit/48241c3b238e0cf5b4b5af61db4e54f2b8c02897\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/neovim/neovim/pull/18253/commits\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"5 October 2022","externalUrl":null,"permalink":"/2022/10/05/nvim-v08-release/","section":"Posts","summary":"\u003cp\u003eThis is not a complete list of changes. Just what I have noticed.\nComplete release note for nvim 0.8 is \u003ca href=\"https://github.com/neovim/neovim/releases/tag/v0.8.0\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"I read the nvim v0.8 release note so you do not have to","type":"posts"},{"content":"We can use trigger to automate oerations, for example, preventing insertion of a record if certain condition is met. In this post, we show an example trigger function and its usage.\nSuppose we have a loan table with following column:\ncopy_id: id for an item lend_date: date when it is lent return_date: date when it is returned, can be NULL (has been returned yet) Create a trigger function # In this example, we create a function to check whether the new record is a valid record. If lend_date for new record is later than existing record, and is smaller than return_date of the copy, or if this copy hasn\u0026rsquo;t been returned (loan.return_data IS NULL), then this is invalid record.\nCREATE OR REPLACE FUNCTION check_loan_validity() RETURNS TRIGGER LANGUAGE PLPGSQL AS $func$ BEGIN IF EXISTS(SELECT 1 FROM loan WHERE loan.copy_id = NEW.copy_id AND NEW.lend_date \u0026gt;= loan.lend_date AND (NEW.lend_date \u0026lt;= loan.return_date OR loan.return_date IS NULL)) THEN RAISE EXCEPTION \u0026#39;Invalid lend_date provided: %\u0026#39;, NEW.lend_date; END IF; RETURN NEW; END; $func$; The statement LANGUAGE PLPGSQL tells postgres that we can using plpgsql syntax, which is more powerful than plain SQL. See more discussion here.\nYou can also put the language declaration after the function body (see also this post):\n$func$ \u0026lt;function body\u0026gt; $func$ LANGUAGE PLPGSQL; All string inside the dollar signs are function body definition. The use of dollar sign here is to simplify the writing of the function, as indicated by official doc on functions:\nThe function body is simply a string literal so far as CREATE FUNCTION is concerned. It is often helpful to use dollar quoting (see Section 4.1.2.4) to write the function body, rather than the normal single quote syntax. Without dollar quoting, any single quotes or backslashes in the function body must be escaped by doubling them\nWhen creating a trigger function, the variable NEW represents the new records that is going to be inserted or updated.\nCreate the trigger # After creating the trigger function, we can now create a trigger on this table.\nCREATE TRIGGER check_loan_trigger BEFORE INSERT ON loan FOR EACH ROW EXECUTE PROCEDURE check_loan_validity(); References # dollar quoting: https://www.postgresql.org/docs/current/sql-syntax-lexical.html#SQL-SYNTAX-DOLLAR-QUOTING Why are $$ used in PL/PgSQL: https://stackoverflow.com/a/12172353/6064933 official doc on trigger: https://www.postgresql.org/docs/current/plpgsql-trigger.html https://www.postgresqltutorial.com/postgresql-triggers/creating-first-trigger-postgresql/ ","date":"12 September 2022","externalUrl":null,"permalink":"/2022/09/12/postgresql_trigger_function/","section":"Posts","summary":"\u003cp\u003eWe can use trigger to automate oerations, for example, preventing insertion of a record if certain condition is met.\nIn this post, we show an example trigger function and its usage.\u003c/p\u003e","title":"Creating A Trigger in PostgreSQL","type":"posts"},{"content":"","date":"12 September 2022","externalUrl":null,"permalink":"/tags/postgresql/","section":"Tags","summary":"","title":"PostgreSQL","type":"tags"},{"content":"Here is how much I spend for living in Shenzhen, China as a non-local people. Note the cost may vary a lot depending on various factors.\nAll numbers are in the unit of Chinese Yuan (symbol ¥).\nHousing/renting # For renting a house, there are mainly two types you can choose, private property or urban village.\nprivate property # Private properties generally have better overall conditions, less noise/quiet, cleaner, but usually more expensive.\nFor renting, I am currently using ziroom, it is the largest renting platform in China. Ziroom works by renting homes from home owners and re-rent these homes room by room to different tenants. So their model is a lot like the co-living model, where different people share a house1. It will refurbish the home a bit to standardize their offerings, usually they will provide refrigerator, microwave oven, washing machine, hot shower (powered either by electricity or gas) in the home. For each room, they will also provide a bed, a working table with lamp, air conditioner, and a wardrobe.\nThe price for renting a room from ziroom is higher than directly renting it from the home owner. It mainly depends on the size of the room, which floor the house is, whether there is elevator, the condition of the property, and also the distance to the train station, supermarket etc.\nFor reference, I once rented a less than $15 \\mathbf{m^2}$ room from ziroom, and it costed me around ¥2000. It is located in 6th floor and has no elevator, otherwise, it may cost me ¥2500. The price also includes the internet cost.\nZiroom also charge about 11% of the rent for service fees, which includes public areas cleaning every two weeks, and also repair services for anything broken or malfunctioning. So if the rent is ¥2000, the service fee is about ¥200.\nFor utilities (water, electricity, gas), we need to pay it monthly. The biggest expense will be electricity price, especially in hot summer, and it may exceed ¥250. Combined, utilities will cost around ¥300.\nurban village # Urban villages also provide a lot of housing with affordable prices. For example, in urban village, you can probably rent an apartment less than 1500 for $30 \\mathbf{m^2}$. There is also a lot of grocery store and restaurants in urban village, which is another advantage.\nTransportation # Shenzhen has one of the largest metro lines in China, you can literally go anywhere in Shenzhen with the metro lines. The price is relatively cheap: for a trip of 40 min, you may need ¥6 or ¥7. There are also a lot of bus lines, which is cheaper than metro. The transportation cost will be about ¥350/month.\nFor taking taxes or using ride sharing apps, the price for 20km is about ¥65, which is a lot more expensive than using public transportation.\nFood # For breakfast, I usually eat bread or baozi, with milk. It costs me less than ¥7. For lunch, it really depends on what I eat, usually less than ¥30, and in rare times, less than ¥40.\nIf I go to restaurants in the weekend, the cost will be certainly much more. You can eat really good food with ¥150 per person, which is less than 30 Euros. For regular restaurant, the cost per person may be about ¥70 - ¥80, which is not expensive.\nSince I don\u0026rsquo;t go to the restaurants frequently, so my monthly expense for food may be 2500.\nPhones/Internet # For my phone, I use China Unicom and spend ¥36/month, and the data is about 50 GB, which is a lot. It also includes around 120 minutes of calling, but now people will just use wechat to call each other.\nFor internet, it is relatively expensive compared to other parts of China, but it may be still cheap compared to Europe. Both China Mobile, China Unicom and China Telecom provide internet access service. Among them, China Telecom may be the most expensive. For 300 Mbps, you need to pay ¥159/month, and for 1000 Mbps, you need ¥229/month.\nMisc # Watching a movie costs about ¥50 mostly. I may also need to buy daily stuff like shampoo, laundry detergent, tissue paper etc. Occasionally, I also need to buy clothes, shoes, but that is not very frequent. So I have not include those cost in this post.\nConclusion # So the list of my minimum cost of living in Shenzhen is as follows:\nRenting: ¥2000 + ¥200 (service fee) + ¥300 (utility) = ¥2500 Transportation: ¥350 Food: around ¥2500 Phones + Internet: ¥200 So in total, that is about ¥5500 for one month. If I take other expenses into account, cost of living for one month will be around ¥6000.\nUsually, they share bathrooms, kitchen and living room, but they have their own separate rooms.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"4 September 2022","externalUrl":null,"permalink":"/2022/09/04/cost-of-living-shenzhen/","section":"Posts","summary":"\u003cp\u003eHere is how much I spend for living in \u003ca href=\"https://en.wikipedia.org/wiki/Shenzhen\" target=\"_blank\"\u003eShenzhen, China\u003c/a\u003e as a non-local people.\nNote the cost may vary a lot depending on various factors.\u003c/p\u003e\n\u003cp\u003eAll numbers are in the unit of \u003ca href=\"https://en.wikipedia.org/wiki/Renminbi\" target=\"_blank\"\u003eChinese Yuan\u003c/a\u003e (symbol \u003ccode\u003e¥\u003c/code\u003e).\u003c/p\u003e","title":"Cost of Living in Shenzhen","type":"posts"},{"content":"I saw from the repo awesome neovim1 a plugin that helps the user create the intermediate dir when they save a file. I wondered why this feature even needs a whole plugin? You can literally do this with a few lines of code.\nHere is a similar Lua snippet from my own config2:\n-- Auto-create dir when saving a file, in case some intermediate directory does not exist local api = vim.api api.nvim_create_augroup(\u0026#34;auto_create_dir\u0026#34;, { clear = true }) api.nvim_create_autocmd({ \u0026#34;BufWritePre\u0026#34; }, { pattern = \u0026#34;*\u0026#34;, group = \u0026#34;auto_create_dir\u0026#34;, callback = function() local fpath = fn.expand(\u0026#39;\u0026lt;afile\u0026gt;\u0026#39;) local dir = fn.fnamemodify(fpath, \u0026#34;:p:h\u0026#34;) -- utils.may_create_dir(dir) local res = fn.isdirectory(dir) if res == 0 then fn.mkdir(dir, \u0026#39;p\u0026#39;) end end }) This snippet is simple and do not require sophisticated knowledge to write. You can write it perhaps after reading the nvim lua guide. I do not think this is good for new users to learn how to use Neovim properly. It creates unnecessary dependencies in their config for external plugins. The extreme will be like the JavaScript world where there is dependency hell, you rely on external libraries for even a small feature/function you do not care to write. When that library fails/disappears, your library fails too, which is manifested in the famous left-pad incident.\nMy philosophy is that if you can create a feature easily without external plugins, try to write it yourself unless it will cost you a lot of effort, e.g., write a fully-featured git client for neovim (vim-fugitive level).\nI think as a neovim user, if you are serious about it, you got to learn some basic things. Otherwise, you won\u0026rsquo;t go long in this road. In this sense, the hype over the pre-configuration is also doubtful. Can the new user really learn something from these pre-configurations, or are they just stuck in these pre-configurations, which may have their own config options? My guess is that these configurations can not really help the new users learn the basics.\nEdit: I posted this post on reddit, someone gives a cleaner way to do this:\nvim.api.nvim_create_autocmd({ \u0026#34;BufWritePre\u0026#34; }, { pattern = \u0026#34;*\u0026#34;, group = vim.api.nvim_create_augroup(\u0026#34;auto_create_dir\u0026#34;, { clear = true }), callback = function(ctx) local dir = vim.fn.fnamemodify(ctx.file, \u0026#34;:p:h\u0026#34;) vim.fn.mkdir(dir, \u0026#34;p\u0026#34;) end }) According to the doc, the callback accepts a table containing the context info. The file path for the buffer where this autocmd is fired is in the file key.\nReferences # left-pad incident: https://www.theverge.com/2016/3/24/11300840/how-an-irate-developer-briefly-broke-javascript https://qz.com/646467/how-one-programmer-broke-the-internet-by-deleting-a-tiny-piece-of-code/ https://www.reddit.com/r/programming/comments/4bjss2/an_11_line_npm_package_called_leftpad_with_only/ A site made for left-pad: http://left-pad.io/ https://medium.com/@digitalpublic/npm-azer-ko%C3%A7ulu-kik-and-the-law-f22742f099f6 https://github.com/rockerBOO/awesome-neovim\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nModified a bit to make it self-running, original here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 August 2022","externalUrl":null,"permalink":"/2022/08/21/you-do-not-need-a-plugin-for-this/","section":"Posts","summary":"\u003cp\u003eI saw from the repo awesome neovim\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e a plugin that helps the user create the intermediate dir when they save a file.\nI wondered why this feature even needs a whole plugin?\nYou can literally do this with a few lines of code.\u003c/p\u003e","title":"You Do Not Need a Plugin for This Feature","type":"posts"},{"content":"Recently, when I try to use Ctrl-left and Ctrl-right in Neovim, I found that they are not received by Neovim. I thought this is a Neovim issue. However, when I test these two shortcuts using cat in the terminal (I tried both Kitty and wezterm), it does not work either.\nI asked this question in Vim_zh telegraph group1, and someone reminded me that it may be related to macOS mapping these keys for mission control2. There are multiple similar posts on the Internet.\nHere is what is working for me on macOS Monterey (version 12.5.1):\nOpen System Preferences --\u0026gt; Keyboard Go to the shortcuts tab, and click Mission Control on the left list Under Mission Control menu on the right, uncheck Move left a space and Move right a space. Now these two shortcuts will be freed.\nBTW, if you like to switch between different desktops, you can use three finger swipes on the touch pad. It works better than using key shortcuts.\nThis is a telegraph group for Chinese Vim/Nvim users, with a lot of profession devs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMission control is basically multiple desktops, see also https://en.wikipedia.org/wiki/Mission_Control_(macOS)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 August 2022","externalUrl":null,"permalink":"/2022/08/20/ctrl-left-right-not-work-mac/","section":"Posts","summary":"\u003cp\u003eRecently, when I try to use \u003ccode\u003eCtrl-left\u003c/code\u003e and \u003ccode\u003eCtrl-right\u003c/code\u003e in \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e, I found that they are not received by Neovim.\nI thought this is a Neovim issue.\nHowever, when I test these two shortcuts using \u003ccode\u003ecat\u003c/code\u003e in the terminal (I tried both Kitty and wezterm),\nit does not work either.\u003c/p\u003e","title":"Ctrl-left and Ctrl-right Not Working in macOS?","type":"posts"},{"content":"As a machine learning engineer/data scientist, after the model development process is finished, we need to deploy the model as a web service using different web frameworks. To achieve maximum performance and lower the hardware cost, we often need to optimize the speed our service, including TensorRT acceleration, config tuning, etc.\nIn order to reliably and objectively evaluate the performance of the service under different configs, we need to load-test the service. In this post, I want to share how to load test your HTTP service with wrk.\nInstall # Wrk is a lightweight and easy-to-use load testing tool. To install it, run the following command:\ngit clone --depth=1 https://github.com/wg/wrk.git cd wrk make -j General options # The generated wrk executable is under this folder. This is how you use wrk for GET request benchmark:\nwrk -t 6 -c 200 -d 30s --latency https://google.com Some of the command flags for wrk:\n-c: the number of connections to use -t: the number of threads to use -d: the test duration, e.g., 60s -s: the lua script to use for load testing our service (will cover in later section) --timeout how many seconds to timeout a request --latency: show the latency distribution for all the requests For connections and threads, the author suggest using thread number less than the core in CPU. The connections are shared in different threads, i.e., each threads get N = connections/threads connections.\nRefs # wrk threads and connections: https://github.com/wg/wrk/issues/90 https://github.com/wg/wrk/issues/205 Wrk in action # Making GET request in wrk is straightforward and easy, so I am not going to show it here. In the following, I will show how to make POST request with wrk.\nSuppose we have the following server code:\nfrom flask import Flask, jsonify, request app = Flask(__name__) @app.route(\u0026#34;/demo\u0026#34;, methods=[\u0026#34;POST\u0026#34;]) def server(): if request.content_type == \u0026#39;application/x-www-form-urlencoded\u0026#39;: req = request.form.to_dict() elif request.content_type == \u0026#39;application/json\u0026#39;: req = request.get_json() else: return jsonify({\u0026#39;status\u0026#39;: 1, \u0026#39;msg\u0026#39;: \u0026#39;unsupported content type\u0026#39;}) print(f\u0026#34;user req: {req}\u0026#34;) w = int(req.get(\u0026#34;width\u0026#34;, 0)) h = int(req.get(\u0026#34;height\u0026#34;, 0)) return jsonify({\u0026#39;status\u0026#39;: 0, \u0026#39;msg\u0026#39;: \u0026#34;ok\u0026#34;, \u0026#34;area\u0026#34;: w*h}) if __name__ == \u0026#34;__main__\u0026#34;: app.run(host=\u0026#34;0.0.0.0\u0026#34;, port=1234) To test the server\u0026rsquo;s performance, we run the following wrk command:\nwrk -t 4 -c 100 -d 180s -s test.lua --latency \u0026#34;http://server_ip:1234/demo\u0026#34; The content of test.lua is like:\nwrk.method = \u0026#34;POST\u0026#34; -- post form urlencoded data wrk.body = \u0026#34;width=2\u0026amp;height=2\u0026#34; wrk.headers[\u0026#39;Content-Type\u0026#39;] = \u0026#34;application/x-www-form-urlencoded\u0026#34; The above script assumes you are making request in application/x-www-form-urlencoded format. If you content type is application/json, use the following test.lua:\nwrk.method = \u0026#34;POST\u0026#34; -- post json data wrk.body = \u0026#39;{\u0026#34;width\u0026#34;: 2, \u0026#34;height\u0026#34;: 2}\u0026#39; wrk.headers[\u0026#39;Content-Type\u0026#39;] = \u0026#34;application/json\u0026#34; Advanced scripting # wrk can also support advanced control for benchmarking, the official guide is here.\nReferences # post request with wrk: https://stackoverflow.com/q/15261612/6064933 http://www.fridayhaohao.com/articles/23/ https://www.zhoujunwen.com/2022/%E5%B7%A5%E5%85%B7/HTTP%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7%E4%B9%8Bwrk/#%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80 https://www.wangbo.im/posts/usage-of-benchmarking-tool-wrk-and-wrk2/ https://zhaox.github.io/benchmark/2016/12/28/wrk-guidelines ","date":"10 August 2022","externalUrl":null,"permalink":"/2022/08/10/http_benchmark_wrk/","section":"Posts","summary":"\u003cp\u003eAs a machine learning engineer/data scientist, after the model development process is finished,\nwe need to deploy the model as a web service using different web frameworks.\nTo achieve maximum performance and lower the hardware cost,\nwe often need to optimize the speed our service, including TensorRT acceleration, config tuning, etc.\u003c/p\u003e","title":"Benchmarking Your HTTP Service Using wrk","type":"posts"},{"content":"","date":"10 August 2022","externalUrl":null,"permalink":"/tags/lua/","section":"Tags","summary":"","title":"Lua","type":"tags"},{"content":"This post summarizes how to update author info of Git commits.\nFor most recent commit # To change the author info of most recent commit, run\ngit commit --amend --author=\u0026#34;author_name \u0026lt;author_email\u0026gt; --no-edit\u0026#34; Note that the \u0026lt;\u0026gt; around the email. It is mandatory, otherwise, we see the following weird error:\nfatal: No existing author found with \u0026lsquo;xxxx\u0026rsquo;\nIf the author has been set in .git/config, we can also simply run:\ngit commit --amend --reset-author --no-edit For older commits # If we want to change the author info for multiple commits, we can use git rebase. For example, suppose we have this commit graph: A-\u0026gt;B-\u0026gt;C-\u0026gt;D-\u0026gt;E, we want to change the author of commit B and D. Here is the steps:\nRun the rebase command, git rebase -i A A vim window opens and you will see a list of commit hash for B, C, D, E, with pick before them. Change pick to edit, before the commit hash for commit B and D. Save and quit vim window :wq Run git commit --amend --author=\u0026quot;author_name \u0026lt;author-email\u0026gt;\u0026quot; --no-edit (this is for commit B) Run git rebase --continue to continue the rebase Run git commit --amend --author=\u0026quot;author_name \u0026lt;author-email\u0026gt;\u0026quot; --no-edit (this time for commit D) Run git rebase --continue to continue the rebase The rebase process finishes.\nFor a range of commits # If you want to change the author info from an older commit, to the most recent commit, there is a more efficient/faster way than the previous method:\n# Note that to also include the root commit, we need to add --root option git rebase --interactive --exec \u0026#34;git commit --amend --reset-author --no-edit\u0026#34; {commit-ref} We will a vim window like this:\npick xxx exec git commit --amend --reset-author --no-edit pick xxx exec git commit --amend --reset-author --no-edit ... Save the quit the window (:wq). The author info for these commits will be changed automatically.\nNote that changing the commit author info will change the commit hash for this commit, and also commit hash after that specific commit. So your local commit will diverge with remote if you have pushed those commits to the remote repo.\nReferences # How to change the commit author for a single commit? How do I change the author and committer name/email for multiple commits ","date":"5 August 2022","externalUrl":null,"permalink":"/2022/08/05/update_commit_author_info_git/","section":"Posts","summary":"\u003cp\u003eThis post summarizes how to update author info of Git commits.\u003c/p\u003e","title":"How to Change Commit Author Info in Git","type":"posts"},{"content":"When we serve a HTTP service via uWSGI, we can monitor its stats via uwsgitop.\nInstall # uwsgitop is a performance monitoring tool built for uWSGI. It can be installed via pip:\npip3 install uwsgitop Usage # Using socket # Add the following to your uWSGI config:\nstats=/tmp/stats.socket Then use uwsgitop to monitor the stats:\nuwsgitop /tmp/stats.socket In this case, uwsgitop should be installed on the same machine as your service.\nUsing HTTP # If you want to monitor the service via HTTP, add the following to uWSGI conf:\nstats=0.0.0.0:1235 stats-http=true Then run uwsgitop:\nuwsgitop http://127.0.0.1:1717 The meaning of output is explained here.\nReferences # https://uwsgi-docs.readthedocs.io/en/latest/StatsServer.html https://mjsaah.net/post/tuning_uwsgi/ ","date":"1 August 2022","externalUrl":null,"permalink":"/2022/08/01/uwsgi_service_stat_monitor/","section":"Posts","summary":"\u003cp\u003eWhen we serve a HTTP service via uWSGI, we can monitor its stats via \u003ca href=\"https://github.com/xrmx/uwsgitop#readme\" target=\"_blank\"\u003e\u003ccode\u003euwsgitop\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e","title":"Monitoring Service Stat with uwsgitop","type":"posts"},{"content":"","date":"1 August 2022","externalUrl":null,"permalink":"/tags/uwsgi/","section":"Tags","summary":"","title":"UWSGI","type":"tags"},{"content":"In Python, we often see the use of super() in class initialization.\nSomething like this:\nclass MyClass(Base): def __init__(self): super().__init__() In order to understand super(), we first need to understand MRO (method resolution order) in Python. MRO means how to find a method for an object along the class inheritance hierarchy.\nMRO in Python # To check a class\u0026rsquo;s MRO, we can use MyClass.__mro__. It will print out a linear list of class for method resolution.\nFor single class inheritance, it is simple to get the MRO list. For multiple inheritance, Python 2.3 and higher use the C3 linearization method. This post by Guido van Rossum tells more about the history and development of MRO in Python.\nC3 linearization # There is a complex case in this post.\nclass PrettyType(type): \u0026#34;\u0026#34;\u0026#34;make the repr of the classes look nice when finally listed\u0026#34;\u0026#34;\u0026#34; def __repr__(self): return self.__name__ # subclasses of O will also have the metaclass: class O(metaclass=PrettyType): \u0026#39;O, object\u0026#39; class H(O): \u0026#39;H, O, object\u0026#39; # H\u0026#39;s parent is O class G(H): \u0026#39;G, H, O, object\u0026#39; # G\u0026#39;s linearization is itself followed by its parent\u0026#39;s linearization. class I(G): \u0026#39;I, G, H, O, object\u0026#39; # I\u0026#39;s linearization is I followed by G\u0026#39;s class F(H): \u0026#39;F, H, O, object\u0026#39; class E(H): \u0026#39;E, H, O, object\u0026#39; class D(F): \u0026#39;D, F, H, O, object\u0026#39; class C(E, F, G): \u0026#39;C, E, F, G, H, O, object\u0026#39; # C\u0026#39;s linearization is C followed by a consistent linearization of # its parents, left to right. # First C, then E - then you might be tempted to put H after E, # but H must come after F and G (see class F and G) # so we try F\u0026#39;s linearization, noting that H comes after G, # so we try G\u0026#39;s linearization, H then consistently comes next, then object class B(O): \u0026#39;B, O, object\u0026#39; class A(B, C, D): \u0026#39;A, B, C, E, D, F, G, H, O, object\u0026#39; Let\u0026rsquo;s derive its MRO list step by step according to C3 linearization.\nL(O) = [O] L(H) = [H] + L(O) = [H, O] L(B) = [B, O] L(E) = [E] + L[H] = [E, H, O] L(F) = [F, H, O] L(G) = [G, H, O] L(C) = [C] + merge(L(E), L(F), L(G), [E, F, G]) = [C] + merge([E, H, O], [F, H, O], [G, H, O], [E, F, G]) # choose E = [C, E] + merge([H, O], [F, H, O], [G, H, O], [F, G]) # can not choose, choose F = [C, E, F] + merge([H, O], [H, O], [G, H, O], [G]) # can not choose H, choose G = [C, E, F, G] + merge([H, O], [H, O], [H, O]) # choose H = [C, E, F, G, H] + merge([O], [O], [O]) = [C, E, F, G, H, O] L(D) = [D] + L(F) = [D, F, H, O] L(A) = [A] + merge(L(B), L(C), L(D), [B, C, D]) = [A] + merge([B, O], [C, E, F, G, H, O], [D, F, H, O], [B, C, D]) # choose B = [A, B] + merge([O], [C, E, F, G, H, O], [D, F, H, O], [C, D]) # can not choose O, choose C = [A, B, C] + merge([O], [E, F, G, H, O], [D, F, H, O], [D]) # can not choose O, choose E (it is the first viable node after O) = [A, B, C, E] + merge([O], [F, G, H, O], [D, F, H, O], [D]) # can not choose O and F, choose D = [A, B, C, E, D] + merge([O], [F, G, H, O], [F, H, O]) # can not choose O, choose F = [A, B, C, E, D, F] + merge([O], [G, H, O], [H, O]) # can not choose O, choose G = [A, B, C, E, D, F, G] + merge([O], [H, O], [H, O]) # can not choose O, choose H = [A, B, C, E, D, F, G, H] + merge([O], [O], [O]) = [A, B, C, E, D, F, G, H, O] So the final MRO list would be [A, B, C, E, D, F, G, H, O]. You can verify by running print(A.mro()).\nThe basic idea is to work from root node to leaf node. When merging a node, always choose the first node in a certain list, from left list to right list, if this node does not appear in other positions in other lists.\nuse of super() # If we use super(), it will try to find the next class in the MRO list and try to call the corresponding method in that class.\nclass Base: def __init__(self): print(\u0026#34;class Base init called\u0026#34;) class B(Base): def __init__(self): print(\u0026#34;class B init called\u0026#34;) Base.__init__(self) class C(Base): def __init__(self): print(\u0026#34;class C init called\u0026#34;) super().__init__() # class D(C, B): class D(B, C): def __init__(self): print(\u0026#34;class D init called\u0026#34;) super().__init__() def main(): d = D() if __name__ == \u0026#34;__main__\u0026#34;: main() If we run the above code, we see the following output:\nclass D init called\nclass B init called\nclass Base init called\nThe MRO list is [D, B, C, Base, object] (in python3, object is the base class for any other class). Class C is not initialized because in the __init__() method of B, we are not using super(). If we replace the line\nBase.__init__(self) with\nsuper().__init__() we will see the following output instead:\nclass D init called\nclass B init called\nclass C init called\nclass Base init called\nIf we change the inheritance of class D from D(B, C) to D(C, B), we observe the following output:\nclass D init called\nclass C init called\nclass B init called\nclass Base init called\nIn this case, the MRO list is [D, C, B, Base, object]. Since both D and C use super() in their init function, so we can see that C and B are initialized. Remember that super() will try to find the next class in the MRO list. We also see that Base is also initialized, because we are using Base.__init__(self) explicitly in init function for class B, nothing related to super() here.\nThis post provides another similar example to illustrate the idea of super(). So in order to run the initialization method the parent classes correctly and not rely on some chance, we can use super() to the rescue.\nReferences # A detailed guide on how Python MRO works since version 2.3: https://www.python.org/download/releases/2.3/mro/#examples python MRO: https://stackoverflow.com/a/2010732/6064933 Understanding Python super() with init() methods multiple inheritance: https://en.wikipedia.org/wiki/Multiple_inheritance https://rhettinger.wordpress.com/2011/05/26/super-considered-super/ ","date":"31 July 2022","externalUrl":null,"permalink":"/2022/07/31/super_in_python/","section":"Posts","summary":"\u003cp\u003eIn Python, we often see the use of \u003ca href=\"https://docs.python.org/3/library/functions.html#super\" target=\"_blank\"\u003esuper()\u003c/a\u003e in class initialization.\u003c/p\u003e","title":"A Dive into super() in Python","type":"posts"},{"content":"If we pass list as parameter to a function and change the parameter, the original list is also changed. This is because list is a mutable type, when we pass list to a function, we are passing the same list.\ndef my_fun(my_list): my_list.append(1) return my_list x = [1, 2, 3] y = my_fun(x) print(f\u0026#34;x: {x}, y: {y}\u0026#34;) # x, y are both [1, 2, 3, 1] How can we pass the \u0026ldquo;value\u0026rdquo; of this list instead of its \u0026ldquo;reference\u0026rdquo;? We can use several ways:\nslicing: my_fun(x[:]) list(): my_fun(list(x)) list.copy(): my_fun(x.copy()) copy.copy(): my_fun(copy.copy(x)) copy.deepcopy(): my_fun(copy.deepcopy(x)) The first four ways only create a shallow copy of the original list. They only work for simple list consisting of immutable types, for example, a list of int. If the list element is a mutable type themselves, they will not work.\nOnly the copy.deepcopy() method can truly create a new list.\nreferences # https://docs.python.org/3/faq/programming.html#why-did-changing-list-y-also-change-list-x clone a list so that it doesn\u0026rsquo;t change after assignment: https://stackoverflow.com/q/2612802/6064933 pass list as argument: https://stackoverflow.com/q/2322068/6064933 pass list to function by value: https://stackoverflow.com/q/15377050/6064933 ","date":"27 July 2022","externalUrl":null,"permalink":"/2022/07/27/pass_list_by_value_python/","section":"Posts","summary":"\u003cp\u003eIf we pass list as parameter to a function and change the parameter, the original list is also changed.\nThis is because list is a mutable type, when we pass list to a function, we are passing the same list.\u003c/p\u003e","title":"How to Pass List by Value as Parameter in Python","type":"posts"},{"content":"序：有感于无休无止的核酸检测，我觉得有必要写点什么，记录下正在发生的和已经发生的历史。\n很多年后，回过头看 2020 年 1 月，我们无法预料到 Covid19 竟然对人类社会造成了如此大的影响。\n2020 \u0026ndash; 源起 # 2020 年 1 月中旬，就开始传武汉出现了新冠肺炎，有预见的人已经开始在京东、淘宝上购买口罩，囤积物资，到了 1 月 18、19 号的那个周末，事情已经起了变化，根据 SARS 的经验，很多人已经开始囤积口罩，酒精等防疫物资，这个时候去京东买口罩已经完全买不到了，无论是医用普通口罩，还是 KN95 型口罩。等到 20 号上班，所有人还处在摇摆不定的时候，公司也没有要求必须戴口罩，中午吃饭的时候，我去药店看了一下，口罩已经不好买到了，跑了两个药店，买回来一包口罩。\n在惴惴不安中，过完了那一周，接着就到了春节放假。按照惯例，还是要回家过年，不过新冠的阴影下，所有人都变得谨慎，在火车上，我们都戴着口罩，全程不敢摘下来。\n紧接着就有了武汉封城，虽然 03 年已经来过一次非典，这种封城规模的事情却是第一次。我们在小县城是没有多少感触的，最多出去的时候戴个口罩，生活没有受到多少影响。在那最开始的一段时间，武汉的封城在全国的关注下犹如直播，资源的不足，管理的混乱，最初对病毒认识的不足，人们的恐慌，微博上每天都是武汉发出的求救的文章。最有代表性的就是敲锣女1，在自家阳台上敲锣，引起了网民的关注，也让自己的亲人得到了及时的救助。还有李文亮医生2，他甚至并不是吹哨人，不是典型意义上的英雄，只是在新冠萌芽期的 19 年 12 月份，在微信群里警告病毒的危险性，被武汉警方带去训诫。网民以这样的方式认识了他，他在新冠早期也因为感染病毒而死。在他死的那天，无数微博网友为之哀痛，他的新浪微博已经成为某种虚拟的纪念碑。\n为了预防新冠，2020 年的春节也第一次被延长到两周3。假期结束，我们回到深圳，开始了居家远程工作，那一段时间，几乎没有出去过，买菜都是网上下单，然后去小区门口取菜。居家办公没多久，公司就开始要求我们去公司办公，我们组是一半一半轮流去公司上班，由于附近的餐馆都关门了，只能自己带饭，就那样度过了几周的时间。\n期间还夹杂了一些无奈的插曲，二月多疫情最严重的时候，我租的蛋壳公寓的房子，原房东找上门要求收房，原因是蛋壳公寓由于疫情影响资金紧张，已经开始拖欠房东的房租。那个时候，各个小区封闭，无法找房，也没办法搬进搬出，和房东商量以后，我们给房东付了一些房租，房东允许我们多住几周。后面疫情有所缓和，从蛋壳公寓退房，找了自如的房子。蛋壳公寓退还了我们剩余的房租以及押金，再过了几个月，蛋壳公寓就完全爆雷了，很多租客直接被房东赶出房子，我们阴差阳错躲过了爆雷。\n三月多疫情缓和以后，我们又全部回到了公司上班，一些家在湖北的同事由于湖北的封控，还是远程办公，要等到四月份才能回来。除了每天要戴口罩，生活似乎恢复了正常。6 月份的时候，我甚至还去长三角的几个城市玩了一圈，没有核酸检测，也没有不停的扫码，疫情似乎已经远离了中国。\n2021 \u0026ndash; 平静 # 时间快速到了 2021 年，春节的时候，政府号召所有人「非必要不回家」4，于是又在深圳度过了一个春节。\n疫苗 # 2021 年上半年中国开始推行大规模疫苗接种，中国的疫苗属于灭活病毒疫苗，看到一些数据指出科兴疫苗的效力不够，再加上对国产疫苗安全性担忧，本来不想打疫苗，听到有传闻，不打疫苗会「麻烦」。政府虽然在新闻上宣传不会强制大家打疫苗，但是各位，如果你生活在这个国家久了，就会知道，基层在实际操作中，总会找各种手段让你「自愿」打疫苗5，他们最善于找出你的软肋6来威胁你，我在 5 月和 6 月分别接种了北京生物和成都生物的 vero 细胞疫苗。21 年深圳虽然有零星报告新冠病例，不过对大多数人的生活没有太多影响。\n由于中国严格的防疫和出入境措施，中国在 2020 年和 2021 年的新冠感染人数远低于世界其他地方，就在世界处于「水深火热」的 2021 年，我们却过着相对正常的生活，「风景这边独好」，政府也在大力宣传中国式防疫的优秀。9 月份，我和小张还趁着中秋假期去贵州和重庆玩了一趟。\n这种对疫情形势的乐观也反映在就业市场上，21 年各个公司招人的力度比较大，我所在的部门迎来了一波离职的高潮，很多同事都趁此机会另谋高就，是我来公司以后遇到的第一次。\n2022 \u0026ndash; 未到尾声 # 2021 年底，2022 年初7，西安出现了较多新冠病例，开始全城隔离，但却没有做好保障工作，有病人求医被拒导致死亡，有孕妇求医被拒导致流产，此后这类荒唐的事情还会在其他地方不断上演，你死了没事，如果出现疫情就是我的问题，这就是其中可笑的逻辑。\n到了 2022 年 1 月，深圳开始出现新冠病例，到了二三月感染者越来越多，很多小区开始封锁，坐地铁和进办公楼也开始要求提供 24 小时或 48 小时核酸检测证明，3 月份的时候，深圳甚至有一周按下暂停键，地铁公交停运，所有人居家办公一周。从 2 月份开始做核酸检测，就没有停过了，疫情放松的时候，要求 72 小时核酸（为了防止健康码过期接不上，实际上还是会两天做一次核酸），疫情紧张的时候，就开始要求 24 小时核酸。社区在不同地方设有核酸检测点，小的检测点只有两个检测位，大的检测点可能有 4、5 个检测位，排队检测最长的等待时间，接近 1 个小时。核酸检测要求在 2022 年 12 月第二周被宣布放弃，我在那一周没有做一次核酸检测。\n政府对治疗感冒发热药品的控制也很严格，感冒发烧了，买药也必须实名购买8，或者去特定的发热门诊才能得到治疗，而且需要做核酸检测，确定结果是阴性才可以走。一月多我有次晚上没穿上衣看书，结果有点感冒发烧，想到去医院那么麻烦，干脆不去了，自己在家里呆了三天，吃了点药，扛了过去。\n部分由于疫情管控的影响，这半年国内的就业市场就急转直下了，时不时传出各大公司裁员的消息，同时也看到不同公司开始减少或者停止招人的信息。最近一段时间，观察到街边的一些餐饮、服装店铺已经撑不住关门了，在我住的附近，看到了 3 家以上关门的店铺。\n2022 年 8 月，海南岛出现大量新冠感染者9，全岛封闭，新闻报道有 8 万人被困在海南岛，实际数字可能不止 8 万，有的酒店开始坐地起价，据传一家几口人一天的酒店花费就要 1 万多。\n上海封城与润学兴起 # 上半年影响最大的事件，还是上海封城，出现了太多魔幻的事情，在 2020 年代，有人因为没有核酸证明，所以无法及时就医而死去，有人利用这个时机卖高价菜，有人为了逃离上海，付天价出租车费，有人流浪在上海的机场和火车站无法离开。本来打算仅仅持续两周的封锁，变成了超过 1 个月的封锁。精准抗疫的优等生上海，此时成了嘲笑和心酸的对象。《四月之声》10的各种版本在微信朋友圈疯传，人们默默表达自己的不满，很快这个视频就被微信全面封杀。当然，还有那个振聋发聩的 「我们是最后一代」11。\n与此同时，「润学」也成为了热门话题，「润」这个字也展示了中国网民一种黑色的幽默，它是英语单词 run 的中文发音，与之相关的名词还有「华润万家」12，你不得不佩服中国网民的诙谐与智慧。有人在 GitHub 上创建了 润学仓库，分享经验。\n健康码与行程卡 # 健康码也是此次新冠疫情的「发明」，「绿码」代表官方数据库认为你是健康的，只要正常做核酸，可以自由出入公共场所，「黄码」代表官方数据库认为你和某些新冠感染者或者密切接触者出现的地方有所交集13，「红码」人员定义14：\n确诊病例和无症状感染者、疑似病例、密切接触者、密切接触者的密切接触者、集中隔离人员、居家隔离人员、外省健康码红码人员\n有了黄码以后简直是寸步难行，无法坐公交、地铁，在小区门口也像做贼一样，害怕自己被拒绝进入小区，今年我已经 「有幸」3 次被赋予黄码。\n6 月中旬，由于公司所在的写字楼出现疫情，我的健康码被赋黄码，黄码人员需要去专门的医院窗口才能检测，普通的核酸检测点无法测试。 8 月下旬盐田出现疫情，我又一次被赋予黄码，顶着大热天去黄码检测点做核酸。 9 月中旬，福田去梅林街道，我第三次被赋予黄码，没有任何通知，自己去做核酸检测的时候，才发现黄码了。 健康码就像个电子镣铐，一旦你有了红码/黄码，简直寸步难行，到哪都会被拒绝，这可比文革时代的介绍信或者证明信厉害多了，所以就有了河南村镇银行储户被「不小心」红码的戏码出现15。后面甚至还有所谓魔幻的「时空伴随者」16，中国在做这种无用功方面的努力与创新总是让人敬佩。\n通信行程卡17是本次新冠疫情又一大“发明”，通过手机通信，APP 使用等等大数据信息，自动进行判断，如果你经过新冠高风险地区，行程卡就会带星，有星以后在国内旅行就会异常艰难18.\n新冠歧视 # 今年看到的另外一件事是对新冠感染者的歧视，一些公司在招人时明确不要曾经感染新冠的人19，有的人因为曾经感染过新冠，即使已经康复了，也无法找到合适的工作。\n次生灾害 # 疫情的管制，也带来了很多「次生灾害」,以下是不完全记录。\n2022 年 9 月 18 日，贵州省贵阳市部分居民在乘坐疫情转运大巴时，大巴发生事故，导致 27 人死亡，另有多人受伤20。 2022 年 10 月，大量郑州富士康员工由于富士康园区疫情，逃离郑州富士康，徒步跋涉几十公里回家21。 2022 年 11 月 2 日，兰州一位 3 岁儿童，意外一氧化碳中毒，由于疫情管制，未能得到及时救治而死亡22。 2022 年 11 月 24 日，新疆一住宅小区发生火灾，由于消防通道被阻塞，小区单元门被封锁等原因，大火导致十人死亡23。 抗议与放开 # 无休无止的大面积封锁于隔离，以及动态清零带来的次生灾害，终于在 2022 年 11 月底引起了情绪大爆发，先是新疆部分人民走上街头，抗议封控，后有上海民众聚集在 「乌鲁木齐中路」纪念新疆大火死去同胞，抗议不合理封控，后来又有北京，南京等城市爆发抗议活动。\n中国政治的高层运作一向是黑箱操作，但是这些抗议一定给上层带来了触动，因为没过多久，我们就迎来了所谓 「新十条」24:\n放弃强制集中隔离、允许轻症及无症状患者有条件居家隔离，不再展开大范圍全员核酸检测，同时要求不得采取各种形式的临时封控、不再对跨区流动人员查验核酸阴性证明和健康码。\n转向之快，令所有人瞠目结舌，因为不久之前，官方还在理直气壮强调一定要 「动态清零」。专家舆论也很快转向，开始吹风 omicron 并不可怕，比流感危害还小，同样的专家在半年多以前可是一直在宣传 omicron 的 后遗症的。一些大 v 也开始公布自己得了新冠，并且开始分享具体的过程和感受。\n随着新十条公布，核酸检测基本上称为过去式，遍布深圳的核酸检测亭基本上被撤掉了，我们办公楼和小区门口的「电子哨兵」也被悄悄撤走或者关闭。\n大感染与开放国门 # 在 2022 年 12 月初的开放之后，新冠的流行已经是板上钉钉，最开始大规模感染的是北京，朋友圈里很多在北京的人都最先被感染。到了 12 月中旬，深圳也开始了大流行，由于之前愚蠢的集中收治与禁止民众自己治疗自己的政策，以及政策的突然 180 度大转变，所有的准备措施都没做，所有和感冒发烧相关的药品都极度紧缺，布洛芬，对乙酰胺基酚等治疗感冒发烧的药品在药店基本上已经买不到了，连温度计都不好买到了。\n我在 2022 年 12 月 18 日左右被感染，不过症状比较轻微，发烧 2-3 天，吃了几片药就退烧了，后续有一些咳嗽和鼻塞，并且嗅觉和味觉有一定程度的丧失。\n虽然感染人数在不断增加，中国官方公布的感染者以及新冠死亡人数却维持极低水平，后面干脆不公布数据了。然而各种数据都表明，这次的 omicron 病毒流行，仍有大批老年人死亡，北京大学和清华大学的讣告相对于往年都多了起来25，甚至殡仪馆火化都要等待才能排上位置26。\n2022 年 12 月 26 日晚，中国宣布将于 2023 年 1 月 8 日起，取消入境隔离政策，来华只需 48 小时核酸阴性即可27。\n参考 # 深圳市卫健委：http://wjw.sz.gov.cn/yqxx/index_45.html https://rfi.my/5uVU\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://zh.wikipedia.org/wiki/%E6%9D%8E%E6%96%87%E4%BA%AE\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttp://www.gov.cn/zhengce/content/2020-01/27/content_5472352.htm\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttp://www.gov.cn/xinwen/2021-01/30/content_5583680.htm\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.rfa.org/mandarin/yataibaodao/huanjing/sc-04142022163928.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.rfa.org/mandarin/Xinwen/3-11262022091617.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://zh.m.wikipedia.org/zh-sg/2021%EF%BC%8D2022%E5%B9%B4%E8%A5%BF%E5%AE%89%E5%B8%822019%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E7%97%85%E8%81%9A%E9%9B%86%E6%80%A7%E7%96%AB%E6%83%85\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.chinanews.com.cn/cj/2021/10-24/9594024.shtml\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.rfa.org/mandarin/yataibaodao/huanjing/cm-08092022133502.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.youtube.com/watch?v=38_thLXNHY8\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://rfi.my/8Pbq\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://jikipedia.com/definition/64018647\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n这里有广州政府的权威解读：https://web.archive.org/web/20220824030630/https://www.gz.gov.cn/zt/qlyfdyyqfkyz/gzzxd/content/post_8208969.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttp://zfsg.gd.gov.cn/hdjl/yss/content/post_3911010.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://web.archive.org/web/20220622132102/http://henan.people.com.cn/n2/2022/0622/c351638-40006688.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.yueyang.gov.cn/ztxx/63082/66503/content_1923716.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://zh.wikipedia.org/wiki/%E9%80%9A%E4%BF%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E7%A8%8B%E5%8D%A1\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttp://web.archive.org/web/20220907034831/http://www.163.com/dy/article/HB23I7FR0518TVP7.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://p.dw.com/p/4FPll\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://zh.wikipedia.org/zh-hk/2022%E5%B9%B4%E8%B4%B5%E5%B7%9E%E7%9C%81%E4%B8%89%E9%83%BD%E5%8E%BF%E5%AE%A2%E8%BD%A6%E4%BE%A7%E7%BF%BB%E4%BA%8B%E6%95%85\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://p.dw.com/p/4ItYI\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://p.dw.com/p/4IxiL\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.bbc.com/zhongwen/simp/chinese-news-63755840\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://p.dw.com/p/4Kesb\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://redian.news/wxnews/191594\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://rfi.my/8zhN\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://rfi.my/91CB\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"25 July 2022","externalUrl":null,"permalink":"/2022/07/25/under_the_shadow_of_covid/","section":"Posts","summary":"\u003cp\u003e序：有感于无休无止的核酸检测，我觉得有必要写点什么，记录下正在发生的和已经发生的历史。\u003c/p\u003e\n\u003cp\u003e很多年后，回过头看 2020 年 1 月，我们无法预料到 Covid19 竟然对人类社会造成了如此大的影响。\u003c/p\u003e","title":"在疫情的阴影下 (My Life under the Shadow of Covid19)","type":"posts"},{"content":"工作的意义是什么？\n工作为了什么，钱当然是重要的，但也不是唯一的，钱多也不一定会在公司待的舒服，我会觉得成就感和合作感也是很重要的，如果和同事合作做一个项目，经常有讨论，共同来完成一个项目，我觉得也是很开心的，讨厌那种单人项目，项目中所有的东西和决定都是自己来完成，做个寂寞？\n珍惜自己的时间。不要被洗脑，觉得只要勤奋工作就行了，低效的加班只会让大脑疲惫，并不会增加你的智慧，不要一直做重复劳动和体力劳动。人的大脑是需要休息的，长期加班只会让我们处于麻木，逐渐丧失思考，甚至产生对生活的厌倦，对什么都提不起兴趣。这样下来，我们工作的意义是什么呢，像猪一样活着吗？\n我悲哀地发现自己已经被加班的文化彻底洗脑，当自己每天早走的时候，都像做贼一样，好像我做了一件坏事，这是多么可怜的事情。当一个公司一直向你强调你要付出，你要努力，一定不要被欺骗，问问自己，你是快乐的吗？你是否愿意这样下去？\n每过一段时间，问问自己，你是否为自己所做的东西感到自豪和有成就感？目前的工作是否让你感觉开心？如果你不在最佳状态，你能创造出什么东西呢？\n我心中的“好公司”：\n工作时间灵活，不会耗在公司假装努力 关心员工的职业发展，不会拼命压榨 有时间去学习新东西，去成长，不会一直忙于业务 开会要少，很多会长时间浪费参与者时间，没有任何用 薪水达到平均水平，不一定最高 References # work is not your friend: https://www.youtube.com/watch?v=52pdPQHDKho ","date":"7 July 2022","externalUrl":null,"permalink":"/2022/07/07/thought_on_working/","section":"Posts","summary":"\u003cp\u003e工作的意义是什么？\u003c/p\u003e","title":"我们为何工作？","type":"posts"},{"content":"Recently the nvim 0.7.2 version is released following the 0.7.0 release two months ago. Here are some of the updates in 0.7.0.\nPython 2 support is removed # Python 2 support is dropped since nvim 0.7.0. So command :py and :py3 works the same now.\nMappings # there is a new vim.keymap.set() interface, where you can set mapping for multiple modes at the same time. support desc field for mappings, which is used to describe what the mapping does. Check this commit. Easier inspection of lua table # we can use :lua =expr: quickly print the value of an expression, e.g., :lua =vim will print the vim table. The function vim.pretty_print() can print lua tables nicely. Use vim.pretty_print() to show the content of a lua object Autocmd in lua # You can now use native lua function to create autocmd in Lua, no more vim.cmd() hack. See :h nvim_create_automcmd for the details.\nCreate command in lua # You can now create command in lua via function nvim_create_user_command().\nFiletype.lua # The old way of detecting filetypes from vim is slow. So the new filetype.lua is introduced to reduce the time. TL;DR, add the following config to init.vim\n\u0026#34; use filetype.lua instead of filetype.vim let g:do_filetype_lua = 1 let g:did_load_filetypes = 0 or use\nvim.g.do_filetype_lua = 1 vimg.did_load_filetypes = 0 if you use init.lua.\nGlobal statusline # Want to use a single statusline for all the windows? Now it is possible, with the following setting:\nset laststatus=3 References # https://neovim.io/news/2022/04 https://gpanders.com/blog/whats-new-in-neovim-0-7/ Hacker News discussion: https://news.ycombinator.com/item?id=31039569 ","date":"29 June 2022","externalUrl":null,"permalink":"/2022/06/29/nvim_v07-release/","section":"Posts","summary":"\u003cp\u003eRecently the \u003ca href=\"https://github.com/neovim/neovim/commit/e8ee6733926db83ef216497a1d660a173184ff39\" target=\"_blank\"\u003envim 0.7.2 version\u003c/a\u003e is released following the \u003ca href=\"https://github.com/neovim/neovim/releases/tag/v0.7.0\" target=\"_blank\"\u003e0.7.0 release\u003c/a\u003e two months ago.\nHere are some of the updates in 0.7.0.\u003c/p\u003e","title":"Nvim 0.7.2 Released","type":"posts"},{"content":" update log 2022-10-12: add fake data generation website. 2022-10-11: add TUI client for MySQL and Postgres. 2022-09-24: add sample database we can try. In this post, I will talk about setting up SQL databases and also the tools needed to write SQL queries.\nInstall and set up SQL # MySQL install and setup # Install using HomeBrew:\nbrew install mysql Start and stop the MySQL server:\nbrew services start mysql brew services stop mysql Connect to MySQL server in macOS # Host: localhost Port: 3306 Username: root Postgres install # Install using HomeBrew:\nbrew install postgresql Start and stop the postgres server:\nbrew services start postgresql brew services stop postgresql Connect to postgres server in macOS # Host: localhost Database: postgres Username: jdhao No password is needed.\nTry sql online # If you do not want to install and just want to experiment with different SQL databases, there some several website where you can use the databases online:\nhttps://dbfiddle.uk/ (very good site, you can run multiple SQL queries at the same time) db-fiddle: https://www.db-fiddle.com/ sqliteonline: https://sqliteonline.com/ (supports SQLite, MariaDB, PostgreSQL, MS SQL) w3school: https://www.w3schools.com/Sql/trysql.asp?filename=trysql_select_like_not (it provides some sample tables to try sql) Database to play with # Sample database # There are some sample databases with multiple tables so that we can toy with them easily.\nnorthwind database: https://github.com/dalers/mywind https://github.com/harryho/db-samples sakila database: https://github.com/ivanceras/sakila chinook database: https://github.com/lerocha/chinook-database Ref:\nmentioned sqliteonline and chinook database: https://www.youtube.com/watch?v=DVllkQtabNE Generate fake data # We can also use some online data generation tool to generate fake data:\nmockaroo: https://www.mockaroo.com/ https://generatedata.com/ I tried both and they work well.\nTUI client # You can use the MySQL and PostgreSQL executable to interact with databases on the command line. However, they do not support autocompletion or syntax highlighting. There are some 3rd party SQL client with auto-completion and syntax highlighting features:\nmycli: TUI client for MySQL. pgcli: TUI client for Postgres. GUI client # Most people will probably choose a GUI client to work with the databases.\nMysql workbench # Mysql workbench is a GUI application to help us manage mysql server more easily.\nPgadmin # If you use PostgreSQL, you can try Pgadmin 4, which is specifically built for Postgres. However, some people say the UX sucks.\nPostico # Postico is a lightweight tool built for Postgres. Simple interface, non-free, no auto-completion.\nDatagrip # Datagrip is developed my JetBrains and it is not free. It has support for all kinds of databases.\nIt has autocompletion for SQL keywords, functions, table names, and column names etc. Highly recommended, intelligent and very good user experience.\nDBeaver # DBeaver is an open source database client.\nIt also has autocompletion, but it is not as powerful as Datagrip.\nChange keyword case in DBeaver: https://stackoverflow.com/a/60854946/6064933\nBeeKeeper Studio # BeeKeeper is another database client.\nNo autocompletion, very simple GUI, less features than DBeaver and Datagrip. Not recommended.\nTable plus # Table plus is a commercial product that supports a lot of databases. The interface is clean and easy to use.\nRequires a license, otherwise very limited feature available.\n","date":"4 June 2022","externalUrl":null,"permalink":"/2022/06/04/sql_from_scratch_for_ml_s2/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-10-12: add fake data generation website.\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-10-11: add TUI client for MySQL and Postgres.\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-09-24: add sample database we can try.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I will talk about setting up SQL databases and also the tools needed to write SQL queries.\u003c/p\u003e","title":"Learning SQL from Scratch(2): Setup and Preparations","type":"posts"},{"content":"As a machine learning engineer who mainly deals with vision-based projects, I have little opportunity in my work to actually use SQL (Structured Query Language.). Even when I need it, I often just ask the data engineers for a favor.\nHowever, I thought it would be an essential skill to learn even if I do not need it for now.\nWhy do machine learning engineers needs SQL? # It really depends on what kind of data you are dealing with. If you are doing traditional machine learning, for example, recommendation, ranking, the raw data will probably be stored in databases, and you will need SQL for data wrangling.\nIf you are working on computer vision, audio signal recognition etc., you may not need to know SQL, but it depends.\nRef:\nhttps://www.quora.com/Is-learning-SQL-necessary-for-machine-learning https://www.quora.com/Why-did-Google-name-SQL-the-number-one-skill-for-machine-learning-engineers https://www.quora.com/How-much-SQL-do-you-need-as-an-AI-engineer Which SQL databases should we use? # When it comes to the actual SQL databases, there are a lot of SQL databases out there.\nMySQL: It is a client-server RDBMS. It has more features than sqlite. Now development led by people from Oracle. PostgresSQL: Another RDMBS. It has more advanced feature and it is open source. SQLite: It is an embeddable DBMS. It is small and use local files. Can not handle large-scale requests and tera-bytes of data. Microsoft SQL server: It is a commercial software. Oracle SQL: It is also a commercial software. All these different databases support some of the common SQL syntax, but they may have their own extended syntax.\nIf you like open source, PostgreSQL and MySQL is a good choice. According to the DB ranking, Postgres and MySQL are ranked 4th and 2nd in the RDBMS. Postgresql seems to support more standard SQL syntax than mysql, but much of the knowledge is transferable between the two.\nPractically, we can learn MySQL or PostgreSQL, but it seems that Postgres have more detailed documentations. I also give some links discussing the differences between different databases below.\nref:\nhttps://www.digitalocean.com/community/tutorials/sqlite-vs-mysql-vs-postgresql-a-comparison-of-relational-database-management-systems MySql vs sqlite: https://stackoverflow.com/q/4813890/6064933 sqlite faster than Mysql? https://stackoverflow.com/q/29452110/6064933 Mysql vs postgresql: https://stackoverflow.com/a/4059569/6064933 https://www.reddit.com/r/learnprogramming/comments/pbzrjp/which_db_should_i_learn_mysql_or_postgresql/ https://www.ibm.com/cloud/blog/postgresql-vs-mysql-whats-the-difference ","date":"4 June 2022","externalUrl":null,"permalink":"/2022/06/04/sql_from_scratch_for_ml_s1/","section":"Posts","summary":"\u003cp\u003eAs a machine learning engineer who mainly deals with vision-based projects,\nI have little opportunity in my work to actually use SQL (Structured Query Language.).\nEven when I need it, I often just ask the data engineers for a favor.\u003c/p\u003e\n\u003cp\u003eHowever, I thought it would be an essential skill to learn even if I do not need it for now.\u003c/p\u003e","title":"Learning SQL from Scratch(1): Do We Even Need to Start?","type":"posts"},{"content":"I saw a post from stackoverflow asking why his logger does not work as expect? The code is like:\nimport logging logger = logging.getLogger() logger.info(\u0026#34;some message\u0026#34;) There is no message coming out. Okay, let\u0026rsquo;s check the level of this logger:\nprint(logger.level) # output is 30 (logging.WARNING) Then we can just change its level to DEBUG, it will certain work, right?\nlogger.setLevel(logging.DEBUG) However, still no output! W*F, what happened?\nAccording to official doc, if you do not set an explicit handler for the logger, a special handler called lastResort will be used. See the code here. By default the logging level of lastResort (it is stream handler) is 30. We can change its level to output info message.\n# setting both the logger and handler\u0026#39;s level will work as expected. logger.setLevel(logging.DEBUG) logging.lastResort.setLevel(logging.DEBUG) However, this is like a hack and never an encouraged solution.\nUsing logging.basicConfig() # If we want to do logging real quick, we can use the method logging.basicConfig.\nlogging.basicConfig(level=logging.DEBUG) This will create the logger. The logger.level will be the level we set here. Without a level param, the default level for root logger is WARNING.\nA stream handler will be also created, with level NOTSET. This can be verified by printing the logger\u0026rsquo;s handlers:\nprint(logger.handlers) # you will see: [\u0026lt;StreamHandler \u0026lt;stderr\u0026gt; (NOTSET)\u0026gt;] reference # logger logging without handler: https://stackoverflow.com/q/64570918/6064933 ","date":"27 May 2022","externalUrl":null,"permalink":"/2022/05/27/logging_without_handlers_python/","section":"Posts","summary":"\u003cp\u003eI saw a post from stackoverflow asking why his logger does not work as expect?\nThe code is like:\u003c/p\u003e","title":"What Happened When Logging without Handlers in Python","type":"posts"},{"content":"","date":"26 May 2022","externalUrl":null,"permalink":"/tags/3d/","section":"Tags","summary":"","title":"3D","type":"tags"},{"content":"In this post, I want to share how to generate ply files in Python.\nOpen3D # We can use open3d. We can use pip to install it:\npip install open3d For CentOS 7, I met error when installing the latest version:\n/lib64/libc.so.6: version `GLIBC_2.18\u0026rsquo; not found\nA workaround is to use older versions:\npip install open3d==0.9.0 See also issue here for more discussions.\nBelow is is a simple snippet showing to read and write ply files using open3d.\nimport numpy as np import open3d as o3d def main(): pts = np.random.randint(0, 100, (100, 3)) # whether to write in binary or text format write_text = True # use open3d use_o3d(pts, write_text) def use_o3d(pts, write_text): pcd = o3d.geometry.PointCloud() # the method Vector3dVector() will convert numpy array of shape (n, 3) to Open3D format. # see http://www.open3d.org/docs/release/python_api/open3d.utility.Vector3dVector.html#open3d.utility.Vector3dVector pcd.points = o3d.utility.Vector3dVector(pts) # http://www.open3d.org/docs/release/python_api/open3d.io.write_point_cloud.html#open3d.io.write_point_cloud o3d.io.write_point_cloud(\u0026#34;my_pts.ply\u0026#34;, pcd, write_ascii=write_text) # read ply file pcd = o3d.io.read_point_cloud(\u0026#39;my_pts.ply\u0026#39;) # visualize # o3d.visualization.draw_geometries([pcd]) Summary: powerful features and good documentation.\nRef:\nCreate ply using open3d https://stackoverflow.com/a/62989523/6064933 https://stackoverflow.com/q/71233749/6064933 Pyntcloud # We can also use pyntcloud:\npip install pyntcloud Unlike open3d, for Pyntcloud, we need to convert Numpy array to Pandas data frames. Here is an example how to use Pyntcloud:\nimport pandas as pd from pyntcloud import PyntCloud def use_pyntcloud(pts, write_text): # ref: https://pyntcloud.readthedocs.io/en/latest/io.html # the doc is scarce and not complete n = len(pts) # The points must be written as a dataframe, # ref: https://stackoverflow.com/q/70304087/6064933 data = {\u0026#39;x\u0026#39;: pts[:, 0], \u0026#39;y\u0026#39;: pts[:, 1], \u0026#39;z\u0026#39;: pts[:, 2], \u0026#39;red\u0026#39;: np.random.rand(n), \u0026#39;blue\u0026#39;: np.random.rand(n), \u0026#39;green\u0026#39;: np.random.rand(n) } # build a cloud cloud = PyntCloud(pd.DataFrame(data)) # the argument for writing ply file can be found in # https://github.com/daavoo/pyntcloud/blob/7dcf5441c3b9cec5bbbfb0c71be32728d74666fe/pyntcloud/io/ply.py#L173 cloud.to_file(\u0026#39;my_pts2.ply\u0026#39;, as_text=write_text) # read file cloud = PyntCloud.from_file(\u0026#39;my_pts2.ply\u0026#39;) # print(cloud) Summary: the documentation is terrible and lacking.\nPython-plyfile # Another package is called Python-plyfile (pip install plyfile). Here is how to use it:\nfrom plyfile import PlyData, PlyElement # use python-plyfile use_plyfile(pts, write_text) def use_plyfile(pts, write_text): x, y, z = pts[:, 0], pts[:, 1], pts[:, 2] pts = list(zip(x, y, z)) # the vertex are required to a 1-d list vertex = np.array(pts, dtype=[(\u0026#39;x\u0026#39;, \u0026#39;f4\u0026#39;), (\u0026#39;y\u0026#39;, \u0026#39;f4\u0026#39;), (\u0026#39;z\u0026#39;, \u0026#39;f4\u0026#39;)]) el = PlyElement.describe(vertex, \u0026#39;vertex\u0026#39;) PlyData([el], text=write_text).write(\u0026#39;my_pts3.ply\u0026#39;) Summary: Not intuitive API design, at least for writing a ply file.\nMeshio # Meshio (pip install meshio) can also do this:\nimport numpy as np import meshio vertices = np.random.rand(100, 3) meshio.write(\u0026#34;test.ply\u0026#34;, mesh=meshio.Mesh(points=vertices, cells = []), binary=False) Summary: no doc, hard to use. I need to check source code to know its parameters.\nReferences # Python plyfile vs pymesh: https://stackoverflow.com/q/36920562/6064933 ","date":"26 May 2022","externalUrl":null,"permalink":"/2022/05/26/read_write_ply_file_python/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how to generate \u003ca href=\"https://en.wikipedia.org/wiki/PLY_%28file_format%29\" target=\"_blank\"\u003eply files\u003c/a\u003e in Python.\u003c/p\u003e","title":"How To Read and Write ply File in Python","type":"posts"},{"content":"As a long time nvim user, I am learning Lua and slowly transition my nvim config to lua. In this script, I will share some tips and lessons I have learned the hard way.\nThe colon operator # In Lua code, we may see the colon operator followed by some object method. For example, if we have a string x and want to find the length of this string. In Python, we do x.len(), but this will be an error in Lua:\nError stdin:1: bad argument #1 to 'len' (string expected, got no value) stack traceback: [C]: in function 'string.len' stdin:1: in main chunk [C]: in ? In Lua, we need to use x:len() (or you can use string.len(x) like len(x) in Python):\nx = \u0026#39;foo bar\u0026#39; x.len() --\u0026gt; this is an error x:len() --\u0026gt; works without errors x is of type string, when we use x.len(), if it does not exist, lua will look at the metatable of x and find the __index key. The metatable of x is like this:\n{ __index = { byte = \u0026lt;function 1\u0026gt;, char = \u0026lt;function 2\u0026gt;, dump = \u0026lt;function 3\u0026gt;, find = \u0026lt;function 4\u0026gt;, format = \u0026lt;function 5\u0026gt;, gmatch = \u0026lt;function 6\u0026gt;, gsub = \u0026lt;function 7\u0026gt;, len = \u0026lt;function 8\u0026gt;, lower = \u0026lt;function 9\u0026gt;, match = \u0026lt;function 10\u0026gt;, rep = \u0026lt;function 11\u0026gt;, reverse = \u0026lt;function 12\u0026gt;, sub = \u0026lt;function 13\u0026gt;, upper = \u0026lt;function 14\u0026gt; } } It will then execute the function corresponding to key len. However, since function len() requires an argument, so we get the above error.\nIf we instead use x:len(), we are implicitly pass x itself as the first argument:\nA call v:name(args) is syntactic sugar for v.name(v,args), except that v is evaluated only once.\nSo we are actually using x.len(x). In fact, if we use x.len(x), it works perfectly fine.\nRef:\nLua has no class but dot operator?: https://stackoverflow.com/q/44522241/6064933 Lua: When is it possible to use colon syntax?: https://stackoverflow.com/q/33052241/6064933 https://docs.coronalabs.com/tutorial/basics/colonDotOperators/index.html The difference between defining function with colon and dot # As discussed in the above section, when we use colon operator in Lua, we are implicitly passing the object itself (called self) to the function.\nSuppose we want to implement a string function to concatenate two strings, we can use both the dot and colon operators. But the function signature will be a little different:\nlocal x = \u0026#34;hello world\u0026#34; function string.add1(str1, str2) print(string.format(\u0026#34;str1: %s, str2: %s\u0026#34;, str1, str2)) return string.format(\u0026#34;%s%s\u0026#34;, str1, str2) end function string:add2(s) print(string.format(\u0026#34;str1: %s, str2: %s\u0026#34;, self, s)) return string.format(\u0026#34;%s%s\u0026#34;, self, s) end print(x:add1(\u0026#34;abc\u0026#34;)) print(x:add2(\u0026#34;abc\u0026#34;)) In this example, if we use dot operator, we must explicitly provide the two parameters. For the colon operator, the first string is implicitly provided as self, which you can access in the function body. So this function has only one parameter.\nIf you run the code, their result will be exactly the same.\nRef:\nLua: colon notation, \u0026lsquo;self\u0026rsquo; and function definition vs. call: https://stackoverflow.com/q/32080972/6064933 The weirdness of Lua REPL # If we have the following code in test.lua:\nlocal x = 1 print(x) it will print out 1, not nil. Expected result, nothing special.\nIn the Lua REPL, if we type the following command:\n\u0026gt; local x = 1 \u0026gt; print(x) the output is surprisingly nil, not 1! Crazy, isn\u0026rsquo;t it?\nThe reason is that in Lua REPL, each line is treated as a block. Basically, a block is an area where a variable is visible. Local variables only work in that block. For example, the following works:\n\u0026gt; local x = 1; print(x) This is because when lua execute a file, it treat the file as a block, so local variable x does not expire in the next line. Actually we can manually create a block in lua file with do ... end (see doc here).\nIt is a little weird, but that is how lua REPL works.\nRef:\nhttps://stackoverflow.com/a/33155461/6064933 https://stackoverflow.com/a/2835433/6064933 In Lua, both 0 and empty string is true # Unlike Python and other programming languages, both 0 and empty string is considered true in lua1, which is weird. In Lua, only false and nil is considered false.\nif \u0026#39;\u0026#39; then print(\u0026#39;empty str is true\u0026#39;) else print(\u0026#39;empty str is false\u0026#39;) end if 0 then print(\u0026#39;zero is true\u0026#39;) else print(\u0026#39;zero is false\u0026#39;) end If you run the above code, you will get the following output:\nempty str is true zero is true Lua table index starts from 1, not 0 # This feature trips me really hard and I ended up debugging my code for nearly half of an hour. So if we have a table local a = {1, 2, 3}, the first element will be a[1] not a[0].\nI have repeated forgotten this and made mistakes.\nRef:\nhttps://stackoverflow.com/q/2785704/6064933 http://www.cs.utexas.edu/~EWD/ewd08xx/EWD831.PDF Why use parentheses around literal strings when call its method? # If you use a literal string and want to call string method, you need to wrap the string with parentheses. This is how the Lua syntax works.\nRight: print((\u0026quot;hello\u0026quot;):len()) Wrong: print(\u0026quot;hello\u0026quot;:len()) Ref:\nhttps://stackoverflow.com/q/48143667/6064933 https://www.lua.org/pil/2.2.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 May 2022","externalUrl":null,"permalink":"/2022/05/21/lua-learning-for-nvim/","section":"Posts","summary":"\u003cp\u003eAs a long time nvim user, I am learning Lua and slowly transition my nvim config to lua.\nIn this script, I will share some tips and lessons I have learned the hard way.\u003c/p\u003e","title":"Lua Learning Notes","type":"posts"},{"content":"When running apt-get update inside Ubuntu 18.04, I have the following error:\nW: GPG error: https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64 InRelease: The following signatures couldn\u0026rsquo;t be verified because the public key is not available: NO_PUBKEY A4B469963BF863CC\nE: The repository \u0026lsquo;https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 InRelease\u0026rsquo; is no longer signed.\nN: Updating from such a repository can\u0026rsquo;t be done securely, and is therefore disabled by default.\nN: See apt-secure(8) manpage for repository creation and user configuration details.\nThis is because Nvidia is changing their public keys for their repositories, see the details here. The instructions in the original post does not work for me. I still see errors after running the command. Since I am building a Docker image, I followed the instructions here and it works:\nRUN rm /etc/apt/sources.list.d/cuda.list RUN rm /etc/apt/sources.list.d/nvidia-ml.list RUN apt-key del 7fa2af80 RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub The two rm commands are crucial to fix the issue. The directory /etc/apt/sources.list.d/ stores the apt repository list for some packages, so that you do not need to touch the main source list file /etc/apt/sources.list. Files under this directory has the same format as the main sources.list file, and they are usually added by automated tools.\nThe command apt-key del 7fa2af80 will delete the old public key for Nvidia. The apt-key adv --fetch-keys commands is used to add the new public keys for Nvidia.\nreferences # The use of directory sources.list.d https://stackoverflow.com/a/26021071/6064933 https://stackoverflow.com/a/22969010/6064933 update public key using apt-key: https://askubuntu.com/a/865494/768311 apt-key doc: http://manpages.ubuntu.com/manpages/bionic/man8/apt-key.8.html ","date":"5 May 2022","externalUrl":null,"permalink":"/2022/05/05/nvidia-apt-repo-public-key-error-fix/","section":"Posts","summary":"\u003cp\u003eWhen running \u003ccode\u003eapt-get update\u003c/code\u003e inside Ubuntu 18.04, I have the following error:\u003c/p\u003e","title":"Fix Nvidia Apt Repository Public Key Error","type":"posts"},{"content":"","date":"5 May 2022","externalUrl":null,"permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":"今天总结一下“豆角焖面”的做法。\n材料 # 四季豆，五花肉或瘦肉，大料，大蒜，姜，青椒，五香粉，酱油，老抽，料酒，鲜面条\n步骤 # 四季豆洗净，斜切成段，五花肉洗净，切成细条 3-4 个大蒜，两片姜，切成碎末，一个青椒，切丝 蒸锅加水烧开，放入面条蒸 8 分钟，把面条蒸熟，关火后用筷子把面条抖散，防止粘在蒸笼上 国内倒入少量油，不用等油冒烟，下入五花肉煸炒，加入两颗大料，把肥肉中肉煸炒出来，待肉变黄，加入姜蒜，青椒，翻炒，然后加入适量料酒去腥 加入切好的四季豆，中大火，继续翻炒两分钟 加入适量食盐，生抽，五香粉，胡椒粉等调味品，翻炒 锅内加入适量清水，稍微埋住菜即可，不要太多，加入少量老抽上色，如果味道太淡，加入食盐，大火烧开，转中小火，盖锅盖煮 8 分钟，注意观察水量 放入蒸好的面条，继续中小火蒸3~5分钟，注意观察水量，等水基本上干了以后，任何菜搅拌均匀，喜欢吃蒜的话，再撒上一些蒜末，就可以出锅了。 ","date":"1 May 2022","externalUrl":null,"permalink":"/2022/05/01/doujiao_menmian/","section":"Posts","summary":"\u003cp\u003e今天总结一下“豆角焖面”的做法。\u003c/p\u003e\n\n\n\u003ch1 class=\"relative group\"\u003e材料 \n    \u003cdiv id=\"%E6%9D%90%E6%96%99\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%9D%90%E6%96%99\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e四季豆，五花肉或瘦肉，大料，大蒜，姜，青椒，五香粉，酱油，老抽，料酒，鲜面条\u003c/p\u003e","title":"豆角焖面制作","type":"posts"},{"content":"Background # The thing is that I have a Logitech pebble and mx keys mini keyboard, and I use Bluetooth to connect them to my mac, but they randomly lost connection when I was using them, especially for the mx keys mini keyboard, this occurred on a daily basis.\nTo pair the keyboard with mac, I had to press some 6-digit numbers each time and I was bored with this shit. So I decided to give the unifying receiver a try.\nLogitech options # Logitech options is the software you need to use to connect to your computer to your devices with unifying receiver. Just download the package and install it as instructed.\nConnect your device to computer # Make sure the receiver type is right # First, make sure you have the right receiver, because there are actually three different types of receivers. They mainly differ in the logo.\nDifferent devices may come with different receivers, e.g. the Logitech pebble mouse comes with a simple 2.4G receiver, which is not a unifying receiver. So if you connect this simple receiver to your mac, the Logitech options app can not detect it.\nFortunately, I have also a M590 mouse which has a unifying receiver enclosed in it. It works perfectly fine and can be detected by Logitech options.\nHow to connect # Open Logitech options, click ADD DEVICES, we enter the add/remove device interface. Select the left most options for unifying devices and following the instructions.\nUsually, we need to turn off and then turn on the device. Then the device can be detected successfully.\nAs for the mx keys mini keyboard, it seems that it only supports the Logitech bolt receiver, which needs to be purchased separately, WTF??\nReferences # connect logitech keyboard to macOS: https://www.youtube.com/watch?v=d--WnVW2Zsc ","date":"30 April 2022","externalUrl":null,"permalink":"/2022/04/30/fix_logitech_bluetooth_shit_use_unifying_receiver/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eBackground \n    \u003cdiv id=\"background\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#background\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eThe thing is that I have a Logitech pebble and mx keys mini keyboard, and I use Bluetooth to connect them to my mac,\nbut they randomly lost connection when I was using them, especially for the mx keys mini keyboard, this occurred on a daily basis.\u003c/p\u003e","title":"Fix the Logitech Bluetooth Shit and Use Unifying Receiver","type":"posts"},{"content":"I saw an interesting question that how to get square root of x without using builtin function from your language. There are different ways to approach this problem.\nBabylonian method There is a method called Babylonian method to calculate the square root. See this Wikipedia page for the details.\nThe code is as follows:\ndef sqrt(x): if x == 0: return 0 res = x/2.0 eps = 1e-7 while res - x/res \u0026gt; eps: res = (res + x/res) * 0.5 return res This method is very fast, it can calculate \\(sqrt(5)\\) is less than 5 iterations.\nNewton method We can also use newton’s method to find the square root of \\(num\\). Basically, we have the following \\(f(x)\\):\n\\[f(x) = x^2 - num\\]\nWe can get the square root of \\(num\\) iteratively via:\n\\[x_{n+1} = x_n - \\frac{f(x_n)}{f\u0026#39;(x_n)}\\]\nThe code is like this:\ndef newton_sqrt(num): cur = num / 2.0 eps = 1e-7 while abs(get_next(cur, num) - cur) \u0026gt; eps: cur = get_next(cur, num) return cur def get_next(x, num): return x - f_val(x, num)/df(x) def f_val(x, num): return x*x - num def df(x): return 2*x def main(): num = 5 res = newton_sqrt(num) print(f\u0026quot;res: {res}\u0026quot;) if __name__ == \u0026quot;__main__\u0026quot;: main() Newton’s method also works pretty quickly to find the root square of a num.\nGradient descent Apart from the Babylonian method, I thought we can also solve this problem with gradient descent easily.\nl1 loss Suppose that square root of \\(x\\) is \\(w\\), then our loss function will be the difference between \\(x\\) and \\(w^2\\). Our objective is minimize the loss.\nHere is my sample code to solve this problem:\nimport random import matplotlib.pyplot as plt import numpy as np def main(): x = 5 w = random.uniform(1, x) print(f\u0026quot;initial w: {w}\u0026quot;) loss_type = \u0026quot;l2\u0026quot; n_iter = 200 lr = 0.01 eps = 0.00001 losses = [] for i in range(n_iter): lr = exp_decay_lr_scheduler(lr, i, n_iter) # lr = step_lr_scheduler(lr, i, n_iter) if loss_type == \u0026#39;l1\u0026#39;: dl_dw = get_dl_dw(w, x) else: dl_dw = get_dl_dw2(w, x) w -= (lr * dl_dw) if loss_type == \u0026#39;l1\u0026#39;: loss = abs(x - w**2) else: loss =(x - w**2)**2 print(f\u0026quot;step: {i}, lr: {lr}, w: {w}, loss: {loss}\u0026quot;) losses.append(loss) if loss \u0026lt; eps: break print(f\u0026quot;final w: {w}\u0026quot;) ax = plt.subplot() x = range(len(losses)) ax.plot(x, losses) ax.set_xlabel(\u0026quot;iteration\u0026quot;) ax.set_ylabel(\u0026quot;loss\u0026quot;) plt.show() def step_lr_scheduler(lr, i, n_iter): lr_factor = 5 step = 20 if i != 0 and i % step == 0: lr = lr / lr_factor return lr def exp_decay_lr_scheduler(lr, i, n_iter): alpha = 1.0 return lr * np.exp(-alpha * i / n_iter) def get_dl_dw(w, x): if w*w \u0026gt;= x: return 2*w else: return -2*w def get_dl_dw2(w, x): return 4*w**3 - 4*w*x if __name__ == \u0026quot;__main__\u0026quot;: main() There are two points worth noting.\nFirst, it is how we calculate the loss. Initially I made the mistake of defining the loss as \\(x - w^2\\). Since we want to minimize the difference between \\(x\\) and \\(w^2\\), the loss should be defined as \\(\\Vert x - w^2 \\Vert\\). Otherwise, we can never learn a proper value for \\(w\\). The derivative of loss w.r.t \\(w\\) is:\n\\[\\frac{\\partial l}{\\partial w} = \\begin{cases} -2w \u0026amp; w^2 \u0026lt; x\\\\ 2w \u0026amp; w^2 \u0026gt;= x \\end{cases}\\]\nAnother point is the learning rate schedule. When \\(w\\) is close to its real value, we should use a small learning rate. Otherwise, we will see oscillation of the training curve: the loss will bump up and down. I first tried with step policy for learning rate, i.e., reducing the learning rate after the specified steps. With this policy, I found that the loss curve will oscillates and is not smooth, and we can not get a loss significantly small than 0.001.\nI tried with the exponentially decaying policy, where we decay the learning rate smoothly with the following factor:\n\\[\\exp(-\\alpha * \\frac{i}{N})\\]\n\\(N\\) is the total number of iterations, and \\(i\\) is the current iteration. With this policy, we can approximate \\(\\sqrt{x}\\) with precision as high as \\(1*10^{-5}\\) with fewer iterations.\nUsing l2 loss Aside from using l1 loss, we can also use l2 loss: \\((x - w^2)^2\\). The derivative of loss w.r.t \\(w\\) is:\n\\[\\frac{\\partial l}{\\partial w} = 4w^3 - 4xw\\]\nIn the above code, we can change loss_type to l2 to try the l2 loss. Using l2 loss often leads to faster convergence than l1 loss.\nConclusion Both the Babylonian method and Newton’s method converge much faster than gradient descent. However, using gradient descent to solve this problem is fun and provides a new perspective.\n","date":"28 April 2022","externalUrl":null,"permalink":"/2022/04/28/sqrt_without_using_builtin_sqrt/","section":"Posts","summary":"\u003cp\u003eI saw an interesting question that how to get square root of x\nwithout using builtin function from your language. There are different\nways to approach this problem.\u003c/p\u003e","title":"How to Calculate Square Root without Using sqrt()?","type":"posts"},{"content":"","date":"28 April 2022","externalUrl":null,"permalink":"/tags/math/","section":"Tags","summary":"","title":"Math","type":"tags"},{"content":"","date":"28 April 2022","externalUrl":null,"permalink":"/tags/optimization/","section":"Tags","summary":"","title":"Optimization","type":"tags"},{"content":"","date":"28 April 2022","externalUrl":null,"permalink":"/categories/programming/","section":"Categories","summary":"","title":"Programming","type":"categories"},{"content":"A short note on how to match non-greedily in Nvim/Vim.\nVim\u0026rsquo;s regex is slightly different from the usal regex we see. Vim use - to indicate non-greedy match, for example, to match non-greedily for a.*c, we can use the following search:\n\\va.{-}c Note that \\v is used to simplify the code. Otherwise, the command will become ugly and error-prone.\nHere is a list of non-greedy syntax (the following assumes that \\v is added):\n{-n,m}: match n to m previous pattern, non-greedy {-n,}: match at least n of previous pattern, non-greedy {-,m}: match 0 to m of previous pattern, non-greedy {-}: match 0 or more of previous pattern, non-greedy (non-greedy version of *) For more info, read :h non-greedy inside Vim.\n","date":"27 April 2022","externalUrl":null,"permalink":"/2022/04/27/nvim_non_greedy_match/","section":"Posts","summary":"\u003cp\u003eA short note on how to match \u003ca href=\"https://blog.finxter.com/python-regex-greedy-vs-non-greedy-quantifiers/\" target=\"_blank\"\u003enon-greedily\u003c/a\u003e in Nvim/Vim.\u003c/p\u003e","title":"How to Match Non-greedily in Nvim/Vim","type":"posts"},{"content":"","date":"23 April 2022","externalUrl":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"GitHub","type":"tags"},{"content":"To promote security, starting from Aug. 2021, many GitHub operations require use of personal access tokens (PAT).\nGenerate personal access token # Go to https://github.com/settings/tokens and click Generate new token. Follow the guidelines. Usually the token will expire after the specified time, unless you make it a permanent token, which is not advised by GitHub.\nAfter this, when you push to GitHub repos, you must use the generated token as password.\nUpdate tokens # After an old token expires, we need to generate a new token. Then we need to remove the old token and use the new token. The process may vary depending on your system.\nmacOS # command line # We need to erase the old token, run the following command:\nsecurity delete-internet-password -l github.com Then run your git operation as usual and you will be prompted to enter your new token. Once your new token is entered and verified, it will be updated to the Keychain app automatically.\nKeychain app # You may also directly update the token via the Keychain Access app. Open the app and search for github. Then open the searched item for github and directly update your access token there.\nReferences # https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ update GitHub access token on mac: https://gist.github.com/jonjack/bf295d4170edeb00e96fb158f9b1ba3c ","date":"23 April 2022","externalUrl":null,"permalink":"/2022/04/23/github_access_token/","section":"Posts","summary":"\u003cp\u003eTo promote security, starting from Aug. 2021, many GitHub operations require use of personal access tokens (PAT).\u003c/p\u003e","title":"Push to GitHub with Personal Access Token (PAT)","type":"posts"},{"content":"This is a brief note on how to use Tensorboard in PyTorch.\nInstall # First we need to install tensorboard:\npip install tensorboard SummaryWriter # The main interface we use is SummaryWriter. It has many builtin functions, such as add_scalar, add_image, add_graph (for torch models) etc.\nFor most use cases, we just need to use add_scalar().\nimport numpy as np import os from torch.utils.tensorboard import SummaryWriter def main(): log_dir = \u0026#34;exp_log\u0026#34; if not os.path.exists(log_dir): os.makedirs(log_dir) writer = SummaryWriter(log_dir=log_dir) for i in range(50): writer.add_scalar(\u0026#34;my curve\u0026#34;, np.random.random(), i) # need to close the writer after training writer.close() The first argument is the tag given to this value series.\nGroup plots # We can also group the plot like this:\nfor n_iter in range(100): writer.add_scalar(\u0026#39;Loss/train\u0026#39;, np.random.random(), n_iter) writer.add_scalar(\u0026#39;Loss/test\u0026#39;, np.random.random(), n_iter) writer.add_scalar(\u0026#39;Accuracy/train\u0026#39;, np.random.random(), n_iter) writer.add_scalar(\u0026#39;Accuracy/test\u0026#39;, np.random.random(), n_iter) In the visualization, we will get two groups, one for Loss and one for Accuracy. Each group has two plots, for train and test respectively.\nCompare stats in the same plot # Often we want to show/compare several curves on the same plot. This can be achieved with add_scalars():\nfor n_iter in range(100): writer.add_scalars(\u0026#39;Loss\u0026#39;, {\u0026#39;train\u0026#39;: np.random.random(), \u0026#39;test\u0026#39;: np.random.random()}, n_iter) writer.add_scalars(\u0026#39;Accuracy\u0026#39;, {\u0026#39;train\u0026#39;: np.random.random(), \u0026#39;test\u0026#39;: np.random.random()}, n_iter) In the above code, we have two groups, and each group has one plot showing both train and test stats.\nChange the axis scale? # Sometimes the scale for x and y axis may not be right. The first thing you can do is to disable outlier removal, since it is enabled by default.\nOr we can manually select a region using the mouse to only show that region. After tensorboard version 2.5, you can set axis range in the tensorboard web interface interactively, thanks to the work of this pr.\nref:\nhttps://stackoverflow.com/questions/37144211/rescale-tensorboard-summaries-plot https://github.com/tensorflow/tensorboard/issues/273 Visualize the plot # To actually show the visualizations, we can run the following command:\ntensorboard --logdir=exp_log The argument --logdir should be followed one of valid tensorboard logs you have written during your experiment. Then you can open the browser and check the plots.\nReferences # Tensorboard tutorial: https://pytorch.org/tutorials/intermediate/tensorboard_tutorial.html PyTorch Tensorboard doc: https://pytorch.org/docs/stable/tensorboard.html ","date":"20 April 2022","externalUrl":null,"permalink":"/2022/04/20/pytorch-tensorboard-use/","section":"Posts","summary":"\u003cp\u003eThis is a brief note on how to use \u003ca href=\"https://github.com/tensorflow/tensorboard\" target=\"_blank\"\u003eTensorboard\u003c/a\u003e in PyTorch.\u003c/p\u003e","title":"How to Use Tensorboard in Pytorch","type":"posts"},{"content":"","date":"20 April 2022","externalUrl":null,"permalink":"/tags/pytorch/","section":"Tags","summary":"","title":"PyTorch","type":"tags"},{"content":" In this post, I would like to share how to add color emoji to image with Python.\nUse Pillow # We can use Pillow directly to draw color emoji with color emoji fonts. Some of the available fonts are:\nNotoColorEmoji: developed by Google and open source AppleColorEmoji: developed by Apple and used on Apple devices. Not free. Microsoft segoe ui color emoji: developed by Microsoft, not free. twemoji: developed by Twitter. You can view the twemoji here1. Symbola is also a emoji font, but it seems that it does not have color.\nHere is a simple script to try those fonts:\nfrom PIL import Image, ImageDraw, ImageFont back_ground_color = (50, 50, 50) # unicode_text = \u0026#34;some test\\U0001f602\u0026#34; unicode_text = \u0026#34;\\U0001f602\u0026#34; im = Image.new(\u0026#34;RGB\u0026#34;, (500, 500), back_ground_color) draw = ImageDraw.Draw(im) # noto emoji, bit-map based, src: https://github.com/googlefonts/noto-emoji/blob/main/fonts/NotoColorEmoji.ttf # apple emoji, bit-map based, src: https://github.com/samuelngs/apple-emoji-linux/releases # segoe ui emoji, vector-based, works with different font size, font from here: https://fontsdata.com/132714/segoeuiemoji.htm (for test only) font_info = {\u0026#39;symbola\u0026#39;: [r\u0026#34;E:\\symbola-font\\Symbola-AjYx.ttf\u0026#34;, 30], \u0026#39;notoemoji\u0026#39;: [r\u0026#34;E:\\NotoColorEmoji.ttf\u0026#34;, 109], \u0026#39;appleemoji\u0026#39;: [r\u0026#34;E:\\AppleColorEmoji.ttf\u0026#34;, 137], \u0026#39;segoeuiemoji\u0026#39;: [r\u0026#34;E:\\segoeuiemoji\\seguiemj.ttf\u0026#34;, 50]} pos = [(100, 10), (50, 40), (50, 160), (100, 320)] for i, item in enumerate(font_info.items()): path, size = item[1] font = ImageFont.truetype(path, size) draw.text(pos[i], unicode_text, font=font, embedded_color=True) im.show() Note that for bit-map font, you need to specify the exact font size embedded in it. Examples are shown in this PR. Otherwise, you will get invalid pixel size error. For vector format color emoji font, you can use different font sizes just like using a normal font.\nspecial note on Apple Color Emoji # In the above script, I used apple color emoji for linux, which is not the same as Apple Color Emoji provided on macOS. Based on my experimentation, it only embed one resolution for emoji: 137. However, the original Apple Color Emoji has several resolutions: 20, 32, 40, 48, 64, 96 and 160.\nFor example, the following works for me on macOS with font size 64:\nfrom PIL import Image, ImageDraw, ImageFont back_ground_color = (50, 50, 50) im = Image.new(\u0026#34;RGB\u0026#34;, (500, 200), back_ground_color) draw = ImageDraw.Draw(im) font = ImageFont.truetype(\u0026#39;/System/Library/Fonts/Apple Color Emoji.ttc\u0026#39;, 64) unicode_text = \u0026#34;\\U0001f602\\u2764\\U0001f639\\U0001f335\\U0001f525\\U0001f992\\u3297\u0026#34; draw.text((10, 100), unicode_text, font=font, embedded_color=True) im.show() Disadvantages # With this method, you can not mix text and emoji since these emoji font does not support normal text. You need to write extra code to mix text and emoji naturally, which is no easy task.\nUse package Augly # Augly from Facebook also supports add emoji to image. It can randomly add an emoji to your image.\nimport os from PIL import Image from augly.utils.base_paths import EMOJI_DIR import augly.image as imaugs def main(): im_path = \u0026#34;./test.jpg\u0026#34; im = Image.open(im_path).convert(\u0026#39;RGB\u0026#39;) emoji_category = [\u0026#39;activity\u0026#39;, \u0026#39;alphanumeric\u0026#39;, \u0026#39;animals_and_nature\u0026#39;, \u0026#39;flags\u0026#39;, \u0026#39;food_and_drink\u0026#39;, \u0026#39;objects\u0026#39;, \u0026#39;people\u0026#39;, \u0026#39;smileys\u0026#39;, \u0026#39;symbols\u0026#39;, \u0026#39;travel_and_places\u0026#39;] x, y = (0.8, 0.8) opacity = 0.7 emoji_size = 0.2 for c in emoji_category: emoji_dir = os.path.join(EMOJI_DIR, c) emoji_aug = imaugs.RandomEmojiOverlay(emoji_directory=emoji_dir, opacity=opacity, emoji_size=emoji_size, x_pos=x, y_pos=y) new_im = emoji_aug(im) new_im.save(f\u0026#39;cat-emoji-{c}.jpg\u0026#39;) if __name__ == \u0026#34;__main__\u0026#34;: main() Augly also has a OverlayEmoji class to apply a specific emoji to image. However, the emoji must be in PNG format, so it means you have to use png supplied by Augly, which is not flexible.\nUse package pilmoji # Pilmoji supports multiple source of emoji and also supports mixing emoji and regular text. Note that it requires Python 3.8 or higher.\nfrom pilmoji import Pilmoji from PIL import Image, ImageFont im = Image.new(\u0026#39;RGB\u0026#39;, (1024, 768)) drawer = Pilmoji(im) FONT_PATH = \u0026#39;./NotoSansSC-Regular.otf\u0026#39; font_size = 30 font = ImageFont.truetype(FONT_PATH, size=font_size) text = \u0026#34;Hello, world! 👋 Here are some emojis: 🎨 🌊 😎\u0026#34; drawer((10, 10), text, font=font) im.show() Under the hood, it downloads the emoji in PNG format and composite them to the original image.\nPilmoji is easy to use and has done all the heavy lifting of mixing text and emoji for you. It may be the best choice if we want to mix text and emoji and show them on image.\nReferences # https://en.wikipedia.org/wiki/Implementation_of_emojis Insert colorful emoji into an image(Python) There is twemoji-color-font here, but it is in SVGinOT format, which is not supported in Pillow yet.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"3 April 2022","externalUrl":null,"permalink":"/2022/04/03/add_color_emoji_to_image_in_python/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202204031210116.png\" width=\"500\"\u003e\n\u003c/p\u003e\n\u003cp\u003eIn this post, I would like to share how to add \u003ca href=\"https://en.wikipedia.org/wiki/Emoji\" target=\"_blank\"\u003ecolor emoji\u003c/a\u003e to image with Python.\u003c/p\u003e","title":"How to Add Color Emoji to Image in Python","type":"posts"},{"content":"","date":"3 April 2022","externalUrl":null,"permalink":"/tags/pil/","section":"Tags","summary":"","title":"PIL","type":"tags"},{"content":" What is alpha-compositing If you have two images A and B, you alpha-composite A over B, it will create an effect that you can see both image A and B in the resulting image, as if A has transparency and you can see through A and also see B.\nHow does alpha-compositing work? Suppose a is the src image, b is the destination image, we composite a over b. The equation for alpha value and pixel value of the generated image are:\n\\[\\alpha = \\alpha_a + \\alpha_b (1-\\alpha_a)\\]\n\\[\\begin{aligned} v \u0026amp;= \\frac{ \\alpha_a v_a + \\alpha_b (1-\\alpha_a) v_b}{\\alpha_a + \\alpha_b (1-\\alpha_a)}\\\\ \u0026amp;= \\frac{\\alpha_a}{\\alpha_a + \\alpha_b (1-\\alpha_a)} v_a + \\frac{\\alpha_b (1-\\alpha_a)}{\\alpha_a + \\alpha_b (1-\\alpha_a)} v_b \\end{aligned}\\]\nSo it is easy to see that the resulting pixel value is a linear combination of pixel value from a and b.\nFor RGB images, this is done for per-channel per-pixel.\nNote that in Pillow, the alpha value is rescaled from \\([0, 1.0]\\) to \\([0, 255]\\). So in the following text, I will use the range \\([0, 255]\\) and it should not cause any confusion.\nimport numpy as np from PIL import Image def main(): # alpha for im1 is 0.5 (rescaled in [0, 1.0] range) im1 = Image.new(\u0026#39;RGBA\u0026#39;, (100, 100), (200, 0, 0, 128)) # alpha for im2 is also 0.5 im2 = Image.new(\u0026#39;RGBA\u0026#39;, (100, 100), (0, 100, 0, 128)) # im1.show() # im2.show() im1.alpha_composite(im2) im1.show() r, g, b, a = im1.split() print(np.array(g)) if __name__ == \u0026quot;__main__\u0026quot;: main() To test the correctness of the above equations, use the above script. After alpha compositing, the value for channel R and G of im1 should be all 67, for channel B should be all 0, and for alpha channel should be all 192 (without rescale, it should be 0.75).\nComposite two JPEG images So if we have a large image A and we want to overlay a small image B onto it. How do we do it correctly? Suppose A and B are just JPEG images with no alpha channels.\nWe should first add an alpha channel with value 255 for image A. This is the crucial step for correct alpha-compositing. This will not affect the region in A that do not have overlap with image B. Otherwise, you will get a opaque look for those regions.\nThen we should set proper alpha for image B, depending on how you want to composite. In this case, the pixel value for the resulting image becomes simply:\n\\[v = \\alpha v_a + (1-\\alpha) v_b\\]\nYou can change \\(\\alpha\\) to control the contribution of A and B to the result image. For example, if you want B to completely dominate the overlapping region, you can set alpha to 255. If you want to show partial A and B, you can set alpha to a value between 0 and 255. The larger alpha gets, the less you will see the underlying part of image A.\nimport numpy as np from PIL import Image, ImageFilter def main(): im = Image.open(\u0026#39;./cat.jpg\u0026#39;) im.putalpha(255) em_im = Image.open(\u0026#39;./fish.jpg\u0026#39;) em_im.putalpha(150) dst_coord = (360, 310) src_coord = (0, 0) im.alpha_composite(em_im, dst_coord, src_coord) im.save(\u0026#39;cat-and-fish.png\u0026#39;) if __name__ == \u0026quot;__main__\u0026quot;: main() In the title image, I show the generated image using three different alpha values for image B. The transparency decreases as we increase the value of alpha.\nReferences https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image.alpha_composite ","date":"1 April 2022","externalUrl":null,"permalink":"/2022/04/01/image_alpha_composite_pillow/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202204020034075.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003ch1 id=\"what-is-alpha-compositing\"\u003eWhat is alpha-compositing\u003c/h1\u003e\n\u003cp\u003eIf you have two images A and B, you \u003ca\nhref=\"https://en.wikipedia.org/wiki/Alpha_compositing\"\u003ealpha-composite\u003c/a\u003e\nA over B, it will create an effect that you can see both image A and B\nin the resulting image, as if A has transparency and you can\n\u003cem\u003esee\u003c/em\u003e through A and also see B.\u003c/p\u003e","title":"How to Do Image Alpha-compositing in Pillow","type":"posts"},{"content":" 今天介绍另外一种风格的炸酱制作，区别于之前写过的 老北京炸酱.\n原料 # 五花肉，干香菇，大葱，洋葱，姜，大蒜，黄酒，干黄酱，黄豆酱，五香粉，蚝油\n制作步骤 # 干香菇用水搓洗，去除杂质，洗干净，然后用水泡发，提前几个小时泡，泡好以后，把香菇切成小丁，泡香菇水别倒掉，后续有用。\n五花肉准备，五花肉洗干净，去皮，切小块，用绞肉机搅碎，喜欢碎一点就多绞一会儿\n准备适量葱白，切碎备用，准备适量大葱，切丝，半个洋葱，切丝备用，适量大蒜和姜，切碎备用\n锅内多倒点油，中小火，一定不能大火，油微热，倒入大葱丝和洋葱丝，不断搅拌，待洋葱变成焦黄变干，捞出大葱和洋葱\n中火，油锅内下入绞碎的五花肉，不断翻炒煸炒，加入切好的姜蒜沫，加入适量黄酒去腥，不断翻炒，直到肉沫比较干，颗粒感比较分明，肥肉开始被熬出油\n锅中加入 1/3 小碗的干黄酱和黄豆酱(比例差不多 1:1)，继续翻炒均匀，让肉沫均匀染色，变成深色。\n锅内加入泡香菇的水，没过猪肉，不够的话，再加点水，大火把水烧开，然后中小火熬制。\n待水熬的快完时，尝味道，加入适量食盐，五香粉，花椒粉，味精，蚝油，搅拌均匀，最后加入葱花，关火，稍微搅拌均匀即可。\n参考 # https://m.youtube.com/watch?v=NQD-n0q2SjI\u0026list=PLc3vYMi812YcFjUdCgTsxV_7hDKGfaKyr\u0026index=1 ","date":"28 March 2022","externalUrl":null,"permalink":"/2022/03/28/how_to_make_zhajiang2/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202203280008836.jpg\" width=\"200\"\u003e\n\u003c/p\u003e\n\u003cp\u003e今天介绍另外一种风格的炸酱制作，区别于之前写过的 \u003ca href=\"https://jdhao.github.io/2021/09/05/how_to_make_zhajiang_noodles/\" target=\"_blank\"\u003e老北京炸酱\u003c/a\u003e.\u003c/p\u003e","title":"地道美味炸酱制作方法","type":"posts"},{"content":"","date":"27 March 2022","externalUrl":null,"permalink":"/categories/machine-learning/","section":"Categories","summary":"","title":"Machine-Learning","type":"categories"},{"content":" Non-linear activations are important in deep neural networks. It is important in the sense that without non-linear activation functions, even if you have many linear layers, the end results is like you have only one linear layer, and the approximation ability of the network is very limited1. Some of most commonly-used nonlinear activation functions are Sigmoid, ReLU and Tanh.\nNonlinear activations and their derivatives Sigmoid Sigmoid function, also known as logistic function, has the following form:\n\\[f(x) = \\frac{1}{1+e^{-x}}\\]\nThe derivative of sigmoid is:\n\\[\\begin{aligned}\\frac{df}{dx} \u0026amp;= \\frac{e^{-x}}{(1+e^{-x})^2}\\\\ \u0026amp;= \\frac{1}{1+e^{-x}}(1- \\frac{1}{1+e^{-x}})\\\\ \u0026amp;= f(x)(1-f(x)) \\end{aligned}\\]\nTanh Tanh function\n\\[f(x) = \\frac{e^{2x}-1}{e^{2x}+1}\\]\nThe derivative of Tanh is:\n\\[\\frac{df}{dx} = \\frac{4e^{2x}}{(e^{2x} + 1)^2} = 1 - {f(x)}^2\\]\nReLU ReLU, called rectified linear unit, has the following form:\n\\[f(x) = \\max(0, x)\\]\nWe can also write ReLU as:\n\\[f(x) = \\begin{cases} x \u0026amp; x \\geq 0 \\\\ 0 \u0026amp; x \u0026lt; 0 \\end{cases}\\]\nThe derivate of ReLU is quite simple, it is 1 for \\(x \u0026gt; 0\\) and 0 otherwise.\nThere are also variants of ReLU, such as Leaky ReLU, PReLU (parametric ReLU), and RReLU (randomized ReLU). In Empirical Evaluation of Rectified Activations in Convolutional Network, the author claimed that PReLU and RReLU works better than ReLU in small scale datasets such as CIFAR10, CIFAR100 and Kaggle NDSB.\nVanishing gradient I show the plot of different activation functions and their derivatives in the title image.\nClick to show the code for visualization. import matplotlib.pyplot as plt import numpy as np def main(): x = np.linspace(-5, 5, 100) r = [relu(v) for v in x] sig = [sigmoid(v) for v in x] d_sig = [sigmoid(v)*(1 - sigmoid(v)) for v in x] t = [tanh(v) for v in x] d_tanh = [1 - tanh(v)**2 for v in x] fig = plt.figure(figsize=[6, 3]) ax = fig.add_subplot(111) ax.plot(x, r, \u0026#39;#66c2a5\u0026#39;, label=\u0026#39;ReLU\u0026#39;) ax.plot(x, sig, \u0026#39;#fc8d62\u0026#39;, label=\u0026#39;sigmoid\u0026#39;) ax.plot(x, d_sig, \u0026#39;#8da0cb\u0026#39;, label=\u0026#39;sigmoid derivative\u0026#39;) ax.plot(x, t, \u0026#39;#e78ac3\u0026#39;, label=\u0026#39;tanh\u0026#39;) ax.plot(x, d_tanh, \u0026#39;#a6d854\u0026#39;, label=\u0026#39;tanh derivative\u0026#39;) ax.legend() plt.savefig(\u0026#39;activation-curve.png\u0026#39;, dpi=96, bbox_inches=\u0026#39;tight\u0026#39;) def relu(x): if x \u0026gt;=0: return x return 0 def sigmoid(x): return 1/(1 + np.exp(-x)) def tanh(x): return (np.exp(x)**2 - 1)/(np.exp(x)**2 + 1) if __name__ == \u0026quot;__main__\u0026quot;: main() The derivative of sigmoid is relatively small, and its largest value is only 0.25 (when \\(x = 0\\)). When \\(x\\) is large, the derivative is near zero. Tanh has a similar issue: it has a low gradient, and maximum gradient is only 1 (\\(x=0\\)).\nThis will cause the vanishing gradient problem, because in order to calculate the derivative of loss w.r.t the weight of earlier layers in the network, we need to multiply the gradient in the later layers. When you multiply several values below 0.25, the result goes down to zero quickly, so the network weight in earlier layers get updated slowly. In other words, the learning process will converge much slower than using ReLU, and we might need much more epochs to get a satisfactory result.\nAnother advantage of ReLU is that it is computationally cheap compared to sigmoid, both in terms of forward and backward operation.\nTry it yourself interactively To gain more insight into this, we can use minist on convenet.js and change the activation function to see how the train goes. We can see that training process under tanh and sigmoid activation is much slower than ReLU. Sigmoid is slowest among the three.\nWe can also play with different activations functions real quick with TensorFlow playground.\nReferences https://en.wikipedia.org/wiki/Rectifier_(neural_networks) A list of activation functions: https://en.wikipedia.org/wiki/Activation_function ReLU vs Sigmoid: https://stats.stackexchange.com/q/126238/140049 See this post and also this one for more detailed discussions.↩︎\n","date":"27 March 2022","externalUrl":null,"permalink":"/2022/03/27/neural-network-nonlinear-activation/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202203271740705.png\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003eNon-linear activations are important in deep neural networks. It is\nimportant in the sense that without non-linear activation functions,\neven if you have many linear layers, the end results is like you have\nonly one linear layer, and the approximation ability of the network is\nvery limited\u003ca href=\"#fn1\" class=\"footnote-ref\" id=\"fnref1\"\nrole=\"doc-noteref\"\u003e\u003csup\u003e1\u003c/sup\u003e\u003c/a\u003e. Some of most commonly-used\nnonlinear activation functions are Sigmoid, ReLU and Tanh.\u003c/p\u003e","title":"Nonlinear Activations for Neural Networks","type":"posts"},{"content":"I have a web service where the images come in a batch so I have to do inference for several images in PIL format at a time. Initially, I use a naive approach and just transform the images one by one, then combine them to form a single tensor and do the inference. The inference becomes really slow when I have a batch with more than 30 images. The inference time is about 1-2 seconds per batch.\nShould we set cudnn.benchmark to True? # Some blog posts have recommend an easy way to speed your inference: setting torch.backends.cudnn.benchmark to True. By setting this option to True, cudnn will try to find the fastest convolution algorithm for your input shape. However, this only works when the input shape to the model does not change. If the input shape changes, the time cost will actually be worse1.\nDataset and DataLoader for inference # After some debugging, I found that data transformation may be the bottleneck. In the naive approach, the data processing for the images are done sequentially, sometime like this:\nprocessed_imgs = [transform(im) for im in pil_imgs] Actually we can use DataLoader from torch to accelerate the image processing speed. We need to define a Dataset and DataLoader for the inference.\nclass InferDataset(torch.utils.data.Dataset): def __init__(self, pil_imgs): super(InferDataset, self,).__init__() self.pil_imgs = pil_imgs self.transform = make_transform() # some infer transform def __len__(self): return len(self.pil_imgs) def __getitem__(self, idx): img = self.pil_imgs[idx] return self.transform(img) infer_data = InferDataset(pil_imgs) infer_loader = torch.utils.data.DataLoader(infer_data, batch_size=64, shuffle=False, num_workers=4, pin_memory=True) with torch.no_grad(): for data in infer_loader: data = data.cuda() output = model(data) # ... more processing Use torch.cuda.synchronize() for correct benchmarking # Note that the torch cuda operations are asynchronous, which will return without waiting to finish. To time a cuda operation correctly, we need to use torch.cuda.synchronize() to wait for the operation to finish. So the timing code should be like this:\ntorch.cuda.synchronize() start = time.time() # your cuda operations go here, for example, out = mode(input) torch.cuda.synchronize() end = time.time() print(f\u0026#34;elapse: {end-start}\u0026#34;) Important parameters # The parameters that impact the speed most are batch_size and num_workers.\nIf GPU memory permits, using a large batch size will be faster since we have fewer iterations to run. The exact value for batch size should be benchmarked on your system.\nThe parameter num_worker means the number of worker processes used for fetching data. When it is 0, only the main processes will be used, which will be slow. However, it does not mean more workers will definitely lead to faster processing speed. We need to benchmark and choose a suitable value. Generally, it should not exceed the number of CPU cores we have. For example, I found that setting num_workers to 1 works the fastest for me.\nThe parameter pin_memory=True will reduce the time cost for transferring data from your CPU to GPU (detail here), thus accelerating data processing. So in generally, it should be always used.\nConclusion # With all these optimizations, I was able to reduce the batched image inference time from 2 seconds to about 100 ms.\nReferences # https://www.willprice.dev/2021/03/27/debugging-pytorch-performance-bottlenecks.html https://leimao.github.io/blog/PyTorch-Benchmark/ https://auro-227.medium.com/timing-your-pytorch-code-fragments-e1a556e81f2 See also discussion here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 March 2022","externalUrl":null,"permalink":"/2022/03/18/torch_accelerate_batch_inference/","section":"Posts","summary":"\u003cp\u003eI have a web service where the images come in a batch so I have to do inference for several images in PIL format at a time.\nInitially, I use a naive approach and just transform the images one by one,\nthen combine them to form a single tensor and do the inference.\nThe inference becomes really slow when I have a batch with more than 30 images.\nThe inference time is about 1-2 seconds per batch.\u003c/p\u003e","title":"Accelerate Batched Image Inference in PyTorch","type":"posts"},{"content":"Like other programming languages, the best way to to use a value multiple times in LaTeX is to define a variable for it. Later when you want to change the value, you only need to change it once. Here is how to do it.\nUse \\newcommand # We can use \\newcommand to define a new command for the text like this:\n\\newcommand{\\toyCommand}{some text} In the main, to insert the text, we can call this command:\nWe can use \\toyCommand{} like this. Or we can use \\toyCommand\\ like this. Note that the double bracket {} or escaped space \\ after the custom command is necessary, without which, the inserted text and text after it will stick together with no space.\nIf we just want to use \\toyCommand, we can use xspace package and add space when defining the command:\n\\usepackage{xspace} \\newcommand{\\toyCommand}{some text\\xspace} Note that xspace do have some drawbacks, see discussion here.\nUse \\def # We can also use \\def to define a variable and use it later1.\n\\def \\myVar {some text} We can use \\myVar{} like this. Note that {} is also required to add a literal sapce after the inserted text.\nReferences # Space after LaTeX commands: https://tex.stackexchange.com/q/31091/114857 Is there any way I can define a variable in LaTeX: https://stackoverflow.com/q/1211888/6064933 It may override existing macro without warning, so use it with care.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 March 2022","externalUrl":null,"permalink":"/2022/03/14/latex_define_string_variable/","section":"Posts","summary":"\u003cp\u003eLike other programming languages, the best way to to use a value multiple times in LaTeX is to define a variable for it.\nLater when you want to change the value, you only need to change it once. Here is how to do it.\u003c/p\u003e","title":"Define A String Variable in LaTeX","type":"posts"},{"content":"","date":"14 March 2022","externalUrl":null,"permalink":"/categories/latex/","section":"Categories","summary":"","title":"LaTeX","type":"categories"},{"content":" When merging branches, the most direct way we can use is to git merge. However, with git-merge, the commit history and graph will be messy if there are a lot of branches.\nWe can also use git rebase to merge branches to make the commit history cleaner. Suppose we have a feat branch and master branch, and they share a common base commit.\n-----A------B----C------D(master) \\ \\---E---F (feat) To merge the two branches using git-rebase, run the following command:\ngit checkout feat git rebase -i master Note that after running the above step, we may get merge conflict. We need to fix the conflict, then use git add some_file to mark that conflict for some_file has been resolved. Use git rebase --continue to fix conflict in other files, or finish the rebasing process (when there is no conflict anymore).\nAfter the above step, we have the following commit graph:\n(master) ---A------C------D------E\u0026#39;---F\u0026#39;(feat) In order to move master to tip of the commit, we can run the following command:\ngit checkout master git merge --ff feat The -ff option for git-merge will ascend the master to the same commit as the feat branch.\n---A------C------D------E\u0026#39;---F\u0026#39;(feat) \\ \\(master) To delete the feat branch, run the following command:\ngit branch -d feat Now, you have succeed in merging the two branches using git rebasing.\n","date":"7 March 2022","externalUrl":null,"permalink":"/2022/03/07/git_merge_branch_with_rebase/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202021114754.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eWhen merging branches, the most direct way we can use is to \u003ccode\u003egit merge\u003c/code\u003e.\nHowever, with git-merge, the commit history and graph will be messy if there are a lot of branches.\u003c/p\u003e","title":"Merging Branches with Git Rebase","type":"posts"},{"content":"","date":"27 February 2022","externalUrl":null,"permalink":"/tags/softmax/","section":"Tags","summary":"","title":"Softmax","type":"tags"},{"content":" Softmax function is commonly used in classification tasks. Suppose that we have an input vector \\([z_1, z_2, \\ldots, z_N]\\), after softmax, each element becomes:\n\\[p_i = \\frac{\\exp(z_i)}{\\sum_{j=1}^{N}\\exp(z_j)}\\]\nThe denominator term normalize each element so that their sum is 1. The original vector is transformed into a probability distribution, and the index that corresponds to the highest probability is the chosen class.\nIn practice, we often see softmax with temperature, which is a slight modification of softmax:\n\\[p_i = \\frac{\\exp(x_i/\\tau)}{\\sum_{j=1}^{N}\\exp(x_j/\\tau)}\\]\nThe parameter \\(\\tau\\) is called the temperature parameter1, and it is used to control the softness of the probability distribution. When \\(\\tau\\) gets lower, the biggest value in \\(x\\) get more probability, when \\(\\tau\\) gets larger, the probability will be split more evenly on different elements. Consider the extreme cases where \\(\\tau\\) approaches zero, the probability for the largest element will approach 1, while when \\(\\tau\\) approaches infinity, the probability for each element will be the same.\nimport math def softmax(vec, temperature): \u0026quot;\u0026quot;\u0026quot; turn vec into normalized probability \u0026quot;\u0026quot;\u0026quot; sum_exp = sum(math.exp(x/temperature) for x in vec) return [math.exp(x/temperature)/sum_exp for x in vec] def main(): vec = [1, 5, 7, 10] ts = [0.1, 1, 10, 100, 10000] for t in ts: print(t, softmax(vec, t)) if __name__ == \u0026quot;__main__\u0026quot;: main() With different values of t, the output probability is (also check the title image):\n0.1 [8.194012623989748e-40, 1.928749847963737e-22, 9.357622968839298e-14, 0.9999999999999064] 1 [0.00011679362893736733, 0.006376716075637758, 0.0471179128098403, 0.9463885774855847] 10 [0.14763314666550595, 0.2202427743860977, 0.26900513210002774, 0.3631189468483686] 100 [0.23827555570657363, 0.24799976560608047, 0.25300969319764466, 0.2607149854897012] 10000 [0.2498812648459304, 0.2499812373450356, 0.2500312385924627, 0.2501062592165714] According to this post, the name softmax is kind of misleading, it should be softargmax, especially when you have a very small \\(\\tau\\) value.\nFor example, for vec = [1, 5, 7, 10], argmax result should be 3. If we express it as one-hot encoding, the result is [0, 0, 0, 1], which is pretty close to the result of softmax when \\(\\tau = 0.1\\).\nApplications In Distilling the Knowledge in a Neural Network, they also used temperature parameter in softmax:\nUsing a higher value for T produces a softer probability distribution over classes.\nSupervised contrastive learning In the MoCo paper, softmax loss with temperature is used (it is a slightly modified version of InfoNCE loss):\n\\[Loss = -\\log\\frac{exp(q\\cdot k_+/\\tau)}{\\sum_{i=0}^{K} exp(q\\cdot k_i/ \\tau)}\\]\nIn that paper, \\(\\tau\\) is set to a very small value 0.07. If we do not use the temperature parameter, suppose that the dot product of negative pairs are -1, and dot product of positive pair is 1, and we have K = 1024, in this case, the model has separated the positive and negative pairs perfectly, but the softmax loss is still too large:\n\\[-log\\frac{e}{e + 1023e^{-1}} = 4.94\\]\nIf we use a parameter of \\(\\tau = 0.07\\), however, the loss will now become literally 0.0. So using a small \\(\\tau\\) helps collapse the probability distribution to the positive pair and reduces loss.\nMoCo borrows this value from Unsupervised Feature Learning via Non-Parametric Instance Discrimination, in which the authors say:\nτ is important for supervised feature learning [43], and also necessary for tuning the concentration of v on our unit sphere.\nRef 43 refers to paper NormFace: L2 Hypersphere Embedding for Face Verification. In NormFace Sec. 3.3, the authors show theoretically why it is necessary to use a scaling factor2 in softmax loss. Basically, if we do not use a scaling factor, the lower bound for the loss is high, and we can not learn a good representation of image features.\nReferences Why should we use Temperature in softmax? What is Temperature in LSTM (and neural networks generally)? https://stats.stackexchange.com/questions/527080/what-is-the-role-of-temperature-in-softmax Understanding the Behaviour of Contrastive Loss: https://arxiv.org/abs/2012.09740 https://ogunlao.github.io/2020/04/26/you_dont_really_know_softmax.html https://www.reddit.com/r/MachineLearning/comments/n1qk8w/d_temperature_term_in_simclr_or_moco_papers/ The name temperature may come from Boltzmann distribution, where it has similar formulation and a temperature parameter.↩︎\nIn NormFace, they use \\(s=1/\\tau\\) as the scaling factor and multiply it, instead of dividing \\(\\tau\\) directly.↩︎\n","date":"27 February 2022","externalUrl":null,"permalink":"/2022/02/27/temperature_in_softmax/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202271549378.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eSoftmax function is commonly used in classification tasks. Suppose\nthat we have an input vector \u003cspan class=\"math inline\"\u003e\\([z_1, z_2,\n\\ldots, z_N]\\)\u003c/span\u003e, after softmax, each element becomes:\u003c/p\u003e","title":"Softmax with Temperature Explained","type":"posts"},{"content":"File explorer is one of the most widely-used types of plugin for Vim/Nvim. Below are my curated list of file explorers for Nvim. Some of these plugins are specifically written for Nvim and will not work for Vim.\nnerdtree # vim or Neovim: both platform: Windows, Linux, macOS feature: rich feature with a lot of mappings speed: slow for large directory fern.vim # vim or nvim: both platform: Windows, Linux, macOS feature: rich feature speed: implemented in vim script, asynchronous operation so maybe fast vim-dirvish # vim or nvim: both platform: Windows, Linux, macOS feature: not very rich, concise without many decoration speed: nvim-tree.lua # vim or nvim: nvim only platform: macOS, Linux, Windows feature: seems complete speed: quite fast, but for large number of files, there will be some delays. tree.nvim # vim or nvim: nvim platform: Linux, macOS (author claims to support Windows, but no install script available) feature: medium feature speed: haven\u0026rsquo;t tried, written in C++, maybe very fast defx.nvim # vim or nvim: both platform: Linux, macOS and Windows feature: very rich speed: haven\u0026rsquo;t tried, but may be fast due to python implementation. chadTree # written in Python (requires at least Python 3.8.2)\nvim or nvim: nvim only platform: Linux, macOS and Windows feature: very rich speed: asynchronous and fast lir.nvim # vim or nvim: nvim only (written in lua) telescope-file-browser.nvim # vim or nvim: nvim only platform: Linux, macOS and Windows speed: asynchronous and fast (seems to be faster than nvim-tree.lua, I have tested both on a directory with 100000 files) misc: It is an unconventional file explorer. It uses telescope floating window for file management. Neo-tree.nvim # vim or nvim: nvim only platform: Linux, macOS and Windows feature: seems complete speed: may be fast, haven\u0026rsquo;t tried. ","date":"27 February 2022","externalUrl":null,"permalink":"/2022/02/27/nvim_file_tree_explorer/","section":"Posts","summary":"\u003cp\u003eFile explorer is one of the most widely-used types of plugin for Vim/Nvim.\nBelow are my curated list of file explorers for Nvim.\nSome of these plugins are specifically written for Nvim and will not work for Vim.\u003c/p\u003e","title":"A Curated List of File Explorers for Nvim","type":"posts"},{"content":"","date":"21 February 2022","externalUrl":null,"permalink":"/categories/thought/","section":"Categories","summary":"","title":"Thought","type":"categories"},{"content":"有个人 A 在 Vim tg 群，问了一个简单的 vim 问题，另外一位群友 B 给了间接的回答，告诉他应该多搜索一下。结果引发了大讨论，有人认为直接回答就好，没必要指教别人，没必要那么傲慢，居高临下，就炸锅了，引发了大讨论，还导致几个人退群。\n学会技术提问 # 在技术世界里，很多人一直犯的一个错误，就是不会提问，问一些很简单能够很快搜索到的问题，或者问一些太过于宽泛、无法针对性回答的问题。为什么会提出「坏问题」？一般有两个原因：\n一个可能是确实没有意识到，这样的提问不合适，如果有人指正以后他会修正自己提问的方式 另外一个就是不愿意花费时间深度思考，期待其他人给出完整的解答，也就是思想上的懒惰 关于如何提技术问题，很经典的文章是 How to Ask Questions The Smart Way. 它不光是讲如何提问，也涉及到了如何去解决自己的问题. 当你提了一个好问题，经过自己的不断思考，可能就自己解决了，不需要提问了.\n玻璃心是好的吗？ # 成年人的世界是圆滑的，如果有人愿意给你建议，说一些你不愿意听但是对你有帮助的话,这是很难得的。你们没有任何的利益关系，他纯粹是出于个人兴趣帮助你。不要这样玻璃心，觉得别人俯视你，居高临下，第一别人可能并没有这样，第二就算别人可能有点傲慢，想想他给你提的建议是否有用，这才是最关键的，分清什么是重要的，什么是不重要的。\n回到刚才的事件，短期来看直接解答别人的提问，可能是对他有用的。长期来看，告诉他方法论，才是真正对他的发展有帮助的。短视的人，常常由于别人没有直接回答他的问题而恼怒，这样的人不值得帮助，不值得浪费时间。\nWhat have you tried 那篇文章其实讲的就是这样的问题。当别人提出问题，不要像个 loser 一样抱怨别人不尊重你.如果你展现出来，为了解答这个问题，你付出了自己的努力，那么别人是愿意无偿帮助你的，否则你自己都不愿意花费时间去解决问题，陌生人为什么要花费大量时间去帮助你？\n当你不在意别人的时间，别人也不会在意你的问题。所以当我们遇到这样的人该干嘛？忽略就好了。\nRelated # 如何高效使用搜索引擎找到技术问题的答案 为什么要用英语以及谷歌？ Getting answers: https://www.mikeash.com/getting_answers.html#guide_begin ","date":"21 February 2022","externalUrl":null,"permalink":"/2022/02/21/on_asking_tech_questions/","section":"Posts","summary":"\u003cp\u003e有个人 A 在 \u003ca href=\"https://t.me/vimzh_real\" target=\"_blank\"\u003eVim tg 群\u003c/a\u003e，问了一个简单的 vim 问题，另外一位群友 B 给了间接的回答，告诉他应该多搜索一下。结果引发了大讨论，有人认为直接回答就好，没必要指教别人，没必要那么傲慢，居高临下，就炸锅了，引发了大讨论，还导致几个人退群。\u003c/p\u003e","title":"关于正确提问技术问题","type":"posts"},{"content":"","date":"11 February 2022","externalUrl":null,"permalink":"/tags/ffmpeg/","section":"Tags","summary":"","title":"Ffmpeg","type":"tags"},{"content":"Building a usable Docker image with all the packages living peacefully is hard. Here is how to install pyav using Docker.\nEnvironment:\nsystem: Ubuntu 18.04 python: 3.6.9 pip: 20.3 change apt source # First, a not-necessary but huge time saver is to change the apt source used. Here in China, the official debian apt source is really slow. We can change it to aliyun or tsinghua. Their access speed is quite high in China.\nHere is the relevant snippet to change apt resource.\nARG APT_FILE=/etc/apt/sources.list # change apt repo source RUN mv $APT_FILE $APT_FILE.bak \u0026amp;\u0026amp; \\ touch $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE \u0026amp;\u0026amp; \\ echo \u0026#34;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\u0026#34; \u0026gt;\u0026gt; $APT_FILE Install dependency packages # Second, we need to install necessary packages:\nRUN apt-get update \u0026amp;\u0026amp; apt-get install -y python-dev pkg-config Note that installation instructions given in pyav doc here does not work. It seems that the installed version of libavformat and other libs are too old. If we use that, we will see error message like this (also reported here and here):\nError building 'av.codec.codec' extension creating build/temp.linux-x86_64-3.6/src/av/codec x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.6m -Iinclude -I/usr/include/x86_64-linux-gnu -Ibuild/temp.linux-x86_64-3.6/include -I/usr/include/python3.6m -Ibuild/temp.linux-x86_64-3.6/include -c src/av/codec/codec.c -o build/temp.linux-x86_64-3.6/src/av/codec/codec.o src/av/codec/codec.c: In function ‘__pyx_pymod_exec_codec’: src/av/codec/codec.c:6061:36: error: ‘AV_CODEC_CAP_HARDWARE’ undeclared (first use in this function); did you mean ‘AV_CODEC_CAP_DR1’? __pyx_t_7 = __Pyx_PyInt_From_int(AV_CODEC_CAP_HARDWARE); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 124, __pyx_L1_error) ^~~~~~~~~~~~~~~~~~~~~ AV_CODEC_CAP_DR1 src/av/codec/codec.c:6061:36: note: each undeclared identifier is reported only once for each function it appears in src/av/codec/codec.c:6082:36: error: ‘AV_CODEC_CAP_HYBRID’ undeclared (first use in this function); did you mean ‘AV_CODEC_CAP_DR1’? __pyx_t_7 = __Pyx_PyInt_From_int(AV_CODEC_CAP_HYBRID); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 128, __pyx_L1_error) ^~~~~~~~~~~~~~~~~~~ AV_CODEC_CAP_DR1 error: command 'x86_64-linux-gnu-gcc' failed with exit status 1 ---------------------------------------- Failed building wheel for av Running setup.py clean for av Failed to build av Add apt source for libav # Instead, we need to install the ffmpeg-4 apt source:\n# add a new ffmpeg source, the builtin is too old RUN apt-get update \u0026amp;\u0026amp; apt-get install -y software-properties-common \u0026amp;\u0026amp;\\ add-apt-repository -y ppa:jonathonf/ffmpeg-4 After that, install the dependency lib for pyav:\nRUN apt-get update \u0026amp;\u0026amp; apt-get install -y \\ ffmpeg \\ libavformat-dev \\ libavcodec-dev \\ libavdevice-dev \\ libavutil-dev \\ libswscale-dev \\ libswresample-dev \\ libavfilter-dev Finally, use pip to install pyav, it should be fine to install:\nRUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple av Ref # Official installation guide: https://pyav.org/docs/develop/overview/installation.html#installation ","date":"11 February 2022","externalUrl":null,"permalink":"/2022/02/11/pyav_install_docker/","section":"Posts","summary":"\u003cp\u003eBuilding a usable Docker image with all the packages living peacefully is hard.\nHere is how to install \u003ca href=\"https://github.com/PyAV-Org/PyAV\" target=\"_blank\"\u003epyav\u003c/a\u003e using Docker.\u003c/p\u003e","title":"Install pyav inside Ubuntu Docker","type":"posts"},{"content":"","date":"11 February 2022","externalUrl":null,"permalink":"/tags/pyav/","section":"Tags","summary":"","title":"Pyav","type":"tags"},{"content":"In order to for PyTorch to use host GPU inside a Docker container, their versions must match.\nUse correct nvidia-cuda docker as base image # First, in order to use GPU, we can not just use a regular docker image as the base image, we need to use images provided by nvidia/cuda. For example, to use CUDA 10.1 as the base image:\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04 #... other build steps follows Otherwise, even if you have installed PyTorch inside the container, torch.cuda.is_available() is still False.\nPyTorch and torchvision versions # Another point to remember is to install the right version of PyTorch that supports your CUDA versions. If you install PyTorch without specifying the version, the latest one is installed. It will have higher requirement for CUDA version. If you try to use CUDA, then you see error like this:\npytorch the nvidia driver on your system is too old (found version 10010) To check which version of CUDA torch is built with, use torch.version.cuda (source here).\nFind suitable PyTorch version # To find the PyTorch version built with CUDA 10.1, in the PyTorch stable release page, search cu101. We know that there is v1.6.0 built with CUDA 10.1, then we can run the following command to install v1.6.0:\npip install torch==1.6.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html Match torchvision with torch version # The torchvision package version should also match version of torch. In this page, we can see a table of version correspondence. For example, for torch 1.6.0, torchvision 0.7.0 is fine. So our final install command:\npip install torch==1.6.0+cu101 torchvision==0.7.0 -f https://download.pytorch.org/whl/torch_stable.html Ref # https://pytorch.org/get-started/previous-versions/\n","date":"9 February 2022","externalUrl":null,"permalink":"/2022/02/09/dependency-hell-build-torch-gpu-docker-container/","section":"Posts","summary":"\u003cp\u003eIn order to for PyTorch to use host GPU inside a Docker container, their versions must match.\u003c/p\u003e","title":"Dependency Hell When Building A PyTorch GPU Docker Image","type":"posts"},{"content":"Today I upgrade Hugo from v0.75 to the latest version (v0.92). When I run the deployment script to build the site and push, I saw the following error:\nerror: Error building site: \u0026ldquo;/Users/jdhao/Blog/content/post/back-propagation-in-mlp-explained.pdc:1:1\u0026rdquo;: access denied: \u0026ldquo;pandoc\u0026rdquo; is not whitelisted in policy \u0026ldquo;security.exec.allow\u0026rdquo;;\nThe cause # From the release note of v0.91, we can find the reason (the part about New Security Configuration).\nThis release also adds some new security hardening measures for the Hugo build runtime in the form of a new security configuration. There are some rarely used features in Hugo that would be good to have disabled by default. One example would be the \u0026ldquo;external helpers\u0026rdquo;.\nSo Hugo v0.91 introduces a set of security config meant to harden the building environment. If we use external tools like pandoc (as the Markdown renderer), nvim or emacs (as the new content editor), we now need to allow them explicitly in our configuration. Otherwise, they are not allowed to run.\nSolution # The solution is simple. Edit the config.toml under site root, and add the following security section:\n[security] enableInlineShortcodes = false [security.exec] allow = [\u0026#39;^dart-sass-embedded$\u0026#39;, \u0026#39;^go$\u0026#39;, \u0026#39;^npx$\u0026#39;, \u0026#39;^postcss$\u0026#39;, \u0026#39;^pandoc$\u0026#39;, \u0026#39;^nvim$\u0026#39;] osEnv = [\u0026#39;(?i)^(PATH|PATHEXT|APPDATA|TMP|TEMP|TERM)$\u0026#39;] [security.funcs] getenv = [\u0026#39;^HUGO_\u0026#39;] [security.http] methods = [\u0026#39;(?i)GET|POST\u0026#39;] urls = [\u0026#39;.*\u0026#39;] Add the needed executable to the security.exec.allow white list. After that, the error should disappear.\nReferences # security issues: https://github.com/gohugoio/hugo/issues/9315 https://github.com/gohugoio/hugo/issues/9420 ","date":"2 February 2022","externalUrl":null,"permalink":"/2022/02/02/executable_not_allowed_to_run_in_hugo/","section":"Posts","summary":"\u003cp\u003eToday I upgrade \u003ca href=\"https://github.com/gohugoio/hugo\" target=\"_blank\"\u003eHugo\u003c/a\u003e from v0.75 to the latest version (v0.92).\nWhen I run the deployment script to build the site and push, I saw the following error:\u003c/p\u003e","title":"External Executable Not Allowed to Run after Hugo v0.91?","type":"posts"},{"content":"","date":"2 February 2022","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"凉菜万能调料汁制作方法。\n原料 # 大蒜🧄，小葱，生姜，盐，白糖，老陈醋，生抽\n可选：小米辣，辣椒粉，香菜\n制作步骤 # 大蒜拍扁切碎成蒜末，小葱切碎，取适量姜切成姜末，放入碗中，喜欢吃辣的，再加入适量辣椒粉和切成段的小米辣 国内热少量油，待油开始轻微冒烟，温度合适，分次加入到碗中，每次加入油搅拌一下，使油充分与原料混合 加入适量盐，白糖，生抽，老陈醋，搅拌均匀即可（醋的比例根据口味来控制） 喜欢吃香菜，可以切少量香菜，最后加入调料汁拌匀 参考 # https://www.youtube.com/watch?v=e1BQ8bsalG0 ","date":"1 February 2022","externalUrl":null,"permalink":"/2022/02/01/make_sauce_for_cold_dish/","section":"Posts","summary":"\u003cp\u003e凉菜万能调料汁制作方法。\u003c/p\u003e","title":"凉菜调味汁制作方法","type":"posts"},{"content":" 家常版蒜蓉炒虾🦐制作方法。\n原料 # 葱，姜，蒜，料酒，生抽，白糖，蚝油，玉米/红薯淀粉，活虾🦐，\n原料准备 # 准备葱姜切丝或者片 准备虾：去除内脏和虾线，剪掉长须，清洗干净 腌制虾：把虾，葱姜，少量料酒放入碗中，用手抓几遍，保证混合均匀，腌制 10 分钟 准备大量生蒜，切成蒜泥备用，适量小葱，切葱花备用。 准备淀粉水(少量水，加入适量淀粉，别太多) 制作步骤 # 锅内加入热油，下入腌制好的虾，把虾炒到虾皮变红，捞出。 倒入生蒜泥，翻炒，加入虾略微翻炒，开始调味，加入适量食盐，生抽，白糖，蚝油，翻炒均匀。 锅中倒入少量开水，中小火煮 3-5 分钟，加入锅中勾芡，开大火收汁(注意翻炒以防糊锅），待汤汁粘稠，加入葱花即可出锅装盘。 参考 # https://m.youtube.com/watch?v=XxOdHaNSsAg ","date":"1 February 2022","externalUrl":null,"permalink":"/2022/02/01/stir-fried-shrimp-with-garlic/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202012330649.jpg\" width=\"400\"\u003e\n\u003c/p\u003e\n\u003cp\u003e家常版蒜蓉炒虾🦐制作方法。\u003c/p\u003e","title":"菜谱：蒜蓉炒虾","type":"posts"},{"content":"Saving and loading PyTorch models # Models in PyTorch are a subclass of torch.nn.Module. To save the model parameters, we use model.state_dict() to get all the model parameters:\nstate = model.state_dict() Then save the model parameter using torch.save():\ntorch.save(state, \u0026#39;my-model.pth\u0026#39;) Loading error when using torch.load to load model trained on GPU # When we load a model trained on GPU in a machine with no GPU using torch.load(model_path), we often get the following error:\nRuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device(\u0026lsquo;cpu\u0026rsquo;) to map your storages to the CPU.\nThe cause # This is because when we use torch.save() to save an object, torch will also store the location of original data (called location tag, check code here). torch.save() also keeps the view relationship between tensors unchanged, see here.\nBased on code here, it seems that PyTorch will save the GPU tensor as CPU.\nWhen we use torch.load(), since the tensor location has been recorded, torch will load the tensor first to CPU, then moves it to the GPU indicated by the location tag. If that GPU is missing or we are using a CPU machine, the above error will occur.\nLoad the model correctly # A better way to load a model is to move it to CPU using the map_location parameter of torch.load(). Load the model to CPU, then load the model parameter into the model, finally, move the model to GPU:\n# move the model parameter to cpu state = torch.load(\u0026#39;my-model.pth\u0026#39;, map_location=torch.device(\u0026#39;cpu\u0026#39;)) model.load_state_dict(state) # now move the model parameter to a GPU device of your choice model.to(torch.device(\u0026#39;cuda:0\u0026#39;)) ref # saving and loading models: https://pytorch.org/tutorials/recipes/recipes/save_load_across_devices.html#saving-and-loading-models-across-devices-in-pytorch ","date":"28 January 2022","externalUrl":null,"permalink":"/2022/01/28/pytorch_model_load_error/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eSaving and loading PyTorch models \n    \u003cdiv id=\"saving-and-loading-pytorch-models\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#saving-and-loading-pytorch-models\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eModels in PyTorch are a subclass of \u003ccode\u003etorch.nn.Module\u003c/code\u003e. To save the model parameters,\nwe use \u003ccode\u003emodel.state_dict()\u003c/code\u003e to get all the model parameters:\u003c/p\u003e","title":"A Dig into PyTorch Model Loading","type":"posts"},{"content":" I took the LinkedIn Git assessment and got a certificate1, but found that I am not super clear on some of the questions. Here is an analysis of some of the questions and their answers.\ndifferent ways of git add and their meaning # I have written about this in this post.\ngit reset: soft vs mixed vs hard # When using git-reset, there three different types of reset, in term of disruptiveness:\n--soft: moves HEAD to specified commit, and changes in the reset commits are squashed and kept in the staging area. --mixed: moves HEAD to specified commit, changes in the reset commits as well as changes in staging areas are moved to working tree. This is the default reset behaviour. --hard: moves HEAD to the specified commit, but all the changes (changes in the reset commit, in staging area , as well as changes in working tree) are discarded. Ref:\nsoft vs mixed vs hard: https://stackoverflow.com/a/50022436/6064933 what does git reset do: https://stackoverflow.com/q/2530060/6064933 What the following command do: # git checkout master git cherry-pick kj2342134 It pick the commit kj2342134 and apply it on master, i.e., it will try to patch master branch with commit kj2342134.\nNote we are likely to meet merge conflict. We need to resolve the conflict and then git add conflict_file, then run git cherry-pick --continue.\nRef:\nwhat does cherry-pick do? https://stackoverflow.com/q/9339429/6064933 show changes in files via git diff-tree # git diff-tree --no-commit-id --name-status -r \u0026lt;SHA\u0026gt; The output may look like this:\nD autocommands.vim A core/autocommands.vim A core/mappings.vim A core/options.vim A core/plugins.vim A core/ui.vim A core/variables.vim M init.vim D mappings.vim D options.vim D plugins.vim D ui.vim D variables.vim Ref\nhttps://stackoverflow.com/a/24819616/6064933\nwhat does git commit -a do? # It will stage modified and deleted files (but not new files) to staging area and commit them to index. So it is equivalent to the following two commands:\ngit add -u git commit Ref:\nhttps://stackoverflow.com/a/6840337/6064933 Status after modifying staged files # Why do you see the following git status output?\nOn branch master Changes to be committed: (use \u0026#34;git restore --staged \u0026lt;file\u0026gt;...\u0026#34; to unstage) modified: test.txt Changes not staged for commit: (use \u0026#34;git add \u0026lt;file\u0026gt;...\u0026#34; to update what will be committed) (use \u0026#34;git restore \u0026lt;file\u0026gt;...\u0026#34; to discard changes in working directory) modified: test.txt It means that after test.txt is added to staging area, and you have changed it.\nwhat does the following command do: # git fetch --all git reset --hard origin/master It will fetch the remote changes, then discard all local changes and move HEAD to remote master. This will effectively make your local master the same as your remote master.\nRef:\nDifference between git pull and git fetch: https://stackoverflow.com/q/292357/6064933 Does git push push all tags to remote by default? # No, if you create a tag locally, they are not pushed to remote by default when you do git push. To push a certain tag to remote, use:\ngit push origin {some-tag} To push all tags to remote:\ngit push origin --tags Ref:\nhttps://jdhao.github.io/2021/05/08/git_tag_notes/#push-tags-to-remote check the help for a git subcommand # For example, we want to check doc for git reset, how do we do it on command line? There are two ways:\ngit help reset man git-reset How do we restore to original state if we meet a merge conflict and decided to discard the changes? # Use git merge --abort .\nRef:\nabort a merge: https://stackoverflow.com/a/2534968/6064933 Show branches that has been merged by current branch? # Use git branch --merged\nClean untracked file in a repo? # We can use git clean -f (-f means with force) to clean untracked files in a git repo.\nNote that this will not remove untracked directories by default. To also remove untracked directories (be careful if you really want to), add -d option: git clean -d -f.\nTo see the dry-run result (do not actually delete the files), use --dry-run or -n.\ndifference between git fetch and git pull # You can think of git-pull as a two step operation: first we use git fetch, then we use git merge to merge the remote tracking branch.\nShow what is in a git stash without applying it # First, use git stash list to list a list of stashes. The output is like this:\nstash@{0}: WIP on feat: c6c7af1 4 and 5 stash@{1}: WIP on feat: c6c7af1 4 and 5 stash@{2}: WIP on feat: c6c7af1 4 and 5 Then, to see the changes in first stash, use git stash show -p stash@{0}. We can think of stash as a stack, where top is your most recent stashed changes.\nYou need to be the top 30% to get one.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 January 2022","externalUrl":null,"permalink":"/2022/01/14/linkedin_git_assessment/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202012337737.jpg\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003eI took the \u003ca href=\"https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/tree/master/git\" target=\"_blank\"\u003eLinkedIn Git assessment\u003c/a\u003e and got a certificate\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, but found that I am not super clear on some of the questions.\nHere is an analysis of some of the questions and their answers.\u003c/p\u003e","title":"Selected Questions from LinkedIn Git Assessment","type":"posts"},{"content":" LogSumExp is often used in machine learning. It has the following form:\n\\[\\begin{equation} LSE(x_1, x_2, \\ldots, x_n) = \\log\\sum_{i=1}^{N}\\exp(x_i) \\end{equation}\\]\nLSE as an upper bound for max() LSE is an upper bound for \\(max(x_1, x_2, \\ldots, x_n)\\) (The equality establishes only when \\(n=1\\)). We have the following inequality:\n\\[\\begin{equation} max(x_1, x_2, \\ldots, x_n) \u0026lt;= \\log\\sum_{i=1}^{N}\\exp(x_i) \\end{equation}\\]\nTo verify this, I have drawn a graph comparing LSE vs max for 2D data in the range of [-1, 1]. The graph is shown in the title image. It clear that LSE is indeed an uppber bound for max.\nclick here to check the code used to generate the title image import matplotlib.pyplot as plt import numpy as np def main(): fig = plt.figure() ax = fig.add_subplot(projection=\u0026#39;3d\u0026#39;) N = 200 x1 = np.linspace(-1, 1, N) x2 = np.linspace(-1, 1, N) X1, X2 = np.meshgrid(x1, x2) Y = np.log(np.exp(X1) + np.exp(X2)) surf = ax.plot_surface(X1, X2, Y, color=\u0026#39;red\u0026#39;) Y_up = np.max(np.stack([X1, X2], axis=0), axis=0) surf2 = ax.plot_surface(X1, X2, Y_up, color=\u0026#39;blue\u0026#39;) # y = np.log(np.exp(x1) + np.exp(x2)) # ax.plot_trisurf(x1, x2, y, color=\u0026#39;red\u0026#39;) # y_up = np.max(np.stack([x1, x2], axis=1), axis=1) # ax.plot_trisurf(x1, x2, y_up, color=\u0026#39;green\u0026#39;) ax.set_xlabel(\u0026quot;X1\u0026quot;) ax.set_ylabel(\u0026quot;X2\u0026quot;) ax.set_zlabel(\u0026quot;Z\u0026quot;) # change the 3D plot angel and dist, https://stackoverflow.com/q/12904912/6064933 ax.view_init(elev=11, azim=-46) ax.dist = 10 # plt.show() plt.savefig(\u0026quot;log_sum_exp_vs_max.pdf\u0026quot;, bbox_inches=\u0026#39;tight\u0026#39;) if __name__ == \u0026quot;__main__\u0026quot;: main() How is this information useful? Well, we can use it to transform the optimization target. For example, you may want to optimize \\(max(x_1, x_2)\\), which is not differentiable. Then we can optimize \\(LSE(x_1, x_2)\\) instead.\nIn Lifted structure loss, they used this trick to transform equation 3 to equation 4. Without this knowledge, you will find it difficult to understand how they arrive at equation 4.\nLSE for numerical stability When we use softmax function to normalize a vector and the vector contains large or small values, we will encounter numerical issues (overflow or underflow). We need to use LSE to alleviate this issue.\nThis post explains how it works in detail.\nReferences https://en.wikipedia.org/wiki/LogSumExp matplotlib plot_trisurf ","date":"9 January 2022","externalUrl":null,"permalink":"/2022/01/09/log_sum_exp_in_machine_learning/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202201092324184.jpg\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003eLogSumExp is often used in machine learning. It has the following\nform:\u003c/p\u003e","title":"Why do We Use LogSumExp in Machine Learning?","type":"posts"},{"content":"We often need to squash several related commits to make the commit history cleaner. There are several different ways to achieve this.\nHere, suppose we want to squash last 2 commits.\nUsing git rebase # I have covered this method in my previous post, so I won\u0026rsquo;t repeat it here.\nsoft reset, then commit # First, we run the soft reset command:\ngit reset --soft HEAD~2 This will reset last two commits, but keep their changes. If you run git status command, you will see that you have uncommitted changes. These changes are a combination of changes in last two commits.\nNow, you just commit again and write the new commit message:\ngit commit -m \u0026#34;some msg blah blah blah\u0026#34; hard reset, then merge \u0026ndash;squash # First, we run the hard reset command:\ngit reset --hard HEAD~2 This will discard changes in the recent two commits, but there are actually not lost. HEAD@{1} represents where your HEAD was before you use hard reset. HEAD@{2} represents your HEAD two moves ago. So HEAD@{} variable logs your HEAD movement. We can check the HEAD movement using git reflog. An example output is like this:\n0073058 (HEAD -\u0026gt; master) HEAD@{0}: commit: 9th 618c9fd HEAD@{1}: commit: 8th ed79391 HEAD@{2}: commit: Squashed commit of the following: f0fb17b HEAD@{3}: reset: moving to HEAD~2 b2ee13a HEAD@{4}: reset: moving to HEAD b2ee13a HEAD@{5}: reset: moving to HEAD b2ee13a HEAD@{6}: reset: moving to HEAD b2ee13a HEAD@{7}: reset: moving to HEAD b2ee13a HEAD@{8}: reset: moving to HEAD b2ee13a HEAD@{9}: reset: moving to HEAD b2ee13a HEAD@{10}: reset: moving to HEAD b2ee13a HEAD@{11}: commit: 7th 004a853 HEAD@{12}: commit: sixth f0fb17b HEAD@{13}: commit: fifth d9f10ed HEAD@{14}: commit: fourth 774b308 HEAD@{15}: commit: thrid ad2fb58 HEAD@{16}: commit: second efe6902 HEAD@{17}: commit (initial): first Now, we will run git merge --squash HEAD@{1} to squash the recent two commits. The merge window should be pre-populated with the commit message of recent two commits.\nReferences # Squash my last X commits together using Git Meaning of HEAD@{N} notation: https://stackoverflow.com/a/21911246/6064933 Difference between merge --squash and rebase: https://stackoverflow.com/q/2427238/6064933 ","date":"9 January 2022","externalUrl":null,"permalink":"/2022/01/09/git_squash_last_n_commits/","section":"Posts","summary":"\u003cp\u003eWe often need to squash several related commits to make the commit history cleaner.\nThere are several different ways to achieve this.\u003c/p\u003e","title":"How to Squash Last N Commits in Git?","type":"posts"},{"content":"","date":"9 January 2022","externalUrl":null,"permalink":"/tags/rebase/","section":"Tags","summary":"","title":"Rebase","type":"tags"},{"content":"","date":"9 January 2022","externalUrl":null,"permalink":"/tags/squash/","section":"Tags","summary":"","title":"Squash","type":"tags"},{"content":" update log 2022-08-21: add section on profile visitor stat 2022-04-09: add section on Stack Overflow stats card. In this post, I will share how to customize your GitHub profile page, and you can find the end result here.\nGitHub allows us to show README content on top of our profile page: https://github.com/{user_name}.\nCreate a special repo # First, we need to create a special repo that has the same name as our user name. For example, my GitHub name is jdhao, so the new repo name will be jdhao.\nCreate a README # In the new repo, add a file named README.md. All content inside this file will be rendered and displayed on your profile.\nCustomization # Show latest blog post # We can use this blog-post-workflow GitHub action to update the README with the latest post from our blog site.\nFirst, edit the README.md and add the following section:\n# Latest blog posts \u0026lt;!-- BLOG-POST-LIST:START --\u0026gt; \u0026lt;!-- BLOG-POST-LIST:END --\u0026gt; Then in the personal repo https://github.com/jdhao/jdhao, create folder .github/workflows. In this folder, add blog-post-workflow.yml:\nname: Latest blog post workflow on: schedule: # Run workflow automatically - cron: \u0026#39;30 23 * * *\u0026#39; # Runs every day on 23:30 workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the Github Actions Workflow page directly jobs: update-readme-with-blog: name: Update this repo\u0026#39;s README with latest blog posts runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 - name: Pull in my blog posts uses: gautamkrishnar/blog-post-workflow@master with: feed_list: \u0026#34;https://jdhao.github.io/index.xml\u0026#34; This action will be run periodically (every day on 23:30). Check here for the GitHub action cron syntax.\nNote the feed link for feed_list field should be replaced with your own blog feed.\nPush the changes to your personal repo. To trigger the action manually, go to Actions, click the workflow, and then click Run workflow.\nThis action will update your README automatically.\nShow GitHub stats # With the help of project github-readme-stats, we can display our GitHub stats easily:\n\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://github-readme-stats.vercel.app/api?username=jdhao\u0026amp;show_icons=true\u0026amp;count_private=true\u0026amp;theme=solarized-light\u0026amp;hide_border=true\u0026#34; width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;/p\u0026gt; The result is:\nShow GitHub streak stats # The project github-readme-streak-stats can help to show your contributions and streak stats.\n\u0026lt;img alt=\u0026#34;jdhao\u0026#39;s GitHub Streak\u0026#34; src=\u0026#34;https://github-readme-streak-stats.herokuapp.com?user=jdhao\u0026amp;theme=solarized-light\u0026amp;hide_border=true\u0026#34; width=\u0026#34;60%\u0026#34;\u0026gt; The result is like this:\nShow Stack Overflow stats # With the help of project stackoverflow-card, we can easily create a card for our Stack Overflow account:\n[![jdhao\u0026#39;s stackoverflow profile](https://stackoverflow-card.vercel.app/?userID=6064933\u0026amp;theme=solarized-light)](https://stackoverflow.com/users/6064933/jdhao) The result is like this:\nShow profile view stats # The project github-profile-views-counter will help you count the number of visitors to your profile page. Add a link like this to your profile README:\n\u0026lt;img src=\u0026#34;https://gpvc.arturio.dev/jdhao\u0026#34; alt=\u0026#34;Profile views\u0026#34;/\u0026gt; The result is like this:\nReferences # https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/about-your-profile Create GitHub profile: https://www.youtube.com/watch?v=ECuqb5Tv9qI https://aboutmonica.com/blog/how-to-create-a-github-profile-readme/ collections of Markdown badges: https://github.com/Ileriayo/markdown-badges https://github.com/progfay/shields-with-icon https://github.com/alexandresanlim/Badges4-README.md-Profile https://home.aveek.io/GitHub-Profile-Badges/ ","date":"3 January 2022","externalUrl":null,"permalink":"/2022/01/03/github_profile_readme/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-08-21: add section on profile visitor stat\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-04-09: add section on Stack Overflow stats card.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I will share how to customize your GitHub profile page,\nand you can find the end result \u003ca href=\"https://github.com/jdhao\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"How to Make An Impressive and Beautiful GitHub Profile","type":"posts"},{"content":" I started using Neovim (nvim for short) about three years ago, in Sep. 2018. At that time, nvim had just released v0.3.1. Over the years, I have been a staunch nvim user, constantly learning new knowledge, and sharing tips, tricks and interesting plugins in my blog posts.\nHow I started with Neovim # Back when I was still in university, I had dabbled in Vim a little bit. I remember that in those days, most posts on the Internet recommended a plugin manager called vundle. As for auto-completion, ycm was the most popular plugin at the time. However, it is difficult to install and configure, and I never succeeded in installing it. I copied some basic config from various posts and did not really know what they mean. Vim script seemed weird and hard to understand. So my first trial of Vim didn\u0026rsquo;t really take off. I learned the basic motions and know how to save and quit a file, but no fancy and advanced features such as text objects. I was still using PyCharm and Sublime Text for serious project development.\nAfter I graduated and started working, since we need to run the code on a remote server with no GUI support, I was forced to make choices:\nDevelop on the server without GUI, which implies using a TUI editor. Vim is apparently the choice. Develop on my local PC and sync the code to remote via Git or other tools. I find choice one more elegant, since I do not need to set up dev environment on my local machine, and I can run my code directly on the server (running the code requires GPU and there is no GPU on my local machine). At the time, I came to know the Neovim project. I choose Nvim because it is easily installable. It provides binary releases, so I do not need to compile from source myself. I also like its development model more than Vim\u0026rsquo;s. Nvim uses GitHub and other modern dev tools for better collaboration, while Vim is still using google groups1 for dev communications.\nFinally, I was on the Neovim boat and started my journey.\nMy learning story # The initial learning curve of nvim was indeed quite steep. I needed to constantly check the documentation or search on the Internet, then tweak the config to do what I want. Sometimes, a small setting may waste a lot of time, since I needed to understand what it does and how it works. I also spent a lot time tweaking the settings of various plugins to fit my need.\nMy way of learning Nvim is to add the features and plugins I need incrementally. At the start, I only added the settings I wanted most, like autocompletion, linting, file explorer etc. I searched intensively on the Internet for the state of the art plugins for a particular need. I will try several similar plugins, and only keep the one that best suits me. The most important point to remember is that never rush to master Vim in a few days. Vim has so many hidden features and settings, and it is impossible to master it quickly.\nAfter about three or four months of rapid learning process, I was at ease using Nvim for my development work. I published a post on how to configure Nvim for Python development.\nAfter building a usable config, when I want to do something, I always check if there is a better way to do it. I searched on the Internet and learned new tricks, and perfected those skills through practicing. Notice that not all tricks on the Internet are good and written by advanced Vim users. We need to constantly learn new Vim knowledge and update our existing settings.\nAnother great learning resource is the configurations of other people. We can find numerous dotfile repos on GitHub and learn from them little tips and tricks that we do not know yet. I have always advised against copying the config of others without knowing what you are doing. At the very least, we should read the documentation and understand what a particular setting does. If we copy other\u0026rsquo;s config blindly, it may cause endless pains afterwards when we spend hours debugging misbehaving Nvim.\nAs I became more proficient in Vim, I started learning more advanced features such as text objects. I also created some custom text objects for my own use. I have always wanted to write my own plugin and contribute to the Vim community. After learning enough about Vim script, I wrote a plugin called better-escape.vim in Dec. 2020. The goal is to help users escape insert mode quicker without lagging caused by timeoutlen option.\nThis year (2021), I have been learning Lua and migrating some of my config to pure Lua.\nEvolution of my configuration # I didn\u0026rsquo;t create a repo to store my nvim config at first. I just stored it in a gist. It wasn\u0026rsquo;t until April 2019 that I created a repo for my nvim config.\nInitially, all my config is stored in a single file init.vim, which in its peak exceeded 2000 lines. Later, as I learned more about how Vim works (autoload, ftplugin, after folder etc.)2, I started splitting my config into different directories and files for better maintainability.\nMy config has been all vim script for a long time. Since nvim is adding more lua support and using lua to implement its builtin LSP support, I have also been updating my config and adding a little lua. I have slowly moved my completion system to the builtin LSP3. After that, part of my configuration is moved to lua/ directory。\nWith the release of Nvim v0.5, there has been a burst of lua-based plugins. I have also replaced some of the viml plugins to their lua-based counterparts4 this year.\nWhat remains, what has changed, and some new plugins # I am not a Vim purist5, so plugins have always been an essential part in using Vim/Nvim. Since there is no central plugin marketplace like Emacs MELPA, finding good plugins is not always easy.\nThat a plugin is popular and has more stars does not mean that it is better or it suits you6. Over the course of three years, I have always tried to find better alternatives for my existing plugins. Admittedly, trying a new plugin and adapting to it is a time-consuming process, especially when a plugin does not work out of the box and requires some degree of customization. However, the efficiency boost brought by a well-designed plugin can be huge.\nWhat remains # A few plugins still remain:\ngit gutter plugin: I still use vim-signify, but gitsigns.nvim seems more powerful and promising. snippet plugin: I am still using ultisnips due to its powerful interpolation features. There are also many lua-based snippet engines worth trying. git plugins: still use vim-fugitive. I have also tried gina, but find it too complicated. There are also lua-based git plugins such as neogit, which aims to replicate the functionality of magit. markdown plugins: vim-markdown for editing and markdown-preview.nvim for preview. What has changed # I have also updated a large part of my plugins during the process:\nplugin manager: from vim-plug to packer.nvim. I switched to packer.nvim middle this year, because it allows all sort of crazy lazy loading and brings package management to a whole new level. autocompletion plugins: from deoplete + deoplete-jedi to vim-lsp + deoplete to nvim-lsp + nvim-compe to nvim-lsp + nvim-cmp. Nvim-cmp is light-weight, well-designed and awesome. pair management: from vim-surround to vim-sandwich. Vim-sandwich is well-designed and has better UX than vim-surround, though it is less popular than vim-surround. comment plugin: from nerdcommenter to commentary.vim. I like commentary\u0026rsquo;s feature of commenting code via motion. file explorer: from nerdtree to none. I use fuzzy file finder instead. If I need to explore a project, I check it in another tmux pane. statusline plugin: from vim-airline to lualine. Vim-airline is great, but it is also bloated with too many 3rd-party plugin integrations. Lualine is simple, faster, and easy to customize. change of linting: from Neomake to ALE to nvim-lsp auto-pair plugin: from auto-pairs to delimitMate. DelimitMate has saner behaviour for pair insertion than auto-pairs. in-buffer jump: from vim-sneak to hop.nvim. Vim-sneak has been a great plugin. I changed to hop.nvim because it may support jumping via pinyin (PR here), which is convenient for Chinese users. search item indexing: from vim-anzu to nvim-hlslens. Nvim-hlslens is a lua plugin that provides better UX for search indexing using virtual text feature of Nvim. clear search highlight automatically: from vim-cool to nvim-hlslens format plugin: from Neoformat to none (using LSP for formatting). multiple cursors: from vim-multiple-cursors to none. I now use gn mostly. vim-visual-multi may be a good replacement (also recommended by author of vim-multiple-cursors). yank highlight: from vim-highlightedyank to nvim builtin, see this post for the detail. fuzzy finder: from fzf.vim to LeaderF. LeaderF works fast and reliably across different systems. startup screen: from vim-startify to alpha-nvim. tabline plugin: from vim-airline to bufferline.nvim. indent line plugin: from indentLine to indent-blankline.nvim. Indent-blankline uses the virtual text feature to make indent line flawless even on blank lines. auto save plugin: from vim-auto-save to AutoSave.nvim. showing tags: from tagbar to vista. Vista is better at displaying symbols. New plugins # I have also added some new and interesting plugins:\nnvim-treesitter: more accurate syntax highlighting, text object and more. nvim-notify: show notifications via floating windows. unicode.vim: check, search and insert unicode characters. asyncrun.vim: run code asynchronously in the background and show results in quick fix window. firenvim: run neovim inside text area in the browser and use it for quicker editing. vim-oscyank: yank text from remote server directly to the clipboard of your local machine. wilder.nvim: fancy autocompletion in command line for Nvim. whichkey.nvim: show key mappings and register contents etc. automatically for you. My thoughts on several topics # Vim or Neovim? # This is a question that gets asked almost monthly by mainly beginners (e.g., see this post). The short and unbiased answer is that it does not really matter for novice.\nSince Nvim is a fork of Vim and merges patches from Vim regularly, the basic features are almost the same. There are some subtle differences (see vim-differences), but that is largely irrelevant for beginners. If you are a beginner, you can pick either one and learn the basics7. Later when you become a proficient user, you can choose a side, or make your config compatible with both Vim and Nvim.\nIt is a sad truth that Vim and Nvim are going on quite different paths: Neovim is investing more on Lua, and its Lua plugin system is thriving, while Vim is trying hard implement the vim9 script, a completely new and incompatible version of viml. There might be more incompatible changes happening on both sides. It might be getting harder to port Vim patches to Neovim. Personally, I doubt whether the amount of effort put into building vim9 script will ever pay off. Considering that a lot of vim plugins are still trying to support Vim 7.xxx, I doubt how many of these plugin authors are willing to rewrite their plugins in vim9 script, especially when their plugins have very large code bases.\nPersonally, I will stick to Neovim and migrate to all-lua config some day.\ninit.vim vs init.lua? # Since nvim has added support for init.lua, many users have moved from viml-based to lua-based config completely. Currently, my config is still a mix of vim script and lua script due to several reasons:\nLua support in Nvim is still not complete and mature enough. For example, sometimes we still need to use vim.cmd() to run vim command. We still need to learn how to use Vim script. Some viml command is more concise to write, and lua tends to be more verbose, e.g., when defining mappings or setting an option. I am still using quite a few vim script plugins, and it makes sense to configure these plugins in vim script. Should I use a pre-made config distribution? # There are several Vim/Nvim distributions, which aim at providing IDE-like and out-of-the-box experience. Some of the most popular distributions are LunarVim and NvChad, AstroNvim.\nPeople ask frequently on r/neovim and r/vim whether they should use a vim/Nvim distribution. If you are serious about Vim and want to learn how to use it properly and eventually master it, I think it is better to avoid those distributions and build your own config from scratch:\nThose distributions may add their own configuration layer and complicate things. Users end up learning too much distribution-specific config without learning real Vim stuff. Even if you use those distributions, when you want to customize certain things, you still need to learn how Vim/Nvim works under the hood. Otherwise, you can only count on other developers to implement the feature for you. When you meet issues with those distributions, you may have a hard time debugging it, since they all include various configurations. However, this does not mean that you can not learn from these distributions, e.g., how they configure, how they organize their directory structure. You can even steal some configs for your own use.\nConcluding remarks # Looking back, I think I have made the right choice to learn Vim/Nvim. It has been a rewarding journey for me. I am so used to vim\u0026rsquo;s style editing that Vim becomes second nature.\nI am thankful to all the contributors of Vim/Nvim for building and maintaining such a great editor. I am grateful for the efforts that plugin authors put into in building those great plugins.\nI am not saying that Vim\u0026rsquo;s development model is worse, I just like Nvim\u0026rsquo;s development model more.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAn excellent article on how to split your config is from .vimrc to .vim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nI used deoplete with deoplete-jedi for over two years. Then I moved to vim-lsp + deoplete for several month, before moving to nvim-lsp.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nA good resource for finding lua plugins is awesome neovim. Neovimcraft also collects some lua-based neovim plugins and config distributions.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nVim purist refers to people who use little or no external plugins.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nOne such example is vim-surround vs vim-sandwich. Vim-sandwich has much lesser stars than vim-surround, but I find it more user-friendly and switched to it in 2020.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf you decide to go all Lua and use init.lua, then you should definitely use Neovim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"31 December 2021","externalUrl":null,"permalink":"/2021/12/31/using_nvim_after_three_years/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202031428905.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eI started using \u003ca href=\"https://neovim.io/\" target=\"_blank\"\u003eNeovim\u003c/a\u003e (nvim for short) about three years ago, in Sep. 2018.\nAt that time, nvim had just released \u003ca href=\"https://github.com/neovim/neovim/releases/tag/v0.3.1\" target=\"_blank\"\u003ev0.3.1\u003c/a\u003e. Over the years, I have been a staunch nvim user,\nconstantly learning new knowledge, and sharing tips, tricks and interesting plugins in \u003ca href=\"https://jdhao.github.io/categories/Nvim/\" target=\"_blank\"\u003emy blog posts\u003c/a\u003e.\u003c/p\u003e","title":"Using Neovim after Three Years -- A Retrospect","type":"posts"},{"content":"In order to get enough information from videos, we often need to extract video frames. However, we do not want to extract every frame from a video due to:\ninformation redundancy in successive video frames. huge storage space needed by these video frames. In this post, I want to share how to extract key frames from video to reduce the storage, but still capture enough information from a video.\nExtract I-frame using ffmpeg # In video compression, they use the so-called IPB frames to reduce storage space:\nI frames (Intra picture): a complete picture P frames (predictive picture): p frames stores difference between current frame and previous frame. B frames (Bidirectionally predicted picture): b-frame stores difference between current frame and previous frame and later frame. So we can extract I-frames only to get a fair amount of information from the video and reduce the extracted frame number.\nTo extract I-frames, we can run the following command:\nffmpeg -skip_frame nokey -i test.mp4 -vsync vfr -frame_pts true out-%02d.jpeg -vsync vfr: discard the unused frames -frame_pts true: use the frame index for image names, otherwise, the index starts from 1 and increments 1 each time We can also use the filter syntax to extract keyframes:\nffmpeg -i test.mp4 -vf \u0026#34;select=\u0026#39;eq(pict_type,I)\u0026#39;\u0026#34; -vsync vfr out-%02d.jpeg The produced results from the two commands are the same.\nExtract scene-changing frames # If we only want to retain enough info from the video, extracting I-frames only may not be enough. The extracted key frames may still exhibit too much information redundancy. For example, if you have a slow-changing video, the difference between a frame and its subsequent frames will be negligible. To further reduce the number of images generated, we can also use scene filter to select frames that are likely to be a scene-changing frame.\nIt works like this:\nffmpeg -i input.mp4 -vf \u0026#34;select=\u0026#39;gt(scene,0.4)\u0026#39;\u0026#34; -vsync vfr frame-%2d.jpg The value for scene is between 0 and 1, which measures the pixel level difference between current frame and previous frame. We can tweak this value to generate different number of output images. Intuitively, the smaller the value, the larger number of images we will extract. Typically, a value of 0.3 or 0.4 may be enough.\nIn order to extract suitable number of frames from the video, for videos with fast-changing frames, we should set this value high, and for videos with mostly still frames, we should set this value low (maybe 0.1 or even less depending on the video content).\nReferences # How to extract I frames: https://superuser.com/a/1421195/736190 https://superuser.com/a/669733/736190 How to extract scene-changing frames: https://stackoverflow.com/q/35675529/6064933 ","date":"25 December 2021","externalUrl":null,"permalink":"/2021/12/25/ffmpeg-extract-key-frame-video/","section":"Posts","summary":"\u003cp\u003eIn order to get enough information from videos, we often need to extract video frames.\nHowever, we do not want to extract every frame from a video due to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003einformation redundancy in successive video frames.\u003c/li\u003e\n\u003cli\u003ehuge storage space needed by these video frames.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn this post, I want to share how to extract \u003cem\u003ekey\u003c/em\u003e frames from video to reduce the storage,\nbut still capture enough information from a video.\u003c/p\u003e","title":"How to Extract Key Frames from A Video with FFmpeg","type":"posts"},{"content":"","date":"25 December 2021","externalUrl":null,"permalink":"/tags/video/","section":"Tags","summary":"","title":"Video","type":"tags"},{"content":"When downloading files using Safari browser in iPad, the files will be saved on your iCloud drive. For me, I want to download the files locally without filling up my iCloud space.\nThe download location can be changed easily. Open Settings -\u0026gt; Safari. In the GENERAL section, click Downloads settings. Change STORE DOWNLOADED FILES ON option to On My iPad.\nAfter that, all the downloaded files will be saved locally instead of on iCloud.\n","date":"25 December 2021","externalUrl":null,"permalink":"/2021/12/25/ipad-download-file-to-local-storage/","section":"Posts","summary":"\u003cp\u003eWhen downloading files using Safari browser in iPad, the files will be saved on your iCloud drive.\nFor me, I want to download the files locally without filling up my iCloud space.\u003c/p\u003e","title":"Download Files to Local Storage in iPad","type":"posts"},{"content":"","date":"25 December 2021","externalUrl":null,"permalink":"/tags/ipad/","section":"Tags","summary":"","title":"IPad","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/c++/","section":"Tags","summary":"","title":"C++","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/make/","section":"Tags","summary":"","title":"Make","type":"tags"},{"content":"","date":"23 December 2021","externalUrl":null,"permalink":"/tags/pybind11/","section":"Tags","summary":"","title":"Pybind11","type":"tags"},{"content":"In my old post, I have shared how to use pybind11 to accelerate execution of Python code.\nIn this post, I will introduce how to use STL containers in exported functions.\nIf we want to use STL containers for pybind11-exported functions, We need to include the pybind11 stl headers:\n#include \u0026#34;pybind11/stl.h\u0026#34; Otherwise, we will see the following error messages:\nDid you forget to #include \u0026lt;pybind11/stl.h\u0026gt;? Or \u0026lt;pybind11/complex.h\u0026gt;, \u0026lt;pybind11/functional.h\u0026gt;, \u0026lt;pybind11/chrono.h\u0026gt;, etc. Some automatic conversions are optional and require extra headers to be included when compiling your pybind11 module.\nHere is the content of a test cpp file pybind_stl.cc:\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026#34;pybind11/pybind11.h\u0026#34; #include \u0026#34;pybind11/stl.h\u0026#34; namespace py = pybind11; using std::string; using std::vector; using std::map; int lcs(string s1, string s2) { int N1 = s1.size(); int N2 = s2.size(); vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(N1 + 1, vector\u0026lt;int\u0026gt;(N2 + 1, 0)); for (int i = 1; i \u0026lt;= N1; i++) { for (int j = 1; j \u0026lt;= N2; j++) { if (s1[i - 1] == s2[j - 1]) { dp[i][j] = dp[i - 1][j - 1] + 1; } else { dp[i][j] = std::max(dp[i - 1][j], dp[i][j - 1]); } } } return dp[N1][N2]; } int demo(map\u0026lt;int, int\u0026gt; freq){ int max = -1; for (auto \u0026amp; item: freq){ if (item.second \u0026gt; max){ max = item.second; } } return max; } PYBIND11_MODULE(stl_demo, m) { m.doc() = \u0026#34;LCS calculation\u0026#34;; // optional module docstring m.def(\u0026#34;lcs\u0026#34;, \u0026amp;lcs, \u0026#34;lcs cal\u0026#34;, py::arg(\u0026#34;s1\u0026#34;), py::arg(\u0026#34;s2\u0026#34;)); m.def(\u0026#34;demo\u0026#34;, \u0026amp;demo, \u0026#34;demo\u0026#34;, py::arg(\u0026#34;freq\u0026#34;)); } To convert the C++ source file to shared object that can be imported by Python, I also created a Makefile to simplify code development. The content of Makefile is:\n.PHONY: test clean CC := g++ FLAGS := -Wall -std=c++11 -shared -fPIC INC := $(shell python3 -m pybind11 --include) SUFFIX := $(shell python3-config --extension-suffix) CC_FILE := pybind_stl.cc OBJ := stl_demo$(SUFFIX) $(OBJ): $(CC_FILE) $(CC) $(FLAGS) $(INC) $\u0026lt; -o $(OBJ) test: $(OBJ) python test.py clean: rm *.so We use the following test.py to check if the cpp code works as expected:\nfrom stl_demo import lcs, demo def main(): s1 = \u0026#34;afb\u0026#34; s2 = \u0026#34;acfb\u0026#34; print(f\u0026#34;lcs len: {lcs(s1, s2)}\u0026#34;) freq = {2: 3, 1: 4, 3: 5} max_cnt = demo(freq) print(f\u0026#34;max cnt: {max_cnt}\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: main() To test the demo code, simply run:\nmake test If everything works correctly, we will get the following result:\nlcs len: 3\nmax cnt: 5\n","date":"23 December 2021","externalUrl":null,"permalink":"/2021/12/23/pybind11_stl_vector/","section":"Posts","summary":"\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2021/08/17/pybind11_first_impression/\" target=\"_blank\"\u003eold post\u003c/a\u003e, I have shared how to use \u003ca href=\"https://pybind11.readthedocs.io/\" target=\"_blank\"\u003epybind11\u003c/a\u003e to accelerate execution of Python code.\u003c/p\u003e","title":"Using STL Containers with pybind11","type":"posts"},{"content":"I have a file where each line has several comma-separated items. I want to sort the lines, based on a certain column. How do we do it inside Vim/Nvim?\nThere are two different ways to achieve this.\nUsing external sort # The first is via external tool sort and the vim filter feature (see :help filter). The syntax is:\n:{range}!{filter} Lines in the given {range} are sent to external program and are replaced with the output of external command.\nFor example, to sort the following lines based on the 3rd column:\nadf,adf,0.56 dkkdf,iwer,0.23 uywe,qwe,0.4 mckdf,adfj,0.35 we can use the following vim command:\n:%!sort -t, -k3 \u0026#34; or use the following \u0026#34; :1,$!sort -t, -k3 Using :sort command # The second method is to use the vim builtin :sort command (see :h :sort for the details).\n:sort f /\\v^(.{-},){2}/ Explanation of the command:\n:sort: you can prefix it with a range, like 1,3sort. Without a range, the whole buffer is used (i.e., %sort). f: we are going to sort float numbers. We can also use x (hex number), b (binary number), o (octal number) etc. /\\v^(.{-},){2}/: the pattern we are going to skip during sort, i.e., content after the pattern will be sorted. The default is to sort the lines in ascending order. To sort the lines in descending order, add a ! after :sort (i.e., use :sort!).\nReferences # https://vi.stackexchange.com/a/5837/15292 https://vi.stackexchange.com/a/7189/15292 ","date":"21 December 2021","externalUrl":null,"permalink":"/2021/12/21/sort_lines_based_on_a_column_nvim/","section":"Posts","summary":"\u003cp\u003eI have a file where each line has several comma-separated items. I want to sort\nthe lines, based on a certain column. How do we do it inside Vim/Nvim?\u003c/p\u003e","title":"Sort lines based on a column in Vim/Nvim","type":"posts"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/sorting/","section":"Tags","summary":"","title":"Sorting","type":"tags"},{"content":"","date":"21 December 2021","externalUrl":null,"permalink":"/tags/vim/","section":"Tags","summary":"","title":"Vim","type":"tags"},{"content":"When dealing with videos, we may want to process video in a specific time range, for example, to only process video from 50 seconds to 70 seconds. How do we specify the time range in ffmpeg?\nTo specify the start position, use -ss option. This option can be used as an input option (before -i) or output option (after -i). When used as an input option, ffmpeg will directly seek the video file to that position. When used as an output option, ffmpeg will still decode frames before that position, but discards those frames. So using -ss as an input option may accelerate the processing speed dramatically.\nTo specify the end position, we can use -to option1. Another way is to use -t to specify a time duration.\nThe format for time can be found here:\nThere are two accepted syntaxes for expressing time duration. [-][HH:]MM:SS[.m...] HH expresses the number of hours, MM the number of minutes for a maximum of 2 digits, and SS the number of seconds for a maximum of 2 digits. The m at the end expresses decimal value for SS. _or_ [-]S+[.m...][s|ms|us] S expresses the number of seconds, with the optional decimal part m. The optional literal suffixes ‘s’, ‘ms’ or ‘us’ indicate to interpret the value as seconds, milliseconds or microseconds, respectively. In both expressions, the optional ‘-’ indicates negative duration. So to extract frame from 50 seconds to 70 seconds, we can use either of the following commands:\nffmpeg -ss 00:00:50 -to 00:01:10 -i input.mp4 -r 1 out-%2d.jpg ffmpeg -ss 00:00:50 -t 20 -i input.mp4 -r 1 out-%2d.jpg ffmpeg -ss 50 -t 20 -i input.mp4 -r 1 out-%2d.jpg References # ffmpeg seeking: https://trac.ffmpeg.org/wiki/Seeking ffmpeg does not recognize -to as input option https://askubuntu.com/q/1181319/768311 https://stackoverflow.com/q/66876561/6064933 Note that use -to as an input option, you need to use ffmpeg v4.0+.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 December 2021","externalUrl":null,"permalink":"/2021/12/16/ffmpeg-process-video-in-a-time-range/","section":"Posts","summary":"\u003cp\u003eWhen dealing with videos, we may want to process video in a specific time range,\nfor example, to only process video from 50 seconds to 70 seconds. How do we\nspecify the time range in ffmpeg?\u003c/p\u003e","title":"Process video in a certain time range with FFmpeg?","type":"posts"},{"content":"科技发展的这样快，常常让我们忘了以前是什么样的。手机现在已成了现代人的一部分，须臾离不开了，十几年前还不是这样。有时候我坐在地铁上，看着低头认真滑手机的人们，就在想没有手机之前大家的生活都是什么样的，竟然想不起来了。\n我记得我第一次见到手机是初中的时候 (2006 年以前)，爸爸从外地回家，带回来一个手机，是那种翻盖手机，非智能机。屏幕很小，似乎也没有拍照功能，上面有一些自带的小游戏，我也玩的不亦乐乎。\n到了高中，我们的高中是市里最好的中学，自然不乏富家子弟，同班同学就有一些人开始用手机了，我印象最深的是有两个同学，用的是三星 Anycall，红色机身，滑盖造型，当时就觉得好炫酷。\n到了高中后期，就有同学开始用诺基亚的智能手机了，当时触屏手机还非常少，记得有个同学拿了一台诺基亚 N97，采用侧边滑盖设计，带有实体键盘，采用塞班 s60 v5 系统。此时的诺基亚还正处于如日中天的地步，隐隐的危机却已经显现了，iphone 于两年前出现了，但还未成大气候，Android 系统也于 2008 年发布，处于最初的成长阶段。\n上大学前(2010 年)买了诺基亚 6120 (价格 1000 左右)，塞班 s60 v3 系统，也可以安装程序，记得当时从各种论坛下载各种破解软件，也玩的很开心。当时的智能手机虽然可以用，但是应用并不特别丰富，闲暇的生活并不像现在，被手机所占据。到了 12、13 年，小米手机已经在国内打出了名气，由于产量跟不上需求，出现了抢购风潮，至今仍时时被嘲讽为耍猴，雷军也被戏称为\u0026quot;猴王\u0026quot;。\n随着苹果手机和安卓手机强势崛起，诺基亚这个手机巨人在短短两三年之间就崩塌了，此时微软为了抗衡苹果和谷歌，也推出了 Windows phone 操作系统，并且和诺基亚结盟。不得不说第一次见到 windows phone 系统那方块磁铁界面时，还是非常惊艳的。作为一名软粉，我在大四下学期把手机换成了诺基亚 Lumia 925 (wp8 系统，价格 1999)，当时还买了 windows phone logo 的 t-shirt。当时还有非常惊艳的 Lumia 1020 出来，后面有个超大标志性 4100 万像素镜头，代表了当时最高水准。至今还能想起来自己更新 windows mobile 10 预览版的兴奋。\n由于微软脑残的设计，windows 每一代升级到下一代都很困难，wp7 无法升级 wp8，wp8 很多手机无法升级 windows mobile 10，给本来就脆弱的 windows phone 生态以沉重打击。印象最深的就是 2015 年的支付婊事件，微博上众多网友声讨支付宝，希望能支持 windows phone 系统，结果最后也不了了之，小系统是没有人权的，加上微软猪队友，wp 就逐渐衰落了，微软后面也彻底放弃了自己的 windows mobile 系统。\n研一下学期实在忍不了 wp 匮乏的生态，入手了魅族 mx4 (入手价 1499)，那些年的魅族还没有那么小众，在手机市场还占有一定席位，后来魅族出了各种魅蓝产品，由于产品定位，系统拉垮,万年联发科等各种原因，慢慢就不行了。我的 mx4 用了差不多两年，到后面系统比较卡，手机发热，更夸张的是电池都鼓包了，把塑料后壳顶了起来。\n于是乎又换了一加 3T(入手价 2699)，一加也是在国内相对小众的品牌，不过手机配置不错，系统采用类谷歌原生的风格(说好听是简洁，说难听就是简陋，国产化功能比较少)。\n一加手机也用了差不多两年，电量就不行了，还经常发热。把手机换成了小米 9 (入手价 3299)，小米手机由于广告等原因在网上被黑的比较惨，对比其他系统(华为，vivo，一加等系统)，个人觉得算是国产安卓系统最好用的，用了两年多，仍然流畅，唯一不足是电池容量太小了，只有 3300 mAh，对比现在动辄 4500 mAh 的旗舰机续航差了很多。\n时至今日，手机的发展陷入瓶颈，各家手机都在屏幕，摄像头，所谓的新功能上发力，比拼参数，没有像当初给人们带来了如此多的惊喜，君不见连 iPhone 也陷入了平淡,被批评毫无创意。或许下一个革命性的设备就在悄悄酝酿呢，革智能手机手机的命，彻底变革人们的生活，在不远的未来手机就像笔记本电脑一样，变得不那么性感了，不再成为大家关注的焦点。\n","date":"12 December 2021","externalUrl":null,"permalink":"/2021/12/12/mobilephone_and_me_a_retrospect/","section":"Posts","summary":"\u003cp\u003e科技发展的这样快，常常让我们忘了以前是什么样的。手机现在已成了现代人的一部分，须臾离不开了，十几年前还不是这样。有时候我坐在地铁上，看着低头认真滑手机的人们，就在想没有手机之前大家的生活都是什么样的，竟然想不起来了。\u003c/p\u003e","title":"回顾我的手机换代史","type":"posts"},{"content":"在苹果系统上安装一个工具真麻烦，简单总结如何在 iPad 上安装 Shadowrocket 小火箭。\nShadowrocket 在中国区 App Store 下架，无法下载。iPad 也无法像安卓一样，方便直接安装第三方 App，导致安装一个 Shadowrocket 非常麻烦。\n亲测可行的方法 # 第一步，把 apple id 地址改为美国 (地址写个 fake 地址，可以用 这个帮你生成 )，关于如何更改地区，也可以参考 官方教程 或者 这里\n第二步，在 apple 美国官网1，购买 gift card，按照提示操作即可，亲测国内的 visa 卡也能支付成功，注意选择 email 邮寄\n第三步，打开 app store 充值，我用 iPad 的 App store 不知道为什么不行，一直提示\nthis card must be redeemed in us storefront\n后面用 MacBook 再打开邮件，然后点击 redeem 在电脑上充值成功\n第四步，购买应用，会自动从礼品卡扣款\n一些经过验证并不可行的方法 # 从 GitHub 下载了别人提取好的 Shadowrocket ipa 文件，通过爱思助手直接安装 ipa，打开应用以后，提示要输入购买应用时候用的 apple id 和密码，我肯定没有啊，这种方法不行。 使用网上提供的所谓购买过 Shadowrocket 的美区 id 和密码，App store 退出自己的账号，用该账号密码登陆，直接验证不通过，怀疑已经被封了。 把 apple id 改为美区，用国内的 visa 卡支付也不行，支付的时候无法支付，据说是因为国内银行的 visa 卡也会被认为是国内信用卡，所以不行。 在这里 https://www.apple.com/choose-your-country 把地区切换为 United States\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"12 December 2021","externalUrl":null,"permalink":"/2021/12/12/ipad_shadowrocket_install/","section":"Posts","summary":"\u003cp\u003e在苹果系统上安装一个工具真麻烦，简单总结如何在 iPad 上安装 Shadowrocket 小火箭。\u003c/p\u003e","title":"【2021 年】iPad 安装 Shadowrocket","type":"posts"},{"content":"About five months ago, the biggest update of Nvim comes with its v0.5.0 release. With v0.5, we finally get the official LSP support in Nvim core and better Lua support, among other features and bug fixes1.\nTL;DR: My LSP-related config can be found here.\nThis Tuesday, the Nvim v0.6.0 version is released. During the five months, the LSP module has been revamped and enhanced, though with some breaking changes.\nBelow are some the changes we need or can make based on this release.\nDiagnostics and LSP changes # Initially, diagnostic module is part of vim.lsp module. In order to support external plugins such as null-ls.nvim, the nvim team has refactor the diagnostic module to its module vim.diagnostic. So we need to change our config accordingly.\nvim.lsp.diagnostic.show_line_diagnostics() has been changed to vim.diagnostic.open_float(). Previously, there is no easy to show diagnostic source unless with some hack, you can now show source in diagnostics in open_float() easily:\nvim.diagnostic.open_float(nil, { source = \u0026#39;always\u0026#39; }) vim.lsp.diagnostic.goto_prev() and vim.lsp.diagnostic.goto_next() has been renamed to vim.diagnostic.goto_prev() and vim.diagnostic.goto_next() respectively.\nvim.lsp.diagnostic.set_loclist() and vim.lsp.diagnostic.set_qflist() has been renamed to vim.diagnostic.setloclist() and vim.diagnostic.setqflist() instead.\nDiagnostics signs has been renamed, for example (old \u0026ndash;\u0026gt; new):\nLspDiagnosticsSignError \u0026ndash;\u0026gt; DiagnosticSignError (Lsp is removed, Diagnostics is changed to singular from Diagnostic) LspDiagnosticsSignWarning \u0026ndash;\u0026gt; DiagnosticSignWarn LspDiagnosticsSignInformation \u0026ndash;\u0026gt; DiagnosticSignInfo LspDiagnosticsSignHint \u0026ndash;\u0026gt; DiagnosticSignHint Also, related highlight has been renamed too:\nDiagnosticsDefaultError \u0026ndash;\u0026gt; DiagnosticSignError DiagnosticsDefaultWarning \u0026ndash;\u0026gt; DiagnosticSignWarn DiagnosticsDefaultInformation \u0026ndash;\u0026gt; DiagnosticSignInfo DiagnosticsDefaultHint \u0026ndash;\u0026gt; DiagnosticSignHint Now, we can use the following lua snippet to change diagnostic signs:\nvim.fn.sign_define(\u0026#34;DiagnosticSignError\u0026#34;, { text = \u0026#34;✗\u0026#34;, texthl = \u0026#34;DiagnosticSignError\u0026#34; }) vim.fn.sign_define(\u0026#34;DiagnosticSignWarn\u0026#34;, { text = \u0026#34;!\u0026#34;, texthl = \u0026#34;DiagnosticSignWarn\u0026#34; }) vim.fn.sign_define(\u0026#34;DiagnosticSignInformation\u0026#34;, { text = \u0026#34;\u0026#34;, texthl = \u0026#34;DiagnosticSignInfo\u0026#34; }) vim.fn.sign_define(\u0026#34;DiagnosticSignHint\u0026#34;, { text = \u0026#34;\u0026#34;, texthl = \u0026#34;DiagnosticSignHint\u0026#34; }) For more details on diagnostic change, see this commit.\nChanges to the default # There are also changes to options and mappings that you might be interested.\nOption default value changes:\nbackupdir can now be created automatically and double backslash is used, see this commit. option inccommand is set to nosplit set nojoinspaces by default Mapping changes:\n\u0026lt;C-L\u0026gt; now defaults to nohlsearch and diffupdate, see this commit. In normal mode, Y is mapped to y$, see this commit, no need for nnoremap Y y$ anymore. The nvim 0.5 release note is here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"1 December 2021","externalUrl":null,"permalink":"/2021/12/01/nvim_v06_released/","section":"Posts","summary":"\u003cp\u003eAbout five months ago, the biggest update of Nvim comes with its \u003ca href=\"https://github.com/neovim/neovim/releases/tag/v0.5.0\" target=\"_blank\"\u003ev0.5.0\nrelease\u003c/a\u003e. With v0.5, we finally get the official LSP support in Nvim core and\nbetter Lua support, among other features and bug fixes\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eTL;DR: My LSP-related config can be found \u003ca href=\"https://github.com/jdhao/nvim-config/blob/master/lua/config/lsp.lua\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Migration from Nvim 0.5.1 to Nvim 0.6.0","type":"posts"},{"content":"In this post-web2.0 age, people seem to blog less and less, and blogs seem to be dying slowly. People are separated in different Apps where the content is not searchable by search engines.\nHowever, I still prefer to write using a blog. In this post, I want to share how I manage my blog.\nWhy I blog? # I run this blog site because I enjoy sharing knowledges or techniques I have learned. A lot of these knowledges are from blog posts of others, GitHub or Stack Overflow. Since I get these knowledges for free, I have a strong motivation to make what I have learned free for others. In a bigger sense, free exchange and access of ideas and knowledge makes the world a better place. This is also what FOSS is about.\nAlthough some of the blog posts may only be helpful to myself, but who knows, I hope they will be helpful to someone else in some day.\nWhat I write? # I usually share what I have learned during my work or my spare time. I write anything I am interested.\nOccasionally, I also write about what I am reading, what I thought, etc.\nWhen I write # I often save some notes about a topic or an idea in my free time. Later, when I have time, I will expand the notes to a full blog post. This way, I do not need to worry what to write. I always have something to share when I want to.\nTools I use for writing # All my blog posts are written in Markdown format with the help of the greatest editor neovim1. I use neovim because it is a highly configurable editor that no other editors can compete with.\nI use snippet plugins to make writing posts quicker. For previewing, I use markdown-preview.nvim, which is the best previewer for Neovim. I have shared how I write and preview Markdown efficiently in this post.\nI rarely insert images into my blog post since image links tend to break easily. So I try to explain things without using images as much as I can. If I need to use images in a post, I store the image in a cloud service and use the generated image links.\nStatic blog generator # I generate my blog using a static blog generator. Back in 2017 when I started this blog, I use Hexo. In Oct. 2018, I switched to Hugo for its high performance.\nFor comment system, I used Disqus for a long time. Recently, I have switched to use utterances, which is a lightweight comment system based on GitHub issues. You get all the power of GitHub issues for your blog comment.\nBlog site hosting # For blog hosting, I am using the good-old GitHub pages service. I have not purchased a personal domain for my blog because I think that is irrelevant. It is the content of the blog that matters most. People often get a fancy domain for their blog, and they get tired and stop writing anything.\nPost backup # In case that the post sources get lost, I have been backing up my posts periodically. Since all the blog posts are written in Markdown, I created a private GitHub repo to store the Markdown source files. I have created a backup script post_backup.sh under the Hugo blog site root to ease the operation:\n#!/bin/bash msg=\u0026#34;backup `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi echo -e \u0026#34;\\033[0;32mBackup posts to GitHub...\\033[0m\u0026#34; cd content/post # here we start to add and commit the blog to github git add . git commit -m \u0026#34;$msg\u0026#34; # push source to github git push echo -e \u0026#34;\\033[0;32mBackup done...\\033[0m\u0026#34; # come back to blog root cd ../.. Then I can run ./post_backup.sh to back up all my post sources.\nMy nvim config is stored in this repo. If you use Hugo, you can set up the default content editor when running hugo new post content/xxx.md.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"28 November 2021","externalUrl":null,"permalink":"/2021/11/28/how_i_write_blog/","section":"Posts","summary":"\u003cp\u003eIn this post-web2.0 age, people seem to blog less and less, and blogs seem to \u003ca href=\"https://www.google.com/search?q=blogs\u0026#43;are\u0026#43;dying\" target=\"_blank\"\u003ebe dying slowly\u003c/a\u003e.\nPeople are separated in different Apps where the content is not searchable by search engines.\u003c/p\u003e\n\u003cp\u003eHowever, I still prefer to write using a blog. In this post, I want to share how I manage my blog.\u003c/p\u003e","title":"How I Manage My Personal Blog","type":"posts"},{"content":"My Git learning notes.\nGenerate patch and apply it # Sometimes, we need to develop the same project in different places, and in some place, we may not be convenient to push directly to the remote repo. We can generate a patch instead and apply the patch somewhere else.\nFirst, run git diff \u0026gt; mypatch to generate a patch for the repo. To apply the patch somewhere, run git apply mypatch.\nRef:\nhttps://gist.github.com/nepsilon/22bc62a23f785716705c https://stackoverflow.com/q/5159185/6064933 Git: how to get out of detached head state # In git, when we check out to a specific commit using git checkout \u0026lt;commit_id\u0026gt;, git warns us that:\nYou are in \u0026#39;detached HEAD\u0026#39; state. You can look around, make experimental changes and commit them, and you can discard any commits you make in this state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may do so (now or later) by using -b with the checkout command again. Example: git checkout -b new_branch_name HEAD is now at 132ba1b... {some commit message} Detached head means that we are current in no branch. To return to the previous branch we are in, use git checkout - or git checkout original_branch_name if you know the branch name.\nRef:\nhttps://stackoverflow.com/q/11801071/6064933 https://stackoverflow.com/q/2304087/6064933 git: show commit that changes a specific file # To show all commit that changes a specific file, use git log --follow -- file_path. --follow will track the commit that changes the file before its renaming, so it is highly recommended to include this option.\nRef:\nhttps://stackoverflow.com/q/3701404/6064933 use a git mirror site for cloning # Due to access issues, sometimes we may want to use a github mirror service like fastgit. However, manually change the repo url from github.com to fastgit is not efficient enough. Fortunately, we can utilize the git url rewrite feature to achieve this globally. Run the following command:\ngit config --global url.\u0026#34;https://hub.fastgit.xyz\u0026#34;.insteadOf https://github.com After that, when you clone a github repo, the actually url used will be the corresponding fastgit repo.\nRef:\nhttps://gist.github.com/Kovrinic/ea5e7123ab5c97d451804ea222ecd78a How to convert git: urls to http: urls Ignore a specific commit when blaming? # Some commit may only change the format of a file, when doing git-blame, we may want to ignore such commits. We can use git blame --ignore-rev \u0026lt;commit-hash\u0026gt; to ignore a commit. Or, use git blame --ignore-revs-file ignore-file.txt, where ignore-file.txt contains a list of commits we want to ignore.\nRef:\nhttps://akrabat.com/ignoring-revisions-with-git-blame/ https://stackoverflow.com/q/34957237/6064933 ","date":"27 November 2021","externalUrl":null,"permalink":"/2021/11/27/git_notes_s4/","section":"Posts","summary":"\u003cp\u003eMy Git learning notes.\u003c/p\u003e","title":"Git Learning Notes (4)","type":"posts"},{"content":"This is the 11th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ Move lines matching a pattern together? # Use command :g/pattern/normal ddGp.\nHere we use the :global command. It will apply the command :normal ddGp (which is deleting current line and paste it at the bottom) for each line matching pattern.\nAnother way to do this is to use :move together with :global command:\n:[range]m[ove] {address} *:m* *:mo* *:move* *E134* Move the lines given by [range] to below the line given by {address}. Now the complete command to do this task is :g/pattern/m$ ($ means the last line of a buffer).\nAt the end, all lines matching pattern will be moved to the end of the buffer.\nRef:\nhttps://stackoverflow.com/q/6553963/6064933 Show trailing whitespace # We need to first define a highlight group for it and then match a pattern to use this highlight group:\nhighlight TrailingWhitespace ctermbg=red guibg=red call matchadd(\u0026#34;TrailingWhitespace\u0026#34;, \u0026#39;\\v\\s+$\u0026#39;) We\u0026rsquo;d better use single quote pattern to avoid backslash hell, otherwise, escaping the pattern will be a pain. If we use double quote, \\s won\u0026rsquo;t work, we have to escape backslash, see also :h literal-string.\nFlip a 01 string quickly # To flip a 01 string (i.e., turn 0 to 1 and turn 1 to 0), we can use sub-replace-expression which is really powerful:\n:s/\\v(0|1)/\\=submatch(0)==0?1:0/g Or we can also use this (source here):\n:s/\\v(0|1)\\=1-submatch(0)/g Ref:\nhttps://stackoverflow.com/a/69748382/6064933 Search lines not starting with a pattern # This is a perfect example where using look around regex solves it neatly. For example, to search for lines not starting with foo, use the following search expression:\n/\\v^(foo)@! A teardown of this expression:\n\\v: magic regex in vim, see also :h \\v. We use \\v to simplify writing regex in vim and make it more like PCRE. ^: start of a line (foo)@!: @! is the vim syntax for negative lookahead. This expression means that the previous expression should not be followed by foo, we group foo in Vim using parentheses. Ref:\nhttps://stackoverflow.com/q/1456061/6064933 ","date":"22 November 2021","externalUrl":null,"permalink":"/2021/11/22/nifty_nvim_techniques_s11/","section":"Posts","summary":"\u003cp\u003eThis is the 11th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 11","type":"posts"},{"content":" During my work, I use multiple Tmux sessions to manage different projects. When I create a new session, I usually give it unique name so that I know that the project is about via the session name.\nswitching between sessions \u0026ndash; the basic way # Tmux has a builtin subcommand called choose-session. Initially, I add a key binding for this command in my .tmux.conf:\nbind-key S choose-session It works by showing a list of sessions, and you can switch between these sessions by using Ctrl-N and Ctrl-P (check the title image).\nOne disadvantage with this method is that we can only switch between different session one at a time. When I have multiple sessions, switching between them is a pain.\nfuzzy-switching sessions with fzf # A more advanced way is to use fzf to filter sessions by their name and then switch to the selected session.\nFirst, we create a shell script ~/.tmux/tmux-switch-session.sh1:\n#!/bin/bash tmuxsessions=$(tmux list-sessions -F \u0026#34;#{session_name}\u0026#34;) tmux_switch_to_session() { session=\u0026#34;$1\u0026#34; if [[ $tmuxsessions = *\u0026#34;$session\u0026#34;* ]]; then tmux switch-client -t \u0026#34;$session\u0026#34; fi } choice=$(sort -rfu \u0026lt;\u0026lt;\u0026lt; \u0026#34;$tmuxsessions\u0026#34; \\ | fzf-tmux \\ | tr -d \u0026#39;\\n\u0026#39;) tmux_switch_to_session \u0026#34;$choice\u0026#34; We need to give this script execution rights (solution found here):\nchmod +x ~/.tmux/tmux-switch-session.sh Otherwise, when trying to run this script using key bindings, we get the following error:\n/home/jdhao/.tmux/tmux_switch_to_session returned 126\nThen add the following config to tmux conf:\nbind-key S run-shell -b \u0026#34;~/.tmux/tmux-switch-session.sh\u0026#34; Note that -b option for run-shell subcommand is important, without which, tmux will stuck and freeze forever, see also this issue.\nswitching tmux sessions with menu # This post shows how to switch sessions using a menu, which is also cool.\nFirst, we create a script ~/.tmux/session-menu (do not forget to give it execution rights):\n#!/usr/bin/env bash # See https://qmacro.org/autodidactics/2021/08/12/session-switching-with-the-tmux-menu/ tmux list-sessions -F \u0026#39;#S\u0026#39; \\ | awk \u0026#39;BEGIN {ORS=\u0026#34; \u0026#34;} {print $1, NR, \u0026#34;\\\u0026#34;switch-client -t\u0026#34;, $1 \u0026#34;\\\u0026#34;\u0026#34;}\u0026#39; \\ | xargs tmux display-menu -T \u0026#34;Switch-session\u0026#34; Then we create a key binding for it in tmux conf:\nbind-key ` run-shell -b \u0026#34;~/.tmux/session-menu\u0026#34; It will show a small menu for you to switch between different sessions. Pressing a number will switch to that session.\nReferences # https://eioki.eu/2021/01/12/tmux-and-fzf-fuzzy-tmux-session-window-pane-switcher switch session using popup: https://dev.to/waylonwalker/jump-to-running-tmux-sessions-with-fzf-4p77 Source here: https://www.reddit.com/r/tmux/comments/9qluuf/comment/e8bml7m/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 November 2021","externalUrl":null,"permalink":"/2021/11/20/tmux_fuzzy_session_switch/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202111211332634.png\" width=\"400\"\u003e\n\u003c/p\u003e\n\u003cp\u003eDuring my work, I use multiple Tmux sessions to manage different projects. When\nI create a new session, I usually give it unique name so that I know that the\nproject is about via the session name.\u003c/p\u003e","title":"Fuzzy-switching Tmux Sessions with Ease","type":"posts"},{"content":"我平时用 chrome 浏览器，有时候查一个新东西，喜欢把有关系的网页都打开，所以浏览器就塞满了 tab，这些内容我不一定都有时间去看一遍，所以 tab 就一直留在那里，有时候不得已要重启浏览器或者重启系统，不想丢失这些 tab，就用 supertabs 插件把 tab 保存下来，期望有时间了再去看。\n现在回头看，很多保存的 tab 可能永远也不会有时间看了，例证之一就是现在浏览器里还保存着 2019 年 5 月的一些 tab，我的心里竟还存有一丝希望，觉得自己在未来会有时间看它。\n人生最大的幻象之一就是觉得未来还有时间，去做现在没时间去做的事情，结果常常是永远不会去做了，然而心里还存有一丝虚假的希望。\n我也是这些年才越发意识到 now or never，想做的事情就马上去做，不要拖延。Now or never 也让我思考一件事的价值，让我去取舍，不要所有东西都想要。\n","date":"17 November 2021","externalUrl":null,"permalink":"/2021/11/17/now-or-never/","section":"Posts","summary":"\u003cp\u003e我平时用 chrome 浏览器，有时候查一个新东西，喜欢把有关系的网页都打开，所以浏览器就塞满了 tab，这些内容我不一定都有时间去看一遍，所以 tab 就一直留在那里，有时候不得已要重启浏览器或者重启系统，不想丢失这些 tab，就用 supertabs 插件把 tab 保存下来，期望有时间了再去看。\u003c/p\u003e","title":"事情经常是 Now or Never","type":"posts"},{"content":"kindle voyage 看 PDF 格式电子书体验太差，正好八月份小米发布了小米平板 5 pro，小米平板 5 销售还挺火爆的，京东上一直断货，需要预约，遂从小米之家入手一台体验1。以下是使用小米平板 5 pro 两个多月的体验。\n整体体验 # 小米平板 5 pro 使用了 MIUI 12.5 系统，针对平板使用做了一定优化和适配，整体使用体验良好。\n小米平板 5 Pro 裸机的重量比 ipad air4 重了 50g，裸机个人觉得重量适中。如果要在地铁上手持平板看书，不要带保护套，戴上保护套以后重量重了很多，手持看书的体验不好，长时间握持会对手腕有一定的压力。可以买保护壳，重量稍微轻一些。\n电池电量充足，充电一次，日常看书轻度使用可以用很久，不用担心电量问题。\n触控笔体验 # 如果需要用平板电脑学习，触控笔是必不可少的。小米官方的灵感触控笔价格 349，相比 Apple pencil 第二代已经很便宜了，使用体验上也不错，延迟低，书写效果也比较细腻，不过还是比 Apple pencil 的体验稍差，苹果在硬件和软件上优势还是有的。\n不建议购买淘宝上的第三方触控笔，刚买平板的时候，也想省钱，买个便宜触控笔。第三方触控笔价格虽然很便宜，大都 100 ，我在淘宝上买了 4 款触控笔，宣传的都很好，实际体验下来发现完全没法使用。首先不支持防误触，另外，书写的延迟和使用体验都非常糟糕，比官方笔差太远了。\n保护壳 # 关于保护套上面已经说了，保护套会显著的增加重量，移动看书的体验不是特别好。当然，如果你只是把平板放在桌面上看，保护套也是可以戴的。\n另外还有一个关于保护套的坑，需要注意。我刚开始为了省钱，在淘宝上买了一个第三方的保护套，价格大概 50。然后诡异的事情就发生了,有时候用灵感触控笔在平板上写字写不出来，我刚开始以为是灵感触控笔的问题，非常气愤，想要把灵感触控笔退掉。结果后面在微博上搜到了一位网友的发的微博，他说可能是第三方磁吸皮套的问题，当你把磁吸皮套的后盖板放在了平板的背后的时候，灵感触控笔书写就会出现问题。我试了一下，发现确实是这样的，如果把磁吸皮套的盖板平摊开，书写就没有问题。\n由于需要移动阅读，所以后面入手了凯夫拉材质保护壳，重量适中，颜值也很高，是不错的选择。\n阅读 # 买平板主要目的就是阅读，从亚马逊买的图书，使用 Kindle 安卓版来看，效果不错。自己从网上下载的 epub、mobi 等格式的电子书，使用 ReadEra 这款电子书阅读器。\n阅读 PDF 格式的图书，体验最好是 xodo 这款 APP，而且它还可以对图书进行批注。\n笔记 # 目前小米笔记支持触控笔输入，不过自带的笔记功能较为简陋，推荐用第三方笔记应用。笔记 app 试用了非常多款，最后发现几款不错的，分别是\n享做笔记 noteshelf flexcil 云记 这几款 APP 书写体验都很好，延迟低，另外功能丰富，UI 交互界面设计相对合理。\n小米之家买平板相对比较容易，订购以后有货店员会通知付款，不会等很久。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"13 November 2021","externalUrl":null,"permalink":"/2021/11/13/xiaomi_pad5_pro_handson/","section":"Posts","summary":"\u003cp\u003ekindle voyage 看 PDF 格式电子书体验太差，正好八月份小米发布了小米平板 5 pro，小米平板 5 销售还挺火爆的，京东上一直断货，需要预约，遂从小米之家入手一台体验\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。以下是使用小米平板 5 pro 两个多月的体验。\u003c/p\u003e","title":"小米平板 5 Pro 体验","type":"posts"},{"content":"","date":"10 November 2021","externalUrl":null,"permalink":"/tags/audio/","section":"Tags","summary":"","title":"Audio","type":"tags"},{"content":"Collected tips on audio processing with FFmpeg.\nRemove audio from a video # To remove audio from a video file, i.e., muting the video, run the following command:\nffmpeg -i input.mp4 -c copy -an input-silent.mp4 Ref:\nhttps://superuser.com/q/268985/736190 Extract audio from FFmpeg # ffmpeg -i input.mp4 -vn -acodec copy out.acc -vn: do not use video -acodec copy: copy the audio stream (equivalent to -codec:a copy, see stream specifier) Extract audio in a time range # ffmpeg -i input.mp4 -vn -acodec copy -ss 00:01:00 -t 30 out.aac -ss: the start time to process the video, in above case, we start from 1 minute -t: the video duration to process, in this case, we process 30 seconds of video. There is also a -to option which specifies the stop time to process the video. So the above command can also be written as:\nffmpeg -i input.mp4 -vn -acodec copy -ss 00:01:00 -to 00:01:30 out.aac Ref:\nhttps://stackoverflow.com/q/55668539/6064933 https://stackoverflow.com/q/9913032/6064933 ffmpeg video duration format ","date":"10 November 2021","externalUrl":null,"permalink":"/2021/11/10/ffmpeg_audio_processing/","section":"Posts","summary":"\u003cp\u003eCollected tips on audio processing with FFmpeg.\u003c/p\u003e","title":"Audio Processing Using FFmpeg","type":"posts"},{"content":"ffmpeg is an excellent tool for video processing. However, using ffmpeg directly inside Python is not convenient enough. Previously, I have been using ffmpeg-python, which is a thin wrapper around the ffmpeg command line executable.\nThe main issue with ffmpeg-python is its slow speed in performance-critical applications, due to its nature as a simple wrapper package.\nThe PyAV is a more performant package providing ffmpeg library bindings1.\nTo install PyAV, run the following command:\npip install av Simple use case: extract frame every one second # Here is a code snippet for how to extract video frames every one second:\nimport os import av out_dir = \u0026#34;demo\u0026#34; if not os.path.exist(out_dir): os.makedirs(out_dir) fpath = \u0026#34;test.mp4\u0026#34; container = av.open(fpath) # take first video stream stream = container.streams.video[0] # get video fps average_fps = int(stream.average_rate) for idx, frame in enumerate(container.decode(stream)): if idx % average_fps != 0: continue frame.to_image.save(\u0026#34;frame-{idx}.jpg\u0026#34;) In the code snippet, we create a container, which contains all video and audio streams in the video.\nWe then use container.streams.video[0] to get the video stream. container.decode() is used to decode the stream into frames.\nSince videos may have variable fps, there are actually several frame rates. stream.average_rate is the average fps for video, and it works fine in our case. However, it is not a native type, we need to convert it to float or int before usage.\nSome of the other important information of a stream:\nvideo duration in seconds: float(stream.duration * stream.time_base) video frame number: stream.frames frame width and height: frame.width, frame.height References # video frames doc: https://pyav.org/docs/stable/api/video.html#module-av.video.frame It works by invoking the ffmpeg libraries directly, instead of using ffmpeg executable.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"4 November 2021","externalUrl":null,"permalink":"/2021/11/04/pyav-video-processing/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://www.ffmpeg.org/\" target=\"_blank\"\u003effmpeg\u003c/a\u003e is an excellent tool for video processing.\nHowever, using ffmpeg directly inside Python is not convenient enough.\nPreviously, I have been using \u003ca href=\"https://github.com/kkroening/ffmpeg-python\" target=\"_blank\"\u003effmpeg-python\u003c/a\u003e, which is a thin wrapper around the \u003ccode\u003effmpeg\u003c/code\u003e command line executable.\u003c/p\u003e","title":"PyAV for video processing","type":"posts"},{"content":"","date":"31 October 2021","externalUrl":null,"permalink":"/tags/non-fiction/","section":"Tags","summary":"","title":"Non-Fiction","type":"tags"},{"content":"","date":"31 October 2021","externalUrl":null,"permalink":"/categories/reading/","section":"Categories","summary":"","title":"Reading","type":"categories"},{"content":"花了一周的时间，看完了茅海建的《天朝的崩溃》，虽然中学历史书中简略讲过第一次鸦片战争，对这段历史了解却甚少，我甚至天真地以为鸦片战争就是虎门战争之后就和谈了，然后签订了《南京条约》。\n这本书用非常详实的中外史料，客观讲述了 1840-1842 年鸦片战争的经过，用史料驳斥了一些流传的说法，如“琦善卖国论”。书中虽然引述了很多第一手的史料（奏折，御批，私人日记，外文资料），但是并没有学究味道，读起来并不枯燥。作者时不时的评论，更是画龙点睛，观点非常精辟。\n以下引用文本皆出自书中，版权归作者所有。\n绪论 # 鸦片战争前的通商状况：\n由于鸦片战争前，中英之间实际存在的只是通商关系；又由于清政府官员的腐败，贿赂和陋规已经成为维系这种关系延续运作的不可缺少的润滑剂；凡是涉及这种商务联系的官员，无不受贿，无不发财，久已被视作官场中的正常现象。\n天朝和西方的关系，以及天朝对夷的态度\n根据儒家的礼仪，清王朝拒绝与这些不愿朝贡的国家作正式的官方交往；又根据儒家“虽之夷狄，不可弃也”的教义，清王朝又准许这些国家通商。尽管这种通商在清初、清中叶有利于中国，也牵系着沿海数十万民众的生计，但依照“以农为本”的古训，兼之朝廷在此中获益不多，[17]清王朝对此并不重视。在他们的心目中，通商是“天朝”施于“蛮夷”的一种恩惠，是“怀柔远人”的一种策略。\n16世纪西方人初至，中国乃是世界上最发达的国家；17、18世纪之交，康熙大帝的文治武功，使中国进入一个新的“盛世”；即使是在18世纪英国工业革命前，中国的社会生产力仍不低于西方各国，生产总量则远远超过之。至鸦片战争前夕，中国确确实实是落后了。但是，由于文化背景的不同，英国最先进的事物，经过儒家教义的折光，顿时变为最荒谬不堪的东西。君主立宪，在皇权至上面前，有如大臣擅权；经商贸易，在农本主义面前，显为舍本求末；追逐利润，在性理名教面前，只是小人之举；至于女王主位、男女不辨，更是牝鸡司晨之类的“夷俗”；即便令人兴叹的西方器物（钟表、玻璃、呢羽等），享用赏玩收藏之余，仍可斥之为“坏人心术”的“奇技淫巧”。无怪乎海通200余年后，中土的官僚士子们并未折服于西方，反坚信于中华文物制度远胜于“西夷”，尽管他们在一个事实方面已经达成了共识：西方“船坚炮利”。\n天朝关于“忠奸”的理论：\n在皇权至上的社会中，天子被说成至圣至明，不容许也不“应该”犯任何错误。尽管皇帝握有近乎无限的权力，因而对一切事件均应该负有程度不一的责任；但是，当时的人们对政治的批判，最多只能到大臣一级。由此而产生了中国传统史学、哲学中的“奸臣模式”：“奸臣”欺蒙君主，滥用职权，结党营私，施横作恶，致使国运败落；一旦除去“奸臣”，圣明重开，万众欢腾。这一类模式使皇帝避免了直接承担坏事的责任，至多不过是用人不周不察，而让“奸臣”去承担责任，充当替罪羊。若非如此，将会直接批判到皇帝。这就冲犯了儒家的“礼”，是士人学子们不会也不愿去做的。\n在当时的情况下，绝大多数的官僚士子们之所以只批判琦善，而不指责道光帝，并非出于思想上的压制，却恰恰出于思想上的自觉。\n忠奸的理论所能得出的直接结论是，中国欲取得战争的胜利，只需罢免琦善及其同党、重用林则徐及其同志即可，不必触动中国的现状。也就是说，只要换几个人就行，无须进行改革。 忠奸的理论所能得出的最终结论是，为使忠臣得志，奸臣不生，就必须加强中国的纲纪伦常，强化中国的传统。也就是说，鸦片战争所暴露出来的，不是“天朝”的弊陋，不是中华的落伍；反而是证明了中国的圣贤经典、天朝制度的正确性，坏就坏在一部分“奸臣”并没有照此办理。于是，中国此时的任务，不是改革旧体制，而是加强旧体制。\n忠奸理论和“奸臣模式”，并非是鸦片战争史独有的现象，而是中国传统史学的常用方法。正是它具有掩护君主、掩护道统的特殊功能，因而屡屡被官僚士子们用来解释那些他们不能解释或不愿解释的历史现象。\n作者按：\n一个民族对自己历史的自我批判，正是它避免重蹈历史覆辙的坚实保证。\n军事力量对比 # 清军火枪，火炮，火药状态\n与英军相比，清军鸟枪在型制上的缺陷是：枪身太长（装药、填弹和射击均为不便）；点火装置落后（风雨天效能极差）。而在性能上，又有着射速慢、射程近这两大致命伤。\n此外，清军火炮在管理上亦同鸟枪，并无定期造换制度。由于平常并不使用，许多露天搁置在炮台、城垛等处的火炮，日晒雨淋，炮身锈蚀。至鸦片战争，这些火炮的使用年限大多已经很长，清初铸造的比比皆是，有的甚至是前明遗物。[12]若不蒸洗试放，谁也不知能否使用。\n尽管中英火炮样式大体相同，但因质量的差距，使之具有射程近、射击速度慢、射击范围小、射击精度差、射中后炮弹威力弱等缺陷。这些缺陷中，哪一项不是致命伤？ 鸦片战争中的绝大多数战斗，是清军的岸炮与英军的舰炮之间的炮战。按常理说，海岸炮依托坚固的陆地，可不计重量、后坐力等因素，而制作得更大，射程更远，威力更大。实际上清军的岸炮一般也重于英军的舰炮。但是，在战斗中，双方火炮的威力却发生了逆转。当战场上硝烟散尽之后，我们不得不惊愕地面对悲惨的事实：清军在战争的全过程中未能击沉英军的一艘战舰或轮船，而自己的阵地却被打得千疮百孔。\n手工业的生产方法，使清方无法提炼出高纯度的硝和硫，药料的杂质成分高；又无先进的粉碎、拌和、压制、烘干、磨光等工艺，只是靠舂碾，结果火药的颗粒粗糙，大小不一，往往不能充分燃烧。[16] 火药的质量，直接影响到枪、炮的威力。清军使用的粗劣的火药，使其原本落后的枪、炮，在实战中效能更减。\n清军舰船与英国海军舰船对比：\n英国海军为当时世界之最，拥有各类舰船400余艘。其主要作战军舰仍为木制风帆动力，似与清军同类，但相较之下，有下列特点：一、用坚实木料制作，能抗风涛而涉远洋；二、船体下部为双层，抗沉性能好（当时中国人称“夹板船”），且用铜片等金属材料包裹，防蛀防朽防火；三、船上有两桅或三桅，悬挂数十具风帆，能利用各种风向航行；四、军舰较大，排水量从百余吨至千余吨；五、安炮较多，从10至120门不等。[17]此外，诞生于工业革命末期的蒸汽动力铁壳明轮船，也于19世纪30年代起装备海军。尽管此时的轮船吨位小，安炮少，在西方正式海战中难期得力，在海军中也不占主导地位；但因其航速快、机动性能强、吃水浅等特点，在武器装备落后的中国沿海和内河横行肆虐。 从数量上讲，清军水师舰船也有数百艘之多；从种类上讲，清军战船样式亦达数十种；但是，其最基本的特点就是船小。清军最大之战船，其吨位尚不如英军等外级军舰，清军安炮最多之战船，其火炮数量也只相当于英军安炮最少之军舰。\n中英舰船水平的悬殊差距，使得清军在鸦片战争中根本不敢以水师出海迎战英军舰队，迫使清军放弃海上交锋而专注于陆地。这种由装备而限定的战略决策，实际使清军丧失了战争的主动权。英军凭借其强大海军，横行于中国海面，决定了战役战斗的时间、地点、规模。\n清朝武器制造中的偷工减料：\n自康熙朝开始，中国的物价、工价一直处于上升趋势，而这种管理体制却使兵器制造经费固定化。此后虽有一些价格调整，但上涨的幅度赶不上各地物价、工价的实际水平，有时甚至出现下降的势头。如火药，雍正朝为每斤银2.6分，嘉庆朝每斤银2.1分。这就使得兵器制造者不仅无利可图，反而时常可能亏损。当然，这已不敷足的工价、料价中，还得包括那个时代猖獗的承办官员的层层克扣和验收弁兵的种种勒索。\n规定价格与实际造价的背离，并不会改变追求利润的经济规律。任何一位制造者，从本能上就绝不会做亏本生意。为了防止赔累，偷工减料就成了必然之途。为了能够偷工减料，贿赂验收官弁又成了公开的秘密。\n清军调兵速度的缓慢：\n如此缓慢的调兵速度，使清军丧失了本土作战的有利条件。当时英海军舰船从南非的开普敦驶至香港约60天，从印度开来约30至40天，即使从英国本土开来也不过4个多月。蒸汽机的出现，轮船的使用，又大大加快了英军的速度。1841年英全权代表从孟买到澳门仅用了25天。由此推算，英军从浙江的舟山派轮船至印度调集援军或军需品，来回时间几乎相同于清方从四川调兵至广东或从陕甘调兵至浙江。方便快速的舰船缩短了英军漫长的补给线，而落后的交通条件则延长了清军增援的路程。\n清军下层士兵的穷困：\n清军的粮饷标准是顺治朝制定的。是时经济正在恢复，物价极低。经康雍乾三朝的发展，通货膨涨已有相当幅度。而粮饷标准虽有多次调整，但主要是军官部分，且乾隆后期起清朝财政已陷于困境，清军士兵的收入一直没有也不可能有大的加增。 收入的低下只能降低生活水准而不能不生活，清军士兵为维持生计，须得在正项收入之外另觅别项来源。因此，替人帮工、租种田地、做小本生意等等，成为当时的普遍现象，犹如今日之“第二职业”一般红火。\n清朝落后的武举制度选不出合适人才：\n正如认为八股文章可以治天下一样荒谬，清代武科举的考试项目与近代战争的要求南辕北辙。且不论《武经七书》这类偏重于哲理的古代兵书不宜作为初级军官的教科书，然这项仅有的与谋略有关的内场考试，因考生们错误百出，[64]而在嘉庆年间统统改为默写《武经》百余字。内场由此而成虚设，外场成了真正的竞争场所。道光帝更是明确下旨：“武科之设，以外场为主”，[65]将武科举的名次集中于一项，即拉硬弓。他们以膂力为选择军官的标准，竟有中式者根本不识字之事。\n用今日眼光观之，这种方法挑选出来的不过是一名优秀的士兵，而不是领兵作战的军官。在冷兵器时代，军官的骁勇身先有着极大的鼓舞力，火器出现之后，这种勇猛的作风已经降到次要的地位。且不论与英军这支近代化的军队相对抗，即便与此期清朝传统敌人的作战中，这种方法也不足取。\n文官作为最高指挥者并不合适：\n各省的统兵大员实际上是督抚。这些文官出身于八股文章，游历于宦海官场，在未升至督抚前，并不统兵，未谙军旅，其军事知识局限于几部古书。文官将兵，这种不合理的指挥体制，又折射出武弁素质低下。\n军队极度腐败：\n当权力与金钱一样上市流通之后，即刻产生威力无比的社会腐蚀剂，当军队将财神像奉为战旗时，腐败已不可逆转。 因此，对于鸦片战争的失败，当时和后来的人们得出了同样的结论：清军已经腐败。 可是，眼下流行的各种鸦片战争的论著中，一方面承认清军已经腐败，一方面又使用了既模糊又明确的说法，“广大爱国官兵英勇奋战”云云，似乎只是一小部分上层人士对此应负责任，而下层官兵毫无责任可言。他们的例证，正是一小部分在抵抗中牺牲的将士。且不论这种以偏概全的方法在逻辑上的错误，就此一说法的倡导者的心态而言，多多少少又有一些阿Q的味道。\n骤然而至的战争 # 禁烟难禁，腐败贿赂盛行：\n当尊严的“天朝”屡屡拒绝与“蛮夷”平等相交之时，桀骜不驯的外国商人也确实像“蛮夷”那样，无视“天朝”的法令。在这些人的眼中，“天朝”的威严只不过是挂在空中飘荡的幌子，一切法令规则的关节在于陋规和贿赂的数额，行商也罢，官员也罢，反过来倒成了barbarians（蛮夷）。远在京师的道光帝绝不会想到，堂堂“天朝”对外体制，在这些贪婪的行商、枉法的官吏的操作下，竟会变得如此荒唐和卑下，俨俨“天朝”的“防夷章程”，竟会成了挂羊头卖狗肉的铺子。\n林则徐刚开始认为中英之间不可能开战：\n林则徐到广州后，在给道光帝的最初几道奏折中，并没有具体谈到边衅问题。1839年6月4日，他在奏折中谈到，对于窜犯沿海各地的走私船，与“有牌照”的商船不同，“枪击炮轰皆其自取”，而且，不但水师能够剿除，就是雇募沿海水手，利用火攻之法，亦能获胜。[76]道光帝对此很感兴趣，要求林则徐等“相机筹办”，并指出“务使奸夷闻风慑服，亦不至骤开边衅，方为妥善”。[77]这是道光帝谕旨中正式而明确地提出“边衅”问题。\n他此时认为，持“边衅”论者，除京师及各地一班反对禁烟的人士们，还有义律等人。于是，他将来自外国人的英军侵华的消息，皆归之于义律的谣言恫吓一类。\n林则徐也翻译了部分英文资料，了解英国：\n从现存林则徐翻译资料来看，包罗万象，对林则徐的褒贬评价皆有，对未来战争的是否估计俱存，看不出一个倾向性的意见来。要从这些资料中得出战争不可避免的结论，非得是一个熟谙国际事务的行家里手。但是，林则徐本是“天朝”氛围中人，初涉此道；情报来源仅为报刊书籍等公开资料，并无秘密渠道；更何况一般人的心理活动规律是对己有利的资料印象较深，对己不利的资料不受重视。种种情事，使得林则徐犯错误的可能性，远远超过不犯错误的可能性。\n林则徐的对策是纸上谈兵：\n从林则徐的设想来看，其最重要的作战方法是，以海岸坚强据点，即炮台，来对抗来犯的英舰英船。\n且不论这两座炮台能否经受得住英舰的猛烈炮火，也不论它们果否惩膺折冲，予英舰以毁灭性的打击，然而，它们最基本的弱点是，无力防御登陆英军从炮台侧后方向发起的地面进攻。\n林则徐相信英人腿无法曲折，因而陆战不如清军的说法：\n从这些说法中，我们可以看到林则徐等人的心思。他们认为，英军尽管“船坚炮利”，但毫无陆战能力，因而绝不会舍舟登岸，从陆上发动进攻；即便有这种攻击，也绝非清军的对手。他们正是据此而未能对炮台的陆路防卫作有针对性的改进。\n林则徐被神话：\n处在失败中的人们，找不到胜利的迹象，最容易产生某种希望。林则徐就是这种希望。而且，局势越危急，战争越失利，这种希望之火就越放光芒。一个林则徐不可战胜的神话，占据了当时许多人的心，并流传至今。\n剿抚不定 # 定海之战：\n据英方的记载，7月5日下午2时半开始的战斗，英军舰炮仅用了9分钟，就基本击毁了排列在港口的清军战船和岸炮的还击能力。次日清晨，英军再次攻击，至城门时，发现守军已在夜间溃逃。清方的记载虽有所不同，但明确承认了无可挽回的失败。从未见过如此猛烈炮火的清军士兵，临阵产生恐惧心理而大量溃逃。据裕谦战后调查，参战的1540名士兵中，战死仅13人，受伤13人，战死的人数比击毁的战船还要少。\n资质平平的道光帝：\n以一个人的智慧，在短时间内，对大小政务作出决策，这不仅需要雄才大略，而且需要周密精细。此外，体力和精力的充沛也是十分重要的。根据档案，我们知道，清代皇帝每日须批阅上万字的奏章，作出一系列相应的决策，稍有疏漏，便会铸成大错。 这种空前的高度集权的方式，对皇帝的人选提出了接近于神的要求，完全失去了合理性。朝廷的决策难以在具体分析和理性探讨的基础上作出，往往跟着君王一时的感觉走，尽管这种集权方式在真正的英明君主操纵下，可能会更有效率。 然而，此时柄国的道光帝，却是一个资质平常的人。\n智商平常且乏胆略的道光帝，绝不缺乏自信，总是以为他的每一次决策都是最佳方案，尽管后来一变再变。他的那种头痛医头、脚痛医脚的一道道圣旨，是其目光短浅所限。他从来就没有一种远距离、宽视野的眼光。尽管道光帝有着种种缺陷（本来世上也无完人），但若有智明识远的军机大臣相辅，仍不失为宽猛互济。可是从不认为自己尚有缺陷的道光帝，在军机的人选上，又采用了最最可怕可恨的“老实听话”的标准\n在专制社会中，独裁者原本可不用讲道理的。因为，所有的道理都在他一人手中。\n负责收复定海的伊里布：\n伊里布同所有的“天朝”大吏一样，在对付侵略者方面，无论在外交上还是军事上均无足以称道的精明之处；但在对付道光帝方面，却表现出高于其他“天朝”大吏的熟练才华。作为官场老手，他深谙政治运作的窍门，惯使诿过占功的招术。\n伊里布为何撒谎？\n在其开始，伊里布还是诚实的，后来奏报与英方的交涉，虽不乏“天朝”的大话，但大体情节仍为可靠。随着道光帝一道道攻克舟山的严旨，他的奏折越来越言不由衷，而获知其已被免差后，竟满纸谎言。在当时的官场中，捏谎粉饰盛行成风。过去的人们往往从忠君观念出发，批判臣子们的“欺君”行为。但是，若冷静地想一想，那种容不得半点不同意见、强求一致的政治体制和君主作风，又何曾不是在客观上催化、助长这种风气？\n道德批判是没用的：\n道德的批判最是无情。而批判一旦升至道德的层面，事情的细节便失去了原有的意义，至于细节之中所包含的各种信息、教训更是成了毫无用处的废物。\n虎门战役的失败：\n就战术而言，沙角之战应使清军大开眼界。这些狡猾的“逆夷”，竟然不作堂堂正正的正面攻击，反而偷偷摸摸地绕行到炮台的背后，击打自己无防护的柔软的腹部。然而英军这种战舰攻击正面、陆军抄袭背后的战术，体现出来的是近代的军事学术。\n虎门战败与琦善当家无涉，换清王朝中的任何一个人来主持，也改变不了战败的命运。这因为，战败的原因几乎全是军事的，是由双方军事力量的强弱、技战术水准的高下决定的。\n广州的战局 # 关于民族主义：\n以当时的客观条件，因无近代通讯手段和大众媒体，许多民众并不知情；民族主义（无论属何种）仅存在于士绅阶层而未深入下层民众之心，许多人还意识不到民族利益、国家利益之存在；以少数民族入主中原的满清统治者，对汉民族的民族情绪（若严格按儒家学说，满清亦属“夷”），进行了长达两世纪的压制，等等。\n在整个鸦片战争期间，英军虽有一时的供应不足之虞，但在总体上不觉困难。一些民众向他们出售粮食、畜禽、淡水，以图获利，另一些民众为他们充当苦力，从事运输，以求工值。这些被清方文献斥为“汉奸”的民众，在交战地区几乎无处不有。至于英军在行进甚至开战之时，成群的民众躲在远处观看这难得一见的“西洋景”，更是在英方文献中屡见不鲜。\n中国的历史长达几千年，中国的老百姓在历史的变迁中对诸如改朝换代之类的重大变动都习以为常。只要不触动他们的眼前利益，逆来顺受又成为另一种传统。谁当皇上就给谁纳粮。满清的皇帝也未必比浮海东来的“红毛”统治者，更为可亲可爱。在三元里抗英事件之前，英军曾统治舟山长达半年，虽有俘获安突德的义民，而绝大多数还是作了顺民甚至“良民”。\n以镇压而维持统治的清王朝，民众并不是他们的依靠力量。为了激劝民众奋起抗英，保卫与他们的利益相对立的社稷，林则徐、乌尔恭额、怡良、奕山以及下一章将要登场的裕谦，都开列了巨额的赏格，以金钱作为导向。参加三元里抗英的民众中，亦有为赏格而心动者。\n在鸦片战争以及后来的诸次列强侵华战争中，绝大多数民众的基本态度，是置身事外。中国近代具有真正意义的民族战争、卫国战争，实始于本世纪30年代发生的抗日战争。\n三元里抗英是民族主义吗？\n三元里民众抗英斗争，无疑是一件值得百年称颂的事件，但将之提升至民族主义或爱国主义的精神展示，则脱离了当时的时代。\n福建浙江江苏战役 # 由颜伯涛负责的厦门战役，和裕谦负责的定海战役均以清军惨败告终，裕谦绝望自杀。\n英国先进的轮船技术使得运输时间大大缩短：\n伦敦到澳门，璞鼎查在途中仅用了67天。这一破纪录的速度，使当时在华的商船主们大为吃惊。很可能义律也在吃惊的人群之中。璞鼎查的快速到达，表明了英国此时在轮船技术、地理知识和殖民体系诸方面的进展。这比起林则徐由北京到广州花费61天，琦善的56天，奕山的57天，多不了几天。若除去璞鼎查在孟买停留的10天，反是英方更快。科学缩短了空间的距离。东、西两个大国越来越近。清朝今后将会越来越快、越来越强地承受到西方的压迫。\n厦门当时的状况：\n鸦片战争前，厦门是仅次于上海（国内贸易为主）和广州（国际贸易为主）的中国第三大航运业中心，成为英方所谋求的通商口岸。清朝第一支大型海上武装力量的指挥部——福建水师提督衙署，便设在此地。厦门及其附近驻有水师提标共计五营4300人。厦门虽只是一个面积仅有109平方公里的岛屿，非府非州非县，行政区划上隶属于同安县，但清政府却派兴泉永道（管理兴化府、泉州府、永春州）驻此，并以泉州府的同知在此开署，直接治理此地，称厦门海防同知。同安知县为正七品，厦防同知为正五品，厦门地属同安而地方官品秩高于同安，这正是太大的身躯需要相应的衣裳。事实上，同安知县一直管不了这一区域。从这个意义上讲，厦门很早便是“特区”。\n厦门战役准备耗资甚巨：\n颜伯焘绝不如此小家子气。 他上任未久，便奏请户部拨银，狮子开大口，一要就是100万。连同先前的数字，福建的军费银达到150万两。更为出格的是，他不顾清朝以往的成规，要求增加防兵的盐菜口粮银。抠门的道光帝恐福建创例，广东、浙江会援引，便让其“核减节省”。[35]可颜伯焘居然不买账，仍坚持己见，结果由军机大臣、户部尚书在他的要求上打了个折扣，才算了事。 道光帝见此，在上谕中对颜伯焘发出警告，要他“力加撙节”。[39]可过了没有多久，150万两银子将罄，新任福建巡抚刘鸿翱根据颜伯焘的指示，在厦门失守后的第7天，上奏请求再拨军费银300万两！\n颜伯涛有中饱私囊嫌疑：\n这些银子是否真花于实际，却是大有疑问。历来的军务、河工、赈灾，都是经手官员中饱私囊的渊薮。而颜伯焘于此嫌疑最大。颜伯焘于1841年2月到任，次年1月免职。在这仅仅的一年中，辎重就有如此许多（其中亦包括包揽客商货物，动用驿站车马人伕而赚钱等情事），真可谓搜刮有道无度。其中果无取之海防银两者耶？不过，还应说明，在当时的政治操作中，“贪官”与“忠臣”并不矛盾。颜伯焘的这种贪婪，并不妨碍他对清王朝的忠诚。\n颜伯涛的洋洋自得与惨败：\n英军再犯厦门，本在颜伯焘的意料之中。他并不为此而惧，反觉有机会立功疆场。对于厦门的防务，他极度自信，虽说外围岛链防御尚未部署完毕，但厦门岛一带却已固若金汤。他曾经在一奏折中得意洋洋地宣称：“若该夷自投死地，惟有痛加攻击，使其片板不留，一人不活，以申天讨而快人心。”[45]局势已经是火烧屁股，颜伯焘仍浑然不觉。他的这种自信，是因为他坐在无知于近代军事技术和战术的愚昧的厚垫上。 知识给人以力量，愚昧也给人以力量，有时甚至是更大的力量。然而，愚昧的力量再强大，仍只是妄动，妄动能产生一种强大的破坏力，使国家和民族蒙难，但却不能战胜近代化的敌人。\n坐镇督战的颜伯焘，目睹锐不可挡的“逆夷”凶焰，忍看这半年的种种努力转瞬间化为灰烬，与兴泉永道刘耀椿“同声一哭”。到了此时，他由战前的极度自信转为极度恐惧，率领文武官员夜渡，逃往同安。岛上清军失去指挥，陷于混乱，纷纷溃散。\n可笑的道光帝也以为洋人不善陆战：\n最最令人哭笑不得的是道光帝。他接到颜伯焘厦门失陷的奏折，见有“伪陆路提督郭”的字样，[58]竟然发现了新大陆，即英军也会陆战！于是，他立即通令沿海各将军督抚，并下令各地注重陆路防守：“倘逆夷竟敢率众登岸，所有火炮及一切设伏机宜，务当先事预备，操必胜之权，褫奸夷之胆。”战争已经进行了一年多，道光帝在前敌主帅们的欺蒙下，直至此时方得出这种认识，虽为时已晚，仍不失为亡羊补牢之计。但是，道光帝对此还是将信将疑，似乎还不认为英军果真有能在陆地上打仗而不会摔跟斗的士兵\n裕谦对战俘极其残暴：\n而到了后来局势危急时，裕谦的手段更至于登峰造极。1841年9月，镇海军民捕获两名英方俘虏，他竟将“壮士饥餐胡虏肉”的诗化语言变为实际，下令对一名白人俘虏“先将两手大指连两臂及肩背之皮筋，剥取一条”，制作为自己坐骑的马缰，然后“凌迟枭示”；对另一名黑人俘虏亦“戮取首级，剥皮枭示”。\n裕谦放出的这些手段，用今天的标准来衡量，似为残忍毒辣，与他曾中过进士、入过翰林院的儒吏形象亦不吻合，好像变了个人。但在当时，势不两立的敌忾致使人们的情绪趋向于暴烈，而且手段越狠越备受喝彩，道光帝亦明确表露出欣赏鼓励的态度。\n裕谦也是洋人不善论战的鼓吹者，战备仍泛善可陈：\n裕谦虽未亲眼见过英军，却是英军不善陆战论的有力鼓吹者。他认为，英军不善陆战必然会从距县城最近的海岸发起进攻。裕谦的思想表明，尽管战争已经开始了足够长的时间，尽管清军在虎门等处一败再败，但是，在一班主“剿”官绅的心目中，对英军的实力估计仍是战前的模糊不清的概念，没有将英军的种种优长一一辨明清楚。也正因为如此，裕谦在定海防御上并无任何创新，仍是战前由林则徐所倡导的防守沿海坚强据点对抗英军舰船攻击的战法。\n企图靠儒学理学来打仗取胜是可笑的：\n尽管在理学大师的笔下，我们常常可以领悟到这种理论的精妙，也为其深邃的思索、优美的文笔所折服，但在实际政治运作中，理学成为可怕的教条。结果，在性理名教走向崇高之后，事实真情，反显得不那么重要，往往处于从属的地位。一切决策的依据，似乎不再是事实本身，而是先哲们的教诲。在这种情势下，掌握事实真情的人们，远没有掌握理学真谛的人们有力量，若正面交锋，必不堪一击。\n镇海战役惨败：\n先是1842年1月25日，奕经与参赞大臣文蔚在浙江嘉兴同时梦见英军悉弃陆登舟，联帆出海，宁波等三城“已绝夷迹”，后派人察明果有运械归船之事，以为“佳兆昭著”。[168]又2月10日，奕经至杭州，往据称最为灵验的西湖关帝庙占签，中有“不遇虎头人一唤，全家谁保汝平安”一句，三天后，四川援军大金川土兵开到，兵弁皆带虎皮帽，更以为“收功当在此”。[169]于是，他选定“四寅佳期”（道光二十二年正月二十九日四更，即壬寅年壬寅月戊寅日甲寅时，1842年3月10日凌晨3至5时）为进攻时间，又以寅年（虎年）出生的贵州安义镇总兵段永福为进攻宁波的主将，[170]来他个“五虎制敌”！\n远在曹娥江以西东关镇扎营的奕经，闻前方军报，惊魂动魄，亟思逃跑。幕僚臧纡青竭力劝阻，方坚持一夜。3月16日晚，文蔚逃至东关镇，他得知战况，命文蔚退守绍兴，而其本人率部连夜西奔，渡过钱塘江，一直退至杭州。[183]而他后来向道光帝陈述的理由是，他此行的目的，是为了检查钱塘江北岸的海宁尖山一带的防务！\n由剿转抚 # 抚议再起：\n在琦善、伊里布被斥革后，“抚”议已寝息一年，“剿”意沸腾。在这种情势下再倡“抚”议，颇有风险，且不论圣意如何，即是言路上的谤论也让人受不了。刘韵珂不愧为是一位官场中的高手，他没有正面提出“抚”，反而在“剿”字上作文章，称战争若继续进行，有十项“深属可危”的因素。本来，只要证明了“剿”之不可行，“抚”也就理所当然了。\n官员观念的转变：\n原来，所有的主“抚”官员无不从主“剿”转变而来。在“天朝”的对外体制下，在“夷夏”观念的熏浸中，清王朝官员对“逆夷”主张“进剿”，几乎是出于本能，不加思索。因此，清朝官员原来都是“主战派”，无一例外。正因为如此，如果说清王朝统治集团内部存在着“主战”与“主和”的斗争的话，那么，这种斗争的场地，主要在于那些由主“剿”转向主“抚”的官员的头脑，是一种自我的思想斗争。现实的力量，毕竟大于“义理”的力量。\n清朝官民关系：\n就官、民关系而言，清王朝的统治实质上是一种压迫，是一种对立的关系。就连统治者本身对此亦有深度的认识。在此种情势下，民众不可能在这场反侵略性质的战争中团聚在官府的周围，成为自觉的同盟军。清朝在民众心目中缺乏这种号召力。\n道光帝对世界缺乏认识：\n他似乎并不知道，他最为困惑的地理问题，[83]正是他最有资格回答的。我们今天尚能看到的由传教士南怀仁为他高祖父康熙帝绘制的当时中国最精美的世界地图——《坤舆全图》，此时正在紫禁城的库房里睡觉。\n镇江战役是鸦片战争最后一战：\n镇江是鸦片战争中英军攻击诸要点设防最为薄弱的，而镇江之战却是鸦片战争诸战斗中抵抗最为激烈的。英军在镇江遭到重大损失的主要原因在于轻敌。战前的侦察使他们误以为可以兵不血刃地入据该城，镇江濒临长江，英军的舰炮完全可以将炮弹射入城内，但他们没有这么做，仅有个别战舰在掩护登陆时开过几炮。英军在镇江遭到重大损失的另一重要原因是八旗兵的坚强抗击。\n镇江之战是鸦片战争的最后一战，就军事角度而言，战争实际已经结束了\u0026hellip;\n双方对“全权”的纠结：\n耆英、伊里布与璞鼎查的交涉，仍在“全权”一词上卡壳。尽管耆、伊解释道：“本朝向无全权大臣官名，凡有钦差大臣字样，即与贵国全权二字相同”，但璞鼎查对此不以为然。\n伊里布的家仆张喜在中英谈判中充当了代表：\n一名并非朝廷命官“暂戴”五品顶戴的家仆，充当了一个大国在重大事件中的进行外交谈判的正式代表！\n谈判结果令英方满意：\n这一切使英方大为满意。一英军军官在其回忆录的结尾，用大写字母写了一句得意的话： CHINA HAS BEEN CONQUERED BY A WOMAN.\n历史的诉说 # 低级“爱国”是没用的：\n中国欲抵御西方，须自身强大，其必由之途在于学习西方，如同日本一样。那种强烈的与西方势不两立的情绪，自然有其产生和发展的充分理由，但由此产生的对抗，至多也只是低级形式的斗争，且易使当时的人们看不清真正的历史使命和民族前程。\n","date":"31 October 2021","externalUrl":null,"permalink":"/2021/10/31/collapse_of_the_heavenly_dynasty/","section":"Posts","summary":"\u003cp\u003e花了一周的时间，看完了茅海建的\u003ca href=\"https://book.douban.com/subject/1675478/\" target=\"_blank\"\u003e《天朝的崩溃》\u003c/a\u003e，虽然中学历史书中简略讲过第一次鸦片战争，对这段历史了解却甚少，我甚至天真地以为鸦片战争就是虎门战争之后就和谈了，然后签订了《南京条约》。\u003c/p\u003e","title":"茅海建 《天朝的崩溃》","type":"posts"},{"content":"","date":"24 October 2021","externalUrl":null,"permalink":"/tags/diff/","section":"Tags","summary":"","title":"Diff","type":"tags"},{"content":" Diff can be used to compare two versions of the same file to find the changes. If you use vim, you can use vimdiff to compare files:\nvimdiff file1 file2 Actually vimdiff is just a wrapper around vim executable, you can do the same thing with vim using option -d:\nvim -d file1 file2 So neovim just removed this bloat. To compare two files using neovim, run:\nnvim -d file1 file2 Previously, Vim has been using external diff tool for file diffs, since patch 8.1.0360, it beganto use libxdiff, which is much faster and has more features. According to discussion here, libxdiff is also used as a basis by Git as its internal diff library, that is when you use git diff inside a git repository.\nSince this commit, the vim patch has been ported to neovim too. You can activate the internal diff algorithm by update option diffopt:\nset diffopt+=internal The default diff algorithm is myers diff. Other supported diff algorithm is:\nalgorithm:{text} Use the specified diff algorithm with the internal diff engine. Currently supported algorithms are: myers the default algorithm minimal spend extra time to generate the smallest possible diff patience patience diff algorithm histogram histogram diff algorithm So to use histogram diff, add the following setting:\nset diffopt+=algorithm:histogram References # Removed features in Neovim. Is the git binary diff algorithm (delta storage) standardized? https://vimways.org/2018/the-power-of-diff/ (it has some links on how indent-heuristic works) ","date":"24 October 2021","externalUrl":null,"permalink":"/2021/10/24/diff_in_vim/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202020040611.jpg\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://man7.org/linux/man-pages/man1/diff.1.html\" target=\"_blank\"\u003eDiff\u003c/a\u003e can be used to compare two versions of the same file to find the changes.\nIf you use vim, you can use \u003ccode\u003evimdiff\u003c/code\u003e to compare files:\u003c/p\u003e","title":"Using Diffs in Vim","type":"posts"},{"content":"When we run git-diff, git uses its internal diff algorithm to generate diff for changed files.\nThe git internal diff algorithms # The default diff algorithm used by git-diff is myers diff. However, myers diff algorithm may not generate meaningful diffs for code changes. So the patience diff and histogram diff algorithm is also added later.\nThis post shows an example where myers diff does not make much sense and patience or histogram diff produce better diffs. It seems that histogram diff generally produces better diff.\nTo use patience or histogram diff in git diff, use the following command:\ngit diff --patience git diff --histogram However, this does not mean that histogram/patience diff always generate better diffs. An example is given here1.\nf1:\naaaaaa aaaaaa bbbbbb bbbbbb cccccc cccccc abc f2:\nabc aaaaaa aaaaaa bbbbbb bbbbbb cccccc cccccc The output of git diff --patience f1 f2 is:\ndiff --git a/f1 b/f2 index 3299d68..accc3bd 100644 --- a/f1 +++ b/f2 @@ -1,7 +1,7 @@ -aaaaaa -aaaaaa -bbbbbb -bbbbbb -cccccc -cccccc abc +aaaaaa +aaaaaa +bbbbbb +bbbbbb +cccccc +cccccc The output of git diff f1 f2 (remember that myers diff is used by default) is:\ndiff --git a/f1 b/f2 index 3299d68..accc3bd 100644 --- a/f1 +++ b/f2 @@ -1,7 +1,7 @@ +abc aaaaaa aaaaaa bbbbbb bbbbbb cccccc cccccc -abc In this case, result of myers diff make much more sense than that of patience diff.\nGit external diff tools # Git can also utilize external diff tool via git difftool command. Note that git difftool has nothing to do with git diff (its naming is a bit confusing since it may make the users believe that git difftool chooses which tool git-diff uses).\nYou can run command git difftool --tool-help to check a list of supported external diff tools. To select a certain tool, use git difftool --tool \u0026lt;my-diff-tool\u0026gt;. For example, to use vimdiff, run git difftool --tool vimdiff.\nRefs # What is the default git diff tool: https://stackoverflow.com/q/63985751/6064933 Original paper of the myers algorithm: https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927 https://news.ycombinator.com/item?id=23360223 patience vs histogram diff: https://stackoverflow.com/q/32365271/6064933 https://www.nathaniel.ai/myers-diff/ https://en.wikipedia.org/wiki/Diff https://fabiensanglard.net/git_code_review/diff.php The example compares patience against myers diff, but histogram diff generates the same result as patience diff in this case.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 October 2021","externalUrl":null,"permalink":"/2021/10/24/git_diff_setup/","section":"Posts","summary":"\u003cp\u003eWhen we run git-diff, git uses its internal diff algorithm to generate diff for\nchanged files.\u003c/p\u003e","title":"Git Diff Setup","type":"posts"},{"content":"Sometimes, we are interested in which font is used for the main text in a PDF. How do we find out?\nUse Adobe Acrobat PDF reader # Open the PDF in Adobe Acrobat and go to File --\u0026gt; Properties, under the Fonts tab page, a list of fonts embedded in in the document are listed there.\nHowever, there does not seem to be an option to view the font used by a specific text in the document.\nYou can check the fonts whose encoding is Custom and look them up on Google to see which one is what you want.\nUse pdffonts # We can also use pdffonts from the poppler package. First, we need to install poppler, I won\u0026rsquo;t go into detail here, check this post for the details.\nAfter that, we can run pdffonts to find the interested fonts. It helps to narrow to the page where the text occurs. For example, if we want to find font for page 2, run the following command:\n# -f: start page # -l: end page pdffonts -f 2 -l 2 test.pdf This will greatly narrow down the range of fonts. You can then quickly find which font the text uses.\nReferences # use pdfonts: https://superuser.com/a/628624/736190 Get PDF fonts info: https://stackoverflow.com/a/32426813/6064933 What is PDF: https://www.youtube.com/watch?v=GqEH8XvPZwM\u0026t=619s Difference between full embedded fonts and embedded subset ","date":"20 October 2021","externalUrl":null,"permalink":"/2021/10/20/find_font_used_in_pdf/","section":"Posts","summary":"\u003cp\u003eSometimes, we are interested in which font is used for the main text in a PDF.\nHow do we find out?\u003c/p\u003e","title":"Find Which Font is Used in A PDF","type":"posts"},{"content":"In Python, to run a task periodically, we can use the package apscheduler.\nTwo schedulers are provided in this package, BackgroundScheduler and BlockingScheduler. BackgroundScheduler will run in the background in a non-blocking fashion. On the other hand, BlockingScheduler will block until the job assigned is finished.\nHere is some demo code to showcase their usage:\nfrom datetime import datetime from apscheduler.schedulers.background import BackgroundScheduler, BlockingScheduler scheduler = BlockingScheduler() scheduler.add_job(func=my_job, trigger=\u0026#39;interval\u0026#39;, seconds=2, id=\u0026#39;my custom task\u0026#39;) scheduler.start() def my_job(): print(f\u0026#34;custom job called at {datetime.now()}\u0026#34;) In the above code, my_job is the task we want to run. We use the interval trigger. Trigger defines when we will run the given job. By using interval trigger, the job provided will be run periodically at the specified interval. For example, in the above code, the job will be run every two seconds, and we will observe output like the following:\ncustom job called at 2021-01-16 17:25:45.701729 custom job called at 2021-01-16 17:25:47.701612 custom job called at 2021-01-16 17:25:49.701627 custom job called at 2021-01-16 17:25:51.701584 We can use print_jobs() to print job info for this scheduler.\nThere is another cron trigger. Cron trigger will run the job if the given constraints is met. Here is an example of using the cron trigger:\nfrom datetime import datetime from apscheduler.schedulers.background import BackgroundScheduler, BlockingScheduler scheduler = BlockingScheduler() scheduler.add_job(func=my_job, trigger=\u0026#39;cron\u0026#39;, second=30, id=\u0026#39;my custom task\u0026#39;) scheduler.start() def my_job(): print(f\u0026#34;custom job called at {datetime.now()}\u0026#34;) In the above code, the job will run on every year, every month, every day, every hour, every minute, on the 30th second. An example output is like the following:\ncustom job called at 2021-01-16 17:39:30.001336 custom job called at 2021-01-16 17:40:30.001498 custom job called at 2021-01-16 17:41:30.001821 custom job called at 2021-01-16 17:42:30.001922 Another example:\nscheduler.add_job(func=my_job, trigger=\u0026#39;cron\u0026#39;, minute=0, second=30, id=\u0026#39;my custom task\u0026#39;) In the above code, the job will run on every year, every month, every day, every hour, on minute 0 and second 30. For example, it will run on 17:00:30, 18:00:30 etc. Output will be like the following:\ncustom job called at 2021-01-17 21:00:30.001602 custom job called at 2021-01-17 22:00:30.001254 custom job called at 2021-01-17 23:00:30.001562 custom job called at 2021-01-18 00:00:30.001559 custom job called at 2021-01-18 01:00:30.001399 Ref # apscheduler documentation: https://apscheduler.readthedocs.io/en/3.x/ ","date":"20 October 2021","externalUrl":null,"permalink":"/2021/10/20/python_apsscheduler_intro/","section":"Posts","summary":"\u003cp\u003eIn Python, to run a task periodically, we can use the package \u003ca href=\"https://github.com/agronholm/apscheduler\" target=\"_blank\"\u003eapscheduler\u003c/a\u003e.\u003c/p\u003e","title":"Scheduling Your Tasks with Package Apscheduler","type":"posts"},{"content":"","date":"16 October 2021","externalUrl":null,"permalink":"/categories/academic/","section":"Categories","summary":"","title":"Academic","type":"categories"},{"content":"","date":"16 October 2021","externalUrl":null,"permalink":"/tags/loss/","section":"Tags","summary":"","title":"Loss","type":"tags"},{"content":"In classification tasks, the de facto loss to use is the cross entropy loss.\nSuppose that we have 10 classes, we would like the network to predict the probabilities of current sample belonging to each of the 10 classes. However, the raw output from from a neural network is just floating point values. So the softmax function is used to normalize the output to fall in the range $(0, 1)$.\nAfter softmax, all output values are between 0 and 1 and their sum is 1. So the output now can be considered as the probability distribution over the predicted classes. The element with largest probability is the predicted class.\nNow, suppose we have a batch of N data samples and their class labels, from the point of maximum likelihood estimation (or MLE in short), we want to find the parameters of the neural network that can maximize the product of probabilities that each sample get in their ground truth class.\nFor example, if we have data sample x1, x2 and x3, and their class label is 1, 3, 5. Then we want to find network parameters that can maximize p{11} * p{23} * p{35}.\nThen according to theory of MLE, we need to do derivative stuff and find the parameter. However, the multiplication form is not suitable for calculating derivatives. That is why log() function used in this.\nWhy log function? Because:\nlog function is monotonic. Or our objective is the same. Maximizing the old objective is equivalent to maximizing the new objective. log(x * y) = log(x) + log(y), so that we can greatly simplify calculation of derivatives. Another question, why do we use the minus sign?\nBecause in machine learning, we always talk about minimizing the loss/cost, which is equivalent to maximize log likelihood. It is just a convention. By adding a minus sign, we transform the initial problem of maximizing likelihood to minimize the new loss function. They are essentially the same, but loss function is a more familiar jargon to machine learning practitioners.\nThe cross entropy loss is also called log loss.\nTo be continued\u0026hellip;\nReferences # https://stats.stackexchange.com/questions/436766/cross-entropy-with-log-softmax-activation https://stats.stackexchange.com/questions/366312/why-we-use-log-function-for-cross-entropy https://stats.stackexchange.com/questions/222585/what-are-the-impacts-of-choosing-different-loss-functions-in-classification-to-a On Loss Functions for Deep Neural Networks in Classification https://paperswithcode.com/paper/demystifying-loss-functions-for https://machinelearningmastery.com/how-to-choose-loss-functions-when-training-deep-learning-neural-networks/ ","date":"16 October 2021","externalUrl":null,"permalink":"/2021/10/16/why_cross_entropy_in_classification/","section":"Posts","summary":"\u003cp\u003eIn classification tasks, the de facto loss to use is the \u003ca href=\"https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html\" target=\"_blank\"\u003ecross entropy loss\u003c/a\u003e.\u003c/p\u003e","title":"Why Use Cross Entropy in Classification Task?","type":"posts"},{"content":"","date":"6 October 2021","externalUrl":null,"permalink":"/categories/emacs/","section":"Categories","summary":"","title":"Emacs","type":"categories"},{"content":"Unlike Vim/Neovim, where there are snippet engines like ultisnips and other plugins. In Emacs, the de facto snippet engine is yasnippet.\nInstallation and setup # Like vim-snippets for ultisnips, yasnippet-snippets provides the actual snippets for yasnippet.\nYasnippet and yasnippet-snippets can be easily installed via straight.el:\n(straight-use-package \u0026#39;yasnippet) (straight-use-package \u0026#39;yasnippet-snippets) (yas-global-mode t) ;; activate yasnippet Check available snippets # To check the available snippets for the current mode, run command yas-visit-snippet-file and choose snippet to view. You can also run command yas-describe-tables, which will show a list of snippets and their trigger words in a separate buffer.\nThe trigger shortcut # By default, the shortcut to trigger the expansion of a snippet is Tab. It can be easily changed, e.g., to change the shortcut to Meta-z, add the following config to init.el:\n(define-key yas-minor-mode-map (kbd \u0026#34;M-z\u0026#34;) \u0026#39;yas-expand) Jump forward and backward # To jump forward and backward through the tabstop fields/positions, the default is to use Tab and Shift+Tab. You can customize via the following config:\n;; use Meta-j and Meta-k to jump between fields (define-key yas-keymap (kbd \u0026#34;M-j\u0026#34;) \u0026#39;yas-next-field-or-maybe-expand) (define-key yas-keymap (kbd \u0026#34;M-k\u0026#34;) \u0026#39;yas-prev-field) Create custom snippets # The snippets are usually organized into different modes, which is kinda like filetypes in Vim/Neovim. For custom snippets, we can put under the directory ~/.emacs.d/snippets.\nSnippet for a specific mode # To create a snippet for markdown-mode, create a directory markdown-mode under ~/.emacs.d/snippets and create a new file there (the file name does not really matter)1. To create a snippet for markdown front matter like what is done here using ultisnips, use the following snippet:\n# -*- mode: snippet -*- # name: meta data # contributor: jdhao \u0026lt;jdhao@hotmail.com\u0026gt; # key: meta # -- --- title: \u0026#34;${1:TITLE}\u0026#34; date: `(format-time-string \u0026#34;%Y-%m-%dT%H:%M:%S%:z\u0026#34;)` tags: [${2:TAG}] categories: [${3:CATEGORY}] --- $0 The key field is the trigger word for this snippet, i.e., you type meta and press the trigger key to expand the snippet. The string inside the two backtick will be interpreted by the Emacs lisp interpreter and the result will be inserted there.\nGeneral Snippets (fundamental-mode snippets) # To write a snippet applicable to different modes, we can put it under the directory named fundamental-mode.\nCheck here on how to write a snippet for yasnippet.\nOverride an existing snippet # To override an existing snippet provided by yas-snippets, create a new snippet for the same mode with the same name. For example, to override link, use the following snippet instead:\n# -*- mode: snippet -*- # name: Link # contributor: jdhao \u0026lt;jdhao@hotmail.com\u0026gt; # key: link # -- [${1:TEXT}](${2:URL}) The name field must be the same with the existing snippet you want to override.\nReferences # how to change key binding for yas-expand https://www.youtube.com/watch?v=YDuqSwyZvlY You can also run command yas-new-snippet to create a new snippet.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"6 October 2021","externalUrl":null,"permalink":"/2021/10/06/yasnippet_setup_emacs/","section":"Posts","summary":"\u003cp\u003eUnlike Vim/Neovim, where there are snippet engines like \u003ca href=\"https://github.com/SirVer/ultisnips\" target=\"_blank\"\u003eultisnips\u003c/a\u003e and \u003ca href=\"https://github.com/rockerBOO/awesome-neovim#snippet\" target=\"_blank\"\u003eother plugins\u003c/a\u003e. In Emacs, the de facto snippet engine is \u003ca href=\"https://github.com/joaotavora/yasnippet\" target=\"_blank\"\u003eyasnippet\u003c/a\u003e.\u003c/p\u003e","title":"Setting up Yasnippet for Emacs","type":"posts"},{"content":"","date":"6 October 2021","externalUrl":null,"permalink":"/tags/snippet/","section":"Tags","summary":"","title":"Snippet","type":"tags"},{"content":" A short note on how to set up a more beautiful tabline for Emacs.\nIn Emacs, to show the tabline in the top of the frame, add the following config:\n(global-tab-line-mode t) The default tabline is ugly, it also shows the button to create or delete a tab. To disable those button, add the following config:\n(setq tab-line-new-button-show nil) ;; do not show add-new button (setq tab-line-close-button-show nil) ;; do not show close button To change the separator between tabs, set the variable tab-line-separator:\n(setq tab-line-separator \u0026#34;\u0026#34;) ;; set it to empty To further customize the look of tabs, we can employ the powerline package:\n(defvar my/tab-height 22) (defvar my/tab-left (powerline-wave-right \u0026#39;tab-line nil my/tab-height)) (defvar my/tab-right (powerline-wave-left nil \u0026#39;tab-line my/tab-height)) (defun my/tab-line-tab-name-buffer (buffer \u0026amp;optional _buffers) (powerline-render (list my/tab-left (format \u0026#34;%s\u0026#34; (buffer-name buffer)) my/tab-right))) (setq tab-line-tab-name-function #\u0026#39;my/tab-line-tab-name-buffer) ;; tab color settings (set-face-attribute \u0026#39;tab-line nil ;; background behind tabs :background \u0026#34;gray40\u0026#34; :foreground \u0026#34;gray60\u0026#34; :distant-foreground \u0026#34;gray50\u0026#34; :height 1.0 :box nil) (set-face-attribute \u0026#39;tab-line-tab nil ;; active tab in another window :inherit \u0026#39;tab-line :foreground \u0026#34;gray70\u0026#34; :background \u0026#34;gray90\u0026#34; :box nil) (set-face-attribute \u0026#39;tab-line-tab-current nil ;; active tab in current window :background \u0026#34;#b34cb3\u0026#34; :foreground \u0026#34;white\u0026#34; :box nil) (set-face-attribute \u0026#39;tab-line-tab-inactive nil ;; inactive tab :background \u0026#34;gray60\u0026#34; :foreground \u0026#34;black\u0026#34; :box nil) (set-face-attribute \u0026#39;tab-line-highlight nil ;; mouseover :background \u0026#34;white\u0026#34; :foreground \u0026#39;unspecified) The produced tab is shown in the title image. If you want to change the style of tab from wave to vertical bar, you can use powerline-bar-right and powerline-bar-left instead.\nReferences # https://amitp.blogspot.com/2020/06/emacs-prettier-tab-line.html https://andreyorst.gitlab.io/posts/2020-05-10-making-emacs-tabs-look-like-in-atom/ ","date":"30 September 2021","externalUrl":null,"permalink":"/2021/09/30/emacs_custom_tabline/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202109300037148.jpg\" width=\"400\"\u003e\n\u003c/p\u003e\n\u003cp\u003eA short note on how to set up a more beautiful tabline for Emacs.\u003c/p\u003e","title":"Customize Tabline in Emacs","type":"posts"},{"content":"趁着中秋节小长假，去重庆和贵阳玩了几天。\n深圳到重庆只有一趟直达高铁，时间不合适，所以就打算从贵阳转车，顺便看一下贵阳，结果出发当天,深圳到贵阳车次被取消，所以从广州转车到贵阳，一路上都是南方典型的景色，绿树青山，穿过了无数的隧道，下午六点多到达贵阳。\n这是我第一次来贵阳，第一眼的印象还不错，贵阳是一个比较新的城市，高楼也不少，可能和贵阳近些年在发展大数据产业有关系。\n在地图上查到附近有一个贵阳民俗文化美食城，以为是各种小吃汇聚的小吃街，就像深圳的东门小吃街那样，结果就是一些饭店的集合，失望而归。在住的酒店附近吃了一家\u0026quot;凯俚酸汤鱼\u0026quot;，鱼选的是黄辣丁，还点了丝娃娃，米豆腐，酸汤鱼个人觉得味道一般，丝娃娃可以理解为春卷，面皮里面卷一些菜，唯一好吃的是凉拌米豆腐，香辣味道，辣椒油很香。第二天上午离开贵阳前去了另外一个二七路小吃街，里面有很长一排卖小吃的，买了洋芋饼，味道还不错，点了一份豆腐脑，去的有点早，很多商家刚开张，没有吃到特别惊艳的美食。\n从小吃街出来，又去一家\u0026ldquo;老五鸡丝豆花面\u0026rdquo;，点了一份面，里面有豆花，鸡丝和脆哨(就是油炸的猪肉)，里面的面是鸡蛋面，类似方便面，但是比方便面硬，个人觉得味道一般。\n贵阳城市建设还可以，看起来比较新，并不像北方许多城市那么灰土土的，贵阳地铁比较少，公交线路也不算发达，所以这次出行以打车为主，好在出租车价格不贵。\n下午乘坐高铁离开贵阳，经过两个多小时到达重庆，住在一号线两路口地铁站附近，酒店位于重庆有名的皇冠大扶梯附近，需要坐扶梯下去，这是我第一次坐那么长的扶梯，果然不愧是山城和魔幻8D城市。到了酒店放下行李就去找吃的，找了附近一家小面店，地图距离只有几百米，没想到要爬坡，经过蜿蜒而上的公路，又爬了一段台阶，才找到小店，点了一碗豌杂面，味道很好，料很足，有肉酱，空心菜，12 块一份，说实话秒杀深圳 18 块的豌杂面。\n晚上去朝天门码头和洪崖洞逛了一圈，朝天门码头正在整修，没有进去，附近就是 19 年开业的来福士广场八栋楼，完全挡住了后面的建筑。。洪崖洞距离朝天门码头相当近，步行几百米即可到达，在灯光装饰下，显得金碧辉煌，一路上有许多拍照的美女，年轻人居多。\n第二天上午去逛了解放碑，在八一好吃街又吃了一些小吃，提前也做了一些功课，点了\u0026quot;降龙爪爪\u0026quot;里面的冬阴功味鸡爪，非常软糯，还点了鸳鸯包子(酱肉味)，也不错。小张还买了烤苕皮加里脊(其实就是红薯粉)，吃起来有点硬，味道很一般。买了一份酒酿冰粉，12 一份，里面加了红枣干，葡萄干，糍粑，味道不错，比在火锅店吃的正宗许多。\nday3 上午，去吃了\u0026ldquo;吴记豆花面\u0026rdquo;，豆花覆盖在面上，浇上肉酱，味道非常好 虽然辣椒油很多，但是主要是香，并不很辣。吃碗面，去南岸坐长江索道，之所以在南岸坐是因为南岸人少，游客们普遍在北岸小什字排队。坐完缆车，到了北岸小什字，又去解放碑逛了一圈。在路上遇到了一个担着担子，卖一种红果果的阿姨，那果子颜色红的不太正常，问她，她说是从树上结的，小张买了一点，结果一尝发现其实就是盐津果子，在重庆遇到了两个卖这种红果的骗子。下午去了江北区的观音桥步行街，逛了观音桥好吃街，小吃街在一个商场的一楼，里面有很多小档口卖小吃，里面非常吵，人山人海，不大声说话根本听不清，体验很差。在里面又买了一些小吃，和八一小吃街比较类似。\n整体而言，重庆交通方便（地铁线路多），美食也很不错，值得再去一次。\n","date":"22 September 2021","externalUrl":null,"permalink":"/2021/09/22/chongqing_guiyang_travel/","section":"Posts","summary":"\u003cp\u003e趁着中秋节小长假，去重庆和贵阳玩了几天。\u003c/p\u003e","title":"中秋贵阳重庆行","type":"posts"},{"content":" update log 2022-02-08: update fastgit URL I am using straight.el to manage my Emacs packages. However, due to GitHub access issues, the bootstrap snippet can not be downloaded successfully and run. After staring Emacs, it hangs forever with high CPU usage.\nHere is what is working for me. After following these steps, I can install packages without issue.\nGo to ~/.emacs.d, the directory varies based on your system1.\nClone the straight.el repo:\ngit clone https://github.com/raxod502/straight.el.git straight/repos/straight.el Change the git default url using the following command as per guide here.\ngit config --global url.\u0026#34;https://hub.fastgit.xyz/\u0026#34;.insteadOf \u0026#34;https://github.com/\u0026#34; git config protocol.https.allow always Remove the straight.el bootstrap snippet from init.el.\nRestart Emacs and just wait. All my packages are installed and built successfully.\nReferences # https://github.com/raxod502/straight.el/issues/665 https://github.com/raxod502/straight.el/issues/750 https://github.com/raxod502/straight.el/issues/842 https://github.com/raxod502/straight.el/issues/302 Check here for the actual path.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 September 2021","externalUrl":null,"permalink":"/2021/09/15/emacs_straight-el_bootstrap_install_issue/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-02-08: update fastgit URL\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eI am using \u003ca href=\"https://github.com/raxod502/straight.el\" target=\"_blank\"\u003estraight.el\u003c/a\u003e to manage my Emacs packages.\nHowever, due to GitHub access issues, the \u003ca href=\"https://github.com/raxod502/straight.el#getting-started\" target=\"_blank\"\u003ebootstrap snippet\u003c/a\u003e can not be downloaded successfully and run.\nAfter staring Emacs, it hangs forever with high CPU usage.\u003c/p\u003e","title":"Straight.el Bootstrap and Package Install Issue","type":"posts"},{"content":" update log 2021-11-24: Add more detailed instructions for installing doom-modeline.\nI have been using Neovim for over three years and I have been constantly hearing the greatness of its rival editor Emacs. So today I am gonna to try it and see if it is truly great.\nEdit: My final Emacs conf is here.\nInstall # Check here: https://www.gnu.org/software/emacs/download.html\nFor Windows, go to this mirror site, and download emacs-27.2-x86_64.zip and extract it.\nFor macOS, use homebrew to install Emacs-plus1:\nbrew tap d12frosted/emacs-plus brew install emacs-plus How to Run? # Windows: Go to extracted folder, run bin/runemacs.exe. macOS: Run emacs from command line or search Emacs.app and run it. Note to run emacs in maximized window, add following config to emacs config file:\n(add-to-list \u0026#39;initial-frame-alist \u0026#39;(fullscreen . maximized)) Ref:\nRun in maximized window: https://emacs.stackexchange.com/a/3017/23435 Config file # Emacs uses~/.emacs.d/init.el as its startup file (~/.config/emacs/init.el is also supported). Its configuration is written via a dialect of Lisp language called Emacs Lisp, or Elisp in short.\nTo check config file path, run C-H v user-init-file RET (RET is return key).\nReload config: note that it is not possible to entirely reload config, the best way is to restart your emacs. Open init.el, and run m-x eval-buffer.\nRef:\nhttps://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Init.html https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html Show conf file path: https://stackoverflow.com/a/192097/6064933 Reload config without quit: https://stackoverflow.com/a/167719/6064933 Install packages # I am not a purist guy which only uses the built-in features of and editor and refuses to add plugins or packages.\nPackage is to Emacs what plugin is to Vim.\nThe built-in way # To install packages, run M-x package-install, we are prompted to type the package name we want to install. Type the package name, and the package shall be installed.\nSometimes, due to bad network connection, emacs hangs forever when trying to connect to its package repo, and we see the following message:\nContacting host: elpa.gnu.org:443\nIn this case, we can change the package repo URL (add it to init.el)\n;; this is just an example (setq package-archives \u0026#39;((\u0026#34;gnu\u0026#34; . \u0026#34;http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/\u0026#34;) (\u0026#34;melpa\u0026#34; . \u0026#34;http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/\u0026#34;))) One disadvantage of using built-in package management is that it can not install a package automatically if its hasn\u0026rsquo;t been installed. We need to write a few lines of code in config file.\nUsing 3rd party package manager # Aside from the built-in way to install packages, we can also use 3rd party package managers, for example, straight.el.\nTo install straight.el, just put the following script to init.el:\n(defvar bootstrap-version) (let ((bootstrap-file (expand-file-name \u0026#34;straight/repos/straight.el/bootstrap.el\u0026#34; user-emacs-directory)) (bootstrap-version 5)) (unless (file-exists-p bootstrap-file) (with-current-buffer (url-retrieve-synchronously \u0026#34;https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el\u0026#34; \u0026#39;silent \u0026#39;inhibit-cookies) (goto-char (point-max)) (eval-print-last-sexp))) (load bootstrap-file nil \u0026#39;nomessage)) To install a package, add the following statement to init.el:\n(straight-use-package \u0026#39;some-package) ;; for example, to install company-mode, use the following (straight-use-package \u0026#39;company) Straight.el will install a package if it has not been installed yet.\nColor, theme, modeline # We can surly customize the look of Emacs via handcraft, e.g., change background color and foreground color:\n(add-to-list \u0026#39;default-frame-alist \u0026#39;(foreground-color . \u0026#34;#E0DFDB\u0026#34;)) (add-to-list \u0026#39;default-frame-alist \u0026#39;(background-color . \u0026#34;#102372\u0026#34;)) More advanced way to customize color is to use or install a color theme. Emacs comes with several built-in themes.\nTo find good themes, MELPA is a good place to start. A good theme package is doom-themes. It comes with a lot of themes.\nTo load a theme, type A-x load-theme, and then type a theme name, for example, doom-one, or we can add to config:\n(load-theme \u0026#39;doom-gruvbox t nil) To show currently enabled themes, run c-h v and type custom-enabled-themes to check.\nFile editing # Delete a line: C-S-Backspace. Go to line beginning and end: C-a and c-e. Yank selected text and paste: M-w and c-y. Evil mode # I find the editing experience in Emacs highly inferior to that of Vim. So We can use emacs-evil:\n(straight-use-package \u0026#39;evil) ;; enable evil mode (evil-mode 1) There is in fact a built-in viper-mode for Emacs, but it is not complete as compared to evil.\nRef:\nDifference between viper, vimpulse, evil for emacs: https://stackoverflow.com/q/14291260/6064933 delete a line: https://stackoverflow.com/a/3958568/6064933 Emacs evil guide: https://github.com/noctuid/evil-guide Window and buffer # open a horizontal split: c-x 2 open a vertical split: c-x 3 close a buffer: c-x k close a window: c-x 0 open a file: c-x c-f create a new file: same as c-x c-f save a file: c-x c-s quit emacs: c-x c-c Open a buffer: c-x b To show config file path, run M-:, then type (buffer-file-name) to show config path. Ref:\nclose buffer: https://stackoverflow.com/q/207510/6064933 close a windows: https://stackoverflow.com/q/17961449/6064933 show file path: https://stackoverflow.com/a/17415557/6064933 Help system # c-h ? gives an overview of the help system.\nCheck the value of a variable: c-h v \u0026lt;variable-name\u0026gt; Check function doc: c-h f Check which command a key binds to: c-h c Ref:\nhttps://www.gnu.org/software/emacs/manual/html_node/eintr/See-variable-current-value.html https://nyk.ma/posts/emacs-intro/ Tab completion # Add the following to your emacs conf:\n(setq completion-cycle-threshold 1) Ref:\nhttps://emacs.stackexchange.com/a/17118/23435 UI # disable toolbar, menu bar, scrollbar # Toolbar, menu bar and scrollbar are ugly and take precious space. Let\u0026rsquo;s disable them all together:\n(menu-bar-mode -1) (toggle-scroll-bar -1) (tool-bar-mode -1) Ref:\nhttp://kb.mit.edu/confluence/display/istcontrib/Disabling+the+Emacs+menubar%2C+toolbar%2C+or+scrollbar Show line number and relative number # Like what vim does:\n(global-display-line-numbers-mode) (setq display-line-numbers-type \u0026#39;relative) Ref:\nhttps://stackoverflow.com/q/6874516/6064933 https://emacs.stackexchange.com/a/280/23435 https://emacs.stackexchange.com/q/45604/23435 Modeline # What we call statusline in Vim, they call it modeline in Emacs. IMO, they are very similar concepts. We can use doom-modeline to help use customize the modeline.\nFirst, we need to install some special icon that doom-modeline uses. We need to install package all-the-icons to install the fonts needed:\n(straight-use-package \u0026#39;all-the-icons) Run M-x all-the-icons-install-fonts to install the icon fonts.\nThen install doom-modeline:\n(straight-use-package \u0026#39;doom-modeline) Ref:\nhttps://stackoverflow.com/a/11419691/6064933 check current themes: https://superuser.com/a/320289/736190 Tabline # For Emacs 27, add the following setting to init.el:\n(global-tab-line-mode t) show trailing white space # Add following config:\n(setq-default show-trailing-whitespace t) Ref:\nhttps://stackoverflow.com/a/34589105/6064933\nAuto-completion # We can use package company to enable auto-completion for functions and options etc. Add the following setting to init.el:\n;; enable company mode in all buffers (add-hook \u0026#39;after-init-hook \u0026#39;global-company-mode) ;; use tab and s-tab to cycle forward and backward completion items (add-hook \u0026#39;after-init-hook \u0026#39;company-tng-mode) The company-tng-mode is used to make Tab and SHIFT-Tab to move forward and backward in the auto-completion menu, for more details see issue here and PR here.\nfuzzy search # If you have used Vim, you may be familiar with fzf.vim or LeaderF or telescope.nvim, depending which Vim distribution you are using. In Emacs, we can use ivy.\nHere is a minimal config:\n(straight-use-package \u0026#39;ivy) (straight-use-package \u0026#39;counsel) ;; enable ivy mode by default (ivy-mode 1) Then ivy will be automatically enabled when you open file/buffer or run commands. Note that the default fuzzy search behavior of ivy is different from that of LeaderF or fzf. For example, to search package-install in ivy, you can type pac ins, but not pacins, the space between is important.\nParentheses: highlight and insert # To highlight matching parentheses, add the following config:\n;; show matching parentheses (show-paren-mode t) ;; the style for matching parentheses (set-face-background \u0026#39;show-paren-match \u0026#34;#ff0000\u0026#34;) (set-face-attribute \u0026#39;show-paren-match nil :weight \u0026#39;bold :underline t :overline nil :slant \u0026#39;normal) To insert matching parentheses automatically, install package smartparens:\n(straight-use-package \u0026#39;smartparens) ;; enable smartparens mode (smartparens-global-mode t) To change, delete, add matching pairs easily, there is also evil-surround, mimicking the behavior of vim-surround by Tpope.\nRef:\nshow matching parentheses https://www.emacswiki.org/emacs/ShowParenMode https://emacs.stackexchange.com/q/47795/23435 Issues # custom-set-faces is added automatically to init.el # After installing packages, init.el is automatically updated and include custom-set-faces. We can use the following setting to disable this behavior:\n(setq custom-file (locate-user-emacs-file \u0026#34;custom.el\u0026#34;)) (load custom-file) Ref:\nhttps://stackoverflow.com/q/5052088/6064933 Change backup directory # By default, Emacs saves a backup file in the same directory as the current file, which pollutes the current working directory. We can move the backup directory to a centralized directory:\n;; change backup settings (setq backup-directory-alist \u0026#39;((\u0026#34;.\u0026#34; . \u0026#34;~/.cache/emacs-backups\u0026#34;))) Conclusion # After learning and trying Emacs for one day, I would say that Emacs is truly a great GUI editor which has some really cool features. For example, in Emacs, you can set different font style (size, bold, italic, font family etc.) to different texts in the same buffer, which org-mode used for beautiful type-setting inside Emacs2. You can also get the vscode-like experience via customize groups.\nHowever, when it comes to editting text and navigation, I think Vim/Nvim is still the king, the proof of which is apparent since we have got evil-mode in Emacs.\nReferences # https://github.com/emacs-tw/emacs-101-beginner-survival-guide awesome emacs: https://github.com/emacs-tw/awesome-emacs Emacs 101: https://github.com/emacs-tw/emacs-101-beginner-survival-guide Emacs for the rest of us: http://iqss.github.io/IQSS.emacs/ For macOS, there is emacs-mac.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSadly, I do not think any Nvim GUI can do this or come even close to org-mode.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"12 September 2021","externalUrl":null,"permalink":"/2021/09/12/learning_emacs_in_one_day/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cp\u003e\u003cfont color=\"blue\"\u003e2021-11-24: Add more detailed instructions for installing doom-modeline.\u003c/font\u003e\u003c/p\u003e\n\u003c/details\u003e\n\u003cp\u003eI have been using \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e for over three\nyears and I have been constantly hearing the greatness of its rival editor\n\u003ca href=\"https://www.gnu.org/s/emacs/\" target=\"_blank\"\u003eEmacs\u003c/a\u003e. So today I am gonna to try it and see if\nit is truly great.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEdit: My final Emacs conf is \u003ca href=\"https://github.com/jdhao/emacs-conf\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e","title":"Learning Emacs as A Nvimmer in One Day","type":"posts"},{"content":"If you are not accustomed to typing git commands on the command line, there are also some TUI clients for easing the use of git.\nlazygit # lazygit is a git tui client written in go. To install it on Linux:\nwget https://github.com/jesseduffield/lazygit/releases/download/v0.28.2/lazygit_0.28.2_Linux_x86_64.tar.gz mkdir -p $HOME/tools/lazygit tar --directory=$HOME/tools/lazygit -xvf lazygit_0.28.2_Linux_x86_64.tar.gz Add it to PATH:\nexport PATH=$HOME/tools/lazygit:$PATH Lazygit comes with rich features and extensive key bindings.\ngitui # gitui is a similar git tui written in rust, which boasts excellent performance against other git tui clients. Install it on Linux:\nwget https://github.com/extrawurst/gitui/releases/download/v0.16.2/gitui-linux-musl.tar.gz mkdir -p $HOME/local/bin tar --directory=$HOME/local/bin -xvf gitui-linux-musl.tar.gz export PATH=$HOME/loca/bin:$PATH gitui also has rich features. One issue to note is that it does not support using j and k to select next and previous item, which is a bit clusmy for Vim users like me.\ntig # tig is tiny tools written in C, which provides a git tui with basic features. We can install it from source:\nwget https://github.com/jonas/tig/releases/download/tig-2.5.4/tig-2.5.4.tar.gz tar xvf tig-2.5.4.tar.gz cd tig-2.5.4 ./configure --prefix=$HOME/local make -j 8 \u0026amp;\u0026amp; make install tig will be installed under $HOME/local/bin.\nTig is tiny and quite powerful and suitable for simple use cases.\n","date":"11 September 2021","externalUrl":null,"permalink":"/2021/09/11/git_tui_clients_hands_on/","section":"Posts","summary":"\u003cp\u003eIf you are not accustomed to typing git commands on the command line, there are\nalso some TUI clients for easing the use of git.\u003c/p\u003e","title":"Hands on with Three Git TUI Clients","type":"posts"},{"content":" In Neovim, we can use the virtual text feature to place virtual text anywhere in the current buffer, which is not possible with normal text.\nA bit of history # Initially, the Nvim core dev bfredl introduced nvim_buf_set_virtual_text() to add virtual text to a buffer in this PR.\nOver the time, the code is refactored and deprecated, in favor of the new API function nvim_buf_set_extmark()1.\nPlugins utilizing virtual text # Plugins have been using virtual text feature to do various things. Here is a non-exhaustive list:\nIndentBlankLine.nvim: Show indent guides even on blank lines. Previously, it is not possible to place text on blank lines. So there will be a gap in indent lines when there is a blank line, see this issue. nvim-cmp: show function signature using virtual text. nvim-hlslens: Show search count and index at EOL, an excellent alternative to vim-anzu and the likes. blamer.nvim: Show line blame messages at EOL2. Nvim-lspconfig: Show diagnostics as virtual text in the end of a line. virt-column.nvim: replace option colorcolumn using virtual text. virtual-type.nvim: show variable type using virtual text. Extmark-toy.nvim: Showing cool visual effects. Using extmarks # The nvim_buf_set_extmark() function has a lot of parameters, and some of them can be confusing for users due to the conciseness of its documentation.\nHere is a working example to demonstrate its usage:\nlocal api = vim.api local bnr = vim.fn.bufnr(\u0026#39;%\u0026#39;) local ns_id = api.nvim_create_namespace(\u0026#39;demo\u0026#39;) local line_num = 5 local col_num = 5 local opts = { end_line = 10, id = 1, virt_text = {{\u0026#34;demo\u0026#34;, \u0026#34;IncSearch\u0026#34;}}, virt_text_pos = \u0026#39;overlay\u0026#39;, -- virt_text_win_col = 20, } local mark_id = api.nvim_buf_set_extmark(bnr, ns_id, line_num, col_num, opts) In the above, line_num specifies which line we want to put the virtual text. col_num specifies which column we want to put virtual text (but this is actually only half true, since we can put virtual text at any position). col_num shouldn\u0026rsquo;t exceed the actual column number of the line indicated by line_num. Otherwise, we get the following error message:\nE5113: Error while calling lua chunk: test.lua:17: col value outside range\nIn the opts parameter, there are more options to change the behavior of this function. virt_text is a table of table, where each sub-table contains some text and the highlight group for it.\nThe option virt_text_pos has three possible values:\noverlay: overlay the virtual text on the column specified with col_num, this is actually the only case where col_num really works. eol: virtual text is placed at the end of the line (col_num does not take effect). right_align: virtual text is placed on the right of current line (col_num does not take effect). Check the title image for a comparison between the three position method.\nTo actually put virtual text on any column, we should use virt_text_win_col in the opts table. If we use virt_text_win_col, virt_text_pos does not take effect any more.\nTo delete a virtual text, use API function nvim_buf_del_extmark(bnr, ns_id, id), where id is the id used in opts.\nReferences # https://www.reddit.com/r/neovim/comments/lppnvn/indent_blankline_can_now_display_indent_guides_on/ In fact, extmark is more than virtual text, see :h api-extended-marks for the details.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAs of writing of this post, this plugin is still using the old API.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 September 2021","externalUrl":null,"permalink":"/2021/09/09/nvim_use_virtual_text/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202109150127349.png\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eIn Neovim, we can use the \u003ccode\u003evirtual text\u003c/code\u003e feature to place virtual text anywhere in the current buffer,\nwhich is not possible with normal text.\u003c/p\u003e","title":"Using Virtual Text in Neovim","type":"posts"},{"content":"总结一下老北京炸酱面的制作过程，备忘。\n原料 # 五花肉（肥瘦均匀） 干黄酱（没有的话黄豆酱也可），提前加温水泄好。 大料，大葱，姜，冰糖 啤酒，料酒 面条（要劲道一些的，否则煮面以后面容易粘连） 黄瓜，豆芽，青菜（青菜没有限制，自己喜欢的均可） 制作步骤 # 1、五花肉去皮，切成冰糖大小的均匀小块，加入一点淀粉拌匀。\n2、热锅冷油，待油烧热，加入部分的切好的大葱，一点大料，稍微炒制。\n3、加入切好的五花肉，翻炒，把肥肉的油炒出来，加入切好的姜末和料酒，再翻炒一会，期间还可以加入一些冰糖（冰糖会让肉颜色发亮）。\n4、分两三次加入泄好的干黄酱，然后中小火不断翻炒，小心糊锅。\n5、一点一点加入啤酒，记得不断翻炒，持续十几分钟。\n6、小火焖一下肉，火不能大，否则会糊。开盖，加入剩下的大葱，继续翻炒，火稍微大一些收汁。\n做好的炸酱应该是肉酱和油分离的。\n煮面条 # 下面就是煮面条，煮青菜，黄瓜切丝。面煮好以后，捞出过凉水，然后加入炸酱，青菜，黄瓜丝，拌匀即可食用，喜欢吃蒜的，一定要来一瓣大蒜，配合炸酱面吃是一绝。\n之前在微博上关注的@麻黑浮云 麻叔写过很多美食的制作方法，不过后面退出微博了，很多菜单也丢失了。他也写过炸酱面的制作流程，我保留了下来，摘录如下（版权属于麻叔）：\n炸酱面是北京的土吃，北京菜本质上就是多半山东菜加少半回民菜。葱，一定要用山东寿光大葱，蒜也要用山东大蒜。山东培土的大葱皮老芯嫩，辣中甜，过油葱香十足。油用花生油，也是山东花生榨的，鲁花什么的。肉最好就是细五花，过去穷讲究的人吃炸酱面专门买这种五花，为什么?因为这种肉切完了肥瘦均匀出现，肉块切的要大些，北京人吃炸酱面俗称小炖肉，基本上要太妃糖那么大的块，这样如果是细五花肉，肥瘦都均匀，不会出现一块肉上一半肥一半瘦或者干脆一整块肥肉的场面，不讲究。酱反正就用六必居的干黄酱，温水泄开，要泄一大碗那么多。一颗大料上掰下来一角，大料味大多了夺味。肉和干酱差不多6:4的比例，葱多切。\n肉切好码一点生粉，然后倒啤酒要倒的比较多，没过肉，一去腥二洗血水，泡五分钟，把啤酒倒掉。这时候锅上油，油要比平时炒菜多一倍，因为油还会炸出来，不会吃进去，多放是炸酱的要求。热锅凉油，下一多半葱。侯宝林的炸酱面先下肉，后放葱，因为怕油热做的时间长葱味没了，叫倒呛锅。我个人喜欢前后双呛锅所以先下一多半葱，不要切太碎了，炸酱里面大条的葱很香，大火葱微变色加大料一角，然后倒肉，肉变色倒料酒，炊烟袅袅那个炊烟其实就是料酒呛锅的味道，我专门考证过，这个传统好像宋朝就有了，不过那时酒很贵，用酒呛锅的都是有钱人。然后下泄的很稀的黄酱，拌匀，正式开始小炖肉，这时候讲究的人会把大料挑出来扔了，它的任务已经完成，但是如果留在锅里吃的时候分不清谁一不留神吃进去，夺味，扫兴，必然不符合穷讲究的要求。我一般都扔了它这时候。同时加冰糖，冰糖炒出来东西亮，这时候要用木铲子不断翻炒，酱很容易炒糊了，然后这时候要炒出油来的要点就是中小火不断用勺加水，炒一分钟加一点，总体积不变，还是很稀，这是炖肉呢，肉味要炖出来才行。这样至少10分钟，因此要不断加水，否则干锅。我一般都加青岛啤酒，一听加完，然后才开始收汁，开始中火不断翻动，然后改小火，这时候也要不断翻动，这时候就熬出油来了，点灯熬油一样，不过那是熬的大油这是把之前加的花生油熬出来，这时拿一筷子扎下去，筷子上酱顺着油都流下去的时候就差不多了，加剩下的葱花，可以挤一点研磨黑胡椒，再收一收，不要糊锅，然后出锅，倒碗里，一会油就析出来一层封在酱上，这就是小碗干炸的效果。\n面码看个人心情，一般待客反正面码越多越隆重，这也是穷讲究的地方。我们一般都喜欢豆芽菜和青豆还有荷兰豆还有嫩芹菜叶等。面要手擀面，碱大一些的，煮完了劲道，而且膨胀率高，膨胀率高不仅仅是口感好，而且还会有一种弯弯曲曲的形状，不象切面是的，切面煮完跟一把金针菇是的，不讲究。这个是很重要的，因为弯弯曲曲的手擀面比较窝酱，就是能让面和酱还有面码混合的比较均匀，如果是切面，面挨着面，一坨过水烂烙饼是的，不好。最后还有大蒜黄瓜，有点辣椒油更好。吃完比较咸，吃点豌豆黄压一压。然后再吃根黄瓜，这才算完事。\n","date":"5 September 2021","externalUrl":null,"permalink":"/2021/09/05/how_to_make_zhajiang_noodles/","section":"Posts","summary":"\u003cp\u003e总结一下老北京炸酱面的制作过程，备忘。\u003c/p\u003e","title":"老北京炸酱面制作","type":"posts"},{"content":"I want to print the largest number that unsigned int can represent, which is 2^32 - 1. I use the following code:\nunsigned int n = 2147483647 + 1 + 2147483647; std::cout \u0026lt;\u0026lt; n \u0026lt;\u0026lt; std::endl; However, I get an overflow warning from clangd:\noverflow in expression; result is -2147483648 with type \u0026lsquo;int\u0026rsquo;\nAccording to post here, the expression 2147483647 + 1 overflows because both number are treated as int type. The compiler will choose from int, long, long long in that order to find if a type can fit the number. The maximum positive integer an int type can represent is 2147483647. So the type chosen for 2147483647 is int, not long or long long. Thus we get the overflow warning when we add 1 to it. If you use 2147483648 directly, the compiler will choose long type for this number, which will also not overflow.\nThe variable type on the left side of the assignment does not impact the choose integer type for the variable on the right side. It only decides whether type conversion will happen when assigning the result to this variable. In this case, although we want to the assign the final result to an unsigned int type, 2147483647 is not converted to unsigned int automatically.\nTo fix issue, we can explicitly tell the compiler that we want an unsigned int instead of int:\nunsigned int n = (unsigned int)2147483647 + 1 + 2147483647; // or use the following unsigned int n = 2147483647u + 1 + 2147483647; By converting one number to unsigned int, the other number will also be elevated to unsigned int and no overflow occurs in this case.\nReferences # C++ literal integer type: https://stackoverflow.com/q/42892227/6064933 Integer literal: https://en.cppreference.com/w/cpp/language/integer_literal http://www.c-faq.com/expr/intoverflow1.html ","date":"3 September 2021","externalUrl":null,"permalink":"/2021/09/03/cpp_integer_overflow/","section":"Posts","summary":"\u003cp\u003eI want to print the largest number that \u003ccode\u003eunsigned int\u003c/code\u003e can represent, which is\n\u003ccode\u003e2^32 - 1\u003c/code\u003e. I use the following code:\u003c/p\u003e","title":"Integer Literal Type and Overflow In C++","type":"posts"},{"content":"GNU Make is a build automation tool typically used on Linux systems1. Below I will summarize a list of FAQs, which explain how Make works and how to use Make.\nGeneral questions # Why do we need Make? # Suppose that we want to build an executable or a library with multiple source and header files. To build it, we often need to run quite a few commands. During the development cycle, we need to repeatedly run these commands to build the project. Of course we can do it manually, but it would be time-consuming and error-prone.\nWith Make, we can run repeating build tasks easily without having to type the build commands manually.\nHow is Make different from CMake? # Make is build tool that uses Makefile to build a project. CMake is a meta-build tools, in that it can produce a Makefile or other build files such as build.ninja for Ninja.\nWhat name should we use for Makefile? # Make usually looks for makefile or Makefile in the current directory. The convention is to use Makefile. However, makefile also works fine.\nWhat is a target, recipe? # A rule is a bunch of commands we want to run together to build a target, e.g., building a certain object file. The format is like:\nTarget_name: dependency # \u0026lt;--\u0026gt; indicates a TAB character. \u0026lt;--\u0026gt;command1 \u0026lt;--\u0026gt;command2 ... These commands are called recipe for this target. Each command must start with a TAB, though it can be changed in newer versions of make.\nA target is the result of executing the rule.\nHow does make work generally? # Make is smart. It will not blindly build all the target each time you run it. Since each target may have some dependencies, and each dependency in turn will have their own dependencies. In the end, when we make a target, there is a dependency tree. If you change a source file, make will only compile its parent target and other targets that depend on its parent target recursively. Specifically, make will check the last-modify time of a target\u0026rsquo;s dependency, if the time stamp is newer than the target itself, it means that this target should be rebuilt to make it up-to-date.\nIn summary, make is smart enough to only build a target that needs to be rebuilt, reducing compilation time significantly.\nRef:\nhttps://stackoverflow.com/q/22630756/6064933 What is the default target for Make? # When we simply type make, it can build some target. By default, if we do not specify the target to build, make will pick the first target that does not start with . in its name. So we may use a default target (the name does not really matter) as the first target, to do the default action if the user does not specify one.\nRef:\nhttps://stackoverflow.com/q/2057689/6064933 Usage question # Difference between @echo and echo # By default, make will print a command before executing it. Adding @ before a command will suppress its printing before execution.\nRef:\nhttps://www.gnu.org/software/make/manual/html_node/Echoing.html https://stackoverflow.com/a/29576870/6064933 Difference between := and = for assignment? # Variables defined using := get its value when it is defined. Variables defined using = get its value when it is used. There is a risk that the variable value may change if it depends on the value of other variables.\nRef:\nhttps://www.gnu.org/software/make/manual/html_node/Flavors.html#Flavors https://stackoverflow.com/q/4879592/6064933 https://stackoverflow.com/q/448910/6064933 What is a .PHONY target and why is it needed? # PHONY target is a target that does not produce a file. Typically, a target name is the corresponding file to generate. However, for certain target, we only want to run some command and do not want to generate a target of the same name.\nIf you do not mark the target as phony, make will first check if there is file of the same name that has been updated. If there is a file of the same name that has been updated, make will not build that target, which is not what we want.\nFor example, if you have the following Makefile:\nfoo: @echo \u0026#34;hello, this is target foo\u0026#34; If there is a file named foo in the directory, when you run make foo, you get the following message:\nmake: \u0026#39;foo\u0026#39; is up to date So we mark this target as phony (i.e., we do not want to generate file foo):\n.PHONY: target_name By doing this, we make sure that this target will always be build, ignoring a file with the same name. Another example of phony target is the clean target, where we want to remove the generated executable and object files:\n.PHONY: clean clean: rm *.o main Ref:\nPurpose of .PHONY in Makefile: https://stackoverflow.com/q/2145590/6064933 Special variables used in Makefile # We can use special variable to simplify the writing of Makefile:\n$@: the target name $\u0026lt;: the first dependency $^: all the dependencies main: foo.o bar.o g++ -o main foo.o bar.o In the above example, $@ would be main. $\u0026lt; would be foo.o and $^ would be foo.o bar.o.\nRef:\nhttps://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html#Automatic-Variables Assign command output to a variable # Sometimes, we want to assign the output of some command to a variable. We can use the shell builtin to get the shell command output:\nVIM_PATH := $(shell which vim) Ref:\nhttps://stackoverflow.com/q/2019989/6064933 References # https://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/ (finished) https://web.mit.edu/gnu/doc/html/make_3.html https://makefiletutorial.com/ https://www.cs.swarthmore.edu/~newhall/unixhelp/howto_makefiles.html https://www.ruanyifeng.com/blog/2015/02/make.html https://github.com/edhowland/Exploring_make_and_Makefiles https://github.com/unix-tools/tutorial-makefiles https://github.com/weetmuts/MakeTutorial https://github.com/vampy/Makefile Technically, Make can also be used on Windows, see here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"29 August 2021","externalUrl":null,"permalink":"/2021/08/29/gnu_make_learn_and_faq/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://www.gnu.org/software/make/\" target=\"_blank\"\u003eGNU Make\u003c/a\u003e is a \u003ca href=\"https://en.wikipedia.org/wiki/Build_automation\" target=\"_blank\"\u003ebuild\u003c/a\u003e \u003ca href=\"https://en.wikipedia.org/wiki/List_of_build_automation_software\" target=\"_blank\"\u003eautomation\u003c/a\u003e tool typically used on Linux systems\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\nBelow I will summarize a list of FAQs, which explain how Make works and how to use Make.\u003c/p\u003e","title":"GNU Make FAQ","type":"posts"},{"content":"一件关于思维的小事，值得记录。\n在 Vim 中文群 讨论，发现自己某个回复有问题，想要划掉原来的回答。我记得 telegram 是支持简单 Markdown 语法的，也看到有用户使用过，查了一下，确实是支持的1。不过奇怪的是，我重新编辑了那条回复，想用 ~~ 来生成删掉的文字效果，结果并没有生效：~~ 直接被显示出来，format 失败。我试着在一条新的消息（不是回复别人的消息）里面使用同样的语法，结果生效了。于是我很草率的得出了一个错误的结论：回复别人消息的时候，不能使用 Markdown 的删除文字语法，单独的一条消息里面才能生效。\n后面有人指出，~~ 之所以在回复消息里面没有生效，是因为它前面紧贴非空格字符，如果它前面是空格，那么删除语法可以生效。我试了一下，确实是可以的。刚才单独消息里面删除语法之所以生效，也是它前面没有非空格字符导致，并不是因为我发了一条单独消息。我对事情的原因进行了错误的分析和归因。\n问题的根源是什么？它很重要。为什么这个问题如此重要？越知道根源，我们越「自由」。如果我把删除语法不生效归因为我在回复别人消息，我可能以后再也不会在回复别人消息的时候使用 Markdown 语法，我错误地以为在这种情况下，Markdown 语法无法生效。错误的归因，限制了我能使用的工具/方法，我会因此而受限。\n参考 # https://sendpulse.com/blog/telegram-text-formatting 详情见这里：https://core.telegram.org/api/entities\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 August 2021","externalUrl":null,"permalink":"/2021/08/20/the_root_cause/","section":"Posts","summary":"\u003cp\u003e一件关于思维的小事，值得记录。\u003c/p\u003e","title":"问题根源是什么？","type":"posts"},{"content":"To accelerate the execution of some performance critical code, we can write the code in C++ with the help of pybind11 and export the C++ code as shared library1. Then we can import the shared library as a module and enjoy speed boost.\nInstall pybind11:\npython3 -m pip install pybind11 A simple code using pybind11 # A simple example using pybind11 is shown below:\n// include pybind11 header files so that we can use PYBIND11_MODULE macro #include \u0026lt;pybind11/pybind11.h\u0026gt; namespace py = pybind11; int sum(int start, int end){ // calculate sum from i to j if (start \u0026gt; end) return 0; int sum = 0; for (int i = start; i \u0026lt;= end; i++){ sum += i; } return sum; } PYBIND11_MODULE(demo, m) { m.doc() = \u0026#34;pybind11 demo plugin\u0026#34;; // optional module docstring m.def(\u0026#34;sum\u0026#34;, \u0026amp;sum, \u0026#34;calculate sum from start to end\u0026#34;, py::arg(\u0026#34;start\u0026#34;) = 1, py::arg(\u0026#34;end\u0026#34;) = 1000); } In the above code, we use macro PYBIND11_MODULE to define a module, whose name is demo and represented as m. m.def() is used to register function to this module:\nThe first parameter is the function name you want to use. It does not need to be the same with the C++ function name. Second parameter is the function address (\u0026amp;sum). Third parameter is the function documentation. py:arg() is used to add keyword argument and its default values to the function. Compile the C++ code # On the command line # We can directory compile the code on the command line:\nc++ -O3 -Wall -shared -std=c++11 -fPIC -I$(python3 -m pybind11 --includes) demo.cc -o demo$(pyton3-config --extension-suffix) In the above command, python3 -m pybind11 --includes is used to get the relevant include path for pybind11. On my system, the output is like the following:\n-I/Users/jdhao/tools/miniconda3/include/python3.9 -I/Users/jdhao/tools/miniconda3/lib/python3.9/site-packages/pybind11/include\nThe command python3-config --extension-suffix is used to get the proper suffix for shared library based on current system.\nCompile using Makefile # It would be tedious to type the above command each time to compile the code. We can write a simple Makefile to simplify the work:\nINCLUDE := $(shell python3 -m pybind11 --includes) FLAG := -O3 -Wall -shared -std=c++11 -fPIC SUFFIX := $(shell python3-config --extension-suffix) demo: c++ $(FLAG) $(INCLUDE) demo.cc -o demo$(SUFFIX) Then use make demo to compile.\nImport and run the code # Open a Python interpreter and we can use the module just like other Python modules:\nimport demo print(demo.sum()) # use the default parameter value print(demo.sum(start=1, end=100)) References # Official doc: https://pybind11.readthedocs.io/en/latest/basics.html Of course, there are other ways to run C++ code in Python.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 August 2021","externalUrl":null,"permalink":"/2021/08/17/pybind11_first_impression/","section":"Posts","summary":"\u003cp\u003eTo accelerate the execution of some performance critical code, we can write the\ncode in C++ with the help of \u003ca href=\"https://github.com/pybind/pybind11\" target=\"_blank\"\u003epybind11\u003c/a\u003e and\nexport the C++ code as shared library\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Then we can import the shared\nlibrary as a module and enjoy speed boost.\u003c/p\u003e","title":"Pybind11 hands on","type":"posts"},{"content":"建立博客以来，试用了多款评论系统，不过最终还是用了 disqus，但是 disqus 令人讨厌的是默认添加很多烦人的广告，牛皮癣一样，而且在国内无法加载，必须翻墙才能显示。utterances 是一款基于 github issues 的评论系统，简洁，避免了 disqus 的广告以及加载问题。这篇文章总结如何给 Hugo-even 主题添加 utterances 评论系统。\n我们需要进行以下几步操作：\n建立一个 public GitHub 仓库，这个仓库的 issue 用来存放博客评论：如果自己的博客就是用 GitHub pages 建立的，那么就不需要额外建立仓库了，就用博客的仓库也可以。例如我的博客放在 jdhao/jdhao.github.io这个仓库，就可以用这个仓库存放博客的评论。\n安装 utterances 的 app：install 以后，在 Repository access，选择 Only select repositories，然后选择自己建立的用来存放评论的仓库即可。这时，进入到对应仓库的设置界面，点击 Integrations，会看到 utterances 的 app。\nHugo even 对应的设置：even 主题已经支持了 utterances，先把 even 更新到最新版，然后在博客的 config.toml 配置文件，加入下面的配置：\n# owner 填自己的 github 账号，repo 填用来存放评论的仓库名字 [params.utterances] owner = \u0026#34;jdhao\u0026#34; repo = \u0026#34;jdhao.github.io\u0026#34; 重新 deploy Hugo 博客，等博客更新以后，utterances 评论系统即可生效。\n要在博客文章下面评论，只需要登录自己的 GitHub 账号即可。\nReferences # https://github.com/olOwOlo/hugo-theme-even/pull/156 https://blog.eric7.site/2020/01/05/comment/ ","date":"15 August 2021","externalUrl":null,"permalink":"/2021/08/15/hugo_even_add_utterance/","section":"Posts","summary":"\u003cp\u003e建立博客以来，试用了多款评论系统，不过最终还是用了 disqus，但是 disqus 令人讨厌的是默认添加很多烦人的广告，牛皮癣一样，而且在国内无法加载，必须翻墙才能显示。\u003ca href=\"https://utteranc.es/\" target=\"_blank\"\u003eutterances\u003c/a\u003e 是一款基于 github issues 的评论系统，简洁，避免了 disqus 的广告以及加载问题。这篇文章总结如何给 \u003ca href=\"https://github.com/olOwOlo/hugo-theme-even\" target=\"_blank\"\u003eHugo-even\u003c/a\u003e 主题添加 utterances 评论系统。\u003c/p\u003e","title":"给 Hugo even 主题添加 utterances 评论系统","type":"posts"},{"content":"Some permission related issue on macOS.\nFile lock issue # For some time, when I open kitty terminal on macOS, I always see the following warning message:\nzsh: locking failed for /Users/jdhao/.histfile: operation not permitted: reading anyway\nThis may be because the HOME directory is locked (for me, this is the case). To unlock the directory, open the Finder and click the $HOME directory, press Command + i to get the file info. Under the General section, make sure that the Locked button is unchecked.\nTo change the file lock state on the command line, use chflag:\nchflag -R nouchg /path/to/directory After restarting the terminal emulator, the issue should be gone.\nOperation permission issue # Another issue I often get is that when I use ls or rm on some files, I often get a message like the following:\nls ~/Library/Messages ls: Messages: Operation not permitted\nThis is due to the disk access issue. Open macOS Security \u0026amp; Privacy settings and go to Privacy tab. Give your terminal emulator Full Disk Access.\nRestart your terminal and the issue will be fixed.\nReferences # https://superuser.com/questions/279235/why-does-chown-report-operation-not-permitted-on-os-x File lock issue: https://www.macworld.com/article/231333/macos-file-settings-the-difference-between-locked-and-sharing-permissions.html Change lock state on command line: https://superuser.com/q/40749/736190 https://www.jeffgeerling.com/tutorial/2008-12-02/dealing-locked-files-mac Operation not permitted: https://osxdaily.com/2018/10/09/fix-operation-not-permitted-terminal-error-macos/ ","date":"15 August 2021","externalUrl":null,"permalink":"/2021/08/15/mac_operation_not_permitted/","section":"Posts","summary":"\u003cp\u003eSome permission related issue on macOS.\u003c/p\u003e","title":"macOS Operation Not Permitted?","type":"posts"},{"content":" Update log 2022-08-13: update nvim lsp config for lua-language-server. In this post, I will share how to set up sumneko lua for nvim-lspconfig.\nInstall sumneko lua # Install using package manager # From macOS, we can install lua-language-server directly using HomeBrew:\nbrew install lua-language-server Install using releases # Now lua-language-server provides binary release for Windows, macOS and Linux, download it from its release page.\nInstall from source # We can also build it from source. First, we need to install its dependency packages.\nninja # On Linux, install ninja from its binary release:\nwget https://hub.fastgit.xyz/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip mkdir -p $HOME/local/bin unzip ninja-linux.zip -d $HOME/local/bin On macOS, install ninja via homebrew:\nbrew install ninja C++ compiler # We need to install a cpp compile that support c++ 17, gcc-7.3 is fine. Clang 12.0 is also fine.\nbuild # Build lua-language-server:\nmkdir -p $HOME/tools/ \u0026amp;\u0026amp; cd $HOME/tools git clone --depth=1 https://hub.fastgit.xyz/sumneko/lua-language-server cd lua-language-server # if the cloning speed is too slow, edit .gitmodules and replace github.com # with hub.fastgit.org, which should be faster than github. git submodule update --init --recursive # build on Linux cd 3rd/luamake compile/install.sh cd ../.. ./3rd/luamake/luamake rebuild After that, we should add the path to lua-language-server to PATH:\n# For macOS export PATH=\u0026#34;$HOME/tools/lua-language-server/bin/macOS:$PATH\u0026#34; # For Linux export PATH=\u0026#34;$HOME/tools/lua-language-server/bin/Linux:$PATH\u0026#34; Config for nvim-lspconfig # Following the instructions on the nvim-lspconfig repo, it is pretty straight forward to config sumneko-lua for Nvim. Here is a working config for me:\nlocal runtime_path = vim.split(package.path, \u0026#34;;\u0026#34;) table.insert(runtime_path, \u0026#34;lua/?.lua\u0026#34;) table.insert(runtime_path, \u0026#34;lua/?/init.lua\u0026#34;) lspconfig.sumneko_lua.setup({ on_attach = custom_attach, settings = { Lua = { runtime = { -- Tell the language server which version of Lua you\u0026#39;re using (most likely LuaJIT in the case of Neovim) version = \u0026#34;LuaJIT\u0026#34;, -- Setup your lua path path = runtime_path, }, diagnostics = { -- Get the language server to recognize the `vim` global globals = { \u0026#34;vim\u0026#34; }, }, workspace = { -- Make the server aware of Neovim runtime files library = api.nvim_get_runtime_file(\u0026#34;\u0026#34;, true), }, -- Do not send telemetry data containing a randomized but unique identifier telemetry = { enable = false, }, }, }, }) For the complete config for lsp, check my config here.\nReferences # https://github.com/sumneko/lua-language-server/wiki/Build-and-Run-(Standalone) ","date":"12 August 2021","externalUrl":null,"permalink":"/2021/08/12/nvim_sumneko_lua_conf/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202020047792.jpg\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-08-13: update nvim lsp config for lua-language-server.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I will share how to set up \u003ca href=\"https://github.com/sumneko/lua-language-server\" target=\"_blank\"\u003esumneko lua\u003c/a\u003e for \u003ca href=\"https://github.com/neovim/nvim-lspconfig\" target=\"_blank\"\u003envim-lspconfig\u003c/a\u003e.\u003c/p\u003e","title":"Setting up Sumneko Lua Language Server for Nvim-lsp","type":"posts"},{"content":"update:\nOn 2021-11-28, we expericence another GitHub outage which lasts more than two hours, see here. On 2021-08-10 23:30 CST, I observed that I cannot push to my GitHub repo even with --force. After checking the GitHub status site, it seems that the GitHub API is down1.\nIt is not the first time that GitHub is down. There has been several failure reports last year (2020), due to MySQL and other issues.\nAt this moment, I have realized how much I and other developers around world are relying on this free service.\nReferences # The official site for GitHub status: https://www.githubstatus.com/ Has GitHub been down more since its acquisition by Microsoft?: https://news.ycombinator.com/item?id=23676199 https://statusgator.com/blog/2020/06/04/has-github-been-down-more-since-its-acquisition-by-microsoft/ Post-mortems: https://github.com/danluu/post-mortems On 2021-08-10 23:57 CST, GitHub is back to its normal state. Git-push works fine now.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 August 2021","externalUrl":null,"permalink":"/2021/08/11/is_github_down/","section":"Posts","summary":"update:\nOn 2021-11-28, we expericence another GitHub outage which lasts more than two hours, see here. On 2021-08-10 23:30 CST, I observed that I cannot push to my GitHub repo even with --force. After checking the GitHub status site, it seems that the GitHub API is down1.\nIt is not the first time that GitHub is down. There has been several failure reports last year (2020), due to MySQL and other issues.","title":"Is GitHub Down Today?","type":"posts"},{"content":" 点击查看更新记录 2022-03-07：增加 shotrr 2022-02-10: 增加 wezterm 介绍 记录我在 macOS 下常用到的工具。\n按键显示(keystroke displaying) # 平时录一些 Neovim 或者其他工具/软件操作视频，把按键记录下来会更方便读者理解你干了点啥。可以使用开源的 KeyCastr。\n注意：安装以后，要想正常使用，需要进行一些设置，打开「Security \u0026amp; Privacy」，进入 Privacy 部分，需要在 「Accessibility」和 「Input Monitoring」把 KeyCastr 加上，否则该 App 无法正常使用。\n键盘按键映射 # 功能强大的按键映射工具，当然是 Karabiner Elements。\n截图 # 开源的可以使用非常有名的 Snipaste。另外 iShot 以及 xnip 也不错，这俩是收费的，不过也有免费使用功能。\nshottr 是另外一款截图工具，免费。\n录制视频/GIF # 经常用 LICEcap，体积小巧，用起来方便。kap 也是一款类似的开源工具（安装包真大！bloat ware）。\n图床上传 # 一直在用 PicGo，开源免费，简单好用，支持主流云服务，GitHub，Gitee 等。其他好用的似乎都要付费使用。\n鼠标平滑滚动 # mac 上鼠标滚动方向和 Windows 不同，用起来有点难受，我们可以用 mos 帮助我们实现更平滑的鼠标滚动和反向滚动（这样 mac 鼠标和 Windows 操作就统一了）。\n终端模拟器 # 一直在使用 kitty，简洁而强大，支持多 tab。相比之下，感觉 iterm2 略显笨重。Alacritty 不支持多 tab 就更不考虑了。\n在 kitty 里面，打开 Neovim，输入汉字的时候，显示会有一些问题，最近换到了 wezterm，功能没有 kitty 全面，不过对汉字输入支持似乎更好一些，就先用它了。我的 wezterm 配置参见 这里 。\nAPP 删除清理 # 在用 appcleaner，功能简单好用。\n图片查看 # 目前在用 XnViewMP。\n图片压缩 # 压缩图片，往图床上传时节省空间，在用 ImageOptim。\nTinyPNG4Mac is also an interesting project.\n视频播放 # 使用 IINA，基于 mpv 开发。\n视频字幕制作 # ArcTime 是一款不错的工具，曾用它制作过 Bram 在 vimconf 2018 上的演讲字幕。\n窗口管理（window manager） # 有时候需要让两个窗口并排显示，便于参照和对比，手工排放窗口位置调整大小比较痛苦，就需要用到窗口管理工具，目前在用 rectangle，也是看到别人推荐才用的，效果还不错，满足我的简单需求。\n参考 # awesome mac: https://github.com/jaywcjlove/awesome-mac https://blog.skk.moe/post/mac-software/ ","date":"9 August 2021","externalUrl":null,"permalink":"/2021/08/09/macos_work_tools/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003e点击查看更新记录\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e2022-03-07：增加 shotrr\u003c/li\u003e\n\u003cli\u003e2022-02-10: 增加 wezterm 介绍\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003e记录我在 macOS 下常用到的工具。\u003c/p\u003e","title":"macOS 上常用工具","type":"posts"},{"content":"After updating my Windows system to the latest version, I can finally use the new Windows Terminal.\nHow to install? # Directly install from GitHub binary release, link here.\nUse git-bash in Windows Terminal # Install git for Windows. During installation, there is an option to create a profile for Windows terminal. Remember to tick it on.\nGo check windows terminal settings, and choose Git Bash as the default profile.\nRemove annoying flash # When I use Git-bash and press backspace, the whole screen flashes which is really annoying. Based on discussion here, we can add following conf to ~/.inputrc:\nset bell-style none Mouse does not work? # Update: 2022-08-26\nI have noticed that when I ssh to remote server under git-bash in Windows Terminal, the mouse does not work. In the remote server, if I open a nvim instance, I can not use mouse to scroll even if I have enabled mouse support (set mouse=a). However, if I use PowerShell, everything works fine, not sure if related to this issue.\nKey binding issues # How to Ctrl-c and Ctrl-v for copy and paste # Disable Ctrl-c and Ctrl-v for copy and paste\nBy default, Windows Terminal use these two key bindings for copy and paste text, which is annoying for Vim users, as they have different use cases in Vim.\nTo disable the default bindings for these two, press Ctrl + , to open the settings, and then click Open JSON file to open its config. In the action part, just use different key bindings for paste and copy or just delete the two settings:\n{\u0026#34;command\u0026#34;: { \u0026#34;action\u0026#34;: \u0026#34;copy\u0026#34;, \u0026#34;singleLine\u0026#34;: false }, \u0026#34;keys\u0026#34;: \u0026#34;ctrl+c\u0026#34; }, { \u0026#34;command\u0026#34;: \u0026#34;paste\u0026#34;, \u0026#34;keys\u0026#34;: \u0026#34;ctrl+v\u0026#34; } Disable F11 for toggle full screen mode # By default, F11 is used by windows terminal to toggle full screen mode. To disable it, add the following to your action setting in the config JSON file:\n{ \u0026#34;command\u0026#34;: null, \u0026#34;keys\u0026#34;: \u0026#34;f11\u0026#34; } Ref:\nHow can I remove a default key binding in Windows Terminal: https://superuser.com/q/1558490/736190 Unable to load a font? # I have set up JetBrainsMono NF as my default font. However, when I open Windows Terminal for the first time, it warns:\nUnable to find the selected font \u0026ldquo;JetBrainsMono NF\u0026rdquo;\nSimilar issue has been reported here. The solution is to re-install the font and install it for every user instead of the current user.\nAdd a new colorscheme # This site contains a lot of custom colorschemes for windows Terminal. Press Get Theme to copy the theme configuration.\nThen open Terminal config, and paste the theme config to the schemes section and restart Terminal.\nThere are also some themes here.\n","date":"6 August 2021","externalUrl":null,"permalink":"/2021/08/06/microsoft_windows_terminal_conf/","section":"Posts","summary":"\u003cp\u003eAfter updating my Windows system to the latest version, I can finally use the new \u003ca href=\"https://github.com/microsoft/terminal\" target=\"_blank\"\u003eWindows Terminal\u003c/a\u003e.\u003c/p\u003e","title":"Configure Windows Terminal in 2021","type":"posts"},{"content":"Google introduced the content ID system in 2007 to cope with the unauthorized use of copyrighted music and video content. The content ID system has successfully helped the copyright owners to find the pirated content and paid billions of dollars to the copyright owners1.\nHow content ID works # The copyright owners can submit the audio and video content they want to protect to YouTube. When a user uploads new content to YouTube, the new content will be compared to the files in the database to check their similarity.\nHow do we compare the similarity between audio or video files? We need audio and video fingerprinting technology. Generally speaking, we can extract fingerprints (i.e., features or vectors) from the audio and video files and store them in the database. When a new content arrives, we extract its fingerprints and compare it with the fingerprints in the database. Then we can calculate the similarity between the new content and the content in the database. If the similarity is above a threshold, we can assume that the uploaded content is a pirated content.\nThere is little resource online talking about which methods Google use for fingerprinting audio and videos.\nAudio fingerprinting # The YouTube audio fingerprinting technology is quite advanced. As pointed out by videos here and here, it can spots audio piracy even if you distort the music significantly (by adding noise or change speed etc.).\nThis paper from Google research shows a method for audio fingerprinting. It may be used by content ID. However, this paper is quite old. YouTube may have improved its algorithms over the years.\nVideo fingerprinting # For video fingerprinting, we would guess that YouTube extract frames from videos and use deep-neural nets to extract features from video frames. Those features are the so-called fingerprints for the video. The similarity between videos can be compared frame by frame and aggregated in some way, for example, by calculating how many similar frames two videos share in common.\nThis above guess is partially verified by post here. Apart from that, I can not seem to find resource on what methods YouTube actually use for video fingerprinting.\nCounter-attack techs # Since fingerprinting uses machine learning methods for finding pirated content, we can forge adversarial content to fool the content ID system: the pirated content can be altered in a subtle way so that the system can not detect it is a pirated content.\nThere are some research papers on this, for example, see here and here.\nReferences # https://www.blog.google/outreach-initiatives/public-policy/protecting-what-we-love-about-internet-our-efforts-stop-online-piracy/ https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=78358 YouTube content identification technology?: https://stackoverflow.com/q/649116/6064933 Manipulating the YouTube Algorithm: https://www.youtube.com/watch?v=1PGm8LslEb4 Source here: https://www.tubefilter.com/2018/11/07/youtube-payouts-content-id/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 August 2021","externalUrl":null,"permalink":"/2021/08/02/the_youtube_content_id_system/","section":"Posts","summary":"\u003cp\u003eGoogle introduced the \u003ca href=\"https://support.google.com/youtube/answer/2797370?hl=en\" target=\"_blank\"\u003econtent ID system\u003c/a\u003e in 2007 to cope with the\nunauthorized use of copyrighted music and video content. The content ID system\nhas successfully helped the copyright owners to find the pirated content and\npaid billions of dollars to the copyright owners\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"How Does The YouTube Content ID System Work?","type":"posts"},{"content":"","date":"2 August 2021","externalUrl":null,"permalink":"/tags/youtube/","section":"Tags","summary":"","title":"YouTube","type":"tags"},{"content":"","date":"24 July 2021","externalUrl":null,"permalink":"/tags/retrieval/","section":"Tags","summary":"","title":"Retrieval","type":"tags"},{"content":"基于内容的视频检索（或视频指纹），是指根据视频内容，从数据库中找到和当前视频在画面上重复高的视频。\n主要应用场景：\n版权保护相关：用于保护原创视频内容，及时发现自己的视频是否被第三方盗用，淘宝1，YouTube2，抖音3等都有相关的功能 视频去重：多用于推荐或者信息流场景，去掉重复的视频；云存储提供商，通过视频去重，也能节省存储资源（例如不同用户上传了同一段视频，如果 A 是 B 的一部分，可以不用存储 A） 广告效果追踪：广告类的视频，发布者希望传播的越广越好，通过视频指纹，广告原创者可以追踪视频已经到达了哪些受众，进行效果传播分析 视频溯源：通过找到相似视频，找出视频在互联网上流转的路径有哪，找到视频发布者或者视频源头 互动媒体：通过视频指纹，电视能够检测当前播放的视频，根据编程，提供个性化服务 打击犯罪：用于追踪一些违法内容的传播，例如恐怖主义内容，儿童色情视频等。 参考 # https://en.wikipedia.org/wiki/Digital_video_fingerprinting 谷歌在 content ID 上投入超 1 亿美元：https://www.blog.google/outreach-initiatives/public-policy/protecting-what-we-love-about-internet-our-efforts-stop-online-piracy/ YouTube content ID intro: https://support.google.com/youtube/answer/2797370?hl=en content ID turns three: https://blog.youtube/news-and-events/content-id-turns-three 字节跳动“灵识系统”：https://smart.huanqiu.com/article/9CaKrnKfmL2 字节跳动，以算法推动的媒体进阶之路: https://www.jingpt.com/article/41663b6b-3dbb-4efe-bfd0-86a5c947b5c8 视频也能提取“指纹” 人工智能破解行业盗版难题 （五分钟视频 10 s 内完成特征提取） aliyun 视频检索 https://ai.aliyun.com/vi/dna https://www.aliyun.com/activity/intelligent/media-ai-portal?spm=5176.cnmultimediaai.0.0.592e2a51KFBlJf#/videoFingerprinting 百度云视频检索：https://cloud.baidu.com/product/aimms.html 数十万商品短视频排队盖戳 阿里推“视频指纹”技术保护商家\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nYouTube 版权保护系统名为 content ID，具体参考 这里 和 这里.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n短视频版权是非多，技术出手来护卫\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 July 2021","externalUrl":null,"permalink":"/2021/07/24/application_of_duplicate_video_retrieval/","section":"Posts","summary":"\u003cp\u003e基于内容的视频检索（或视频指纹），是指根据视频内容，从数据库中找到和当前视频在画面上重复高的视频。\u003c/p\u003e","title":"基于内容的视频检索/视频指纹的应用","type":"posts"},{"content":"","date":"24 July 2021","externalUrl":null,"permalink":"/tags/search/","section":"Tags","summary":"","title":"Search","type":"tags"},{"content":"无论是推荐还是检索任务，都离不开向量检索引擎，当向量数量巨大(上千万或者上亿规模)的时候，使用精确搜索(exhaustive search)的时间成本对于用户来说无法接受，这时我们必须用到近似最邻近搜索（approximate nearest neighbor, 简称 ANN)。本文总结了一些常见的实现了 ANN 搜索的向量搜索引擎/工具。\n关于主流向量搜索引擎/库的评测，可以参考 ANN benchmark。\n向量搜索库和引擎的区别？ # 简单理解，向量搜索库更轻量化，可能不支持分布式，仅仅是作为 Library 存在，向量搜索引擎实现了一整套特征存储，更新，删除，分布式等特性，而且向量搜索引擎底层可能会用到这些向量搜索库，譬如 vearch 会用到 FAISS，Milvus 也会用到 FAISS, nmslib 等。\n向量搜索库 # FLANN # FLANN 是 SIFT 发明者 Lowe 开发的近似搜索库。\nAnnoy # Annoy 是 spotify 开源的一款近似搜索工具，不支持分布式搜索。\nFaiss # Faiss 是 Facebook AI Research 开源的一款向量搜索库1，实现了多种向量索引算法。不过 Faiss 不支持分布式搜索，如果向量数据量很大，Faiss 就不合适了。\nFaiss 原始论文「Billion-scale similarity search with GPUs」见 这里。\nScaNN # ScaNN 是谷歌在 2020 年发布的一款向量检索工具2，基于谷歌在 ICML 2020 上发表的一篇文章 Accelerating Large-Scale Inference with Anisotropic Vector Quantization。\n快手推荐中台在使用 ScaNN 作为 ANN 搜索工具3。\nNMSLIB # nmslib 是一款近似搜索工具，实现了一些近似搜索算法，如 HNSW。\nhora # Hora 是一款用 Rust 实现的 ANN 搜索库，实现了多种 index 和多种距离度量。\n向量搜索引擎 # Vearch # Vearch 是京东开源的向量搜索框架，基于 Faiss 开发，我们目前用的向量搜索引擎就是 vearch，支持分布式搜索。\n优点：Vearch 支持的距离有两种，L2 距离和内积（如果是归一化的向量，可以认为是余弦相似度），也支持根据标量字段进行过滤，总的来说功能还是可以的。\n缺点：感觉 vearch 不是很稳定，文档写的也很烂（非常简略），另外 vearch 虽然在维护中，开发不是很活跃。\nMilvus # Milvus 是近两年新开源的一款全新的向量搜索引擎，开发很活跃，感觉未来很有希望。目前 Milvus 2.0 还在 rc 阶段，支持了标量字段过滤功能，功能还不完善，例如现在还不支持删除特征操作，总体功能不如 vearch 丰富。\nMilvus 搜索策略，不在 index 的向量 brute force，在 index 的向量是近似搜索，最后两者融合，参考这里讨论。\nMilvus 系统设计论文，被 ACM SIGMOD 21 接收，见这里.\nSPTAG # SPTAG (Space Partion Tree And Graph) 是微软发布的一款分布式向量搜索工具，知名度不是很高，没怎么听说有哪个公司在用？\nVald # Vald 是 Go 语言实现的分布式向量检索系统，主要由日本开发人员开发，雅虎日本在使用，其他地方未看到使用案例。\nProxima # Proxima 是阿里巴巴开发的向量搜索引擎，介绍可以参考这篇文章，不过它没有开源，从介绍文章上来看很牛逼，性能超过 FAISS，具体如何不太清楚。\n参考资料 # https://github.com/currentsapi/awesome-vector-search Milvus 在 hacker news 上帖子：https://news.ycombinator.com/item?id=22012300 Proxima 深度揭秘达摩院向量检索引擎Proxima：https://www.sohu.com/a/454661346_612370 大数据搜索技术下一站：浅谈向量检索的现状、挑战和未来：https://www.infoq.cn/article/j3vvye0uhlfdpnc8uyrs https://www.slidestalk.com/u45737/7Proxima72523 https://engineering.fb.com/2017/03/29/data-infrastructure/faiss-a-library-for-efficient-similarity-search/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://ai.googleblog.com/2020/07/announcing-scann-efficient-vector.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n消息来源：https://www.pojan.cn/kuaishou/6118.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 July 2021","externalUrl":null,"permalink":"/2021/07/24/vector_search_tools/","section":"Posts","summary":"\u003cp\u003e无论是推荐还是检索任务，都离不开向量检索引擎，当向量数量巨大(上千万或者上亿规模)的时候，使用精确搜索(exhaustive search)的时间成本对于用户来说无法接受，这时我们必须用到近似最邻近搜索（approximate nearest neighbor, 简称 ANN)。本文总结了一些常见的实现了 ANN 搜索的向量搜索引擎/工具。\u003c/p\u003e","title":"向量搜索引擎/工具","type":"posts"},{"content":" I saw on YouTube a video made by TJ DeVries on how to contribute to the neovim project. There is a scene where he commit via git commit, and whoa, a Neovim instance appeared with three split, with top left the commit message area, top right the git-status area, and on the right the git-diff info, which is really cool.\nA little background, the default git commit only shows status info without the diff info. For commit related to changes in several files, it is difficult to remember all the diffs and summarize them in the commit message.\nI searched a bit and figured out how to do it in Neovim.\nNative git options # First, make sure that commit message editor is set to Vim or Neovim:\ngit config --global core.editor nvim We can add --verbose/-v option when commiting to show the diff info:\ngit commit -v Better, to set it permanently (for Git version above 2.9.0):\ngit config --global commit.verbose true With the above config, the diff info will be shown below the status info. For short diffs, it is acceptable, while for longer diffs, it is still not easy to check.\nUsing a plugin # committia.vim is a plugin that re-arrange the commit window for easier writing of commit messages. When you run git commit, it will automatically show a three-split window like what is shown in the title image.\nReferences # git commit -v by default: https://stackoverflow.com/q/5875275/6064933 How do I make commit diff appear in commit message while I\u0026rsquo;m editing it (with Vim)?: https://stackoverflow.com/a/26457364/6064933 https://gist.github.com/aroben/d54d002269d9c39f0d5c89d910f7307e https://vimways.org/2018/vim-and-git/ ","date":"24 July 2021","externalUrl":null,"permalink":"/2021/07/24/git_show_diff_when_commiting/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20210724122638.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eI saw on YouTube \u003ca href=\"https://www.youtube.com/watch?v=xv9cp7NyK5Y\" target=\"_blank\"\u003ea video\u003c/a\u003e made by\n\u003ca href=\"https://github.com/tjdevries\" target=\"_blank\"\u003eTJ DeVries\u003c/a\u003e on how to contribute to the \u003ca href=\"https://neovim.io/\" target=\"_blank\"\u003eneovim\nproject\u003c/a\u003e. There is a scene where he commit via \u003ccode\u003egit commit\u003c/code\u003e,\nand whoa, a Neovim instance appeared with three split, with top left the commit\nmessage area, top right the git-status area, and on the right the git-diff info,\nwhich is really cool.\u003c/p\u003e","title":"Show Git Diff When Doing Git Commit","type":"posts"},{"content":"We have a Python web service where we store some key-val pairs in redis. Occasionally, I want to delete some of the keys matching a certain pattern. Current, we are using redis-py-cluster for redis-related operations.\nWe can use scan_iter() method to search such keys and delete them. The first parameter to scan_iter() is the matching pattern. The code looks roughly like this:\nfor k in redis_client.scan_iter(\u0026#34;prefix:*\u0026#34;): redis_client.delete(k) The above code kinda works, but it is awfully slow. We can add the count option to accelerate deletion. Option count specify how many keys per scan will return. According to here, the default count is 10, which is rather small.\nbatch_size = 500 keys = [] for k in redis_client.scan_iter(\u0026#34;prefix:*\u0026#34;, count=batch_size): keys.append(k) if len(keys) \u0026gt;= batch_size: redis_client.delete(*keys) keys = [] if len(keys) \u0026gt; 0: redis_client.delete(*keys) Using a large count will speed up the deletion process significantly. I have benchmarked on about 20000 keys. Here is what I have found:\nbatch size Time taken (seconds) 100 929 500 260 1000 175 2000 133 4000 107 5000 106 10000 93 Refs # https://gist.github.com/dingmaotu/b465509f5c5d54dceacf5a2eb985c739 ","date":"20 July 2021","externalUrl":null,"permalink":"/2021/07/20/py_redis_cluster_delete_key_with_pattern/","section":"Posts","summary":"\u003cp\u003eWe have a Python web service where we store some \u003ccode\u003ekey-val\u003c/code\u003e pairs in redis.\nOccasionally, I want to delete some of the keys matching a certain pattern.\nCurrent, we are using \u003ca href=\"https://github.com/Grokzen/redis-py-cluster\" target=\"_blank\"\u003eredis-py-cluster\u003c/a\u003e for redis-related operations.\u003c/p\u003e","title":"Delete Keys Matching A Pattern with py-redis-cluster","type":"posts"},{"content":"","date":"20 July 2021","externalUrl":null,"permalink":"/tags/redis/","section":"Tags","summary":"","title":"Redis","type":"tags"},{"content":" Update log 2022-03-27: fix a typo in requiring lua modules 2022-02-08: change fastgit URL 2022-02-05: add new autocmd for auto-running command PackerCompile. Over the past two years, I have been using vim-plug as my plugin manager for Nvim. Vim-plug is powerful, fast and amazing, especially considering that all its features are contained in a single vim script. It uses the old way to manage plugins, i.e., it will manage the loading of plugins directly.\nPackages in Vim # In Vim/Nvim, we also have another way to manage plugins, that is, by using packages. It is a new way of organizing plugins. We can split plugins into two types, opt plugins and start plugins. If we put plugins in opt directory under a package, the plugins will not be loaded during initialization. If we want to use plugin foo later, we use :packadd foo to load it. For plugins under start directory, they will be loaded1 automatically after initialization.\nFor opt plugin foo, Vim will look for pack/xxx/opt/foo under paths in the option packpath. For start plugins, Vim will look for them under pack/xxx/start/ directory under paths in packpath.\nNow enter packer.nvim! # Actually, there are several plugin managers that use the package feature, for example, minpac and vim-packager, both of which are written in pure vim script.\nWith the release of the long overdue Nvim 0.5.0 and increasing importance of Lua in configuring and developing Nvim. I would like to try a plugin manager written in Lua, which also supports packages. After some survey, I decide to give packer.nvim a try, which is by far the most powerful and feature-rich2.\nI use the following script to install packer.nvim in my computer:\nvim.g.package_home = fn.stdpath(\u0026#34;data\u0026#34;) .. \u0026#34;/site/pack/packer/\u0026#34; local packer_install_dir = vim.g.package_home .. \u0026#34;/opt/packer.nvim\u0026#34; local plug_url_format = \u0026#34;\u0026#34; if vim.g.is_linux then plug_url_format = \u0026#34;https://hub.fastgit.xyz/%s\u0026#34; else plug_url_format = \u0026#34;https://github.com/%s\u0026#34; end local packer_repo = string.format(plug_url_format, \u0026#34;wbthomason/packer.nvim\u0026#34;) local install_cmd = string.format(\u0026#34;10split |term git clone --depth=1 %s %s\u0026#34;, packer_repo, packer_install_dir) -- Auto-install packer in case it hasn\u0026#39;t been installed. if fn.glob(packer_install_dir) == \u0026#34;\u0026#34; then vim.api.nvim_echo({ { \u0026#34;Installing packer.nvim\u0026#34;, \u0026#34;Type\u0026#34; } }, true, {}) vim.cmd(install_cmd) end -- Load packer.nvim vim.cmd(\u0026#34;packadd packer.nvim\u0026#34;) -- the plugin install follows from here -- .... I put it under ~/.config/nvim/lua/plugins.lua and in my init.vim, I can require it like this: lua require('plugins'). With the above script, packer will be automatically installed if it hasn\u0026rsquo;t.\nSome issues I met during transition # Issues for lazy-loaded plugins # Packer\u0026rsquo;s lazy loading of plugins based on conditions is really cool, but is also error-prone for newbies. All lazy-loaded plugins are put under opt directory. They are only added to runtimepath by packer when the specified conditions are met. This is the root cause of many issues related to missing function or modules, etc.\nFor example, if we use nvim-compe and lazy-load it, but we require its config during Nvim initialization, we will see errors during nvim startup:\nmodule \u0026lsquo;compe\u0026rsquo; not found.\nOne way to fix this is to use config key after the plugin has been loaded. See for example here.\nuse { \u0026#39;hrsh7th/nvim-compe\u0026#39;, event = \u0026#39;InsertEnter *\u0026#39;, config = [[require(\u0026#39;config.compe\u0026#39;)]] } The code for config is executed once when the plugin is loaded by packer.\nForget to run PackerCompile after changing plugin settings # After changing plugin configuration, we must run :PackerCompile. It will generate a file named packer_compiled.vim or packer_compile.lua under the directory ~/.config/nvim/plugin by default.\nWhen something went wrong, always check if you have run :PackerCompile and restarted nvim. 90% of the time, the issue will go.\nTo fix the issue once and for all, I created the following autocmd:\naugroup packer_auto_compile autocmd! autocmd BufWritePost */nvim/lua/plugins.lua source \u0026lt;afile\u0026gt; | PackerCompile augroup END After plugin configuration is changed, command PackerCompile will run automatically.\nNo way to retry plugins that failed during installation # Unlike vim-plug, when plugin installation fails, there is no re-try mechanism. We have to manually run :PackerInstall to re-install the failed plugins.\nPlugin loading order # When we want to load plugin A after B and they are both lazy-loaded, there is no need to use event for plugin A, using after condition is enough:\nuse {\u0026#39;foo/bar\u0026#39;, event = \u0026#39;VimEnter\u0026#39;} use {\u0026#39;foo/baz\u0026#39;, after = \u0026#39;bar\u0026#39;} Due to the firing of autocmd event, if we use event for both foo/bar and foo/baz, foo/baz may not be loaded after foo/bar. See also this issue.\nIssues related to lazy-loaded remote plugins # For nvim remote plugins, we need to run command :UpdateRemotePlugins to make them work properly. By running this command, a manifest file called rplugin.vim will be generated under ~/.local/share/nvim/, which records what kinds of commands a plugin provides (also see :h remote-plugin).\nFor example, for remote plugin semshi, my initial setup is:\nuse {\u0026#39;numirias/semshi\u0026#39;, run = \u0026#39;:UpdateRemotePlugins\u0026#39;, ft = \u0026#39;python\u0026#39;} It does not work well. When we run :PackerUpdate (it will run : UpdateRemotePlugins every time we update plugins), semshi may not be in runtimepath. So semshi-related command will be missing in rplugin.vim. Afterwards, when we open a Python file, we see errors that command Semshi enable is not available.\nThe correct way is to run :UpdateRemotePlugins after semshi is loaded:\nuse {\u0026#39;numirias/semshi\u0026#39;, ft = \u0026#39;python\u0026#39;, config = \u0026#39;vim.cmd [[UpdateRemotePlugins]]\u0026#39;} This way, we insure that semshi will work properly.\nSpecify the plugin url format # By default, when we use use 'aaa/bbb', packer will try to clone https://github.com/aaa/bbb.git. However, due to issue accessing github in certain areas, the user may want to use a mirror site of GitHub, for example, fastgit. Fortunately, this feature has been added recently, under the request of me 😃.\nNow, you can do the following:\nrequire(\u0026#39;packer\u0026#39;).startup( { function(use) use \u0026#39;aaa/bbb\u0026#39; use \u0026#39;foo/bar\u0026#39; end, config = { max_jobs = 16, git = { default_url_format = \u0026#39;https://hub.fastgit.xyz/%s\u0026#39; } } }) All your plugins will be cloned from fastgit instead of GitHub.\nConclusion # Although there are small issues when switching from vim-plug to packer, it is mainly because I am new to its lazy-loading feature. Overall, packer.nvim is a great choice if you want to manage plugins in lua. Considering that packer is a young plugin and the active development happening in its repo, I am sure that it will be maturer in short time.\nBTW, my packer.nvim config can be found here.\nReferences # https://github.com/wbthomason/dotfiles/blob/linux/neovim/.config/nvim/lua/plugins.lua Plugin not found issue: https://github.com/lervag/vimtex/issues/1785 Plugin functions not available in init.vim: https://github.com/wbthomason/packer.nvim/issues/4 Here, loaded means the plugin directory will be added the runtimepath.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf you want to minimal plugin manager in lua, try paq.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 July 2021","externalUrl":null,"permalink":"/2021/07/11/from_vim_plug_to_packer/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-03-27: fix a typo in requiring lua modules\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-02-08: change fastgit URL\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-02-05: add new autocmd for auto-running command \u003ccode\u003ePackerCompile\u003c/code\u003e.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eOver the past two years, I have been using \u003ca href=\"https://github.com/junegunn/vim-plug\" target=\"_blank\"\u003evim-plug\u003c/a\u003e as my plugin manager for Nvim.\nVim-plug is powerful, fast and amazing, especially considering that all its features are contained in a single vim script.\nIt uses the old way to manage plugins, i.e., it will manage the loading of plugins directly.\u003c/p\u003e","title":"Migrating from vim-plug to Packer.nvim","type":"posts"},{"content":"快排是一种快速排序算法，原理是从数组中选择一个 pivot，数组中小于等于 pivot 的元素放到左边，大于 pivot 的元素放到右边。然后对左边和右边数组分别递归进行快速排序，最后整个数组就成为排序好的数组。\n非原地算法 # 下面是 quicksort 的一种实现方法，非原地操作，每次会申请额外的空间存放左子数组和右子数组，但是理解上非常简单，没有任何难理解的地方：\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;random\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;ctime\u0026gt; using std::random_device; using std::cout; using std::endl; using std::vector; using std::string; void printList(vector\u0026lt;int\u0026gt;\u0026amp;, const string\u0026amp;); vector\u0026lt;int\u0026gt; quickSort(vector\u0026lt;int\u0026gt; arr){ if (arr.size() \u0026lt;= 1){ return arr; } int N = arr.size(); // arr[mid] 是 pivot int mid = (N-1) / 2; vector\u0026lt;int\u0026gt; left; vector\u0026lt;int\u0026gt; right; for (int i = 0; i \u0026lt; N; i++){ if (i == mid) continue; // 对于原始数组，小于等于 pivot 的元素放左子数组，大于 pivot 的元素放右子数组 if (arr[i] \u0026lt;= arr[mid]){ left.push_back(arr[i]); } else{ right.push_back(arr[i]); } } // 对左右子数组，再分别进行快排 left = quickSort(left); right = quickSort(right); vector\u0026lt;int\u0026gt; new_arr; for (auto \u0026amp; x: left){ new_arr.push_back(x); } new_arr.push_back(arr[mid]); for (auto \u0026amp; x: right){ new_arr.push_back(x); } return new_arr; } // Generate a random sequence of length len, in range(low, high) (inclusive). // need to #include\u0026lt;random\u0026gt; vector\u0026lt;int\u0026gt; genRandom(int low, int high, int len){ std::random_device rd; std::mt19937 gen(rd()); std::uniform_int_distribution\u0026lt;int\u0026gt; distribution(low, high); vector\u0026lt;int\u0026gt; arr(len, 0); for (int i = 0; i != len; ++i){ arr[i] = distribution(gen); } return arr; } void printList(vector\u0026lt;int\u0026gt;\u0026amp; arr, const string\u0026amp; desc){ cout \u0026lt;\u0026lt; desc \u0026lt;\u0026lt; \u0026#34;: \u0026#34;; for (auto it = arr.begin(); it != arr.end(); it++){ cout \u0026lt;\u0026lt; *it \u0026lt;\u0026lt; ((it != arr.end()-1) ? \u0026#39; \u0026#39; : \u0026#39;\\n\u0026#39;); } } int main() { vector\u0026lt;int\u0026gt; arr = genRandom(1, 1000, 10); cout \u0026lt;\u0026lt; \u0026#34;Before quick sort\\n\u0026#34;; printList(arr, \u0026#34;arr\u0026#34;); auto arr1 = quickSort(arr); cout \u0026lt;\u0026lt; \u0026#34;After quick sort\\n\u0026#34;; printList(arr1, \u0026#34;arr1\u0026#34;); return 0; } 快排实现一个坑，如果把数列中间元素作为 pivot，pivot 不能合并到左边的数组里面，否则会造成无限循环，pivot 必须单独拿出来。举个例子，假如数组为 arr = {2, 1}, pivot 是 arr[0],如果把小于等于 pivot 的元素放在左边数组，把大于 pivot 的元素放在右边数组，结果会是左边 {2, 1}, 右边 {}, 然后左右两边数组又调用 quickSort()，quickSort 终止条件是 arr.size() \u0026lt;= 1，左边的数组会继续重复上述的过程，永远循环下去。\n正确的做法是把 pivot 单独拿出来，然后对左边数组进行 quickSort 递归，再对右边数组进行 quickSort 递归，然后把排序好的左数组，pivot，排序好的右数组合并起来。还以上面 case 为例，pivot 是 arr[0]，左边数组 {1}, 右边数组 {}, 左右数组都达到终止条件返回，然后把左数组，pivot，右数组拼起来，排序好的数组就是 {1, 2}。\n原地算法 # 还有一种原地实现的算法，不需要开辟额外的空间，不过没有上面的实现那么直观容易理解。\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;random\u0026gt; using namespace std; // Generate a random sequence of length len, in range(low, high) (inclusive). // need to #include\u0026lt;random\u0026gt; vector\u0026lt;int\u0026gt; genRandom(int low, int high, int len){ std::random_device rd; std::mt19937 gen(rd()); std::uniform_int_distribution\u0026lt;int\u0026gt; distribution(low, high); vector\u0026lt;int\u0026gt; arr(len, 0); for (int i = 0; i != len; ++i){ arr[i] = distribution(gen); } return arr; } int partion(vector\u0026lt;int\u0026gt; \u0026amp;arr, int low, int high) { int pivot = arr[low]; int i = low; for (int j = low+1; j \u0026lt; high; j++){ if (arr[j] \u0026lt;= pivot){ i++; swap(arr[i], arr[j]); } } // 经过上述 for 循环， i 以及 i 左边都是小于等于 pivot 的元素，最后把 arr[i] 和 // pivot 元素位置调换一下即可。即可保证我们完成了 partion swap(arr[i], arr[low]); return i; } void quickSort(vector\u0026lt;int\u0026gt;\u0026amp; arr, int low, int high){ // low \u0026lt; high，才需要排序 if (low \u0026lt; high){ int r = partion(arr, low, high); quickSort(arr, low, r); quickSort(arr, r+1, high); } } int main() { vector\u0026lt;int\u0026gt; arr = genRandom(1, 100, 5); for(auto e: arr) cout\u0026lt;\u0026lt; e \u0026lt;\u0026lt;\u0026#34; \u0026#34;; cout\u0026lt;\u0026lt; endl; int N = arr.size(); quickSort(arr, 0, N); for(auto e: arr) cout\u0026lt;\u0026lt; e \u0026lt;\u0026lt;\u0026#34; \u0026#34;; cout\u0026lt;\u0026lt; endl; return 0; } 上述实现中，最核心的是 partion() 函数，partion 函数选择第一个元素作为 pivot，然后把 pivot 移动到最终它应该在的位置，并保证该位置左边都是小于等于 pivot 的元素，右边都是大于 pivot 的元素，最后返回 pivot 元素在新数组中的位置。pivot 不一定非要选择第一个元素，也可以选择最后一个元素，逻辑对应改动即可。其实 pivot 也可以选择其他元素，不过实现起来感觉比较麻烦，想了很久，也没实现对，总有一些 edge case 没处理正确。\n参考 # https://stackoverflow.com/a/22505710/6064933 ","date":"10 July 2021","externalUrl":null,"permalink":"/2021/07/10/quick_sort_impl/","section":"Posts","summary":"\u003cp\u003e快排是一种快速排序算法，原理是从数组中选择一个 pivot，数组中小于等于 pivot 的元素放到左边，大于 pivot 的元素放到右边。然后对左边和右边数组分别递归进行快速排序，最后整个数组就成为排序好的数组。\u003c/p\u003e","title":"快排(quick sort) C++ 实现","type":"posts"},{"content":"I use Python in my work, and rarely need C++. So I need to compile this C++ cheatsheet for common STL containers/adapters, just in case I need them.\nvector # Define a 1D vector: vector\u0026lt;int\u0026gt; arr = {1, 2, 3}; Define a 2D vector: vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; mat = {{1, 2, 3}, {4, 5}}; Define a 2D vector of size 3x4: vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; mat(3, vector\u0026lt;int\u0026gt;(4, 0)); Add an element: arr.push_back(2); Insert an element: arr.insert(arr.begin(), -1); Insert another vector: vector\u0026lt;int\u0026gt; another = {1, 2, 3}; arr.insert(arr.begin(), another.begin(), another.end()); Check its size: cout \u0026lt;\u0026lt; arr.size(); Check if vector is empty: cout \u0026lt;\u0026lt; arr.empty(); Slice a vector, i.e., get a sub-vector from an existing vector: vector\u0026lt;int\u0026gt; arr(10, 1); vector\u0026lt;int\u0026gt; new_vec(arr.begin(), arr.begin()+3); (this is end-exclusive, so the resulting vector has 3 elements) Sort a vector: In ascending order (the default): std::sort(arr.begin(), arr.end()); In descending order (we need to use custom compare function): std::sort(arr.begin(), arr.end(), std::greater\u0026lt;int\u0026gt;()); Ref:\nBest way to extract a sub-vector from a vector?: https://stackoverflow.com/q/421573/6064933 string # Define a string: string myStr = \u0026quot;hello\u0026quot;; Get string size: myStr.size() Get sub-string: myStr.substr(0, 2) (Get the substring starting at index 0 and with length 2, end-exclusive style) Get sub-string: myStr.substr(1) (Get substring starting at index 1 till the end) Check if string is empty: myStr.empty(); Generate a string with n same character ch: string(n, ch); Reverse a string: use std::reverse, std::reverse(myStr.begin(), myStr.end()). Ref:\nRepeat string n times: https://stackoverflow.com/q/166630/6064933 set (works like a Python set) # set in C++ is typically implemented using balanced binary search tree.\nDefine a set: set\u0026lt;int\u0026gt; x = {1, 2, 3}; Add an element: x.insert(5); Check size: x.size() Check if set is empty: x.empty(); Check if set contains a key: x.find(2) != x.end(); or x.count(2) != 0 Initialize set from a vector of int: vector\u0026lt;int\u0026gt; arr = {1, 2, 1, 3}; set\u0026lt;int\u0026gt; my_set(arr.begin(), arr.end()); There is also unordered_set, which is different from set:\nThe underlying implementation for set is binary search tree (BST), while the underlying implementation for unordered_set is hash table. The element in set is sorted so that their order is guaranteed, while for unordered_set, there is no guarantee for the element order. set requires less memory than unordered_set (unordered_set has to store a hash table). Search time is at most O(log(n)) for set, while for unordered_set, the search time is on average O(1), but may be O(n) in worst case (highly unlikely) map (works like a Python dict) # Typically implemented using balanced binary search tree.\nDefine an empty map: map\u0026lt;int, string\u0026gt; items;\nDefine a constant map: map\u0026lt;int, string\u0026gt; num2str = {{1, \u0026quot;ab\u0026quot;}, {2, \u0026quot;cd\u0026quot;}, {3, \u0026quot;ef\u0026quot;}};\nAdd an element: items.insert({1, \u0026quot;apple\u0026quot;}); or items[1] = \u0026quot;apple\u0026quot;;\nRemove an element: items.erase(\u0026quot;apple\u0026quot;);\nAccess a key (no check): cout \u0026lt;\u0026lt; items[1] \u0026lt;\u0026lt; endl; (we have to make sure the key exists, otherwise it will be inserted silently)\nAccess a key (with check): cout \u0026lt;\u0026lt; items.at(4); (will error out)\nShow map element key and value:\nfor (auto item: items){ cout \u0026lt;\u0026lt; item.first \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; item.second \u0026lt;\u0026lt; endl; } ref:\ndefine constant map: https://stackoverflow.com/a/8688615/6064933 Check if map contains a key: bool has_key = items.find(2) != items.end(); or items.count(2) != 0 There is also unordered_map. The different between map and unordered_map is similar to the difference between set and unordered_set. So I will not elaborate on this.\nNote that when map is defined using the const modifier, you can not access map element with operator [], since it is possible to alter map value when accessing map element like this, check this post for more details.\nqueue # Queue is a data structure that provides FIFO (first in first out) feature. Element that is added first will also be removed first.\nGet queue size: queue\u0026lt;int\u0026gt; q; cout \u0026lt;\u0026lt; q.size() \u0026lt;\u0026lt; endl; Check if queue is empty: use q.empty() or q.size() == 0 Get front element of queue: cout \u0026lt;\u0026lt; q.front() \u0026lt;\u0026lt; endl; Add element to queue: q.push(4); Pop up front element: q.pop(); stack # Stack is the opposite of queue. It provides a LIFO (last in first out) data structure. Element that is added last will be removed first.\nGet stack size: stack\u0026lt;int\u0026gt; s; cout \u0026lt;\u0026lt; s.size() \u0026lt;\u0026lt; endl; Check if stack is empty: s.empty() or s.size() == 0 Get top element from stack: cout \u0026lt;\u0026lt; s.top() \u0026lt;\u0026lt; endl; (note that getting top element when stack is empty leads to errors!) Add element to stack: s.push(1); Pop up element from stack: s.pop(); tuple # Tuple can be used to different types of data.\nCreate a tuple: std::make_tuple(\u0026quot;abc\u0026quot;, 2, 3); Get tuple element: std:get\u0026lt;0\u0026gt;(some_tuple); (get first element, really weird and unintuitive syntax!) pair # Pair can be used to hold two different data types conveniently.\nCreate a pair: pair\u0026lt;int, string\u0026gt; my_pair = std::make_pair(2, \u0026quot;abc\u0026quot;) Get pair element: my_pair.first and my_pair.second Ref:\nGet tuple element: https://stackoverflow.com/q/32606464/6064933 References # Sort vector in descending order: https://stackoverflow.com/q/9025084/6064933 Why would anyone use set instead of unordered_set?: https://stackoverflow.com/q/1349734/6064933 How to choose between map and unordered_map?: https://stackoverflow.com/q/13799593/6064933 Is there any advantage of using map over unordered_map in case of trivial keys?: https://stackoverflow.com/q/2196995/6064933 ","date":"4 July 2021","externalUrl":null,"permalink":"/2021/07/04/cpp_container_cheatsheet/","section":"Posts","summary":"\u003cp\u003eI use Python in my work, and rarely need C++.\nSo I need to compile this C++ cheatsheet for common STL containers/adapters, just in case I need them.\u003c/p\u003e","title":"A CheatSheet of C++ Container/Adapter and Common Structure","type":"posts"},{"content":"In C++, we can build a library either statically or dynamically. In this post, I want to summarize how to build a static and a shared/dynamic library1.\nBuild a static and dynamic library # Suppose we have the following source and header files.\nfoo.h:\n#ifndef _FOO_H #define _FOO_H void foo(); #endif foo.cpp:\n#include \u0026#34;foo.h\u0026#34; #include \u0026lt;iostream\u0026gt; void foo(){ std::cout \u0026lt;\u0026lt; \u0026#34;This is foo\u0026#34; \u0026lt;\u0026lt; std::endl; } main.cpp:\n#include \u0026#34;foo.h\u0026#34; int main() { foo(); return 0; } Here is how to build a dynamic and static library:\ng++ -fPIC -c foo.cpp # build a shared library g++ -shared -fPIC -o libfoo.so foo.o # build a static library ar rvs libfoo.a foo.o # build main.o object file g++ -c main.cpp Use a static and dynamic library # To link the static library and main.o to produce an executable, we use:\ng++ main.o libfoo.a -o main The order of object file and library file matters. The following won\u0026rsquo;t work for static library:\ng++ libfoo.a main.o -o main It will result in the following error:\nmain.o: In function main': main.cpp:(.text+0x5): undefined reference to foo()' collect2: error: ld returned 1 exit status\nIt is because the linker process the files from left to right. If we put static library before the object file, there is no unresolved symbols yet, all symbol in the static lib will be dropped. When the object file is processed, the symbol foo() can be resolved since it is the last object that is processed.\nAccording to here, if you pass --start-group to linker via -Wl,--start-group, the linker will search all libraries for unresolved symbol. So the following works:\ng++ -Wl,--start-group libfoo.a main.o -o main_static If we link the dynamic library with main.o, things are different. The following two commands both work:\ng++ libfoo.so main.o -o main g++ main.o libfoo.so -o main In this case, the order of library and the object file does not matter. According to answer here, if we pass --as-needed option to linker via -Wl,--as-needed, then the library file must follow the object file that depend on it.\ng++ -Wl,--as-needed libfoo.so main.o -o main_shared # will fail with undefined reference error References # Undefined reference error when using static library https://stackoverflow.com/a/23748443/6064933 https://stackoverflow.com/a/2487723/6064933 https://stackoverflow.com/q/1517138/6064933 https://stackoverflow.com/q/23748372/6064933 https://stackoverflow.com/a/4623410/6064933 link order: https://www.linuxtopia.org/online_books/an_introduction_to_gcc/gccintro_18.html https://cgold.readthedocs.io/en/latest/tutorials/libraries/symbols/link-order.html#link-order https://eli.thegreenplace.net/2013/07/09/library-order-in-static-linking For the pros and cons of using static VS dynamic library, see this post.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"4 July 2021","externalUrl":null,"permalink":"/2021/07/04/static_and_dynamic_linking_cpp/","section":"Posts","summary":"\u003cp\u003eIn C++, we can build a library either statically or dynamically. In this post,\nI want to summarize how to build a static and a shared/dynamic library\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Static and Dynamic Linkage in C++","type":"posts"},{"content":"Although std::cout in C++ is powerful, it lacks the ease of use of format string in Python. Fortunately, the 3rd party package fmt provides a similar feature for C++.\nBuild fmt # To use the fmt package, we need to build it:\ngit clone --depth 1 https://github.com/fmtlib/fmt.git cd fmt mkdir build \u0026amp;\u0026amp; cd build cmake -G \u0026#34;Unix Makefiles\u0026#34; -DCMAKE_INSTALL_PREFIX=~/tools/fmt -DCMAKE_BUILD_TYPE=Release .. make -j 8 make install This will build the static version of fmt and install it under $HOME/tools/fmt.\nTo build a dynamic library, use the following cmake command instead:\ncmake -G \u0026#34;Unix Makefiles\u0026#34; -DCMAKE_INSTALL_PREFIX=~/tools/fmt -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=TRUE .. How to use # Here is a short snippet to test it:\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;fmt/ranges.h\u0026gt; #include \u0026lt;fmt/core.h\u0026gt; using std::vector; int main() { vector\u0026lt;int\u0026gt; arr = {1, 2, 3}; fmt::print(\u0026#34;arr is {}\u0026#34;, arr); fmt::print(\u0026#34;The price of {} is {} Yuan/kg\u0026#34;, \u0026#34;apple\u0026#34;, 4.2); return 0; } Use the following comamnd to build against the static version of fmt:\ng++ -L$HOME/tools/fmt/lib64/ -I$HOME/tools/fmt/include/ test.cc -l:libfmt.a -o test_static And the following command to build against the dynamic version of fmt:\ng++ -L$HOME/tools/fmt/lib64/ -I$HOME/tools/fmt/include/ test.cc -lfmt -o test_shared To run the dynamic executable, you need to set up the env variable LD_LIBRARY_PATH properly:\nLD_LIBRARY_PATH=$HOME/tools/fmt/lib64:$LD_LIBRARY_PATH ./test_shared The size differs significantly between the static and dynamic executable files:\n32K test_shared 220K test_static References # Building fmt: https://fmt.dev/latest/usage.html#building Link library statically https://stackoverflow.com/a/20728782/6064933 https://stackoverflow.com/a/3701129/6064933 https://stackoverflow.com/q/3698321/6064933 Use a cpp package: https://stackoverflow.com/a/1656679/6064933 https://stackoverflow.com/a/46905510/6064933 https://stackoverflow.com/a/10358977/6064933 ","date":"4 July 2021","externalUrl":null,"permalink":"/2021/07/04/pretty_fmt_in_cpp/","section":"Posts","summary":"\u003cp\u003eAlthough \u003ccode\u003estd::cout\u003c/code\u003e in C++ is powerful, it lacks the ease of use of \u003ca href=\"https://docs.python.org/3/tutorial/inputoutput.html#the-string-format-method\" target=\"_blank\"\u003eformat\nstring\u003c/a\u003e in Python. Fortunately, the 3rd party package \u003ca href=\"https://github.com/fmtlib/fmt\" target=\"_blank\"\u003efmt\u003c/a\u003e\nprovides a similar feature for C++.\u003c/p\u003e","title":"Pretty Output Format in C++","type":"posts"},{"content":"","date":"3 July 2021","externalUrl":null,"permalink":"/tags/clang/","section":"Tags","summary":"","title":"Clang","type":"tags"},{"content":"Clangd is a language server for C++/C etc. I try to use clangd 12 for C++ code auto-completion on CentOS 7.\nMy failed attempt to use clang binary release # Clangd can be easily installed via its binary release. However, when I run clangd --version, I see the following error:\nclangd_12.0.0/bin/clangd: /lib64/libc.so.6: version `GLIBC_2.18\u0026rsquo; not found (required by clangd_12.0.0/bin/clangd)\nThe reason is that libc.so on CentOS 7 is too old for clangd to run. We need to use a newer version of glibc (at least glibc-2.18).\nI tried to clone glibc repo and build version 2.20 from scratch:\ngit clone https://mirrors.tuna.tsinghua.edu.cn/git/glibc.git cd glibc git checkout glibc-2.20 cd .. # Note that glibc requires out-source building, i.e., we are forbidden to build glibc inside its source directory. mkdir glibc-build ../glibc/configure --prefix=$HOME/local make -j 16 make install After that, I added $HOME/local/lib to LD_LIBRARY_PATH. Then things went badly wrong: every executable I use segfaults immediately! For example, when I run ls, I got an error from the shell:\nzsh: segmentation fault (core dumped) ls -F \u0026ndash;color=auto\nAccording to this post, this is due to version mismatch: the glibc version required to run the executable is different from what is provided right now.\nI tried the glibc-6.18 release tarball downloaded from here. The same errors happens when I add $HOME/local/lib to LD_LIBRARY_PATH and run clang.\nBuilding clangd from source: success # I also tried to build llvm project from scratch to use clangd. Here is how to compile llvm from source:\ngit clone --depth=1 https://github.com/llvm/llvm-project.git cd llvm-project mkdir build \u0026amp;\u0026amp; cd build cmake -G \u0026#34;Unix Makefiles\u0026#34; -DLLVM_ENABLE_PROJECTS=\u0026#34;clang;clang-tools-extra\u0026#34; -DCMAKE_INSTALL_PREFIX=~/tools/llvm -DCMAKE_BUILD_TYPE=Release ../llvm make -j 16 make install Some explanation about the options used:\n-DLLVM_ENABLE_PROJECTS=\u0026quot;clang;clang-tools-extra\u0026quot;: it specifies which targets we want to build. To use clangd and clang-tidy, clang-tools-extra is a must. -DCMAKE_INSTALL_PREFIX=~/tools/llvm: it specifies where we want to install llvm, in this case, we install it under ~/tools/llvm. -DCMAKE_BUILD_TYPE=Release: it specifies the build type. Release type will be smaller than Debug. For more details about Cmake options on building llvm, check here.\nSince llvm is a huge project, it may take quite a while to build. FYI, It takes about 37 minutes to build on my server with 16 parallel processes.\nAfter installing llvm, do not forget to add llvm binary to your PATH variable. This time, clangd runs without any error.\nHow to use clangd # According to clangd documentation, you can either generate a compile_commands.json file for your project or use compile_flags.txt.\nFor simple project, using compile_flags.txt is sufficient. Your compile flags are written one per line. A sample compile_flags.txt looks like this:\n-Wall -std=c++11 -L/usr/local/lib -I/usr/local/include -lfmt References # glibc segfaults issue: https://unix.stackexchange.com/q/272606/221410 https://stackoverflow.com/q/19709932/6064933 Build clangd: https://github.com/llvm/llvm-project/tree/main/clang-tools-extra/clangd#building-and-testing-clangd ","date":"3 July 2021","externalUrl":null,"permalink":"/2021/07/03/install_clangd_on_linux/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://clangd.llvm.org/\" target=\"_blank\"\u003eClangd\u003c/a\u003e is a language server for C++/C etc.\nI try to use clangd 12 for C++ code auto-completion on CentOS 7.\u003c/p\u003e","title":"Install LLVM/Clangd from Source on CentOS 7","type":"posts"},{"content":"When I want to build glibc using the provided configure script (./configure --prefix=xxx), I saw the following error message:\nconfigure: error: *** LD_LIBRARY_PATH shouldn\u0026rsquo;t contain the current directory when *** building glibc. Please change the environment variable *** and run configure again.\nHow could my LD_LIBRARY_PATH contains the current directory? Upon inspecting the env variable, I see a spurious :: inside the value of LD_LIBRARY_PATH, which means an empty item. An empty item is interpreted by ld as the current working directory. As a result, as a result, ld may load library from the current working directory, causing unintended effects, or even security vulnerability if an attacker puts some harmful library in the current directory.\nThe :: in my LD_LIBRARY_PATH is caused by the initial empty LD_LIBRARY_PATH. For example, if we use export LD_LIBRARY_PATH=/home/xxx/local/lib: $LD_LIBRARY_PATH while LD_LIBRARY_PATH is empty, it actually becomes /home/xxx/local/lib:.\nTo fix this issue, we need to check if the value of LD_LIBRARY_PATH is empty before using it:\nif [-z $LD_LIBRARY_PATH]; then export LD_LIBRARY_PATH=/home/xxx/local/lib else export LD_LIBRARY_PATH=/home/xxx/local/lib:$LD_LIBRARY_PATH fi References # https://github.com/rust-lang/cargo/issues/5796 https://bugzilla.redhat.com/show_bug.cgi?id=638365 https://www.openwall.com/lists/oss-security/2010/09/29/1 https://joshumax.github.io/general/2017/06/08/how-torch-broke-ls.html https://github.com/Linuxbrew/legacy-linuxbrew/issues/807 ","date":"3 July 2021","externalUrl":null,"permalink":"/2021/07/03/ld_library_path_empty_item/","section":"Posts","summary":"\u003cp\u003eWhen I want to build glibc using the provided configure script (\u003ccode\u003e./configure --prefix=xxx\u003c/code\u003e),\nI saw the following error message:\u003c/p\u003e","title":"Empty Entry in LD_LIBRARY_PATH May Lead to Security Issues","type":"posts"},{"content":"In this post, I would like to share how to squash commits using git-rebase.\nSquash several commits with rebase # I have a git repo with the following commit history:\n0022f04 - (HEAD -\u0026gt; master) demo 2 (2021-06-28 16:48:30 +0800) \u0026lt;jdhao\u0026gt; e4072cf - demo 1 (2021-06-28 15:49:51 +0800) \u0026lt;jdhao\u0026gt; da88b72 - line 3 (2021-06-28 14:47:43 +0800) \u0026lt;jdhao\u0026gt; 08b0518 - line 2 (2021-06-28 14:46:55 +0800) \u0026lt;jdhao\u0026gt; ac0bd14 - line 1 (2021-06-28 14:46:33 +0800) \u0026lt;jdhao\u0026gt; Since the most recent two commits are related, I want to squash them into one commit, i.e., combining commit 0022f04 and e4072cf into one. How should I do it?\nWe can use git-rebase to achieve this. First, run the following command:\n# rebase the recent two commits git rebase -i HEAD~2 Here HEAD~2 refers to commit da88b72. So we are rebasing the most recent two commits against it.\nAfter using this command, git will open the vim editor and show the following interface:\npick e4072cf demo 1 pick 0022f04 demo 2 # Rebase da88b72..0022f04 onto da88b72 (2 commands) # # Commands: # p, pick \u0026lt;commit\u0026gt; = use commit # r, reword \u0026lt;commit\u0026gt; = use commit, but edit the commit message # e, edit \u0026lt;commit\u0026gt; = use commit, but stop for amending # s, squash \u0026lt;commit\u0026gt; = use commit, but meld into previous commit # f, fixup \u0026lt;commit\u0026gt; = like \u0026#34;squash\u0026#34;, but discard this commit\u0026#39;s log message # x, exec \u0026lt;command\u0026gt; = run command (the rest of the line) using shell # b, break = stop here (continue rebase later with \u0026#39;git rebase --continue\u0026#39;) # d, drop \u0026lt;commit\u0026gt; = remove commit # l, label \u0026lt;label\u0026gt; = label current HEAD with a name # t, reset \u0026lt;label\u0026gt; = reset HEAD to a label # m, merge [-C \u0026lt;commit\u0026gt; | -c \u0026lt;commit\u0026gt;] \u0026lt;label\u0026gt; [# \u0026lt;oneline\u0026gt;] # . create a merge commit using the original merge commit\u0026#39;s # . message (or the oneline, if no original merge commit was # . specified). Use -c \u0026lt;commit\u0026gt; to reword the commit message. # # These lines can be re-ordered; they are executed from top to bottom. # # If you remove a line here THAT COMMIT WILL BE LOST. # # However, if you remove everything, the rebase will be aborted. # The two commits we want to squash are shown inversely, compared to their position in git-log output. In the interface, each line shows a specific commit. The format is \u0026lt;command\u0026gt; \u0026lt;commit-hash\u0026gt; \u0026lt;commit-msg\u0026gt;.\nFor squashing, a commit is squashed against previous commit, i.e., the line before it. Note we can not squash first commit, since there is no previous line. You will see errors if you try to do so:\nerror: cannot \u0026#39;squash\u0026#39; without a previous commit You can fix this with \u0026#39;git rebase --edit-todo\u0026#39; and then run \u0026#39;git rebase --continue\u0026#39;. Or you can abort the rebase with \u0026#39;git rebase --abort\u0026#39;. Okay, back to the rebase interface, we then edit this file and change pick in the lines after first line to squash.\npick e4072cf demo 1 squash 0022f04 demo 2 Then we use command :wq to save the edit and quit Vim. Git will automatically open another interface \u0026mdash; this time for editing the commit message of the squashed commits. It will pre-populate the file with commit messages of the squashed commits. You can keep it as is or write a new and unified message. Save the file and quit. Git will squash commit 0022f04 onto e4072cf, creating a new commit. Now, git log shows the following message:\nadc8ebd - (HEAD -\u0026gt; master) Demo 1 and 2 (2021-06-28 17:41:16 +0800) \u0026lt;jdhao\u0026gt; da88b72 - line 3 (2021-06-28 14:47:43 +0800) \u0026lt;jdhao\u0026gt; 08b0518 - line 2 (2021-06-28 14:46:55 +0800) \u0026lt;jdhao\u0026gt; ac0bd14 - line 1 (2021-06-28 14:46:33 +0800) \u0026lt;jdhao\u0026gt; How to abort rebase when we are inside vim? # If we want to abort the rebase process when we are inside Vim, how do we do it? Based on answer here, we should use command :cq to quit Vim.\nSquash commits onto first commit # If we want to squash the first three commits into one, things become a little tricky, since first commit is literally the root of all your commits, so there is no commit before it. In this case, we need to use the --root option:\ngit rebase -i --root master We have the following rebase interface:\npick ac0bd14 line 1 pick 08b0518 line 2 pick da88b72 line 3 pick adc8ebd Demo 1 and 2 # Rebase adc8ebd onto bcc1018 (4 commands) # We need to squash commit 08b0518 and da88b72 onto commit ac0bd14. So we edit the file to become the following:\npick ac0bd14 line 1 squash 08b0518 line 2 squash da88b72 line 3 pick adc8ebd Demo 1 and 2 Follow the instructions and complete the rebase process. Now we only have two commits left:\ndc5d518 - (HEAD -\u0026gt; master) Demo 1 and 2 (2021-06-28 20:07:19 +0800) \u0026lt;jdhao\u0026gt; 5452bfe - Line 1, 2 and 3 (2021-06-28 20:07:04 +0800) \u0026lt;jdhao\u0026gt; Note that if we change the parent commit, the hash of any following commits also changes. The commit has for Demo 1 and 2 changes from adc8ebd to 5452bfe.\nAvoid squashing commits that have been pushed to remote # It is now rather clear that rebasing will change the commit history. If you are collaborating with other people and have pushed some commits to the remote, and your co-workers have already check out those commits, it is best to avoid rebasing those commits. Otherwise, your co-workers would be in serious trouble!\nReferences # squash the first two commits in git: https://stackoverflow.com/a/598788/6064933 Git squash older commits: https://stackoverflow.com/a/56262851/6064933 Git merging vs rebasing: https://www.atlassian.com/git/tutorials/merging-vs-rebasing ","date":"28 June 2021","externalUrl":null,"permalink":"/2021/06/28/squash_commits_with_git_rebase/","section":"Posts","summary":"\u003cp\u003eIn this post, I would like to share how to squash commits using \u003ca href=\"https://git-scm.com/book/en/v2/Git-Branching-Rebasing\" target=\"_blank\"\u003egit-rebase\u003c/a\u003e.\u003c/p\u003e","title":"A Guide on Squashing Commits with git-rebase","type":"posts"},{"content":"最近更新到了 MIUI 12.5 系统，晚上手机突然开始不停重启（bootloop），手机在不停重启，进入 MIUI logo，然后又开始重启，有时候能进入到系统，但是还没等到我开始设置，又开始重启了。\n同时按电源和音量加，进入 recovery 模式，显示有三个选项：\n重启 （reboot） 清除数据（wipe out data) 连接小米手机助手 不过这时候只能按音量键选择选项，但是按电源键确认不起作用，手机会自动进入选择的选项，导致不小心手机进入了清除数据模式，数据全部被清除了。\n后来经过几次重启，手机奇迹般恢复了正常，期间我拿掉了 sim 卡，不知道是否和这个有关系。\n从网上也没找到靠谱的解决办法，有人说等电池耗尽，然后插上电源，重启就好了；也有人像我一样，重启多次以后，奇迹般又恢复了正常。使用两年多 MIUI，第一次遇到了这种问题，手机里面的照片和 app 数据都被清空了，又要重新配置一遍。\n参考 # https://www.reddit.com/r/Xiaomi/comments/mvilwk/miui_12_stable_update_keeps_restarting_cant/ https://www.reddit.com/r/Xiaomi/comments/k3dylc/mi_9_stuck_on_infinite_boot_loop_out_of_nowhere/ https://forum.xda-developers.com/t/mi-9-stuck-loop-boot-no-fastboot-no-hard-reset.4060119/ 一样的问题：https://www.bilibili.com/video/BV1hp4y1U7ai?spm_id_from=333.905.b_7570566964656f.3 ","date":"24 June 2021","externalUrl":null,"permalink":"/2021/06/24/xiaomi9_inifite_reboot/","section":"Posts","summary":"最近更新到了 MIUI 12.5 系统，晚上手机突然开始不停重启（bootloop），手机在不停重启，进入 MIUI logo，然后又开始重启，有时候能进入到系统，但是","title":"小米9 MIUI 12 系统开机界面无限重启","type":"posts"},{"content":"","date":"20 June 2021","externalUrl":null,"permalink":"/tags/%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/","section":"Tags","summary":"","title":"电视盒子","type":"tags"},{"content":"在 之前的文章 中，我介绍了几款试用的安卓外贸盒子，由于做工以及试用中发现的问题，最终都没有入手。其实品牌电视盒子，也有一个不错的选择，就是当贝 B3 Pro，趁着京东 6.18 活动，最终以 699 价格入手了这款盒子。\n当贝 B3 Pro 采用晶晨 s922x 处理器1，4G 内存+64G 存储，盒子全身采用正方体的设计，自带 USB 3.0 接口2，千兆网口，HDMI 2.1 接口以及一个电源接口，基于安卓 9.0 系统定制，都是目前的顶级配置，更多的参数见 这里。实际体验下来，系统非常流畅，体验很好。\n常用软件及设置 # 如何安装第三方应用 # 要安装第三方应用，首先需要解除应用安装限制，在「设置 \u0026ndash;\u0026gt; 通用设置」模块，打开「允许第三方应用安装」即可。\n由于当贝系统是基于安卓 9.0，所以大部分安卓应用都可以正常安装使用。安装第三方应用有两种方法：\n先把应用下载到 U 盘，然后 U 盘插入盒子，盒子会自动提示是否打开 U 盘，打开以后，找到应用的 apk，点击安装即可 通过下面介绍的蚂蚁市场远程推送应用安装 应用市场 # 当贝自带了一个应用市场，不过我发现了一个更好用的应用市场 蚂蚁市场3。蚂蚁市场里面可以下载、更新、删除应用，同时它还有一个「远程推送」功能，可以方便安装自己下载的第三方 apk。使用方式如下：\n首先确保手机和盒子在同一个无线网络（连同一个 WiFi 即可），在手机上下载好要安装的应用 apk 文件 在电视上打开蚂蚁市场，进入 「远程推送」界面，然后用手机的浏览器扫描显示的二维码，选择手机上的 apk 文件 稍等片刻，apk 会被推送到盒子，点击打开安装 这种方式的好处是不用使用 U 盘作为中介，想要安装哪个应用，直接下载，推送到盒子，然后安装即可。\n直播应用 # 如果喜欢看各个卫视的直播，在蚂蚁市场，可以安装多款直播软件，这些软件都比较类似，根据个人喜好安装即可。比较不错的有电视家，亿家直播。\n文件管理应用 # 当贝系统自带了一个文件管理器，不过功能比较简单，不是很丰富（例如连查看文本文件也不支持），推荐安装 x-plore，安装包很小，功能却很强大。\n翻墙工具 # 如果需要看 YouTube，需要安装翻墙工具，推荐使用 Clash for Android。Clash 的配置支持通过订阅链接一次性导入大量节点，非常方便。Clash 安装很简单，可以通过蚂蚁市场安装，但是配置比较麻烦，因为电视的遥控器要输入长长的配置链接非常困难，还容易出错。推荐使用下面的复制链接的方式，具体操作如下：\n找一个蓝牙鼠标，打开盒子的蓝牙设置，把鼠标和盒子配对，后续复制、粘贴链接用鼠标操作会很方便 在自己的机场，找到对应的 Clash 订阅链接，复制链接，保存到一个文本文件（例如，命名为 clash_conf.txt)，把配置文件拷贝到 U 盘，插入盒子 打开 x-plore，进入 U 盘，打开 clash_conf.txt, 然后用鼠标操作，点击右上角的编辑，用鼠标选中整个链接，复制链接 打开 Clash，点击「设置」，然后点击右上角➕，添加新配置，选择 「从URL 导入」,然后给配置命名，链接的位置，单击鼠标右键，粘贴刚才复制的链接，保存配置，并选中这个配置 要启动 Clash，点击最上面的灰色启动条即可启动。另外注意 Clash 必须保持在后台运行，不能被杀死：打开当贝系统设置，找到【后台应用限制】，进入以后，关闭对 Clash for Android 的限制。\n配置 Clash 的时候，还遇到一个坑，打开 Clash 的设置以后，看不到添加配置的➕，原因是这个应用是为手机编写的，由于缩放原因，所以界面有一部分在电视上没显示出来。解决办法：进入当贝系统的设置，选择【显示设置】，点击【屏幕缩放】，改变缩放比例，即可看到 app 的完整界面。这个问题浪费了我不少时间。\nYouTube # 观看 YouTube，不建议使用 YouTube 官方的 app，一方面因为有的电视没有谷歌框架，使用官方 app 无法登陆，同步观看信息，另外也无法去广告。一些比较旧的教程或者博客还在推荐 Smart YouTube TV，不过这款应用的 GitHub 已经不再更新了，原作者新开发一个 SmartTubeNext 作为它的替代品（下载地址 这里），体验了一下，用起来很方便，设置项也非常多。\nSmartYouTubeTV 是支持登陆谷歌账号的，在 app 上点击登录，会出现一串验证字符串，然后使用手机或者电脑，登陆 https://youtube.com/activate, 输入验证字符，然后根据提示操作即可。一切操作完成之后，自己在 YouTube 上的订阅信息以及观看历史记录会自动同步过来。\n本地视频观看 # 要观看 U 盘上的本地视频，可以选择当贝系统自带的视频播放器，自测效果不错，目前观看的视频都可以正常解码播放。除了自带的播放器，还可以使用大名鼎鼎的 kodi。\n参考 # 悟空的日常关于电视盒子独立翻墙视频：https://www.youtube.com/watch?v=ywWBrytTeyE 悟空的日常对当贝 B3 Pro 评测：https://www.youtube.com/watch?v=bTkS8ONbA7Q 科技宅品对当贝 B3 Pro 评测：https://www.youtube.com/watch?v=pVv3JVmkrFM 更多信息：https://androidpctv.com/comparative-amlogic-s922x/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n有一个问题是四个接口都在盒子后方，导致各个接口之间的距离比较近，所以 USB 3.0 接口插拔 U 盘不方便，我专门购买了了 USB 转接口来插 U 盘。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n安装教程：https://bbs.mayiapk.com/thread/17\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 June 2021","externalUrl":null,"permalink":"/2021/06/20/dangbei_b3_pro_hands_on/","section":"Posts","summary":"\u003cp\u003e在 \u003ca href=\"https://jdhao.github.io/2021/06/13/android_tv_box_reviews/\" target=\"_blank\"\u003e之前的文章\u003c/a\u003e 中，我介绍了几款试用的安卓外贸盒子，由于做工以及试用中发现的问题，最终都没有入手。其实品牌电视盒子，也有一个不错的选择，就是当贝 B3 Pro，趁着京东 6.18 活动，最终以 699 价格入手了这款盒子。\u003c/p\u003e","title":"电视盒子：当贝 B3 Pro 使用体验","type":"posts"},{"content":"This is the 10th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ Equal sign (=) is recognized as part of file name # I have a config file where it has a line like file_path=path/to/file.txt. When the cursor is after the = sign, I tried to use gf to open the file path/to/file.txt. I got the following error:\nE447: Can\u0026rsquo;t find file \u0026ldquo;file_path=path/to/file.txt\u0026rdquo; in path.\nApparently, Vim thinks that = is part of the file name and tries to open the wrong file. It turns out that gf is using the option isfname to decide which character is valid for a file name. So we need to remove = from this option.\nset isfname-== Open a buffer in vertical split # There are several ways to do this:\n:vsplit +b{count}: {count} represents the buffer number, as shown by :ls or :buffers command. :vsplit #{count}: {count} has the same meaning as above. :vert sb {count}: {count} has the same meaning as above. :vert sb {buf_name}: {buf_name} represents the path to a file. It supports completion for buffer names, i.e., you only need to type part of the path and then press \u0026lt;Tab\u0026gt; for completion. Ref:\nhttps://vi.stackexchange.com/q/76/15292 https://vi.stackexchange.com/q/8122/15292 Disable syntax highlighting for a particular filetype # When we open a YAML file using Neovim, if the file has thousands of lines, cursor movement will be slowed down considerably due to Vim\u0026rsquo;s slow syntax highlighting feature. In this case, we may want to turn syntax highlight off for YAML based on its line numbers. We can use FileType autocmd to detect the file type and set the syntax option to disable syntax highlighting.\naugroup yaml_syntax_off autocmd! autocmd FileType yaml if line(\u0026#39;$\u0026#39;) \u0026gt; 500 | setlocal syntax=OFF | endif augroup END Note that we use setlocal syntax=OFF instead of syntax off, because syntax off will turn off syntax highlight for all the buffers currently opened, which is not what we want.\nRef:\nhttps://vi.stackexchange.com/q/298/15292 https://stackoverflow.com/q/51658852/6064933 I get error when I try to call a plugin function in init.vim? # I want to call a plugin\u0026rsquo;s function in my init.vim, but I get an error that the function does not exist? However, when nvim is opened, I call the function without any errors. What happened?\nThe called function is in a script under plugin directory. This is because the plugin has not been properly initialized. We can call the plugin function after VimEnter event:\nautocmd VimEnter * call my_plugin_func() Ref:\nhttps://vi.stackexchange.com/q/14907/15292 https://vi.stackexchange.com/q/23264/15292 https://groups.google.com/g/vim_use/c/i2HWD_9V-28?pli=1 https://github.com/wbthomason/packer.nvim/issues/4#issuecomment-662262954 Generate a list of incrementing numbers one per line # I would like to generate a list of incrementing numbers:\n1 2 3 4 5 How do we do it in Vim? First, generate a list of same numbers. Input 0 in the first line, press yy and then press 4p to generate five zeros:\n0 0 0 0 0 Then move the cursor to first 0, and press Ctrl-V, followed by 4j to visual select this block. Finally, press g, followed by pressing Ctrl-A. We will get what we want.\nAnother way is to use :put command: :put =range(1, 5), which is more concise.\nRef:\nhttps://vi.stackexchange.com/q/12/15292 ","date":"17 June 2021","externalUrl":null,"permalink":"/2021/06/17/nifty_nvim_techniques_s10/","section":"Posts","summary":"\u003cp\u003eThis is the 10th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 10","type":"posts"},{"content":"家里有一台闲置的电视，想平时用来看 YouTube，看电影，于是决定入手一款电视盒子。试用了几款价格比较低的品牌电视盒子（小米、当贝），发现都无法轻松观看 YouTube，安装安卓应用也经常装不了。在寻找合适的电视盒子过程中了解到外贸盒子这种品类，外贸盒子的特点是配置高，但是通常做工一般。最近一个月也试用了两款电视盒子，实际上手体验的确不佳。\n外贸盒子基本知识 # 目前国内有种类繁多的外贸电视盒子，良莠不齐，要买一款符合需求的电视盒子并不容易。我最关注的几个方面：\n内存+存储空间（可以安装很多自己喜欢的应用，不用担心运行卡顿） 安卓系统版本（系统太老的话，很多安卓应用都是无法安装的） 做工（有的安卓盒子做工差劲，接口可能都有问题，另外散热也不行） 价格（一般来说外贸盒子会比同等配置的品牌盒子便宜） 由于外贸盒子型号实在太多，经过大量搜集，我总结了目前在淘宝或拼多多上能够买到的一些外贸盒子相关信息：\n型号 CPU 内存+存储 系统 价格 备注 h9x3 s905x3 4+64 安卓 9.0 260+ h96 max x3 s905x3 4+64 安卓 9.0 270+ tox1 s905x3 4+32 安卓 9.0 280 tanix tx3 s905x3 4+64 安卓 9.0 270 hk1 box s905x3 4+64 安卓 9.0 260 做工不好 x96 max plus s905x3 4+64 安卓 9.0 300+ 做工不行散热差 mecool KM2 s905x2 2+8 安卓 10.0 370+ 需要富强环境激活 mecool KM1 s905x3 4+64 安卓 10.0 500+ 需要富强环境激活 mecool KM6 s905x4 4+64 安卓 10.0 500+ 需要富强环境激活 ugoos x3 plus s905x3 4+64 安卓 9.0 500+ ugoos am6 plus s922x-J 4+32 安卓 9.0 900+ gt king s922x 4+64 安卓 9.0 650 gt king pro s922x-H 4+64 安卓 9.0 830+ 不同于手机常用的高通枭龙 CPU，电视盒子普遍使用晶晨半导体（Amlogic）开发的 CPU，下面是各个 CPU 型号之间的一些区别：\ns905x2 vs s905x3: x3 增加了神经网络加速器，更高的 DDR4 频率支持，其他区别不大 s905x4 特性: 支持 h.265，vp9 视频，相对于 s905x3，增加支持 av1 codec(但这个格式目前支持还不广泛) s922x: 晶晨最新旗舰处理器，性能强，价格贵 另外值得注意的是，有的外贸盒子采用原生安卓 TV 系统，激活需要外网环境，买之前一定要和商家确定一下是否已经激活了，否则买回来没富强环境就无法激活，无法使用。\n这里也有更多的电视盒子排行信息：https://tvboxstop.com/tv-box-rank-chart-2020/\n电视盒子体验 # 由于电视盒子型号实在太多，看得我眼花缭乱，不知如何下手。看了 YouTube 上博主的推荐，一开始入手了 tox1 这款电视盒子。tox1 全塑料外壳，带有一根天线，做工一般，接口倒是比较丰富，使用的是安卓 9.0 系统，桌面不是很好用。另外经过试用，发现配的两个 USB 接口，其中的 USB 3.0 接口插入 U 盘无反应，果断退掉了。\n后面又入手了更贵的的 ugoos x3 plus，发现也是很坑，首先，hdmi 连接线特别短，只能掉在电视后面，另外，关机再用遥控器开机非常不灵敏(有可能是自带的遥控器太垃圾)，按开机键半天没反应，HDMI 还是显示无信号，第三点，接收红外信息还需要另外插一个红外连接线，最后，虽然配置很高，但是使用 kodi 播放 U 盘上的文件很吃力，经常卡顿，播放过程中，系统也经常出现无响应的提示，体验非常不好，可以看出系统基本没有太多的优化。总之，给人的使用体验很糟糕，最后也无奈退掉了。\n用了两款外贸盒子以后，对外贸盒子的心凉了大半，本来打算买 gtking pro，看评测这款盒子质量不错，不过骷髅头正面有点劝退，这个价格完全可以购买当贝 B3 Pro 了，所以最终还是没入手。\n另外一款据说不错的外贸盒子是 ugoos am6 plus, 配置强悍，全金属机身，接口丰富，顶级 CPU 配置，当然价格也很高，所以就没有尝试了。\n电视盒子软件 # 由于外贸盒子搭载的是安卓系统，理论上大部分安卓应用都可以在外贸盒子上安装使用，只不过有的应用没有针对 TV 界面进行优化，使用遥控器操作会比较费劲。\n外贸盒子自带的桌面（launcher）一般都比较丑陋，一款不错的替代品是 atv launcher。\n电视/盒子/手机直播应用合集： https://apphot.cc/27447.html\n如果要观看 YouTube，不建议使用 YouTube 官方的 app，一方面因为有的电视没有谷歌框架，使用官方 app 无法登陆，同步观看信息，另外官方 APP 无法去广告。一些比较旧的教程或者博客还在推荐读者使用 Smart YouTube TV，其实这款应用的 GitHub 已经不再更新了，原作者开发了 SmartTubeNext 作为它的替代品，体验了一下，用起来很方便，设置项也非常多，推荐使用。\n参考 # 晶晨半导体 CPU 之间的对比 https://androidpctv.com/comparative-amlogic-s905x4/ https://androidtvbox.eu/s905x2-vs-s905x3-functional-comparison-of-tv-boxes-chipsets/?amp=1 https://www.znds.com/tv-1183183-1-1.html https://n.znds.com/article/49882.html https://en.wikipedia.org/wiki/Amlogic#Comparison_table https://androidpctv.com/comparative-amlogic-s922x/ tanix tx3 介绍： https://post.m.smzdm.com/p/alx7z03e/ 安卓桌面 launcher https://zhuanlan.zhihu.com/p/152081213 https://beebom.com/best-android-tv-launchers/ ","date":"13 June 2021","externalUrl":null,"permalink":"/2021/06/13/android_tv_box_reviews/","section":"Posts","summary":"\u003cp\u003e家里有一台闲置的电视，想平时用来看 YouTube，看电影，于是决定入手一款电视盒子。试用了几款价格比较低的品牌电视盒子（小米、当贝），发现都无法轻松观看 YouTube，安装安卓应用也经常装不了。在寻找合适的电视盒子过程中了解到外贸盒子这种品类，外贸盒子的特点是配置高，但是通常做工一般。最近一个月也试用了两款电视盒子，实际上手体验的确不佳。\u003c/p\u003e","title":"安卓外贸电视盒子体验","type":"posts"},{"content":"We have set up a server to convert pptx files to pdf files using LibreOffice (version: 6.0.7.3 ). Libreoffice is started using subprocess.run() command in Python. The external command I use is something like the following1:\nsoffice --headless --convert-to pdf test.pptx If the client requests this service concurrently, some of the request will fail with no result. The weird part is that subprocess.run() will not report any errors. It is just that we can not convert pptx to pdf. If the client only request the service one pptx file after another, there is no error in getting the result. It seems that libreoffice can not handle multiple concurrent requests gracefully.\nI captured the stdout and stderr from the external command:\nsubprocess.run(command_list, timeout=5, stdout=subprocess.PIPE, stderr=subprocess.PIPE) I find that although the command is executed without error (r.check_status() runs without error), r.stdout and r.stderr will be empty when no pdf is generated.\nSo I add a retry strategy. If the r.stdout is empty, we will try at most three times to re-run the subprocess command. This reduces the failure numbers for concurrent requests, but there are still quite a lot of failures.\nSince one instance of libreoffice is limited in its concurrent handling of requests, why not deploy multiple instances of libreoffice? So we isolate the relevant code to generate from pptx to pdf as a separate service and deploy it in multiple docker containers. When new requests comes, it will be distributed evenly to different instances of this services. To handle more concurrent requests, we just need to deploy more docker containers. After this step, the failure rates drops to negligible count.\nIt seems that there is another way to solve this issue by spawning multiple LibreOffice instances in the same server, as documented here.\nRefs # https://ask.libreoffice.org/en/question/82515/how-can-i-run-multiple-instances-of-soffice-under-linux/ https://github.com/thecodingmachine/gotenberg/issues/94 https://github.com/algoo/preview-generator/issues/186 there are more discussions on how to convert pptx to pdf here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 June 2021","externalUrl":null,"permalink":"/2021/06/11/libreoffice_concurrent_requests/","section":"Posts","summary":"\u003cp\u003eWe have set up a server to convert pptx files to pdf files using LibreOffice\n(version: 6.0.7.3 ). Libreoffice is started using \u003ccode\u003esubprocess.run()\u003c/code\u003e command in\nPython. The external command I use is something like the following\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e:\u003c/p\u003e","title":"Serving Concurrent Requests for LibreOffice Service","type":"posts"},{"content":"A brief summary of how to read and write excel files using Pandas package.\nFirst we need to install pandas and pre-requisite:\npip install pandas pip install openpyxl # in order to read xlsx files pip install xlrd Read xlsx files # Note that in order to read xlsx files, we need to install openpyxl and use it like this:\nimport pandas as pd df = pd.read_excel(\u0026#39;test.xlsx\u0026#39;, sheet_name=0, engine=\u0026#39;openpyxl\u0026#39;) For param sheet_name, either the literal sheet name or the sheet index is okay. sheet_name=0 means to read the 1st sheet.\nConvert text in each cell to string type # When the sheet contains date and numbers, read_excel() will convert it to Timestamps and numbers by default, if we would like to convert all text to strings, we can use the dtype parameter:\ndf = pd.read_excel(\u0026#39;test.xlsx\u0026#39;, sheet_name=0, dtype=str, engine=\u0026#39;openpyxl\u0026#39;) Read empty cell as empty string # It seems that pandas will by default read empty cell as NAN values. To read empty cell as empty string, use keep_default_na=False when reading excel:\ndf = pd.read_excel(\u0026#39;test.xlsx\u0026#39;, sheet_name=0, dtype=str, engine=\u0026#39;openpyxl\u0026#39;, keep_default_na=False) Or after reading the sheet, use fillna() to replace the nan values with empty string:\ndf = pd.read_excel(\u0026#39;test.xlsx\u0026#39;, sheet_name=0, dtype=str, engine=\u0026#39;openpyxl\u0026#39;).fillna(\u0026#39;\u0026#39;) Convert panda data frame to numpy array # Use to_numpy():\ndf = pd.read_excel(\u0026#39;test.xlsx\u0026#39;, sheet_name=0, dtype=str, engine=\u0026#39;openpyxl\u0026#39;).fillna(\u0026#39;\u0026#39;) data = df.to_numpy() # data is now numpy array Convert list to excel files # To convert a list of list (each sub-list has the same number of elements) to excel files, use to_excel():\nimport pandas as pd my_list = [[1, 2, 3], [4, 5, 6]] df = pd.DataFrame(my_list) df.to_excel(\u0026#39;my_list.xlsx\u0026#39;) To remove row index, use index=False:\ndf.to_excel(\u0026#39;my_list.xlsx\u0026#39;, index=False) To add header for each column, we can provide a list of strings for each column using header parameter.\nimport pandas as pd my_list = [[1, 2, 3], [4, 5, 6]] df = pd.DataFrame(my_list) header = [\u0026#39;c1\u0026#39;, \u0026#39;c2\u0026#39;, \u0026#39;c3\u0026#39;] df.to_excel(\u0026#39;my_list.xlsx\u0026#39;, index=False, header=header) References # pandas can not open xlsx files: https://stackoverflow.com/q/65250207/6064933 pandas replace nan with blank: https://stackoverflow.com/q/45148292/6064933 https://stackoverflow.com/q/10867028/6064933 pandas how to read cell value as string: https://stackoverflow.com/q/32591466/6064933 Remove row index: https://stackoverflow.com/q/22089317/6064933 ","date":"11 June 2021","externalUrl":null,"permalink":"/2021/06/11/pandas_read_write_excel/","section":"Posts","summary":"\u003cp\u003eA brief summary of how to read and write excel files using Pandas package.\u003c/p\u003e","title":"Excel Processing using Pandas","type":"posts"},{"content":"","date":"11 June 2021","externalUrl":null,"permalink":"/tags/pandas/","section":"Tags","summary":"","title":"Pandas","type":"tags"},{"content":"I have several PDF files that I want to merge to one file. Each page in the PDF is actually an image. Here is what works best for me.\nUse pdfunite from poppler-utils package: # Pdfunite provided by package poppler-utils can be used to achieve our goal:\npdfunite a.pdf b.pdf output.pdf The size of produced PDF file is small (about the sum of size of a.pdf and b.pdf). The image quality is well preserved.\nUse convert from imagemagick: # convert a.pdf b.pdf output.pdf The images in the produced pdf have very poor quality and is blurred to be hardly recognizable. We can use -desnity option to increase the image quality:\nconvert -density 200 a.pdf b.pdf output.pdf This time, the image quality improves greatly, but the size of produced file also increases greatly (significantly larger that what is produce by pdfunite).\nOverall, using pdfunite is the best choice.\nRefs # Merge / convert multiple PDF files into one PDF How to merge pdf:s using Imagemagick (resolution problem): https://superuser.com/q/54041/736190 ","date":"31 May 2021","externalUrl":null,"permalink":"/2021/05/31/how_to_merge_pdfs/","section":"Posts","summary":"\u003cp\u003eI have several PDF files that I want to merge to one file. Each page in the PDF\nis actually an image. Here is what works best for me.\u003c/p\u003e","title":"How to Merge PDF Files","type":"posts"},{"content":"加入公司快三年了，当初一起入职的同事最近几个月走了许多，我们组也有几位同事离职了，频繁的人事动荡多少也给其他人带来了冲击，正好来谈谈最近一直在思考的公司如何对待员工的问题。\n乔布斯说过一个牛逼的工程师效率是普通工程师效率的成百上千倍1：\nNow, in software, and it used to be the case in hardware, the difference between the average software developer and the best is 50:1; Maybe even 100:1.\n公司应该对员工大方一些，不要吝啬。例如，对于技术人员，配备的干活工具应该好一点，不要总是抠抠缩缩。如果工具不行，最终影响的还是人的工作效率，最后为此买单的还是公司。一台笔记本或者台式电脑才能值多少钱？一个好的显示器能多少钱？连一个技术人员一个月的工资都不到。\n如果一个人离职，那他离职前的一个月甚至更长时间，并不会给公司创造多大价值了，公司还要补偿离职补贴。另外，一个员工离职，公司需要找其他人来熟悉他负责的东西，刚熟悉这个东西的人，有一段时间是没有产出的，又是很大的一笔开销，这样算下来公司的损失更大。作为公司的管理者，总是去算小账是很糟糕的，从长远来看，对员工好，对公司有好处，有利于公司的发展。\n2020 年，「打工人」这个词也火了起来，996 对于技术型公司真的好吗？老板总以为让打工人多呆在公司，就是赚到了，真的是这样吗，有远见的管理者都应该思考这个问题。每个人每天有效率的时间不是无限的，就算让员工待在公司，他也并不能提高生产力。很多时间其实是浪费了，要么摸鱼、看手机，要么上厕所喝水，真正在干活的时间能有多少？长时间的工作会消磨人的热情，降低人的效率，还会让员工产生一种理所应当的摸鱼的心态：反正下班走不了，不如慢慢干或者找时间休息一下，看看手机。长此以往对于公司并没有好处，只会陷入正常时间干活效率低，加班来做工作的怪圈，做出来的东西质量能高到哪里去呢？提高员工干活的效率，让员工尽早下班才是更好的方式。\n来源：http://www.geekmind.net/2012/07/steve-jobs-on-average-vs-best-software.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"23 May 2021","externalUrl":null,"permalink":"/2021/05/23/how_company_should_treat_its_employee/","section":"Posts","summary":"\u003cp\u003e加入公司快三年了，当初一起入职的同事最近几个月走了许多，我们组也有几位同事离职了，频繁的人事动荡多少也给其他人带来了冲击，正好来谈谈最近一直在思考的公司如何对待员工的问题。\u003c/p\u003e","title":"健康的公司和员工关系","type":"posts"},{"content":"给老家的电视配了一个小米盒子 4s(安卓 6.0 系统，2g内存+8g存储，参考这里)，感觉可以，回深以后也想给这边的电视配一个盒子。京东上当贝盒子 H1 的评价不错，就入手了当贝盒子 H1，以下是我的使用感受。\n当贝盒子 H1 做工不错，比小米盒子 4s 要沉，硬件方面，使用的华为海思处理器，配置了 2G 内存 + 16G 存储，系统采用自家的当贝 OS，比较简洁，可以自定义界面，但是坑爹的地方在于系统基于非常老旧的 Android 4.0 定制，并且无法升级1。在手机安卓系统都要进入 11.0 的时代，不明白当贝为什么还给盒子弄一个如此老旧的系统。人家小米的盒子 4S 好歹也是安卓 6.0 以上的系统。\n当贝盒子可以正常安装和使用当贝市场，电视家等常用的应用，但是由于系统版本的缺陷，导致很多第三方应用无法安装，或者安装以后无法打开，或者安装以后可以打开但是功能运行不正常。我为了在盒子上观看 youtube 视频，想要安装 Clash 安卓版，结果直接安装不上，也试了 SSR 或者 v2rayNG 等多款富强软件，都不能安装或无法正常工作。本地播放视频软件 Kodi 最新版也无法在当贝盒子 H1 上安装。所以如果想对电视盒子进行更多的配置或者安装新的应用，这款盒子非常糟糕，完全不值得买，如果只是看一些国内的节目，这款盒子还行。\n当贝 H1 不行，当贝其他更高端的盒子还是可以的，譬如当贝B1 Pro 和当贝 B3 Pro 配置的系统分别为安卓 7.1 和安卓 9.0，应该能满足用户折腾的需求了。不过这俩盒子的价格也不便宜，一个 579，一个 829。有这个价格，买个外贸盒子不香吗2，配置高，价格还没这么贵 (这篇文章发出后的一段时间，试用了几款外贸盒子，发现外贸盒子并没有那么香)。\n看网上的评论，有人说是因为采用的是华为的海思处理器，所以无法升级系统，不知道是否是这样。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n用了几款外贸盒子，发现了各种坑，看来外贸盒子也不是那么香的。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 May 2021","externalUrl":null,"permalink":"/2021/05/09/dangbei_h1_hands_on_experience/","section":"Posts","summary":"\u003cp\u003e给老家的电视配了一个小米盒子 4s(安卓 6.0 系统，2g内存+8g存储，参考\u003ca href=\"https://m.mi.com/commodity/detail/12924\" target=\"_blank\"\u003e这里\u003c/a\u003e)，感觉可以，回深以后也想给这边的电视配一个盒子。京东上当贝盒子 H1 的评价不错，就入手了当贝盒子 H1，以下是我的使用感受。\u003c/p\u003e","title":"当贝盒子 H1 使用体验","type":"posts"},{"content":"My notes on using tag feature of Git.\nWe can use git-tag to create a memorable name for a specific commit, for example, v1.0, v2.0.\nCreate tags # Lightweight and annotated tags # There are two different types of tag: lightweight and annotated tag.\nTo create lightweight tags, do not use -a option:\ngit tag v0.5 To create annotated tags, use -a option and -m (for tag message):\ngit tag -a v0.5 -m \u0026#34;some info about this commit\u0026#34; For annotated tags, when we use git show {tag-name}, the tag message will also be displayed.\nTag a specific commit # To tag a specific commit, we can provide its commit hash:\n# in this example, 8a5cbc4 is the commit hash. git tag -a v1.2 8a5cbc4 -m \u0026#34;some information related to this tag\u0026#34; List tags # To list tags, use git tag -l or just git tag.\nGit-tag also supports globing for tags matching a pattern. For example, to list all tags in version 1.1 series, use git tag -l \u0026quot;v1.1.*\u0026quot;.\nShow a tag # To show a tag, use git show {tag_name}, for example, git show v1.0.\nPush tags to remote # To push a tag to remote repo, we have to explicitly push it. git push origin {branch-name} does not work in this case.\n# this will push tag v1.2 to origin git push oirgin v1.2 To push all tags to remote, use command git push origin --tags.\nDelete a tag # To delete a tag, use git tag -d {tag-name}, for example, to delete tag v1.2, we use git tag -d v1.2.\nTo delete a tag in remote repo, use git push {remote-name} -d {tag-name}.\nReferences # https://git-scm.com/book/en/v2/Git-Basics-Tagging https://git-scm.com/book/en/v2/Git-Basics-Tagging annotated vs non-annotated tags: https://stackoverflow.com/a/11514139/6064933 ","date":"8 May 2021","externalUrl":null,"permalink":"/2021/05/08/git_tag_notes/","section":"Posts","summary":"\u003cp\u003eMy notes on using tag feature of Git.\u003c/p\u003e","title":"How to Use The Git-tag Feature","type":"posts"},{"content":"小米盒子 4s 是小米在 2020 年推出的最新款盒子产品，颜值高，使用起来效果也不错。\n初次设置 # 接好电源，用附带的 hdmi 线接到电视的 hdmi 接口(新电视一般都会有 hdmi 接口)，使用电视遥控器切换信号源，切换到 HDMI 即可显示盒子界面。按照提示，一步一步设置即可。\n总的体验 # 小米盒子界面基于 Android 系统，整体界面不错，UI 也漂亮。不过默认的标准模式栏目太多，不是很方面，我直接把模式切换成了“老人模式”，感觉更简洁好用。\n安装当贝市场 # 按盒子遥控器的上键，移动到设置，进入\u0026quot;账号与安全\u0026quot;设置，把\u0026quot;安装未知来源的应用\u0026quot;设定为允许。\n用小米手机自带的浏览器下载当贝市场，用其它浏览器下载也可以，但是要找到文件具体位置，把文件移动到存储根目录，要不然等会小米电视助手无法找到下载的 apk。不要安装该 apk，这是为电视系统定制的 apk。\n从应用商店下载小米电视助手，安装好以后，进入应用，会自动提示是否连接小米盒子 4s，点击连接即可。然后，点击本地应用，会看到刚才下载的当贝应用市场，右边有\u0026quot;安装到电视\u0026quot;的选项，选择以后，等待一会，当贝市场就安装好了。\n回到小米盒子主界面，移动到右边的\u0026quot;应用\u0026quot;栏目，打开\u0026quot;我的应用\u0026quot;，在里面可以看到下载的当贝市场，点击打开，然后可以搜索下载想要安装的应用。\n实用应用 # 看电视的话，可以在当贝市场下载\u0026quot;电视家3.0\u0026quot;，感觉还不错，频道很多。\n电影的话，可以下载 极光影院tv版本。\n参考 # https://www.znds.com/jc/waparticle/706036.html https://hi-andy.com/note/Android_TV/ https://www.sharerw.com/a/ziyuan/ ","date":"30 April 2021","externalUrl":null,"permalink":"/2021/04/30/xiaomi_mi_box_setup/","section":"Posts","summary":"\u003cp\u003e小米盒子 4s 是小米在 2020 年推出的最新款盒子产品，颜值高，使用起来效果也不错。\u003c/p\u003e","title":"小米盒子 4s 初体验","type":"posts"},{"content":"在周末跟着团队来广州团建，第二次来广州玩。\n在广州融创雪世界滑雪，在北京的时候滑过一次，不过已经全忘了过去的经验，以至于在刚开的一小时艰难行动，浪费了时间。索性直接上练习赛道开始滑，摔了一次之后，就没有再摔了。重要的是要克服恐惧的心理，再加一些基本的技巧就可以滑了。\n第二天的娱雪项目则比较小儿科，下午的游乐园活动也比较休闲，体验了几个项目之后便结束了。\n下午去市区见了好几年没见的同学，一起在珠江边走了走，聊了工作和生活，人人有本难念的经。晚上去吃了广州的陶陶居，和点都德一样都是主营广式茶点，味道还不错。\n晚上坐三号线体验到了无与伦比的拥挤，大概只有在北京时候坐 10 号线去北京南站体验过。三号线的地铁里又潮湿，又闷热，体验极差，真是糟糕的体验。广州和深圳一样，年轻人多，走在街上映入眼帘基本都是年轻人，这也是城市活力来源。广州的美食也多，茶点，各种肠粉、云吞面、煲仔饭、牛杂、煎饺等等，都是不错的选择。\n呆的时间短，对广州也是浮光掠影的体验，中午就坐城际回到了熟悉的深圳。\n","date":"18 April 2021","externalUrl":null,"permalink":"/2021/04/18/guangzhou_tour_202104/","section":"Posts","summary":"\u003cp\u003e在周末跟着团队来广州团建，第二次来广州玩。\u003c/p\u003e","title":"广州之行","type":"posts"},{"content":"Install ffmpeg # If we have root rights, we can install FFmpeg via package manager. On CentOS 7, run the following command:\nyum install epel-release yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm yum install ffmpeg ffmpeg-devel If you want to download binary releases, this site can help you. It has binary release for FFmpeg, ffprobe for different systems. It seems that the provided ffmpeg is statically linked, so all you need is that one file to get to work.\nThis site also provides binary release for FFmpeg.\nRun command ffmpeg -version to verify that FFmpeg has been correctly installed. You will see the following output:\nffmpeg version 3.4.8 Copyright (c) 2000-2020 the FFmpeg developers built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39) configuration: --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --docdir=/usr/share/doc/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags=\u0026#39;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic\u0026#39; --extra-ldflags=\u0026#39;-Wl,-z,relro \u0026#39; --extra-cflags=\u0026#39; \u0026#39; --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc --enable-version3 --enable-bzlib --disable-crystalhd --enable-fontconfig --enable-gcrypt --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libcdio --enable-libdrm --enable-indev=jack --enable-libfreetype --enable-libfribidi --enable-libgsm --enable-libmp3lame --enable-nvenc --enable-openal --enable-opencl --enable-opengl --enable-libopenjpeg --enable-libopus --disable-encoder=libopus --enable-libpulse --enable-librsvg --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libv4l2 --enable-libvidstab --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-libzvbi --enable-avfilter --enable-avresample --enable-libmodplug --enable-postproc --enable-pthreads --disable-static --enable-shared --enable-gpl --disable-debug --disable-stripping --shlibdir=/usr/lib64 --enable-libmfx --enable-runtime-cpudetect libavutil 55. 78.100 / 55. 78.100 libavcodec 57.107.100 / 57.107.100 libavformat 57. 83.100 / 57. 83.100 libavdevice 57. 10.100 / 57. 10.100 libavfilter 6.107.100 / 6.107.100 libavresample 3. 7. 0 / 3. 7. 0 libswscale 4. 8.100 / 4. 8.100 libswresample 2. 9.100 / 2. 9.100 libpostproc 54. 7.100 / 54. 7.100 Ref:\nhttps://linuxize.com/post/how-to-install-ffmpeg-on-centos-7/ Suppress excessive logging # Every time I run ffmpeg command, its version, compilation configuration and library info is printed on the command line. This can be disabled using -hide_banner option:\nffmpeg -hide_banner ... We can also use -loglevel option to specify the verbosity of logging.\nffmpeg -loglevel warning ... ffmpeg -loglevel info The log level quiet will silence any logging. In case you use -loglevel, it is useful to specify -stats to print some running stats for ffmpeg.\nRef:\nhttps://superuser.com/q/555289/736190 https://superuser.com/q/326629/736190 Extract a frame every N seconds # How do we extract a frame from a video every 5 seconds?\nffmpeg -i input.mp4 -vf \u0026#34;fps=1/5\u0026#34; output_%3d.jpg or\n# we use 0.2, since 0.2 = 1/5 ffmpeg -i input.mp4 -r 0.2 output_%3d.jpg Ref:\nhttps://superuser.com/q/135117/736190 https://trac.ffmpeg.org/wiki/Create%20a%20thumbnail%20image%20every%20X%20seconds%20of%20the%20video https://stackoverflow.com/q/51143100/6064933 https://superuser.com/q/584760/736190 Extract all frames from a video # If you do not provide the -r option, ffmpeg will extract all frame from the video.\nffmpeg -i test.mp4 output/img_%4d.jpg Extract audio from video file # Run the following command to extract audio from a video file:\nffmpeg -i input.mp4 -vn -acodec copy output.aac If we use this command, we need to know the audio format (i.e., acc, or other formats). Use ffprobe to get the audio format. The output contains something like the following:\nStream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 128 kb/s (default) Other option to use to extract audio from video:\nffmpeg -i input.mp4 -map a output.mp3 or\nffmpeg -i input.mp4 -map a output.aac Ref:\nhttps://stackoverflow.com/q/9913032/6064933 Download m3u8 videos # Just try the following command:\n# -c copy means to copy the video without re-encoding the video and audio stream ffmpeg -i \u0026#34;url_here\u0026#34; -c copy output.mp4 Ref:\nhttps://superuser.com/a/1260862/736190 https://gist.github.com/tzmartin/fb1f4a8e95ef5fb79596bd4719671b5d#gistcomment-3914739 ","date":"16 April 2021","externalUrl":null,"permalink":"/2021/04/16/ffmpeg_notes_1/","section":"Posts","summary":"Install ffmpeg # If we have root rights, we can install FFmpeg via package manager. On CentOS 7, run the following command:\nyum install epel-release yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm yum install ffmpeg ffmpeg-devel If you want to download binary releases, this site can help you. It has binary release for FFmpeg, ffprobe for different systems. It seems that the provided ffmpeg is statically linked, so all you need is that one file to get to work.","title":"Notes on FFmpeg (1)","type":"posts"},{"content":"","date":"8 April 2021","externalUrl":null,"permalink":"/tags/flask/","section":"Tags","summary":"","title":"Flask","type":"tags"},{"content":"In this post, I will share how to post complex data and decode it in the server side in Python.\nThe problem # To post a simple Python dict with no nested structure to the server, we may use the below code:\npayload = {\u0026#39;name\u0026#39;: \u0026#39;john smith\u0026#39;, \u0026#39;age\u0026#39;: 20} r = requests.post(\u0026#34;https://httpbin.org/post\u0026#34;, data=payload) By default, when we use requests.post(url, data=payload) to post payload to the server. We can check the header of the HTTP request via the following command:\nprint(r.request.header) The Content-Type of this HTTP request will be application/x-www-form-urlencoded by default. To decode the posted dict, if we use Flask, we can use the following code:\nfrom flask import Flask, request user_request = request.form.to_dict() When the data structure is simple, it is fine to use the default options. Once there are nested structure in your Python dictionary, the server can not decode the message properly if the client is using this Content-Type, for example, when we have nested dictionary (a 2-D list):\npayload = {\u0026#39;matrix\u0026#39;: [[1, 2, 3], [4, 5, 6]], \u0026#39;msg\u0026#39;: \u0026#39;hello\u0026#39;} In this case, you will lost the data structure since application/x-www-form-urlencoded can note keep the data structure.\nSolution # There are two solutions here.\nSerialize data as json string # First, we can encode the complex dictionary into string using json:\n# Note that payload must be json-serializable, or you will meet an error. payload = json.dumps(payload) r = requests.post(url, data=payload) On the server side (suppose that we are using Flask), we can decode the string to get the original dict:\nimport json from flask import request # decodes the string into original dictionary user_request = json.loads(request.data) Use application/json as Content-Type # Second, we can directly tell the server that we are sending data in json format using requests:\npayload = {\u0026#39;matrix\u0026#39;: [[1, 2, 3], [4, 5, 6]], \u0026#39;msg\u0026#39;: \u0026#39;hello\u0026#39;} r = requests.post(url, json=payload) In this case, the request header will be something like the following:\n{\u0026#39;User-Agent\u0026#39;: \u0026#39;python-requests/2.22.0\u0026#39;, \u0026#39;Accept-Encoding\u0026#39;: \u0026#39;gzip, deflate\u0026#39;, \u0026#39;Accept\u0026#39;: \u0026#39;*/*\u0026#39;, \u0026#39;Connection\u0026#39;: \u0026#39;keep-alive\u0026#39;, \u0026#39;Content-Length\u0026#39;: \u0026#39;2705\u0026#39;, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;} The Content-Type field will be application/json, in which we tell the server that we are sending JSON data.\nOn the server side (suppose you are using flask), we can retrieve that data using the following script:\nfrom flask import request # directly decodes the request body as JSON. user_request = request.get_json() Ref # What are the differences between application/json and application/x-www-form-urlencoded https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type ","date":"8 April 2021","externalUrl":null,"permalink":"/2021/04/08/send_complex_data_in_python_requests/","section":"Posts","summary":"\u003cp\u003eIn this post, I will share how to post complex data and decode it in the server\nside in Python.\u003c/p\u003e","title":"Post Nested Data Structure to the Server Using Requests","type":"posts"},{"content":"","date":"8 April 2021","externalUrl":null,"permalink":"/tags/requests/","section":"Tags","summary":"","title":"Requests","type":"tags"},{"content":"少油版茄子肉沫 # 原料 # 茄子，小米辣，青椒，猪肉末，蒜，姜，生抽，酱油，醋，白糖\n步骤 # 1，茄子切成 3-4 cm 条状，装盘，套上保鲜袋(留缝别封死)，在微波炉高火打三分钟。\n2，准备适量姜蒜切末，小米辣少许(吃不了可以不放)，青椒少许切碎。\n3，配调料汁：取小碗，加入适量酱油，醋，白糖，食盐，鸡精，清水，淀粉少量，搅拌均匀备用。\n4，锅内热油，加入姜蒜末，小米辣，青椒，炒香，然后加入微波炉打好的茄子，翻炒2分钟\n5，加入调配好的调料汁，大火烧开，然后转中火开始收汁，等水分变少，变得比较粘稠的时候即可出锅装盘。\n糖醋排骨 # 原料 # 排骨，冰糖，醋，大葱，姜，蒜\n步骤 # 1、排骨切成小段，清水洗干净，锅内烧水，把排骨焯一下。\n2、姜切片，大葱切段 2 -3 段即可，蒜切成大粒。\n3、锅内热油中小火，加入冰糖 7-8 颗，开始炒糖色，注意要不断搅拌，等冰糖完全融化并变色的时候即可。加入焯水的排骨，翻炒，加入姜片，翻炒，然后加入大葱和蒜，继续翻炒。\n4、取适量香醋（量要多一些），加水，加适量盐，倒入锅中，确保水没过排骨，水中加入少许酱油增色，大火把水烧开，然后中小水煮 40 分钟。\n5、40 分钟后，把葱、姜、蒜等辅料捞走，等水快熬干，中火不断搅拌，收汁出锅即可。\n","date":"5 April 2021","externalUrl":null,"permalink":"/2021/04/05/my_recipe_20210405/","section":"Posts","summary":"少油版茄子肉沫 # 原料 # 茄子，小米辣，青椒，猪肉末，蒜，姜，生抽，酱油，醋，白糖 步骤 # 1，茄子切成 3-4 cm 条状，装盘，套上保鲜袋(留缝别封死)，在","title":"菜谱: 茄子肉沫，糖醋排骨","type":"posts"},{"content":"In my project, I use the Python logging package for logging service.\nMy setup looks like this:\nimport logging logger = logging.getLogger(\u0026#39;demo project\u0026#39;) formatter = logging.Formatter( \u0026#34;[%(asctime)s][%(name)s][%(levelname)s] %(message)s\u0026#34;, \u0026#34;%Y-%m-%d %H:%M:%S\u0026#34; ) stream_handler = logging.StreamHandler() stream_handler.setFormatter(formatter) stream_handler.setLevel(logging.INFO) # stream_handler.setLevel(logging.DEBUG) logger.addHandler(stream_handler) logger.setLevel(logging.INFO) logger.info(\u0026#34;info message\u0026#34;) Missing log message # This works well when I show info messages. Later, I want to show some debug messages via my logger. So I set the logger\u0026rsquo;s logging level to DEBUG, and use logger.debug() to print the debug message:\nlogger.setLevel(logging.DEBUG) logger.debug(\u0026#34;some debug info\u0026#34;) Unfortunately, this does not work as intended. When I run my code, no debugging message is shown. Why?\nSeparate logging levels: logger vs handler # It has something to do how the logging messages are actually logged. Remember that in our first code snippet, we set the logging level both for the logger and the handler (in this case, a stream handler).\nThe levels we use for logger and the handler together decide which message can be logged and which should be rejected. The logger\u0026rsquo;s level is like the first gate/filter, and the handler\u0026rsquo;s level is like the second filter.\nWhen a logging message comes, it first passes the logger, and then the handler. If the logging message\u0026rsquo;s level is no less than the logger\u0026rsquo;s level, it then goes to the handler. If its level is also no less than handler\u0026rsquo;s level, the message gets logged.\nTake the snippet in the second code snippet as an example, the logger\u0026rsquo;s level is DEBUG, and the handler\u0026rsquo;s level is INFO. When we want to log some debug messages, it has the same level as logger\u0026rsquo;s level. However, its level is below the handler\u0026rsquo;s level (DEBUG vs INFO), so it gets rejected by the handler (i.e., the handler will not log it, we see nothing on the terminal output). On the other hand, if we use a high level for logger, for example ERROR, and use a low level for handler, e.g., DEBUG, only error loggings will be logged, since all other logging messages will be rejected by the logger.\nThe Python doc also has a nice diagram showing the workflow of logging processing, which is much more detailed.\nThe usefulness of separate logging levels # What is the benefit of separate logging level of logger and handler? With this, we can achieve flexible logging plans. For example, we may want to log all messages on the stream handler, but only want to log error messages on the file handler to save storage space.\nstream_handler = logging.StreamHandler() stream_handler.setFormatter(formatter) stream_handler.setLevel(logging.DEBUG) logger.addHandler(stream_handler) file_handler = logging.FileHandler(\u0026#39;demo-project.log\u0026#39;) file_handler.setFormatter(formatter) file_handler.setLevel(logging.ERROR) logger.addHandler(file_handler) logger.setLevel(logging.DEBUG) logger.debug(\u0026#34;debug message\u0026#34;) logger.info(\u0026#34;info message\u0026#34;) logger.warning(\u0026#34;warning message\u0026#34;) logger.error(\u0026#34;error message\u0026#34;) If we run the above code, we can see that all logging messages are shown on the terminal, but only the error message is logged in demo-project.log.\nReferences # What is the point of setLevel in a python logging handler? Log level of file handler vs. that of logger ","date":"1 April 2021","externalUrl":null,"permalink":"/2021/04/01/python_log_message_missing/","section":"Posts","summary":"\u003cp\u003eIn my project, I use the \u003ca href=\"https://docs.python.org/3/library/logging.html\" target=\"_blank\"\u003ePython logging package\u003c/a\u003e for logging service.\u003c/p\u003e","title":"Why Are Some Logging Messages Missing in Python?","type":"posts"},{"content":"","date":"31 March 2021","externalUrl":null,"permalink":"/tags/bash/","section":"Tags","summary":"","title":"Bash","type":"tags"},{"content":" This post summarize how to change the Bash shell prompt to a better look. The end result is shown in the title image.\nBash Special escape sequence # To change the bash prompt, we can directly change PS1 variable. Some special escape sequences1 are predefined by Bash to have special meaning, e.g., \\u means the current user name.\nSet PS1 to [\\u@\\h \\w] and start bash, the prompt looks like the following:\n[jdhao@jdhao-MBP ~/Projects/trial_error] Using colors # Colors are important for us to create beautiful prompts. For example, echo -e \u0026quot;\\033[4;32mtest\\033[0m\u0026quot; will print green test with underline effect. In this command, \\033 is the octal representation of ESCAPE control character, which starts an ANSI escape code to control the terminal behavior. You can also use \\x1b, which is the hex value of ESCAPE control character. See this post on how to use colors in terminal.\nA little trick I learned is to define a color for easier reuse:\nGREEN=\u0026#34;\\e[0;32m\u0026#34; COLOR_NONE=\u0026#34;\\e[0m\u0026#34; When we want to use a color, we can now use the new name instead of the lengthy and obscure escape code.\nGREEN=\u0026#34;\\e[0;32m\u0026#34; COLOR_NONE=\u0026#34;\\e[0m\u0026#34; printf \u0026#34;${GREEN}Green text${COLOR_NONE}\u0026#34; Putting all together \u0026ndash; the use of PROMPT_COMMAND # We can of course write all the logic to set the PS1 variable in one command, but it could be messy and unreadable. Instead, we can set PS1 via the env variable PROMPT_COMMAND. The value of PROMPT_COMMAND will be executed by Bash as command each time before Bash tries to show the actual prompt.\nThe following Bash script shows my final working prompt configuration:\nGRAY=\u0026#34;\\e[2;37m\u0026#34; GREEN=\u0026#34;\\e[0;32m\u0026#34; PURPLE=\u0026#34;\\e[1;35m\u0026#34; COLOR_NONE=\u0026#34;\\e[0m\u0026#34; # Detect whether the current directory is a git repository. function is_git_repository() { git branch \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 } function set_git_branch () { # Note that for new repo without commit, git rev-parse --abbrev-ref HEAD # will error out. if git rev-parse --abbrev-ref HEAD \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; then BRANCH=$(git rev-parse --abbrev-ref HEAD) else BRANCH=\u0026#34;bare repo!\u0026#34; fi } function set_bash_prompt () { if is_git_repository; then set_git_branch else BRANCH=\u0026#39;\u0026#39; fi PS1=\u0026#34;\u0026#34; # set up user and host PS1+=\u0026#34;${GRAY}\\u@\\h${COLOR_NONE} \u0026#34; # set up working directory PS1+=\u0026#34;${GREEN}\\w${COLOR_NONE} \u0026#34; # set up git branch PS1+=\u0026#34;${GRAY}${BRANCH}${COLOR_NONE}\\n\u0026#34; # set up prompt character PS1+=\u0026#34;${PURPLE}\u0026gt;${COLOR_NONE} \u0026#34; } export PROMPT_COMMAND=set_bash_prompt Ref:\nhttps://wiki.archlinux.org/index.php/Bash/Prompt_customization#Prompts List of ANSI color escape sequences Pretty Colored Bash Prompt: https://gist.github.com/milyord/4108547 Git current git branch name: https://stackoverflow.com/q/6245570/6064933 Check if we are in git repo: https://stackoverflow.com/q/2180270/6064933 A list of escape sequences and their meanings can be found here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"31 March 2021","externalUrl":null,"permalink":"/2021/03/31/bash_prompt_config/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20210331231139.jpg\" width=\"400\"\u003e\n\u003c/p\u003e\n\u003cp\u003eThis post summarize how to change the Bash shell prompt to a better look. The\nend result is shown in the title image.\u003c/p\u003e","title":"Creating Beautiful Bash Prompts","type":"posts"},{"content":" Update log 2021-12-10: update endpoint rpm link for git\nThe version of the default git bundled with the Linux system is often too old, and lacks certain features, which may break some tools. This post summarizes how to install newer versions of Git on Linux.\nInstall via package manager # CentOS # If you have root rights, you can install new version of git via yum.\n# https://ius.io/setup yum install \\ https://repo.ius.io/ius-release-el7.rpm \\ https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm yum remove git yum install git224 The version of git installed is 2.24.4.\nThe following also work:\nyum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm yum remove git yum install git Compile and install git from source # First, we need to install some dependency packages. Note that if we use https protocol for git, we need to install curl development package:\nyum install libcurl-devel Otherwise, when you git clone using a https url: git clone https://xxx.xx.xx, you get an error:\ngit: \u0026lsquo;remote-https\u0026rsquo; is not a git command. See \u0026lsquo;git \u0026ndash;help\u0026rsquo;.\nIf you do not have root rights, you can also build curl from source.\nThen, run the following script to build git from source:\nwget https://github.com/git/git/archive/refs/tags/v2.31.1.tar.gz -O git.tar.gz tar xvf git.tar.gz cd git-* mkdir -p $HOME/local make configure ./configure --prefix=$HOME/local make -j \u0026amp;\u0026amp; make install git will be installed under $HOME/local/bin. Then, add $HOME/local/bin to your PATH:\nexport PATH=\u0026#34;$HOME/local/bin:$PATH\u0026#34; Run git --version to check the git version.\nRef:\nInstall git via yum: https://serverfault.com/q/709433/435975 Install git from source: https://github.com/git/git/blob/master/INSTALL https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7 git: \u0026lsquo;remote-https\u0026rsquo; is not a git command? ","date":"27 March 2021","externalUrl":null,"permalink":"/2021/03/27/upgrade_git_on_linux/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cp\u003e\u003cfont color=\"blue\"\u003e2021-12-10: update endpoint rpm link for git\u003c/font\u003e\u003c/p\u003e\n\u003c/details\u003e\n\u003cp\u003eThe version of the default git bundled with the Linux system is often too old,\nand lacks certain features, which may \u003ca href=\"https://github.com/lewis6991/gitsigns.nvim/issues/103\" target=\"_blank\"\u003ebreak some tools\u003c/a\u003e.\nThis post summarizes how to install newer versions of Git on Linux.\u003c/p\u003e","title":"How To Install Latest Version of Git on Linux","type":"posts"},{"content":"Personal notes on docker usage.\ndocker: permission denied when pushing # When I run the docker command, I got the following error:\ndocker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.35/containers/create: dial unix /var/run/docker.sock: connect: permission denied.See \u0026lsquo;docker run \u0026ndash;help\u0026rsquo;.\nThis is because docker normally requires root right to run. We can create a docker group and add current user to this group:\nsudo groupadd docker sudo usermod -aG docker $USER Restart to make the change take effect. Now we should be able to run docker command without errors.\nRef:\nHow to fix docker: Got permission denied issue How do I push a container to another remote repo # Suppose we have a local container and we want to push it to another remote repository, how do we do it?\nFirst, we need to tag it:\ndocker tag IMAGE:[tag] remote_repo_address/user/name:tag Instead of using names, you can also use CONTAINER ID or NAMES in the output docker ps. The all refer to the same container.\nThen we can push to the remote repo:\ndocker push remote_repo_address/user/name:tag Ref:\nHow to push a docker image to a private repository how to map multiple ports # In using docker, we can use -p \u0026lt;host_port\u0026gt;:\u0026lt;container_port\u0026gt; to expose container port to host port. If we need to expose multiple ports, we simply need to use multiple -p followed by port mappings.\ndocker run -it -p \u0026lt;host_port1\u0026gt;:\u0026lt;container_port1\u0026gt; -p \u0026lt;host_port2\u0026gt;:\u0026lt;container_port2\u0026gt; Ref:\nHow can I expose more than 1 port with Docker? Docker logging file # By default, docker will record the output to stdout and stderr in a container. The log file is stored on the host machine. The log file location for a container is:\n/var/lib/docker/containers/\u0026lt;container-id\u0026gt;/\u0026lt;container-id\u0026gt;-json.log or you can directory find the log location for a container using the following command:\ndocker inspect \u0026lt;container-id\u0026gt; |grep LogPath Each line in the log file is in JSON format, recording the log message, stream, and time, like this:\n{\u0026#34;log\u0026#34;:\u0026#34;echo test\\r\\n\u0026#34;,\u0026#34;stream\u0026#34;:\u0026#34;stdout\u0026#34;,\u0026#34;time\u0026#34;:\u0026#34;2021-03-23T06:32:05.401925782Z\u0026#34;} Note that the time shown above is neither the time on your host machine nor your container. Based on issue here and post here, it seems that docker is using UTC time zone. So the time shown in the log file may not be the time on your host machine or docker container.\nTo show the incoming logs in a container, use docker logs -f \u0026lt;container-id\u0026gt; (like what tail -f does).\nRef\nWhere is a log file with logs from a container? https://sematext.com/blog/docker-logs-location/ name or rename a docker container # By default, when we use docker run to start a container, docker will use a random name for this container. We can also use a custom name by using the --name option:\ndocker run -it --name my_service ... We can also rename a running container:\n# rename container with the name foo to bar docker rename foo bar Ref:\nhttps://www.tecmint.com/name-docker-containers/ Add zsh completion for docker command # Adding subcommand and option completion for docker command would be very helpful. Here is how to do it with the help of zinit.\n# use docker completion script provided by Oh-my-zsh: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker zinit ice as\u0026#34;completion\u0026#34; zinit snippet OMZ::plugins/docker/_docker autoload -Uz compinit \u0026amp;\u0026amp; compinit -i ","date":"25 March 2021","externalUrl":null,"permalink":"/2021/03/25/docker_knowledge_s3/","section":"Posts","summary":"\u003cp\u003ePersonal notes on docker usage.\u003c/p\u003e","title":"Notes on Docker -- s3","type":"posts"},{"content":"My notes on setting up history-related features for zsh.\nHistory settings # Some env variable controlling the behaviour of history feature:\n# the detailed meaning of the below three variable can be found in `man zshparam`. export HISTFILE=~/.histfile export HISTSIZE=1000000 # the number of items for the internal history list export SAVEHIST=1000000 # maximum number of items for the history file # The meaning of these options can be found in man page of `zshoptions`. setopt HIST_IGNORE_ALL_DUPS # do not put duplicated command into history list setopt HIST_SAVE_NO_DUPS # do not save duplicated command setopt HIST_REDUCE_BLANKS # remove unnecessary blanks setopt INC_APPEND_HISTORY_TIME # append command to history file immediately after execution setopt EXTENDED_HISTORY # record command start time In the above config, option EXTENDED_HISTORY makes sure that zsh record the time that a certain command is executed. By default, command typed in a shell session are saved in the internal command history list. When the shell exits, commands in the internal history list will be written to HISTFILE. Option INC_APPEND_HISTORY_TIME changes this behavior: right after you have executed some command, it will be written to the history file, along with the time spent to execute it. Refer to man zshoptions for more details.\nRef:\nhttps://www.soberkoder.com/better-zsh-history/ (note that HISTTIMEFORMAT mentioned is not supported by zsh, it is Bash specific) history command shows only 16 items? # In zsh, if I use history command, only 16 items are shown, which is far less than the actual command history stored in HISTFILE. Why? According to the doc (man zshbuiltins), history command is just an alias to fc -l. The doc for fc command says:\nfc -l [ -LI ] [ -nrdfEiD ] [ -t timefmt ] [ -m match ] [ old=new \u0026hellip; ] [ first [ last ] ]\nIf first is not specified, it will be set to -1 (the most recent event), or to -16 if the -l flag is given. If last is not specified, it will be set to first, or to -1 if the -l flag is given.\nSo when we use command history, what we actually use is fc -l -16 -1, so the most recent 16 items in history are shown.\nWe can create an alias to change this:\n# show all the history stored. alias history=\u0026#34;fc -l 1\u0026#34; Ref:\nzsh history is too short ZSH only displaying last 16 or so commands with history. HISTSIZE \u0026amp; SAVEHIST are 500 ZSH - output whole history? Search history command more effectively? # As programmers, we sometimes use a command with long options and parameters. Later on, when we want to run that command again or modify it a bit, it would be time-consuming to type it all over. I know that we can use Ctrl-R to search the command history. However, its features are limited.\nI find fzf works better for this task, which supports fuzzy-search your command history. To install fzf, run the following command:\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf # say yes to its install prompts ~/.fzf/install Restart the shell, you should get a far better experience searching your history commands (the shortcut is still Ctrl-R). To navigate the search results, use Ctrl-N and Ctrl-P.\nReplace part of last command and re-execute # In Bash, we can use fc -s old=new to replace string old in the last command executed to new and execute it again. Bash built-in fc is different from zsh fc.\nFor fc in zsh, there is no -s option. The zsh equivalent is fc -e -. -e options can be found in man zshbuiltins.\nZsh also provides r command which is same as fc -e -. You do not need to define an alias for that any more.\nRef:\nAlternative to fc -s in zsh. zshbuiltins man page. ","date":"24 March 2021","externalUrl":null,"permalink":"/2021/03/24/zsh_history_setup/","section":"Posts","summary":"\u003cp\u003eMy notes on setting up history-related features for zsh.\u003c/p\u003e","title":"Better Zsh history","type":"posts"},{"content":"个人菜谱备忘。\n芹菜炒牛肉🥩 # 原材料：牛肉🐂，香芹，姜蒜🧄，青红辣椒🌶️，鸡蛋🥚。\n1、牛肉切成细丝，清水浸泡，抓洗，把血水抓出来，清洗干净，控干水分。加入盐、胡椒粉、老抽适量，再加入适量蛋清、搅拌均匀，最后加入适量的淀粉，搅拌至混合均匀，倒入少许油（防止炒的时候肉粘成一团）。\n2、准备香芹一把，切成 3 cm 小段备用。\n3、青红辣椒切丝，姜、蒜少许切碎备用。\n4、锅内烧油，油热下牛肉翻炒，待牛肉变色，捞出。\n5、锅内加入适量油烧热，加入切好的青红辣椒，姜蒜末，翻炒，加入切好的芹菜，大火翻炒，炒至断生，然后加入超好的牛肉，继续翻炒一会。\n6、调味，锅内加入盐🧂、生抽、五香粉适量，翻炒均匀，即可出锅装盘。\n炒生菜🥬 # 原料：生菜🥬，姜蒜🧄，干辣椒🌶️。\n1、准备姜蒜末、干辣椒切成段。取一大把生菜（生菜量可以多一些，四五百克，因为生菜炒了以后缩水严重）洗净，摘成一片一片备用。\n2、锅内加入油（量比平时炒菜多一些，容易炒生菜），油热加入姜蒜末，加入干辣椒段炒香，加入生菜，大火🔥翻炒。\n3、生菜炒至断生，开始调味，加入适量盐、五香粉，少许生抽，适量香醋，再翻炒稍许即可出锅装盘（生菜容易熟，不用长时间翻炒，否则变软，颜色也不好看）。\n","date":"22 March 2021","externalUrl":null,"permalink":"/2021/03/22/my_recipe_20210321/","section":"Posts","summary":"\u003cp\u003e个人菜谱备忘。\u003c/p\u003e","title":"菜谱；芹菜牛肉，清炒生菜","type":"posts"},{"content":"In my daily work, I often ssh to a remote server using a terminal emulator. My local machine is a Windows 10 desktop. In this post, I want to share how to make true color work across terminal emulator, nvim and tmux.\nPick a suitable terminal emulator # Not all terminal emulators support true colors. First, we need to use a terminal emulator that supports true colors. Both zoc terminal and xshell can support this.\nTo test whether true color works or not, run the following script on the command line:\nawk \u0026#39;BEGIN{ s=\u0026#34;/\\\\/\\\\/\\\\/\\\\/\\\\\u0026#34;; s=s s s s s s s s; for (colnum = 0; colnum\u0026lt;77; colnum++) { r = 255-(colnum*255/76); g = (colnum*510/76); b = (colnum*255/76); if (g\u0026gt;255) g = 510-g; printf \u0026#34;\\033[48;2;%d;%d;%dm\u0026#34;, r,g,b; printf \u0026#34;\\033[38;2;%d;%d;%dm\u0026#34;, 255-r,255-g,255-b; printf \u0026#34;%s\\033[0m\u0026#34;, substr(s,colnum+1,1); } printf \u0026#34;\\n\u0026#34;; }\u0026#39; If you can see a smooth color band, then true color has been activated successfully.\nEnable true color in terminal emulator # In zoc terminal, true color support is enabled by default. Previously, true color support is missing in xshell. The latest version of xshell (xshell 7) has added support for true color, but this feature is disabled by default.\nTo enable true color support in xshell, go to Tools --\u0026gt; Options, click the Advanced Tab page, under Terminal section, check the box Use true color. We need to restart xshell to activate this feature. Open a source code file using nvim, you should see that true color is working properly.\nMake true color work with tmux and nvim # However, if we use nvim inside tmux, the colorscheme is still not right. In order to make true color work inside tmux, we need a few more configuration.\nSet TERM environment variable # The correct way to set the TERM variable is via the terminal emulators.\nFor zoc terminal, go to Options --\u0026gt; Edit Session Profile. Click Emulations, in the left, choose Xterm from the list of emulations. Check TERM box below, and set it to xterm-256color. On the right, also check the box 256 color support (TERM=xterm-256color).\nFor xshell, edit the properties of current session (File --\u0026gt; Current Session Properties). Click the Terminal category, and change Terminal Type to xterm-256color.\nRestart the current connection. Run command echo $TERM to verify that TERM varialbe has been correctly set to xterm-256color.\nConfigure tmux # Open tmux config (in $HOME/.tmux.conf) and add the following settings:\n# True color settings, see https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/ for the details. set -g default-terminal \u0026#34;screen-256color\u0026#34; # If terminal supports true color, use the following options. set -ga terminal-overrides \u0026#34;,xterm-256color*:Tc\u0026#34; After these two steps, kill tmux server and start a new tmux session:\ntmux kill-server tmux new -s \u0026#34;test\u0026#34; Then start nvim, your colorscheme1 should work properly now.\nA good colorscheme to check is gruvbox, which has great support for true color.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 March 2021","externalUrl":null,"permalink":"/2021/03/17/nvim_truecolor_tmux_windows/","section":"Posts","summary":"\u003cp\u003eIn my daily work, I often ssh to a remote server using a terminal emulator. My\nlocal machine is a Windows 10 desktop. In this post, I want to share how to\nmake \u003ca href=\"https://gist.github.com/XVilka/8346728\" target=\"_blank\"\u003etrue color\u003c/a\u003e work across terminal emulator, nvim and tmux.\u003c/p\u003e","title":"Set up true color for nvim and tmux in Zoc terminal and xshell","type":"posts"},{"content":"","date":"16 March 2021","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"When starting a long-running Python program, I often run it under nohup so I can redirect all the output to nohup.out for easier inspection. I use nohup python test.py\u0026amp; to run the process in the background. Then I can run tail -f nohup.out to monitor the output message from this program.\nOne strange issue I met is that all messages from the print() function are missing. To reproduce this issue, run the following test.py with command nohup python test.py\u0026amp;:\nimport time n = 20 for i in range(n): time.sleep(0.5) print(f\u0026#34;this is loop {i}\u0026#34;) Then use tail -f nohup.out to check the output. Notice that there is no output for some time. Then, all of a sudden, all the output is printed when the program exits.\nHowever, if we directly run this program (python test.py), to our expectations, the messages are indeed shown one at a time.\nDifferent buffering behaviors of sys.stdout and sys.stderr # This has something to do with the stream buffering behavior of Python. print() function in Python will print a message to the sys.stdout stream. When we print directly to the console, in this case, the stdout stream is used interactively, it will be line-buffered, i.e., the message will be shown in the terminal once a newline is met.\nIf we use nohup, stdout is redirected to a file (nohup.out), it will be block-buffered in this case, i.e., only when the size of the output reaches a certain limit, will they be put into the destination (nohup.out file). So we can not see each print message in a timely manner. When the program exits, all the output is flushed to nohup.out, that is when we see those messages.\nThis behavior of sys.stdout and sys.stderr is documented here:\nWhen interactive, stdout and stderr streams are line-buffered. Otherwise, they are block-buffered like regular text files.\nThis explains why the messages is not shown timely if we redirect stdout to nohup.out, since stdout is block buffered in this case. Block-buffered means that Python stores the output message in a buffer, and only when the buffer reaches a certain size and can not accommodate the incoming message, the message in this buffer will be flushed and reach its destination.\nIf we use sufficiently large message, it will also be shown immediately since the output buffer is full. It seems that buffer size for print is 81921. To verify this, we modify test.py a little bit:\nimport time n = 20 size = 2048 sleep_time = 1 for i in range(n): time.sleep(sleep_time) print(f\u0026#34;{i}\u0026#34; + \u0026#34;a\u0026#34; * size) If we run the above script with nohup python test.py \u0026amp; and then observe the output via tail -f nohub.out, we will find that it will print 4 lines at a time, i.e., lines starting with 0, 1, 2, and 3 will be printed out first, then lines starting with 4, 5, 6, and 7, etc.\nFor stderr, users may want to see the error messages immediately when they are produced even if it is redirected. In Python 3.9, the behavior of stderr is changed. The new doc is:\nWhen interactive, the stdout stream is line-buffered. Otherwise, it is block-buffered like regular text files. The stderr stream is line-buffered in both cases.\nThus, after Python 3.9, stderr will always be line-buffered, no matter how the error message is displayed, i.e., on the terminal or redirected to a file.\nShow the message without buffering # To show the printed message immediately, we may run Python in unbuffered mode with the -u flag:\n-u : force the stdout and stderr streams to be unbuffered\nnohup python -u test.py Another way is to add flush=True to print() function so that output will be flushed to its destination forcibly.\nprint(f\u0026#34;this is loop {i}\u0026#34;, flush=True) References # What does the different buffering behavior mean? https://www.oreilly.com/library/view/unix-filesystems-evolution/9780471456759/chap04-sec004.html What do fully buffered, line buffered and unbuffered mean in C? Python - nohup.out don\u0026rsquo;t show print statement Nohup is not writing log to output file Python bugs mailing list: Improve documentation of stdout/stderr buffering in Python 3.x How to flush output of print function? Disable output buffering Related to io.DEFAULT_BUFFER_SIZE.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 March 2021","externalUrl":null,"permalink":"/2021/03/16/std_stream_buffering_in_python/","section":"Posts","summary":"\u003cp\u003eWhen starting a long-running Python program,\nI often run it under \u003ca href=\"https://en.wikipedia.org/wiki/Nohup\" target=\"_blank\"\u003enohup\u003c/a\u003e so I can redirect all the output to \u003ccode\u003enohup.out\u003c/code\u003e for easier inspection.\nI use \u003ccode\u003enohup python test.py\u0026amp;\u003c/code\u003e to run the process in the background.\nThen I can run \u003ccode\u003etail -f nohup.out\u003c/code\u003e to monitor the output message from this program.\u003c/p\u003e","title":"print message not shown in nohup.out?","type":"posts"},{"content":"The other day, when I was updating the source code with the project running, I noticed that the exception stack trace printed is not right, i.e., the printed error line is actually not the line that is triggering the exception.\nWhy did this happen? Is it related to the modification to the source file? At first, I thought it absurd. Based on my knowledge, when Python runs the source code, it will load it into memory. Since it is executing the code in the memory, so it should print the offending line that is kept in the memory.\nTo figure it out, I write the following code (test.py):\nimport time time.sleep(10) print(1/0) I run it (python test.py), then add something below the time statement:\nimport time time.sleep(10) # some comment print(1/0) Then program reaches the print statement and printed the following exception:\nTraceback (most recent call last): File \u0026#34;test.py\u0026#34;, line 4, in \u0026lt;module\u0026gt; # some comment ZeroDivisionError: division by zero Surprisingly, the stack trace printed is the 4th line in the modified test.py, not the original 4th line (print(1/0)).\nSo my perception of how Python runs its code is not fully correct. I searched on the internet and found some explanation about this, for example, discussion here.\nWhen Python run a source code, it will first compile the source code into the so called bytecode. Then the bytecode is executed by the Python virtual machine.\nSo what is really running is the bytecode, not the original source code. We can use the dis package in standard library to inspect the bytecode produced by Python.\nimport dis my_str = \u0026#34;import time\\n\\ntime.sleep(10)\\nprint(1/0)\u0026#34; print(dis.dis(my_str)) It will show the bytecode along with other infos for the source code:\n│ 1 0 LOAD_CONST 0 (0) │ 2 LOAD_CONST 1 (None) │ 4 IMPORT_NAME 0 (time) │ 6 STORE_NAME 0 (time) │ │ 3 8 LOAD_NAME 0 (time) │ 10 LOAD_METHOD 1 (sleep) │ 12 LOAD_CONST 2 (10) │ 14 CALL_METHOD 1 │ 16 POP_TOP │ │ 4 18 LOAD_NAME 2 (print) │ 20 LOAD_CONST 3 (1) │ 22 LOAD_CONST 0 (0) │ 24 BINARY_TRUE_DIVIDE │ 26 CALL_FUNCTION 1 │ 28 POP_TOP │ 30 LOAD_CONST 1 (None) │ 32 RETURN_VALUE Number in the first column corresponds to the code line in the original script. For example, the first line (import time) is turned into 4 bytecode instructions.\nAs a result, the original source code is not kept by Python in the memory. When an exception happens, python will try to find the corresponding source file and print the exact line in this source file. It does not check whether the source file has been changed since running. Hence, the mismatch between the printed exception line and the actual exception line.\nSo this is just how Python works under the hood. There are discussion on changing this behaviour, but it seems that the Python core developers are not going to change it any time soon.\nReferences # Why does error traceback show edited script instead of what actually ran? What will happen if I modify a Python script while it\u0026rsquo;s running? See CPython run: Getting to know your Python interpreter: https://www.youtube.com/watch?v=tzYhv61piNY Python virtual machine: https://www.ics.uci.edu/~brgallar/week9_3.html python bytecode https://www.youtube.com/watch?v=cSSpnq362Bk https://nedbatchelder.com/blog/201803/is_python_interpreted_or_compiled_yes.html ","date":"13 March 2021","externalUrl":null,"permalink":"/2021/03/13/python_wrong_stack_printed/","section":"Posts","summary":"\u003cp\u003eThe other day, when I was updating the source code with the project running, I\nnoticed that the exception stack trace printed is not right, i.e., the printed\nerror line is actually not the line that is triggering the exception.\u003c/p\u003e","title":"Why is Wrong Stacktrace Printed for My Code?","type":"posts"},{"content":"本文总结简易家庭版腊汁肉夹馍中的腊汁肉制作。\n原料 # 五花肉🐖（肥瘦相间，三分肥，七分瘦） 冰糖或白砂糖、料酒、酱油、老抽、食盐 小茴香，花椒，八角、桂皮、丁香，草果、香叶、白芷，肉蔻，砂仁，草果，白胡椒，生姜、大葱 制作步骤 # 取适量清水，加入花椒、盐适量，放入五花肉，放在冰箱冷藏浸泡一夜，把肉里面的血水泡出来。 猪肉取出洗净，切成小一点的块，锅中烧开水，下猪肉，稍微煮一下，不要时间太长，几分钟即可。 锅中热油，取十几颗冰糖，或者适量的白砂糖，加入锅中，加入几片生姜，注意油温不要太高，不断翻炒冰糖，直至冰糖变成粘稠的液体，并微微起泡呈褐色，注意一定要不停搅动，不要让糖汁糊了。加入刚才开水中煮好的猪肉，翻炒给猪肉均匀上糖色，锅中加适量热水，保证水没过猪肉，加入八角、桂皮、香叶、草果、孜然粒、陈皮、生姜片、大葱，再放入几颗冰糖，倒入适量的老抽，加盐（盐的量要多一些，保证汤比平时吃的要咸一些，猪肉才能入味）。 大火烧开，然后转小火慢慢熬制 2 个半小时以上（也可以放到电饭煲里面煮，容易控制时间），保证最后筷子可以轻松从肉中穿过肉就算煮好了。喜欢吃鸡蛋的，可以中途放入几个鸡蛋，鸡蛋煮熟后，敲碎蛋壳，做个卤蛋味道也是极好的。 煮好的肉，肥肉软糯，瘦肉酥软而不柴，颜色非常好。\n参考 # 陕西美厨娘：https://www.youtube.com/watch?v=WrzIOXC_zow 品诺王老师：https://www.youtube.com/watch?v=PVonFM-Dlhw\u0026t=135s 小高姐：https://www.youtube.com/watch?v=Z1rNXs6Vtms ","date":"7 March 2021","externalUrl":null,"permalink":"/2021/03/07/how_to_make_la_zhi_rou/","section":"Posts","summary":"\u003cp\u003e本文总结简易家庭版腊汁肉夹馍中的腊汁肉制作。\u003c/p\u003e","title":"腊汁肉制作","type":"posts"},{"content":"作为北方人 and 面食爱好者，周末尝试做了四川美食豌杂面，本文总结家庭版豌杂面的制作。\n需要的原料 # 干豌豆或青豆 小葱、香菜、大蒜、生姜 干朝天椒、干青椒、白芝麻 肥瘦猪肉馅 郫县豆瓣酱 料酒/白酒 黄豆酱油、醋、鸡精、芝麻酱、宜宾芽菜 青菜(油麦菜，小青菜，生菜等均可) 碱面/细面 豌豆制作 # 有干豌豆的话，提前泡发，在高压锅压一下，不要压力太大，否则豌豆太软，一碰就碎。没有豌豆的话，可以用青豆代替。\n辣椒油，花椒油制作 # 开小火，锅里放朝天椒，不断翻搅，把辣椒炒香，不要把辣椒炒的太过（即辣椒发黑了）。炒好的辣椒出锅，捣碎，或者用粉碎机粉碎。\n同样操作，把花椒(青花椒好一些，没有就普通花椒)在锅里稍微炒一下，捣碎。\n锅里热油(油稍微要多一些)，油温不要太高(冒烟的时候温度就高了)，热油分别泼到粉碎好的辣椒和花椒面里面，搅拌均匀。\n锅内热油，放一些白芝麻，泼到刚才的油辣椒里面，增香。\n芽菜制作 # 使用宜宾芽菜，提前用油炒制一下。没有芽菜不放也行，或者放点切碎的榨菜。\n肉酱制作 # 取少量郫县豆瓣酱，用刀剁碎，锅内热油，先炒豆瓣酱，然后加入肉沫(三肥七瘦)，把肉炒至变色，再加入一些料酒或者白酒去腥，翻炒以后，加入适量水沒过肉，开大火烧开，然后转小火熬制一个小时左右，把水熬干即可。\n底料制作 # 碗底放适量辣椒油，花椒油，鸡精，少量芝麻酱(芝麻酱太稠，需要用水化开，芝麻酱量别太多)，加入适量生蒜沫和生姜沫，最后加入适量黄豆酱油，少许醋。\n煮面 # 烧水煮面，面可以选择碱面，没有就用细面即可，没要求，面快煮熟的时候，加入一些生菜或者其他青菜，有什么放什么，不拘泥具体菜，碗底加入少量面汤，把底料化开，\n最后，捞出面和青菜，加入豌豆，肉酱，再加入适量芽菜，撒上葱花和香菜沫，最后搅拌均匀，一碗美味的豌杂面就做成了。\n参考 # 老饭骨 YouTube 频道杂酱面制作教程 ","date":"6 March 2021","externalUrl":null,"permalink":"/2021/03/06/how_to_make_wan_za_mian/","section":"Posts","summary":"\u003cp\u003e作为北方人 and 面食爱好者，周末尝试做了四川美食豌杂面，本文总结家庭版豌杂面的制作。\u003c/p\u003e","title":"如何制作一碗美味的豌杂面","type":"posts"},{"content":"","date":"26 February 2021","externalUrl":null,"permalink":"/tags/ime/","section":"Tags","summary":"","title":"IME","type":"tags"},{"content":"文接上回，Vim 虽然贵为编辑器之神，有一个没有解决好的问题就是输入中文，以及中英文的切换问题。最近也尝试了一些试图利用 Vim 提供的功能，在 Vim 中实现输入法的插件。本文做一总结点评。\nVimIM # VimIM 是一个比较早尝试在 Vim 中实现输入法的插件，可惜在 2012 年就停止更新了。2012 年正是 Vim 的灰暗时期，当时连 job api 都没有出来，Vim 中调用函数只能是 blocking 方式的。\n使用方式，首先下载 VimIM，可以用插件管理器或者手动下载。\nPlug \u0026#39;vim-scripts/VimIM\u0026#39; 但是这个仓库只包含代码，不包含数据，从 这里 可以下载到字典数据，把 vimim.cjk.txt， vimim.gbk.bsddb 和 vimim.txt 放到 VimIM 插件的 plugin 目录下。在我的系统上，VimIM 安装目录在 ~/.local/share/nvim/plugged/VimIM/plugin\nwget -P ~/.local/share/nvim/plugged/VimIM/plugin https://raw.fastgit.org/vimim/vimim/master/plugin/vimim.cjk.txt wget -P ~/.local/share/nvim/plugged/VimIM/plugin https://raw.fastgit.org/vimim/vimim/master/plugin/vimim.gbk.bsddb wget -P ~/.local/share/nvim/plugged/VimIM/plugin https://raw.fastgit.org/vimim/vimim/master/plugin/vimim.txt 下面是最小的可运行配置：\nset runtimepath+=/home/haojiedong/.local/share/nvim/plugged/VimIM \u0026#34; 关闭云输入 let g:Vimim_cloud=-1 打开 Vim，进入 insert 模式，使用 Ctrl + Shift + / 开启中文输入（这个是一个开关，再按一次关闭中文输入），输入英文字符，会出现弹出菜单，按数字可以选择汉字。\n体验：输入速度很快，并且匹配很准，没有延迟的感觉。\n按 = 和 - 可以往后、往前翻页，Tab 可以在给出的候选项之间切换，按空格可以让选中的词语上屏，按 Enter 输入英文字符。\n在 Vim 7.4 中测试可以运行，使用 Neovim 无法工作，不清楚具体是哪里有问题，这个插件好久没更新了，可能是不兼容了。\n参考 # https://shenyu.me/2016/01/03/vim-plugin-vimim.html https://www.vim.org/scripts/script.php?script_id=2506 https://code.google.com/archive/p/vimim/ https://github.com/howiefh/vimfiles/blob/master/vimfiles/doc/1_vimim.cnx ZFVimIM # ZFVimIM 是一个比较新的用 Vim 实现的输入法。\n使用如下的配置：\ncall plug#begin(expand(\u0026#39;~/.local/share/nvim/plugged\u0026#39;)) Plug \u0026#39;ZSaberLv0/ZFVimIM\u0026#39; Plug \u0026#39;ZSaberLv0/ZFVimJob\u0026#39; call plug#end() \u0026#34; 使用本地 db 的配置 function! s:zfvimim_init() abort let db = ZFVimIM_dbInit({\u0026#39;name\u0026#39; : \u0026#39;jd_db\u0026#39;}) call ZFVimIM_cloudRegister({ \\ \u0026#39;mode\u0026#39; : \u0026#39;local\u0026#39;, \\ \u0026#39;dbId\u0026#39; : db[\u0026#39;dbId\u0026#39;], \\ \u0026#39;repoPath\u0026#39; : expand(\u0026#39;~/scratch_dir/\u0026#39;), \\ \u0026#39;dbFile\u0026#39; : \u0026#39;pinyin.txt\u0026#39;, \\ \u0026#39;dbCountFile\u0026#39; : \u0026#39;pinyin_count.txt\u0026#39;, \\ }) endfunction augroup zfvim_conf autocmd! autocmd VimEnter * call s:zfvimim_init() augroup END 接下来需要下载字典，也就是作者说的 db，从 这里 下载拼音文件 pinyin.txt 和 count 文件 pinyin_count.txt,放到一个测试的目录，上面的配置中，repoPath 对应的就是这个文件存放的目录。\n然后使用上述配置打开 Neovim，在插入模式下，使用 ;; 打开中文输入模式，开始输入即可。由于 pinyin.txt 只包含单个字拼音的数据，所以一点也不智能，输入拼音词组，需要自己一个个去选择数字来组词，所以速度比较慢。可以使用这个插件提供的 IMAdd 命令添加个人词组。例如， :IMAdd 云淡风轻 yundanfengqing。\n加载一个更大的词库，能够缓解输入时需要自己组词的尴尬，可以使用 这里 提供的 pinyin_huge.txt 和 pinyin_huge_count.txt 测试。\n这个插件还支持云输入模式，需要添加下面的插件和配置：\n\u0026#34; 插件地址：https://github.com/ZSaberLv0/ZFVimIM_openapi Plug \u0026#39;ZSaberLv0/ZFVimIM_openapi\u0026#39; let g:ZFVimIM_openapi_enable=1 体验：有一些延迟卡顿，但是在 Neovim 下是可以正常使用的，云输入法挺好用的，比较准确（前提是可以正常使用 wget 进行请求）。\n","date":"26 February 2021","externalUrl":null,"permalink":"/2021/02/26/ime_inside_vim/","section":"Posts","summary":"\u003cp\u003e文接\u003ca href=\"https://jdhao.github.io/2021/02/25/nvim_ime_mode_auto_switch/\" target=\"_blank\"\u003e上回\u003c/a\u003e，Vim 虽然贵为编辑器之神，有一个没有解决好的问题就是输入中文，以及中英文的切换问题。最近也尝试了一些试图利用 Vim 提供的功能，在 Vim 中实现输入法的插件。本文做一总结点评。\u003c/p\u003e","title":"Vim 实现的输入法体验","type":"posts"},{"content":" 更新日志 2023-06-18：增加 macism 以及 im-select.nvim 使用。 2022-11-07：针对 macbook M1 CPU 设置添加说明，添加 smartim 插件使用。 Vim/Neovim 下输入中文最大的痛，就是在 Normal 模式下，需要频繁从中文模式切换到英文模式，来输入 Vim 的各种命令。本文总结几款插件，可以帮助我们在 macOS、Windows 下，进入 Normal 模式的时候自动切换到英文输入。\nmacOS # vim-barbaric # vim-barbaric 是一款帮助用户自动设置输入法模式的插件。\n安装依赖 # 在 macOS 下，需要额外安装 xkbswitch-macosx：\ncurl -o /usr/local/bin/xkbswitch https://raw.githubusercontent.com/myshov/xkbswitch-macosx/master/bin/xkbswitch 在 macOS M1 芯片下，以上预编译的 binary 文件无法适用（仅针对 intel cpu），可以使用 这里 提供的 fork，自行编译，然后放到 /usr/local/bin 目录。\n插件安装使用 # 然后使用插件管理器安装该插件即可：\nPlug \u0026#39;rlue/vim-barbaric\u0026#39; 该插件开箱即用，无需额外设置。\nvim-xkbswitch # 另外一款插件是 vim-xkbswitch。\n安装依赖 # 这个插件也需要安装 xkbswitch-macosx，参考上面的安装步骤。另外该插件依赖 libxkbswitch-macosx，需要安装该库：\ncurl -o /usr/local/lib/libxkbswitch.dylib https://github.com/myshov/libxkbswitch-macosx/raw/master/bin/libxkbswitch.dylib 如果使用的 M1 芯片的 mac，则需要自己编译，参考 这个 issue，使用如下命令编译：\ngcc -dynamiclib libxkbswitch.c -o bin/libxkbswitch.dylib 把生成的动态库放到 /usr/local/lib 下面:\ncp bin/libxkbswitch.dylib /usr/local/lib 插件安装使用 # 首先安装该插件：\nPlug \u0026#39;lyokha/vim-xkbswitch\u0026#39; 最后，在 Neovim 配置中加入下面的设置即可：\nlet g:XkbSwitchEnabled = 1 vim-macos-ime # 依赖安装 # 首先安装这款插件的依赖 macism：\nbrew tap laishulu/macism brew install macism 直接在命令行输入 macism 命令，可以插件当前正在使用的输入法的名称，这会在插件的设置中用到。\n插件安装使用 # 使用 Packer.nvim 的安装 vim-macos-ime 方法如下：\nuse { \u0026#34;laishulu/vim-macos-ime\u0026#34;, config = function() vim.g.macosime_normal_ime = \u0026#39;com.apple.keylayout.ABC\u0026#39; vim.g.macosime_cjk_ime = \u0026#39;com.apple.inputmethod.SCIM.ITABC\u0026#39; end} 变量 macosime_normal_ime 用来设置 normal 模式下的英文输入法，变量 macosime_cjk_ime 用来设置中文输入法，这两个变量一定要根据实际情况设置正确，否则插件无法工作。\n有了以上的设置，安装插件以后，进入 insert 模式，插件会根据前一个字符是否是中文判断切换到中文还是英文输入法，虽然还不算非常智能（无法记录推出 insert 之前用的什么输入法），总体还可用。\nim-select.nvim # 依赖安装 # curl -LO https://github.com/daipeihust/im-select/raw/8080ad18f20218d1b6b5ef81d26cc5452d56b165/im-select-mac/out/apple/im-select chmod u+x im-select mv im-select /usr/local/bin 第一次使用需要在系统设置 “Privacy \u0026amp; Security” 给这个可执行程序权限，否则无法运行。\n插件安装使用 # 使用 Packer 安装 im-select.nvim 方法如下：\nuse { \u0026#39;keaising/im-select.nvim\u0026#39;, config = function() require(\u0026#39;im_select\u0026#39;).setup { default_im_select = \u0026#34;com.apple.keylayout.ABC\u0026#34; } end} default_im_select 参数设定 normal 模式下输入法，需要根据自己的情况设置。这款插件工作良好，可以记录上次离开 insert 之前使用的输入法，比 vim-macos-ime 智能一点。\nsmartim # 使用 packer.nvim 安装 smartim 如下：\nuse { \u0026#34;ybian/smartim\u0026#34;, event = { \u0026#34;InsertEnter\u0026#34; }, config = function () -- default IME mode vim.g.smartim_default = \u0026#34;com.apple.keylayout.ABC\u0026#34; end} Note that we should set variable smartim_default based on our case. We can run the im-select executable without argument to get current mode:\n./plugin/im-select 这款插件和 im-select.nvim 其实差不多，也是以来 im-select ，只不过这个插件把 im-select 可执行文件集成到插件本身，不需要用户单独安装了。。。并且插件只支持了 macOS。\nWindows # 以上的 im-select.nvim, vim-xkbswitch 也可以在 Windows 工作，有需要可以参考具体文档来配置。\nneuims # Windows 下可以安装 neuims:\nif g:is_mac Plug \u0026#39;lyokha/vim-xkbswitch\u0026#39; elseif g:is_win Plug \u0026#39;Neur1n/neuims\u0026#39; endif 然后使用命令 IMSToggle 打开这个插件的功能。打开功能以后，使用 ESC 离开插入模式，输入法会自动切换到 US keyboard 模式，重新按 i 进入插入模式，会切换到之前的输入法 (注意是切换到了输入法的默认状态，如果输入法默认状态是英文输入，在中文输入状态，按 ESC 离开插入模式，再进入插入模式，输入法处于英文输入状态，目前似乎还不支持切换到输入法上次使用的状态，不过这已经比较好了)。\n","date":"25 February 2021","externalUrl":null,"permalink":"/2021/02/25/nvim_ime_mode_auto_switch/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003e更新日志\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2023-06-18：增加 macism 以及 im-select.nvim 使用。\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-11-07：针对 macbook M1 CPU 设置添加说明，添加 smartim 插件使用。\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eVim/Neovim 下输入中文最大的痛，就是在 Normal 模式下，需要频繁从中文模式切换到英文模式，来输入 Vim 的各种命令。本文总结几款插件，可以帮助我们在 macOS、Windows 下，进入 Normal 模式的时候自动切换到英文输入。\u003c/p\u003e","title":"如何让 Neovim 中文输入时自动切换输入法","type":"posts"},{"content":"","date":"20 February 2021","externalUrl":null,"permalink":"/tags/latex/","section":"Tags","summary":"","title":"LaTeX","type":"tags"},{"content":"2022-01-19: With the release of VimTeX v2.8, all the hack here may not be needed anymore.\nUpdate log 2021-10-22: Update the script to write server name. 2021-10-10: Fix typo and minor tweak. Since --remote option hasn\u0026rsquo;t been restored by Neovim, it is actually not very straightforward to set up inverse search for PDF files when we are editing large LaTeX files with the help of VimTeX.\nI spend some time figuring out how to do it on both Windows and macOS and succeed. I thought it would be helpful for people looking for the solution.\nFirst step # Although Neovim removed the --remote option, it has a complete RPC api by which a client can talk to it and controls its behavior. When Neovim starts, it always starts a server1. The neovim-remote project utilizes the RPC api of neovim to mimic the --remote behavior and its friends. First, we need to install this package:\npip install neovim-remote It comes with an executable named nvr. To connect to a running Neovim instance and run a command, we can use the following command:\nnvr --servername server_address -c \u0026#34;echo \u0026#39;hello\u0026#39;\u0026#34; Option --servername specifies a valid Neovim server address (i.e., the value v:servername). Option -c means to run a command in the specified Neovim instance.\nSecond step # Each time we start a new neovim instance, the server address changes. It is cumbersome to copy this address when we want to communicate with this Neovim instance. We can write the server address to a temporary file and read the server address from that file when running the nvr command.\nAdd the following setting to nvim config:\nfunction! s:write_server_name() abort let nvim_server_file = (has(\u0026#39;win32\u0026#39;) ? $TEMP : \u0026#39;/tmp\u0026#39;) . \u0026#39;/vimtexserver.txt\u0026#39; call writefile([v:servername], nvim_server_file) endfunction augroup vimtex_common autocmd! autocmd FileType tex call s:write_server_name() augroup END When we open a LaTeX source file, the server name will be written to vimtexserver.txt so that we can later read it easily.\nThird step # Now we need to set up the corresponding PDF viewer to do inverse search. The setup differs based on your system and PDF viewer.\nSkim on macOS # Open Skim PDF viewer, open the Preferences menu (shortcut: Command+,) and go to Sync page. Set up the section PDF-Tex Sync support, use the following settings:\nPreset: Custom Command: nvr Arguments: --servername `cat /tmp/vimtexserver.txt` +\u0026quot;%line\u0026quot; \u0026quot;%file\u0026quot; To start inverse search, press Shift and Command, then click the text you want to inv-search.\nSumatra PDF on Windows # Open Sumatra PDF, go to Settings --\u0026gt; Options, in the bottom part, there is a section Set inverse search command-line, put the following command there:\ncmd /c for /F %i in (\u0026#39;type C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\vimtexserver.txt\u0026#39;) do nvr --servername %i -c \u0026#34;normal! zzzv\u0026#34; +\u0026#34;%l\u0026#34; \u0026#34;%f\u0026#34; The meaning of %f and %l:\n%f: tex source file path corresponding to current pdf. %l: line in the original tex file. I know the above command is complicated and looks super weird, but it\u0026rsquo;s the only way that works out of the numerous other ways I have tried. Note that cmd /c is needed, without which, Sumatra PDF will complain that the inverse search command is wrong:\nCan not start inverse search command. Please check the command line in the settings.\nDouble click somewhere in the PDF file, your cursor in nvim/nvim-qt should go to the corresponding line in the file buffer.\nI have also posted this setup on VimTeX repo, check this issue.\nConclusion # In this post, I give a summary on how to set up inverse search for Neovim on different platforms. After all these setup, inverse search should work out of the box without any manual labor.\nReferences # echo the content of a file to command line on Windows https://superuser.com/q/162713/736190 https://superuser.com/q/256651/736190 Batch/cmd equivalent of Bash backtick https://stackoverflow.com/q/2768608/6064933 https://superuser.com/q/289344/736190 You can find the name of the server by running command :echo v:servername inside Neovim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 February 2021","externalUrl":null,"permalink":"/2021/02/20/inverse_search_setup_neovim_vimtex/","section":"Posts","summary":"\u003cp\u003e\u003cfont size=\"5\" color=\"red\"\u003e2022-01-19: With the release of \u003ca href=\"https://github.com/lervag/vimtex/releases/tag/v2.8\" target=\"_blank\"\u003eVimTeX v2.8\u003c/a\u003e, all the hack here may not be needed anymore.\u003c/font\u003e\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-10-22: Update the script to write server name.\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-10-10: Fix typo and minor tweak.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eSince \u003ca href=\"https://github.com/neovim/neovim/issues/1750\" target=\"_blank\"\u003e\u003ccode\u003e--remote\u003c/code\u003e option hasn\u0026rsquo;t been restored by Neovim\u003c/a\u003e, it is actually not very\nstraightforward to set up inverse search for PDF files when we are editing\nlarge LaTeX files with the help of \u003ca href=\"https://github.com/lervag/vimtex\" target=\"_blank\"\u003eVimTeX\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI spend some time figuring out how to do it on both Windows and macOS and\nsucceed. I thought it would be helpful for people looking for the solution.\u003c/p\u003e","title":"Set up Inverse Search for LaTeX with VimTeX and Neovim","type":"posts"},{"content":"Git learning notes.\nfatal: no files added # When I add files under a directory using git add some_folder/*, I see the following error message:\nThe following paths are ignored by one of your .gitignore files: ppt/__pycache__ Use -f if you really want to add them. fatal: no files added This is because * is interpreted by the system, so it will add all files under a directory. If some files under this directory are in the .gitignore, you will see the above error message.\nRef:\nhttps://stackoverflow.com/q/12084227/6064933 git ask for username and password each time I push # I cloned a remote repo using https protocol. Each time when I push to this repo, git asks me to enter my username and password. This is annoying.\nTo prevent from entering username each time, we can add username to remote repo url like this:\ngit remote set-url origin https://jdhao@github.com/jdhao/toy_project.git where jdhao is my username. In this way, we do not need to enter username when we push to remote. In fact, we can provide the password after the username like this:\ngit remote set-url origin https://jdhao:some_pwd@github.com/jdhao/toy_project.git However, it is not safe to do so, since your password are stored in plain text now.\nFor password, if we are in Linux, we can use the following settings:\ngit config --global credential.helper \u0026#39;cache --timeout=3600\u0026#39; The password will be cached in memory for 3600 seconds, which means that you do not need to input password for 1 hour. Tweak the time interval to suit your need.\nRef:\nhttps://docs.github.com/en/github/using-git/caching-your-github-credentials-in-git#platform-linux Is there a way to cache GitHub credentials for pushing commits? Compare same file from different branches # Sometimes, I want to see the difference of a file on different branches. For example, to find the difference for foo.py on master and dev branch. There are two slightly different ways to do this.\ngit diff master..dev path/to/foo.py git diff master dev -- path/to/foo.py or\ngit diff master:path/to/foo.py dev:path/to/foo.py Ref:\nHow to compare files from two different branches? Clone a git repository without history? # Due to slow networking speed or other reasons, we may want to clone a repository without its huge history. We can use --depth to restrict the number of history to include, --depth 1 will only clone the last commit, effectively meaning that no history is cloned.\ngit clone --depth 1 http://url/to/git/project Ref:\nhttps://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt Clone git repository without history? How to check last commit for a given line only? # By default, git-blame will print out the last commit info for each line in a file. What if we are only interested in a particular line range? In this case, we can use -L to restrict the line range. For example, if I want to blame line 4-5 for file options.vim, I can use the following command:\ngit blame -L 4,5 core/options.vim Ref:\nRetrieve the commit log for a specific line in a file? ","date":"17 February 2021","externalUrl":null,"permalink":"/2021/02/17/git_notes_s3/","section":"Posts","summary":"\u003cp\u003eGit learning notes.\u003c/p\u003e","title":"Git Learning Notes (3)","type":"posts"},{"content":"如何制作美味的饺子馅。\n加鸡蛋版本 # 原料 # 五花肉（肥瘦 3:7），葱姜，花椒，八角，胡椒粉，蚝油，盐，白糖，鸡蛋。\n可选：胡萝卜，玉米，韭菜等蔬菜。\n步骤 # 选用五花肉，饺子馅带有肥肉会好吃一些，全瘦肉做出来的馅太干，肥瘦比例 4:6 或者 3:7（自己看着办，喜欢瘦的就瘦肉多一些）。用刀或者搅拌机把肉剁成馅，一定要剁碎，避免有大颗粒肉。\n用温水炮制葱姜水，原料：葱花，姜片，花椒，八角。葱姜水不要太多，因为肉馅后面加上蔬菜以后还会出水，水太多，不好包饺子。葱姜水泡十分钟以上，让味道都浸入水中。\n葱姜水分多次加入猪肉馅中，边加边沿着一个方向搅拌，搅拌到猪肉上劲（也就是搅拌的时候有阻力，粘稠感）。\n加入胡椒粉，盐，蚝油，生抽，白糖适量到肉馅中，肉馅中再打入一个鸡蛋，搅拌均匀。\n切适量的葱花，锅中热油，把葱花放进去煸香，制作葱油，待葱花变黑即可。葱油倒进肉馅里，搅拌均匀。想要更香的可以再放适量的芝麻油。\n根据个人的喜好，加入切碎的配菜，例如可以加入大葱，胡萝卜，玉米。想要吃韭菜猪肉，就加入切碎的韭菜。搅拌均匀即可。\n至此，美味的猪肉馅就制作完成了。\n参考 # https://www.youtube.com/watch?v=bYvQ6eUY0qI https://www.youtube.com/watch?v=OBZVkExf27I 不加鸡蛋版本 # 原料 # 五花肉(肥瘦比例 3:7)，大葱，姜，花椒粒，八角，桂皮，香叶，草果，小茴香，生抽，蚝油\n原料准备 # 猪肉去皮，切成小块，放入搅拌机粉碎 葱姜水制作，切适量葱姜丝，放入碗里，加入适量花椒粒，加入温水浸泡20分钟(温水盖住葱姜即可，水别太多)，手抓一下，让原料味道充分浸入水中，过滤只留下水。 香料油制作，锅中热油，加入八角，桂皮，香叶，草果，小茴香，充分炒制，油温别太高，炒制两三分钟，让香料味道进入油中，倒入碗里放凉。 准备较多的大葱和姜，切碎，越碎越好。 制作 # 猪肉馅分批加入葱姜水，不断搅拌肉馅让肉馅上劲 加入适量的盐，生抽，蚝油，继续搅拌均匀肉馅。 加入切好的葱姜碎到肉馅中，搅拌均匀即可。 注：如果不喜欢大葱馅，大葱也可以换成韭菜，小茴香或者荠菜等，蔬菜最好是包饺子的时候再放入 否则可能会出水，影响肉馅质感。\n参考 # https://m.youtube.com/watch?v=6xeFCdR4Ync ","date":"13 February 2021","externalUrl":null,"permalink":"/2021/02/13/how_to_make_dumpling_filling/","section":"Posts","summary":"\u003cp\u003e如何制作美味的饺子馅。\u003c/p\u003e","title":"如何制作饺子馅","type":"posts"},{"content":"","date":"11 February 2021","externalUrl":null,"permalink":"/tags/fiction/","section":"Tags","summary":"","title":"Fiction","type":"tags"},{"content":"用文字记录生活，给自己的生命留下印迹，我的 2020。\n工作 # 2020 年是我在 vivo 工作的第二年，由于新冠，春节假期比往常延长一周。刚开始上班的一个多月，公司允许员工在家办公，我们组采用的是轮流去公司的方式，到了三月中下旬，中国的疫情逐渐被控制住，大家才开始正常前往公司上班，一切基本恢复了正常，只是上班都需要戴着口罩。另外一个变化是会议大部分变成了视频会议，不再非会议室不可了。这一年主要负责两个算法项目，一个是 vivo 手机上智慧视觉的“图片转 PPT” 功能，这个功能可以把用户用手机拍摄的 PPT 幻灯片，恢复为可编辑的 PowerPoint 电子文件，做到排版和原图基本一致，文字和表格等元素可编辑。另外一个负责的项目是智慧视觉里面的“Wi-Fi 识别” ，使用这个功能的时候，只需拍摄一张带有 Wi-Fi 账号和密码的照片，手机就可以自动提取账号和密码信息，用户轻点即可连接 Wi-Fi。这两个功能都在 vivo 发布的 IQOO5 上线。参与这两个项目，也让我对产品有了一些思考，例如 Wi-Fi 识别功能，用户在使用智慧视觉时，不能明显看到这个功能的提示，拍摄了 Wi-Fi 图片才会调用这个功能，导致很多用户根本不知道有这样一个功能，这样的产品设计显然是有问题的。\n全面使用 Neovim 处理文本文件编辑工作（写代码、写文档）超过两年了，2020 年当然是继续精进自己的 Vim 技能，学习新的东西，尝试使用新的插件。自动补全全面转向使用 LSP，全年向我的 Neovim 配置仓库 提交 commit 304 次，写了 24 篇关于 Vim 或者 Neovim 使用的文章。最高兴的事情，是 2020 年下半年，我写了有生以来第一个 Vim 插件，better-escape.vim，用以解决离开 Vim 插入模式存在的小问题，很开心自己的 Vim 知识不断增长，终于到了可以独立制作插件的程度。Vim 学习无止境，还有很多东西待探索。\n读书 # 2020 年读书数量比 2019 年要少，上半年非常忙，看了几本短小的书，下半年时间稍微宽裕些，但也没看太多的书，看完《American Prometheus》以后一段时间，有点倦怠了，没有什么有兴趣的书，后面有一段时间就没怎么看书。对读过的书稍作总结吧:\n《One Billion Customers》: 作者之前是路透社的记者，在书里讲了一些和中国人打交道的“潜规则”，里面有很多篇,记录发生在中国上世纪八九十年代的事情，例如，中金公司是如何成立的以及刚开始的发展，作者作为一个外国人却写出了很多中国普通人都不了解的故事，当然这本书在国内上架不了。阮一峰曾经也写了一篇这本书的观后感。\n《活着回来的男人》: 作者是日本历史学家，在书中讲述了他的父亲小熊谦二的一生，特别是他父亲在二战日本投降前几天前往战场，还未上阵就被苏联俘虏，前往集中营的经历，以及战后随着日本经济起飞年代，作者的父亲作为普通日本人的生活，以此折射出日本社会的变迁，非常有意思的一本书。记得很清楚的一个情节是作者的父亲在战后做体育用品生意，在 1960 年代就给家里添置了洗衣机等设备，日本普通人的生活在 60 年代就达到了这种程度。\n《指数基金投资指南》: 决定投资基金以后，看的唯一一本理财书，断断续续看完了，了解了基金的基本知识。\n《繁花》: 评价很高的一本沪语小说，写了沪生，阿宝，小毛等人从上世纪 60 年代到 90 年代的生活，有一种上海的味道。我看这本书是因为先听到了作者金宇澄在许知远《十三邀》中，谈到了他对“渣男”这个词的理解，他觉得这是一个很肤浅的词，缺乏思考，一个词怎么能概括复杂的人性呢1。\n《American Prometheus》: 非常棒的一本书，讲述了原子弹之父罗伯特·奥本海默的传奇一生，了解了很多此前不知道的历史，奥本海默如此聪明的人，在博士期间曾有过一段痛苦抑郁的生涯。专门写了一篇博文总结这本书。\n理财 # 以前有一个很 naive 的想法，觉得钱不多，理财没有意义，除了放了点在余额宝里面，剩下的钱就一直放在银行卡里面没有进行任何操作。2020 年开始觉得理财是一个人必须学习的一项技能，我们都需要合理规划自己的钱。从 5 月份开始，我尝试买入了一些基金，开始学习基金的基本知识。由于年初疫情的影响，大部分股票和基金都处于历史的低位，2020 年购买的基金都处于上涨的状态，没有亏损的，只是上涨幅度的差异。最明显的一支基金是招商白酒基金，上涨迅猛，8 月份有一段时间在下跌，就给卖出了，结果后面又开始不断上涨。之前看到一句话，觉得很有道理，说的是不要觉得自己当时如果怎么样，就会怎么样，自己没有赚到的钱，不要觉得惋惜，更重要的是提升自己的认知，赚钱的机会总是存在的。\n娱乐与生活 # 娱乐方面，看了演绎美国原子弹研制的 《曼哈顿计划》，很好的一部美剧，在剧中奥本海默是一个沉默寡言和怪癖的人物，引发了我对奥本海默的兴趣，所以才看了《American Prometheus》。国庆的时候看了热播的《沉默的真相》，顺便补了以前没看过的《白夜追凶》。下半年，看了美剧《黑吃黑》。由于疫情的原因，几乎没去电影院看过电影，自己从网上看了一些不错的电影，《1917》，《隐身人》，《饥饿站台》等。\n金宇澄的这段采访见这里。金宇澄在一席也做过一次演讲，见这里。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 February 2021","externalUrl":null,"permalink":"/2021/02/11/life_in_2020/","section":"Posts","summary":"\u003cp\u003e用文字记录生活，给自己的生命留下印迹，我的 2020。\u003c/p\u003e","title":"记录我的 2020","type":"posts"},{"content":"If we need to access the internet via a proxy server, we should set proxy properly when making HTTP/HTTPS requests using the Requests package.\nHere is a simple code sample:\nimport requests proxy = {\u0026#39;http\u0026#39;: \u0026#34;http://server_ip:port\u0026#34;, \u0026#39;https\u0026#39;: \u0026#34;https://server_ip:port\u0026#34;} r = requests.get(url, proxies=proxy) In the above code, we set the proxy used for http and https requests. However, when I run the above code, I see the following error:\n(Caused by SSLError(SSLError(1, \u0026lsquo;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:833)\u0026rsquo;),))\nTo temporarily disable SSL verification (note that this is dangerous for production applications! Do this at your own risk!), we can add verify=False to the requests method:\nr = requests.get(url, proxies=proxy, verify=False) You will see the following warnings:\nInsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\nRefs # Proxies with Python \u0026lsquo;Requests\u0026rsquo; module https://2.python-requests.org/en/master/api/#main-interface https://2.python-requests.org/en/latest/user/advanced/#proxies Python Requests throwing SSLError How do I disable the security certificate check in Python requests ","date":"7 February 2021","externalUrl":null,"permalink":"/2021/02/07/python_requests_with_proxy/","section":"Posts","summary":"\u003cp\u003eIf we need to access the internet via a proxy server, we should set proxy\nproperly when making HTTP/HTTPS requests using the \u003ca href=\"https://requests.readthedocs.io/en/master/\" target=\"_blank\"\u003eRequests\u003c/a\u003e package.\u003c/p\u003e","title":"Using Proxy in Python Requests package","type":"posts"},{"content":"There are several Python packages by which we can get and set the system clipboard.\nTkinter # Use tkinter to get clipboard text.\nimport tkinter as tk root = tk.TK() root.withdraw() # keep the window from showing print(root.clipboard_get()) pywin32 # Use pywin32. It provides the win32clipboard module.\nimport win32clipboard # set the clipboard win32clipboard.OpenClipboard() win32clipboard.EmptyClipboard() win32clipboard.SetClipboardText(\u0026#39;just for a test\u0026#39;) win32clipboard.CloseClipboard() # get the clipboard text win32clipboard.OpenClipboard() data = win32clipboard.GetClipboardData() print(data) win32clipboard.CloseClipboard() pyperclip # Use pyperclip.\nimport pyperclip # set the clipboard pyperclip.copy(\u0026#39;some text\u0026#39;) # get the clipboard pyperclip.paste() Ref # How do I copy a string to the clipboard? How do I read text from the clipboard? ","date":"3 February 2021","externalUrl":null,"permalink":"/2021/02/03/get_or_set_system_clipboard_python/","section":"Posts","summary":"\u003cp\u003eThere are several Python packages by which we can get and set the system\nclipboard.\u003c/p\u003e","title":"How to Get or Set Clipboard Text in Python","type":"posts"},{"content":"A note on bracketed paste mode in terminal and Neovim.\nAnnoying character inserted when pasting text # I use ZOC terminal to connect to my remote server. Today, I noticed a strange issue when I copied text from elsewhere to the terminal shell command line. When I copied some text and pasted it in the terminal, I found that 0~ was added in the beginning of text, and 1~ was added in the end of text.\nI found a similar issue on stackexchange. It turns out that this has something to do with bracketed paste mode in terminal emulators.\nWhat is bracketed paste mode # Typically, when we paste code snippet into a terminal application, it can not tell whether we are typing the text or we are pasting it. This may have unintended side affects for some application. For example, Vim will auto-indent the code pasted into it when it sees a newline, breaking the code structure.\nHere comes the bracketed paste mode. When this feature is enabled, if we paste text into terminal, the terminal will add some special sequence in the beginning and end of the text (\\e[200~ in the beginning and \\e[201~ in the end).\nHow enable and disale it in terminal # To check if bracketed paste mode is on and supported, first use printf \u0026quot;\\e[?2004h\u0026quot; to turn on it. Then copy some text, run xxd, and paste some text into terminal. If you terminal supports bracketed paste mode, then you will see output like the following:\n^[[200~some test^[[201~ To disable this mode, use printf '\\e[?2004l'.\nWhy is it important? # But how is this even important? If a terminal program also supports bracketed paste mode, it can interpret the special terminal sequence and know that the user is pasting text instead of typing it.\nA noticeable example is when we paste multi-line code into Vim. Since the code have already been properly indented, we do not want Vim to alter it. Without this terminal ability, Vim does not know whether you are typing the text or paste it from the terminal. So when it meets a newline character, it will try to re-indent the following line, causing a complete mess. If Vim supports bracketed paste mode, when it see the special terminal sequence, it knows that the user is trying to paste text into it. It will not auto-indent your pasted text any more, thus you do not need to use set paste in order to paste something.\nEnable bracketed paste mode in Vim/Neovim # For plain Vim, see this post on how to enable bracketed paste mode. If you are using Neovim, bracketed paste mode in built-in, if your terminal supports it, you do not need to do any setup. Neovim will just work, see also :h bracketed-paste-mode inside Neovim.\nRef # https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/31 Getting strange characters when pasting into my iterm2 terminal How do I disable the weird characters from “bracketed paste mode” on the Mac OS X default terminal? https://news.ycombinator.com/item?id=18329305 ","date":"1 February 2021","externalUrl":null,"permalink":"/2021/02/01/bracketed_paste_mode/","section":"Posts","summary":"\u003cp\u003eA note on bracketed paste mode in terminal and Neovim.\u003c/p\u003e","title":"Bracketed Paste Mode in Terminal","type":"posts"},{"content":"In this post, I collect some useful tips for using Tmux.\nIn the following text, \u0026lt;prefix\u0026gt; means the prefix key for Tmux. If you haven\u0026rsquo;t changed it, it will Ctrl-b by default.\nChange layout # To change the layout of panes in a Tmux windows, press \u0026lt;prefix\u0026gt;\u0026lt;space\u0026gt;. It will change between different layouts.\nWe may also use command select-layout (or selectl for short) instead. Possible layouts are: even-horizontal, even-vertical, main-horizontal, main-vertical, tiled.\nRef:\nHow to convert 2 horizontal panes to vertical panes in tmux? zoom a pane # To temporarily zoom in and zoom out a pane, press \u0026lt;prefix\u0026gt;z. It will toggle the zoom state of current pane.\nCreate a pane that spans window width # I have two vertical pane side by side in a window, and I want to create a new pane above these two panes, which will span the entire window width. Essentially, I want to change from the following layout:\n+--------------+--------------+ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | +--------------+--------------+ to the below layout:\n+-----------------------------+ | | +--------------+--------------+ | | | | | | | | | | | | | | | | | | | | | | | | | | | +--------------+--------------+ By default, split-window command only spans the width of current pane. We can use the -f option to make the new pane span the entire window width. The help for -f says that:\n-f \u0026ndash; create new pane spanning full window width or height\nTo make the new pane created above, we need to use -b option:\n-b \u0026ndash; create new pane left of or above target pane\nCombining the two options, we can use the following command to create what we want:\n# run the command after pressing \u0026lt;prefix\u0026gt; :split-window -fbv Similarly, if we have two pane one on the other, we want to create a new pane, and get the following layout:\n+-----------------+-----------+ | | | | | | | | | +-----------------+ | | | | | | | | | | +-----------------+-----------+ we can use the following command:\n:split-window -fh Ref:\nHow to add a horizontal split to tmux window that spans the whole width of the parent window? swap two panes # To swap two panes in Tmux, first we need to check their index: press \u0026lt;prefix\u0026gt; + q to show the pane index. Then we can use the tmux command swap-pane to swap the two panes (tmux command mode are activated by pressing \u0026lt;prefix\u0026gt;, followed by :). For example, if we want to swap pane 0 with pane 2, use the following command:\nswap-pane -s 0 -t 2 Ref:\nHow does one swap two panes in Tmux? equalize two panes # To make two panes have the same width in side by side position, press \u0026lt;prefix\u0026gt; Alt-1 or run command select-layout even-horizontal. To make two panes have the same height and in top-down position, press \u0026lt;prefix\u0026gt; Alt-2 or run command: select-layout even-vertical.\nRef:\nHow do I equally balance tmux(1) split panes? ","date":"25 January 2021","externalUrl":null,"permalink":"/2021/01/25/tmux_cheatsheet/","section":"Posts","summary":"\u003cp\u003eIn this post, I collect some useful tips for using Tmux.\u003c/p\u003e","title":"Tmux Cheatsheet","type":"posts"},{"content":" Some of the settings to make git log better.\nDecorate commit # The --decorate option will show references to your commit. For example, where your HEAD is, where your master points to etc. To use --decorate by default:\ngit config --global log.decorate true Show short commit hash # By default, git shows long commit hash for each commit. To show a short commit hash, we can use the --abbrev-commit option. To use --abbrev-commit by default:\ngit config --global log.abbrevCommit true Show commit graph # To show a graphical representation of commit, which is handy when we have merged commit or multiple branches, we can use --graph option:\ngit log --graph Use color and format string for log output # We can also combine color and % escaped format string to format the log output. Check here for a list of format strings that you can use for log format. Some of most used format string:\n%h: the abbreviated commit hash %s: the commit message subject %b: the commit message body %d: ref names, like origin/master, origin/HEAD, tag: v0.8 %ci: commit date Use color to differentiate different part of log message. We can specify a color like this %C(red), %Creset will reset the color. For more details on the color format and which colors to use, check color for git pretty format.\nCombining the log format string and color, we can create beautiful log message.\ngit config format.pretty \u0026#34;%C(magenta)%h%Creset -%C(red)%d%Creset %s %C(green)(%cr) %C(cyan)\u0026lt;%an\u0026gt;%Creset\u0026#34; After this setup, git-log output will be like what is shown in the title image.\nReferences # make \u0026ndash;abbrev-commit default for git log make \u0026ndash;decorate default for git log A better git log ","date":"25 January 2021","externalUrl":null,"permalink":"/2021/01/25/better_git_log/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20210125233412.png\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003eSome of the settings to make \u003ccode\u003egit log\u003c/code\u003e better.\u003c/p\u003e","title":"Better Git log","type":"posts"},{"content":"使用国外的源下载 Python 发行版和各种 Python 库，速度实在是太慢了😭😠，国内的源速度会快很多，权宜之计。\nAnaconda 国内源 # 在国内，从 Anaconda 或者 Miniconda 官方地址下载 Anaconda 或 miniconda 发行版都非常慢，还可能会断掉。\nAnaconda 安装包清华源地址：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ Miniconda 清华源地址：https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/ 使用 conda 安装 Python 库的时候，也可以使用清华源，打开 $HOME/.condarc，添加下面的配置\nchannels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pip 使用国内源 # pip 下载库的时候，默认使用 pypi 的官方源，速度不理想。把 pip 的源也改为清华源，速度飞快。\n永久方案：\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 临时方案（使用清华源安装某些库）\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package 参考 # https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ https://mirrors.tuna.tsinghua.edu.cn/help/pypi/ ","date":"17 January 2021","externalUrl":null,"permalink":"/2021/01/17/china_source_for_python/","section":"Posts","summary":"\u003cp\u003e使用国外的源下载 Python 发行版和各种 Python 库，速度实在是太慢了😭😠，国内的源速度会快很多，权宜之计。\u003c/p\u003e","title":"Anaconda Python 和 pip 国内源/镜像","type":"posts"},{"content":"","date":"17 January 2021","externalUrl":null,"permalink":"/tags/pip/","section":"Tags","summary":"","title":"Pip","type":"tags"},{"content":"Build a Ubuntu docker with Python3 and pip support.\nI am using the official Ubuntu docker. The following is a minimum Dockerfile:\nFROM ubuntu:18.04 RUN apt-get update \u0026amp;\u0026amp; apt-get install -y software-properties-common gcc \u0026amp;\u0026amp; \\ add-apt-repository -y ppa:deadsnakes/ppa RUN apt-get update \u0026amp;\u0026amp; apt-get install -y python3.6 python3-distutils python3-pip python3-apt In order to install the more recent version of Python3, we use ppa from deadnakes. It has various Python versions from 3.1 to 3.10 for your need.\nThe command add-apt-repository is provided by package software-properties-common. It can be used to add a custom package repository. The -y option for add-apt-repository will say yes to all the prompts, like what -y for apt-getdoes.\nWe need to install gcc because some python packages requires building when installing via pip.\nAfter adding the ppa:deadsnakes/ppa repo, pip3 is not included by default. Initially, I tried to install pip via get-pip.py manually, and I get the error that No module named \u0026lsquo;distutils.util\u0026rsquo;. We need to install python3-pip, python3-distutils and python3-apt to install pip3. This is the easiest way I found.\nRef:\nhttps://phoenixnap.com/kb/how-to-install-python-3-ubuntu ","date":"17 January 2021","externalUrl":null,"permalink":"/2021/01/17/install_python3_in_ubuntu_docker/","section":"Posts","summary":"\u003cp\u003eBuild a Ubuntu docker with Python3 and pip support.\u003c/p\u003e","title":"Install Python3 in Ubuntu Docker","type":"posts"},{"content":"To cross the fucking firewall, we need some handy tools.\nTwo good clients for Mac:\nClashX Qv2ray ClashX # Add new subscription # ClashX is easy to set up. It supports subscription URL. To add a new subscription, click Config --\u0026gt; Remote Config --\u0026gt; Manage, click Add. In the popped up window, fill in the remote subscription URL, and give the config a name in the field Config Name. Click OK.\nCheck the proxy ports it provides # Click Help --\u0026gt; Ports, ClashX will show the HTTP and socks5 ports it provides.\nQv2ray # It requires more setup than ClashX since it is more configurable. First, we need to install Qv2ray.\nSet up v2ray core # To make it work for v2ray. We need also to install v2ray core ourselves since v2ray core is not packaged. We can download the binary release from its release page.\nExtract the compressed file. Then click Preferences and go to Kernel Settings page, set the V2ray Core Executable Path and V2ray Assets Directory (it contains the file geoip.dat and geosite.dat) to the file we just extracted.\nOn macOS, we can also use brew to install v2ray (brew install v2ray). The v2ray executable is /usr/local/bin/v2ray, and its resource is in /usr/local/share/v2ray.\nClick the button Check V2ray Core Settings. If everything is fine, a popup window occurs, and tells you that:\nV2Ray path configuration check passed.\nAdd a subscription URL # Click the Show menu, click Groups at the bottom. In the new Windows, click the icon Add new subscription on the bottom left. In the Subscription Settings page on the right, check the button This group is a subscription. Fill in the subscription URL in the field Subscription Address, and click the button Update Subscription to update the subscription.\nGo back to the previous Window where all groups are listed. Double click the group we have added, it will show all the connections for this group. Click a connection, and right click to bring up the context menu. Then click Connect to this.\nCheck the proxy ports # Click the Preferences menu, then click Inbound Settings in the Preferences window. In the SOCKS Settings and HTTP Settings part, we can set up the port to be used for SOCKS and HTTP.\nRef # https://tlanyan.me/v2ray-clients-download/ https://qv2ray.net/getting-started/ ","date":"10 January 2021","externalUrl":null,"permalink":"/2021/01/10/fuck_gfw_forever/","section":"Posts","summary":"\u003cp\u003eTo cross the fucking firewall, we need some handy tools.\u003c/p\u003e","title":"Cross the Wall","type":"posts"},{"content":" 更新记录 2022-02-08： fasgit hub 被 GFW 封了，换一个地址。 GitHub 虽然没被封，但是阻断严重，下载 GitHub 资源速度奇慢无比，总结一些验证可行的方法。\n加速下载 github.com 资源 # 可以利用 fastgit 加速 github.com 的下载。原有下载命令：\nwget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz 新命令：\nwget \u0026#34;https://hub.fastgit.xyz/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz\u0026#34; 把 github.com 替换为 hub.fastgit.xyz 即可，也支持 git clone 加速。\n下载 githubusercontent.com 的内容 # 使用 fastgit # 使用上面提到的 fastgit 也可以加速下载 githubusercontent.com 的内容。原始命令：\nwget https://raw.githubusercontent.com/jdhao/nvim-config/master/docs/Nvim_setup.sh 新命令：\nwget https://raw.fastgit.org/jdhao/nvim-config/master/docs/Nvim_setup.sh 需要把链接中 githubusercontent.com 替换为 fastgit.org。\n使用 jsdelivr # 可以使用 jsdelivr 的 cdn 访问对应的资源，亲测可行。需要对源地址进行一些改造，换成 jsdelivr 上对应的 URL 即可。例如，源地址：https://raw.githubusercontent.com/jdhao/nvim-config/master/docs/Nvim_setup.sh 对应 jsdelivr 地址：https://cdn.jsdelivr.net/gh/jdhao/nvim-config@master/docs/Nvim_setup.sh。@master 后面跟的是该文件对应的 master branch，如果是默认的 master，那么也可以不用加 @master，否则需要加上分支名称。\n更改系统 hosts 文件 # 更改系统 hosts 文件 (在 Linux 上需要有 root 权限)，编辑 /etc/hosts， 加入一条 host 记录：\n199.232.96.133 raw.githubusercontent.com 上面的 IP 地址是 githubusercontent.com 对应的 ip 地址之一，可以在 这里 查看。\n使用第三方辅助工具 # dev-sidecar # dev-sidecar，用 Electron 写的一个工具， 可以帮助用户加速 github，stackoverflow 等网站的访问，可以一试。\n参考 # https://www.wolfdan.cn/jsdelivr%E5%8A%A0%E9%80%9F%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD-raw-github%E8%A2%ABban%E4%B9%8B%E5%90%8E%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AEgithub%E8%B5%84%E6%BA%90/ ","date":"8 January 2021","externalUrl":null,"permalink":"/2021/01/08/github_access_issue_in_china/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003e更新记录\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e2022-02-08： \u003ca href=\"https://t.me/fastgitchannel/81\" target=\"_blank\"\u003efasgit hub 被 GFW 封了\u003c/a\u003e，换一个地址。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eGitHub 虽然没被封，但是阻断严重，下载 GitHub 资源速度奇慢无比，总结一些验证可行的方法。\u003c/p\u003e","title":"解决 GitHub 资源无法下载的问题","type":"posts"},{"content":"This is the 9th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ How do I return a key press from a function and use it in a mapping # I want to write a function to return \u0026lt;Tab\u0026gt; key or \u0026lt;Ctrl-N\u0026gt; based on whether completion menu is available, and use the return value in an insert mode mapping. The initial code is:\ninoremap \u0026lt;expr\u0026gt; \u0026lt;Tab\u0026gt; MyTabFun() function! MyTabFun() if pumvisible() return \u0026#34;\u0026lt;C-N\u0026gt;\u0026#34; else return \u0026#34;\u0026lt;Tab\u0026gt;\u0026#34; endif endfunction However, the function returns those characters literally instead of as key press. This is because Vim thinks that you want to insert those keys literally. To signal a key press, we need to escaped it. Like the following:\nreturn \u0026#34;\\\u0026lt;C-N\u0026gt;\u0026#34; \u0026#34; or \u0026#34; return \u0026#34;\\\u0026lt;Tab\u0026gt;\u0026#34; The relevant vim doc on this topic is :h expr-quote.\nRef:\nUsing a special key in function How to invoke the increment and decrement Normal-mode commands in Vimscript? Why do I need to use unicode for a control character in a mapping using and a function? Get character at a specific index in a multi-byte aware fashion # Unlike Python, in Vim script, string indexing uses byte index by default, not character indexing. Byte indexing works well for ASCII characters. Once your string contains multi-byte characters, things no long works as expected. For example, if we run the following code\nlet a = \u0026#39;你好吗\u0026#39; echo a[0] Vim prints \u0026lt;e4\u0026gt;, the first byte of 你 in UTF-8 encoding (the binary representation for 你 using UTF-8 encoding is \\xe4\\xbd\\xa0).\nHow to we get the character at a specific index? Using strcharpart() instead. For example,\nlet my_str = \u0026#39;你好吗\u0026#39; \u0026#34;result will be \u0026#39;你\u0026#39;, the first char in my_str echo strcharpart(my_str, 0, 1) \u0026#34; result will be \u0026#39;好\u0026#39;, the second char in my_str echo strcharpart(my_str, 1, 1) We can also use the following convenience function:\nfunction! CharAtIdx(str, idx) abort \u0026#34; Get char at idx from str. Note that this is based on character indexing \u0026#34; instead of the byte index. return strcharpart(a:str, a:idx, 1) endfunction Then, to get first char of a string, use CharAtIdx(my_str, 0).\nGet string length regardless of ASCII or not # This is related to the previous tip. There is function strlen() or len() in Vim, but they only calculates byte length of a string, instead of character length, like what len() in Python does. We can instead use the strchars() to get string length. I consider this one of the many hidden quirks of Vim. We just need to get used to it.\nUse neovim as git diff and merge tool # Here is how to set up neovim as a git diff and git merge tool. Add the following config to the file $HOME/.gitconfig:\n[diff] tool = nvimdiff [difftool] prompt = false [difftool \u0026#34;nvimdiff\u0026#34;] cmd = \u0026#34;nvim -d \\\u0026#34;$LOCAL\\\u0026#34; \\\u0026#34;$REMOTE\\\u0026#34;\u0026#34; [merge] tool = nvimdiff [mergetool] prompt = true [mergetool \u0026#34;nvimdiff\u0026#34;] cmd = \u0026#34;nvim -d \\\u0026#34;$LOCAL\\\u0026#34; \\\u0026#34;$REMOTE\\\u0026#34; \\\u0026#34;$MERGED\\\u0026#34; -c \u0026#39;wincmd w\u0026#39; -c \u0026#39;wincmd J\u0026#39;\u0026#34; Ref:\nhttps://gist.github.com/huytd/78c676a797f81eb08cdedf5400e1b6a3 https://oozou.com/til/use-neovim-as-a-git-difftool-57 https://github.com/neovim/neovim/issues/2377#issuecomment-126092442 Move the view horizontally # If we do not wrap the text and the line text length exceed the window size, some text will be hidden beyond the current view port. To move the view port horizontally, Vim has the following normal mode command:\n{count}zl: move the current view port {count} characters to the right, default is 1 if no {count} provided. {count}zh: move the current view port {count} characters to the left, default is 1 if no {count} provided. zL: move the current view port half screen width to the right. zH: move the current view port half screen width to the left. The default behavior for zL and zH is to move the view port half screen width, which may be too much. We can map these shortcuts to use smaller steps:\nnnoremap zL 10zl nnoremap zH 10zh Ref:\nHorizontal navigation in long lines ","date":"7 January 2021","externalUrl":null,"permalink":"/2021/01/07/nifty_nvim_techniques_s9/","section":"Posts","summary":"\u003cp\u003eThis is the 9th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 9","type":"posts"},{"content":"In my daily work, I usually log into a remote server via a terminal emulator and do my development work there. Sometimes, I need to copy text from remote server to my local machine\u0026rsquo;s clipboard. Previously, I use mouse to select and copy the text, which I find to be quite cumbersome.\nWhat is OSC 52 # Recently, I have found out the OSC 52 terminal sequence1, which is really useful when we want to copy text from remote to local clipboard.\nWe can use OSC 52 sequence to tell terminal emulator that we want to put some text into the clipboard of local machine. The actual text is base64 encoded. If the terminal emulator supports it, then it can decode the text and put it into the system clipboard.\nSet up OSC 52 support in Mintty terminal # On Windows, mintty terminal as old as version 2.6.1 supports this feature. Mintty config is in directory C: \\Users\\Administrator\\AppData\\Roaming\\mintty, and the name is config. Open the file and add the following option:\nAllowSetSelection=yes Restart mintty and this feature will take effect. To verify, log into the remote server using mintty terminal, and run the following command:\nprintf \u0026#34;\\033]52;c;$(printf \u0026#34;%s\u0026#34; \u0026#34;hello\u0026#34; | base64)\\a\u0026#34; Now your local clipboard content should become \u0026ldquo;hello\u0026rdquo;.\nEnable OSC 52 support in ZOC terminal # ZOC terminal has added support for OSC-52 terminal sequence in version 8.01.0, as indicated by its change log.\nTo enable this feature, go to Options --\u0026gt; Edit Session Profile, in the Advanced section, we need to activate the following option:\nActivate control sequences that enable remote hosts to execute commands locally.\nCurrently, osc-52 in ZOC only works for pure ASCII characters and does not work for non-ASCII characters. The dev said that it will be fixed in the next release.\nEnable OSC 52 in iterm2 # Open preferences, and go to General settings. Turn on the option Applications in terminal may access clipboard. It\u0026rsquo;s off by default for security reasons.\nCopy text inside Neovim to local clipboard # With terminal\u0026rsquo;s support for OSC 52, we can copy text from Neovim to our local clipboard directly.\nInstall vim-oscyank:\nPlug \u0026#39;ojroques/vim-oscyank\u0026#39; Select a text region and use command OSCYank to copy the text to your local clipboard.\nReferences # https://medium.com/free-code-camp/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b https://mintty.github.io/mintty.1.html#CONFIGURATION https://github.com/mintty/mintty/issues/258#issuecomment-246123745 OSC 52 support in iterm2: https://gitlab.com/gnachman/iterm2/-/issues/6842 https://chromium.googlesource.com/apps/libapps/+/master/hterm/etc/osc52.vim OSC stands for Operating System Commands, see https://en.wikipedia.org/wiki/ANSI_escape_code#OSC\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"5 January 2021","externalUrl":null,"permalink":"/2021/01/05/nvim_copy_from_remote_via_osc52/","section":"Posts","summary":"\u003cp\u003eIn my daily work, I usually log into a remote server via a terminal emulator\nand do my development work there. Sometimes, I need to copy text from remote\nserver to my local machine\u0026rsquo;s clipboard. Previously, I use mouse to select and\ncopy the text, which I find to be quite cumbersome.\u003c/p\u003e","title":"Copy from Remote Server to Local Clipboard via OSC 52 in Neovim","type":"posts"},{"content":"","date":"5 January 2021","externalUrl":null,"permalink":"/tags/mintty/","section":"Tags","summary":"","title":"Mintty","type":"tags"},{"content":"My notes on using concurrent.futures in Python.\nThreadPoolExecutor or ProcessPoolExecutor? # concurrent.futures provides two convenient and high-level class ThreadPoolExecutor and ProcessPoolExecutor. You would want to use ThreadPoolExecutor when dealing with IO-bound tasks, for example, when you are making a lot of requests to a web service. You would want to use ProcessPoolExecutor if you are dealing with CPU intensive operations. The ProcessPoolExecutor allows users to utilize the multi-core power of the system and achieve significant speedup of the programs.\nThese two classes have almost the same interface, so it is easy to learn and use.\nexecutor.map() VS executor.submit() # There are mainly two different ways to use executor for parallel processing, the first is via executor.map(), and the second way is via executor.submit() combined with concurrent.futures.as_completed().\nHere is a simple example to demonstrate this:\nimport time from contextlib import contextmanager from concurrent.futures import ThreadPoolExecutor import concurrent.futures @contextmanager def report_time(des): start = time.time() yield end = time.time() print(f\u0026#34;Time for {des}: {end-start}\u0026#34;) def square(x): time.sleep(0.5) return x*x def main(): num = 10 with report_time(\u0026#34;using executor.map\u0026#34;): # with ThreadPoolExecutor(max_workers=10) as executor: with ThreadPoolExecutor() as executor: res = executor.map(square, range(num)) res = list(res) with report_time(\u0026#39;using executor.submit\u0026#39;): with ThreadPoolExecutor() as executor: my_futures = [executor.submit(square, x) for x in range(num)] res = [] for future in concurrent.futures.as_completed(my_futures): res.append(future.result()) print(res) if __name__ == \u0026#34;__main__\u0026#34;: main() Note that executor.map() will return an iterator instead of plain list, and the order of results corresponds to the order that arguments are provided for the function we want to run in parallel.\nIf we use executor.submit(), it will return a future object. We can later access the function return value via the future object. Unlike map(), we then use concurrent.futures.as_completed(my_futures) to make sure that the functions are actually executed and return the results. Any future that gets finished first will be returned first. So there is no guarantee of the result order anymore! For example, we may get the following result for res:\n[4, 9, 1, 16, 25, 49, 36, 0, 64, 81] max_worker # For ThreadPoolExecutor(), there is parameter max_worker to specify the max number of threads to use. According to the official doc, it is set to min(32, os.cpu_count() + 4) for Python 3.8 and os.cpu_count() * 5 for Python version below 3.8 and above 3.5.\nIn some cases, the default max_worker may be too large to cause serious issues. For example, when I use ThreadPoolExecutor() to request a web service with default parameters, my code runs for a few requests, then it hangs indefinitely without any progress. I have to reduce max_worker to about 50 to run the code smoothly. So in our real projects, we should tweak the value of max_workers to fit our needs.\nReferences # How does ThreadPoolExecutor().map differ from ThreadPoolExecutor().submit? Number of max_workers when using ThreadPoolExecutor from concurrent.futures? How does concurrent.futures.as_completed work? https://alexwlchan.net/2019/10/adventures-with-concurrent-futures/ ","date":"29 December 2020","externalUrl":null,"permalink":"/2020/12/29/python_concurrent_futures/","section":"Posts","summary":"\u003cp\u003eMy notes on using \u003ca href=\"https://docs.python.org/3/library/concurrent.futures.html\" target=\"_blank\"\u003e\u003ccode\u003econcurrent.futures\u003c/code\u003e\u003c/a\u003e in Python.\u003c/p\u003e","title":"Using Concurrent.futures in Python","type":"posts"},{"content":"Git has two option --git-dir and --work-tree. What is the use for them?\nUsually, when we create a project repository in dir ~/projects/foo via git init command. The git directory is ~/projects/foo/.git, where all the repository info is stored like the following:\n.git ├── branches ├── COMMIT_EDITMSG ├── config ├── description ├── HEAD ├── hooks │ ├── applypatch-msg.sample │ ├── commit-msg.sample │ ├── post-update.sample │ ├── pre-applypatch.sample │ ├── pre-commit.sample │ ├── prepare-commit-msg.sample │ ├── pre-push.sample │ ├── pre-rebase.sample │ └── update.sample ├── index ├── info │ └── exclude ├── logs │ ├── HEAD │ └── refs │ └── heads │ └── master ├── objects │ ├── 0c │ │ └── fa957df522a120551c8d6147cacbeffd97d4e1 │ ├── 5e │ │ └── fb9bc29c482e023e40e0a2b3b7e49cec842034 │ ├── e6 │ │ └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391 │ ├── info │ └── pack └── refs ├── heads │ └── master └── tags The repository\u0026rsquo;s work tree is the root directory of this project, i.e., ~/projects/foo. When we use git command such as git status inside in git repository, git will find .git directory in the directory or upward until it finds the .git directory. So we do not need to specify where the .git dir is.\nWhen we want to get the info a repository outside it, we now need to specify the --git-dir and --work-tree to tell git which repository we refer to:\n# outside ~/projects/foo git --git-dir=$HOME/projects/foo/.git --work-tree=$HOME/projects/foo status Note that the path to --git-dir and --work-tree can be an absolute or relative path (relative to current working directory). If it is an absolute path, tilde ~ won\u0026rsquo;t be expanded . You need to use $HOME or absolute path.\nAs a matter of fact, the .git and work-tree for a repository does not need to be in the same location. For example, run the following command:\nmkdir a b git init --separate-git-dir a/ b/ Directory a/ will act as .git directory storing all the info for work-tree root at b/. If you look at the b/.git, it will a plain file pointing to the absolute path of a/ directory:\ngitdir: /path/to/a/dir To get info about this repository, we can run git like this:\ngit --git-dir=a/ --work-tree=b/ status Refs:\nWhat is the difference in Git between being in a directory (cd) and using the work-tree parameter? Can I store the .git folder outside the files I want tracked? https://git-scm.com/docs/git#Documentation/git.txt---git-dirltpathgt https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables What is GIT_WORK_TREE, why have I never needed to set this ENV var, why now? ","date":"25 December 2020","externalUrl":null,"permalink":"/2020/12/25/git_directory_work-tree_explained/","section":"Posts","summary":"\u003cp\u003eGit has two option \u003ccode\u003e--git-dir\u003c/code\u003e and \u003ccode\u003e--work-tree\u003c/code\u003e. What is the use for them?\u003c/p\u003e","title":"Git Directory and Work-Tree Explained","type":"posts"},{"content":" Calculate the stat of a column of numbers # Suppose we have a file where each line a number, and we want to the get stat of these numbers on the command line.\nUse python # If Python is installed in the system, we can use the following command:\ncat data.log | python3 -c \u0026#34;import fileinput as FI,statistics as STAT; i = [float(l.strip()) for l in FI.input()]; print(\u0026#39;min:\u0026#39;, min(i), \u0026#39; max: \u0026#39;, max(i), \u0026#39; avg: \u0026#39;, STAT.mean(i), \u0026#39; median: \u0026#39;, STAT.median(i))\u0026#34; Use jq # We can also use jq to calculate the stat:\nmin: jq -s min data.txt max: jq -s max data.txt average: jq -s add/length data.txt Ref:\nIs there a way to get the min, max, median, and average of a list of numbers in a single command? What if I screw up the PATH variable? # I edit the .bash_profileand update the PATH variable wrongly, something like this:\nexport PATH=\u0026#34;/some/path\u0026#34; After sourcing this file, all my commands fails. This is because the system relies on PATH variable to find the suitable executable to run.\nHowever, we can always run an executable with its absolute path, so the remedy is to use vim to edit .bash_profile:\n/usr/bin/vim ~/.bash_profile Ref:\nhttps://apple.stackexchange.com/q/192657/285595 Search pattern only in package names # apt search --names-only pattern pattern supports regular expressions. For example, to search package starting with a man:\napt search --name ^man Ref:\napt search: limit to exact match I was forced log out after a short time of inactivity? # I connect to a remote server via my ssh client. I noticed that after even a few minutes of inactivity, I was forced log out, and saw the following message:\ntimed out waiting for input: auto-logout\nIt turns out bash a feature to log out the user using the TMOUT env variable. For example, TMOUT=3600 will force user to log out after waiting 3600 seconds for user input (but no input is coming). Set TMOUT to 0 will disable this feature.\nRef:\nhttps://www.linvirtshell.com/2017/11/changing-auto-logout-timeout-in-ssh.html How to keep idle session from exiting Find which package provides a file or what file a package contains on Ubuntu # To find which package provides a certain file, we can use dpkg command:\ndpkg -S /path/to/file For example dpkg -S /usr/lib/python3/dist-packages/uno.py shows the following message:\npython3-uno: /usr/lib/python3/dist-packages/uno.py\nWe can also use apt-file to find which package a file belongs to:\napt update \u0026amp;\u0026amp; apt instal apt-file apt-file update apt-file search /path/to/file To find what file a package contains, we can to this Ubuntu packages site and search a package. In the package detail info page, we can click the [list of files] to get the files contained in a certain release for an architecture (see here for an example).\nRef:\nHow do I find the package that provides a file? Find what package a file belongs to in Ubuntu/Debian? ","date":"22 December 2020","externalUrl":null,"permalink":"/2020/12/22/linux_command_cheat_sheet_s3/","section":"Posts","summary":"Calculate the stat of a column of numbers # Suppose we have a file where each line a number, and we want to the get stat of these numbers on the command line.\nUse python # If Python is installed in the system, we can use the following command:\ncat data.log | python3 -c \u0026#34;import fileinput as FI,statistics as STAT; i = [float(l.strip()) for l in FI.input()]; print(\u0026#39;min:\u0026#39;, min(i), \u0026#39; max: \u0026#39;, max(i), \u0026#39; avg: \u0026#39;, STAT.","title":"Linux Tips and Tricks -- s3","type":"posts"},{"content":"After using and learning Neovim for over 2 years, I have finally published my first plugin \u0026ndash; better-escape.vim.\nBetter-escape.vim is a plugin to help users escape from insert mode quickly without experiencing the lagging that comes with Vim mappings.\nAs a Vim user, a very popular mapping to escape insert mode is to map jj or jk or kj etc. to Esc, since the Esc key is hard to reach without moving your hand from the home row.\ninoremap jk \u0026lt;ESC\u0026gt; inoremap jj \u0026lt;ESC\u0026gt; inoremap kj \u0026lt;ESC\u0026gt; However, this comes with an annoyance. If you use jk to escape insert mode, whenever you press j in insert mode, Vim will not write it to the buffer, it will wait for timeoutlen milliseconds to see whether you want to use the jk mapping or you want to input j literally. This issue is easily noticeable when we have a relatively large timeoutlen value.\nIn my previous post, I have already talked about this topic and provided a solution. The solution is to use an insert mode mapping for k only. When we press k, we check if the previous character is j. If that is true, we will erase previous j and go to normal mode. Otherwise, k is inserted as is. There is no lagging any more. The problem is that now we can not input jk directly in insert mode. To insert k when the previous character is j, we need to press Ctrl-V, then press j.\nIn better-escape.vim, I have a smarter solution. We will check the time spent between pressing j and k in insert mode. If the time is above a predefined threshold, jk will be inserted literally. Otherwise, we will escape from insert mode. With this plugin, you can easily customize the shortcut for escaping insert mode, as well as the time threshold used.\n","date":"18 December 2020","externalUrl":null,"permalink":"/2020/12/18/my_first_vim_plugin/","section":"Posts","summary":"\u003cp\u003eAfter using and learning Neovim for over 2 years, I have finally published my\nfirst plugin \u0026ndash; better-escape.vim.\u003c/p\u003e","title":"Introducing better-esacape.vim: My First Vim/Neovim Plugin","type":"posts"},{"content":"For small projects, people tend to directly invoke the compiler with the suitable options to build the program. While it is feasible, it is tedious to type those compilation options and flags. For projects with multiple source files and header files, it becomes inefficient to build by hand. On Linux, people may write Makefile and build with make. On Windows, people may use Visual Studio for writing and build their project.\nCMake is a meta build tool. It can generate build files for various build tools such as make, Ninja, Visual Studio. So using CMake is way to make sure that our programs can build across platforms and build tools. Some famous open source projects choose CMake as their build tools. These projects include Neovim, OpenCV, MySQL.\nIn post, I will share how to build a simple C++ program using CMake.\nThe source file # First, create a project directory, add the following source file write_text.cc. It uses the OpenCV library to read an image, write some text to image and save it on the disk.\n#include \u0026#34;opencv2/opencv.hpp\u0026#34; int main() { cv::Mat img = cv::imread(\u0026#34;wind-turbine.jpg\u0026#34;, cv::IMREAD_COLOR); cv::putText(img, \u0026#34;Test text\u0026#34;, cv::Point(100, 100), cv::FONT_ITALIC, 2.0, cv::Scalar(0, 0, 255), 2); cv::imwrite(\u0026#34;text_img.jpg\u0026#34;, img); return 0; } Create Cmake file CMakeLists.txt # Under project root, create a file named CMakeLists.txt. This file describes how we want to build our project in the language of CMake. The content of is:\ncmake_minimum_required(VERSION 3.10) project(opencv_demo) add_executable(write_text write_text.cc) set(OPENCV_INCLUDE_DIR /home/jdhao/local/include/opencv4/) set(OPENCV_LIB_DIR /home/jdhao/local/lib/) message(STATUS \u0026#34;OpenCV library path: ${OPENCV_LIB_DIR}\u0026#34;) # set include directory target_include_directories(write_text PUBLIC \u0026#34;${OPENCV_INCLUDE_DIR}\u0026#34;) # set library directory target_link_directories(write_text PUBLIC \u0026#34;${OPENCV_LIB_DIR}\u0026#34;) # link specific object files we need target_link_libraries(write_text opencv_imgcodecs opencv_core opencv_imgproc) Build the Project # It is best to create a build directory for building the project so that we do not pollute the source directory.\nmkdir build # use the following command to build if you are in project root cmake -Bbuild -DCMAKE_BUILD_TYPE=Release # or use the following command if you are in build directory # cmake ../ -DCMAKE_BUILD_TYPE=Release By default, cmake will generate a build file for make on Linux systems. If you want to generate build file for other tools such as ninja, you can use -G. For example, to generate build file for ninja, use the following command:\nmkdir build_ninja cmake -Bbuild_ninja -G \u0026#34;Ninja\u0026#34; The option -DCMAKE_BUILD_TYPE=Release specify the build type. We can also use Debug or RelWithDebInfo etc.\nTo build the project, we can use cmake --build build if we are in project root or cmake --build . if we are in directory build. If you generate Makefile for make, you can also use make -C build to build the project directly, or use ninja -C build_ninja if you generate the build file for ninja. The advantage of using command cmake --build is consistency. You do not need to worry which specific build tool to invoke. CMake will figure it out for you.\nGenerate complilation databases # If you happen to use ccls for code completion, you can also generate a compilation databases file named compile_commands.json for ccls to use, with the help of cmake. With the help of this file, ccls can provide code completion and code analysis for your project.\nTo produce this file, use the following comamnd:\ncmake -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES ln -s build/compile_commands . Ref # Doc on CMAKE_EXPORT_COMPILE_COMMANDS https://github.com/MaskRay/ccls/wiki/Project-Setup#compile_commandsjson ","date":"12 December 2020","externalUrl":null,"permalink":"/2020/12/12/build_opencv_project_with_cmake/","section":"Posts","summary":"\u003cp\u003eFor small projects, people tend to directly invoke the compiler with the\nsuitable options to build the program. While it is feasible, it is tedious to\ntype those compilation options and flags. For projects with multiple source\nfiles and header files, it becomes inefficient to build by hand. On Linux,\npeople may write \u003ca href=\"http://web.mit.edu/gnu/doc/html/make_2.html\" target=\"_blank\"\u003eMakefile\u003c/a\u003e and\nbuild with \u003ca href=\"https://www.gnu.org/software/make/\" target=\"_blank\"\u003emake\u003c/a\u003e. On Windows, people may\nuse Visual Studio for writing and build their project.\u003c/p\u003e","title":"Build C++ Project with CMake -- A Simple Example","type":"posts"},{"content":"","date":"12 December 2020","externalUrl":null,"permalink":"/tags/cmake/","section":"Tags","summary":"","title":"CMake","type":"tags"},{"content":"","date":"12 December 2020","externalUrl":null,"permalink":"/tags/opencv/","section":"Tags","summary":"","title":"OpenCV","type":"tags"},{"content":"","date":"10 December 2020","externalUrl":null,"permalink":"/tags/gcc/","section":"Tags","summary":"","title":"GCC","type":"tags"},{"content":"Different behavior of linkage between Clang and GCC.\nDifferent behavior of linkage for C and C++ # For the following program:\n#include \u0026lt;math.h\u0026gt; #include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;e^{1} = %f\\n\u0026#34;, exp(1)); return 0; } If we compile the program with clang test.c -o test, compilation failed with the following error:\n/tmp/test-32c2ea.o: In function `main\u0026#39;: test.c:(.text+0x18): undefined reference to `exp\u0026#39; clang-11: error: linker command failed with exit code 1 (use -v to see invocation) This is totally expected since we use exp() function here, which is implemented in the shared object libm.so. For clang, the linker will not link against libm.so by default. In order to compile the program, we need to explicitly link libm.so:\nclang test.c -lm -o test One explanation for the separation of libm.so and libc.so is that in the early days of computing, floating point calculation is expensive. People use various workarounds for floating point calculations. It makes no sense to integrate math functions into libc.so. It makes libc.so larger with little benefit. As computer hardware upgrades with time, the separation of libm and libc does not make much sense any more.\nHowever, if we translate the above program to C++:\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;cmath\u0026gt; int main() { std::cout \u0026lt;\u0026lt; \u0026#34;e^{1} = \u0026#34; \u0026lt;\u0026lt; std:: exp(1) \u0026lt;\u0026lt; std::endl; return 0; } we can actually compile the program without linking against libm:\nclang++ test.cc -o test The output of command ldd test is:\n\u0026gt; ldd test linux-vdso.so.1 =\u0026gt; (0x00007ffd009a4000) libstdc++.so.6 =\u0026gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00002b4d4d13c000) libm.so.6 =\u0026gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00002b4d4d51f000) libgcc_s.so.1 =\u0026gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00002b4d4d828000) libc.so.6 =\u0026gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00002b4d4da40000) /lib64/ld-linux-x86-64.so.2 (0x00002b4d4cf14000) libm.so is actually implicitly linked. According to post here, for C++ programs, since libstdc++.so requires libm.so, so libm.so will be implicitly linked even if you haven\u0026rsquo;t instructed its linkage1.\nSome libraries are linked by default. # It is interesting that shared library like libc.so2 is linked even if we haven\u0026rsquo;t specified that. This behaviour can be disabled by providing the -nostdlib option:\nclang -nostdlib test.c -o test You will now see an error message about undefined printf():\ntest.c:(.text+0x29): undefined reference to `printf'\nRef:\nWhy does gcc/clang know to link to libc by default? Libraries that are linked by default Different between GCC and Clang on linkage # You might think that GCC will also fail if we compile the test.c without linking libm, but it is not true. The following command runs without error for gcc 4.8.0 and 7.5.0 on my servers:\ngcc test.c -o test This is because GCC uses its built-in implementation of some standard C library functions to produce faster and smaller executables. According to post here, we can use -fno-builtin to disable this behavior. We can also use -fno-builtin-somefunc to disable a single function named somefunc. Take the above test.c for an example, the following command will result in compilation error:\ngcc -fno-builtin-sqrt test.c -o test # adding -lm will fix the compilation errors. # gcc -fno-builtin-sqrt test.c -lm -o test Ref:\nOther Built-in Functions Provided by GCC https://gcc.gnu.org/onlinedocs/gcc/C-Dialect-Options.html#index-fno-builtin The original post is about GCC, I guess the same is true for clang++?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nlibc provides the implementation for functions like printf() and fopen().\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 December 2020","externalUrl":null,"permalink":"/2020/12/10/gcc_library_link_issue/","section":"Posts","summary":"\u003cp\u003eDifferent behavior of linkage between Clang and GCC.\u003c/p\u003e","title":"Why Are Some Libraries Linked by Default in GCC?","type":"posts"},{"content":"In this post, I will summarize how to build OpenCV from source, and introduce how to use it when writing C++ programs.\nBuild from source # On Ubuntu, run the following command to build OpenCV from source.\nsudo apt update \u0026amp;\u0026amp; sudo apt install -y cmake g++ wget unzip wget -O opencv.zip https://github.com/opencv/opencv/archive/master.zip unzip opencv.zip wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/master.zip unzip opencv_contrib.zip # Create build directory mkdir -p opencv_build \u0026amp;\u0026amp; cd opencv_build cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo \\ -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-master/modules \\ -DCMAKE_INSTALL_PREFIX=$HOME/local/ \\ ../opencv-master/ # using multiprocessing to compile can save a lot of time make -j make install The package will be installed to $HOME/local/, with binary file go to $HOME/local/bin, header file go to $HOME/local/include/opencv4, dynamic shared library file go to $HOME/local/lib.\nA speical note on header files, the structure of OpenCV header files is someting like the following:\n# generated using tree -L 2 -d $HOME/local/include/opencv4 /home/jdhao/local/include/opencv4/ └── opencv2 ├── calib3d ├── core ├── dnn ├── features2d ├── flann ├── gapi ├── highgui ├── imgcodecs ├── imgproc ├── ml ├── objdetect ├── photo ├── stitching ├── video └── videoio The header files are grouped into subdirectories based on their functionality.\nRef:\nhttps://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html https://docs.opencv.org/master/d0/d3d/tutorial_general_install.html https://docs.opencv.org/master/db/d05/tutorial_config_reference.html Run a simple program utilizing OpenCV # The following program reads an image and resize it to size 300x300 using OpenCV:\n#include \u0026#34;opencv2/opencv.hpp\u0026#34; #include \u0026#34;opencv2/core/core.hpp\u0026#34; #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; int main(){ cv::Mat img, dst; img = cv::imread(\u0026#34;wind-turbine.jpg\u0026#34;, cv::IMREAD_COLOR); cv::resize(img, dst, cv::Size(300, 300)); std::cout \u0026lt;\u0026lt; \u0026#34;img width and height: \u0026#34; \u0026lt;\u0026lt; img.size().width \u0026lt;\u0026lt; \u0026#34;, \u0026#34; \u0026lt;\u0026lt; img.size().height \u0026lt;\u0026lt; std::endl; cv::imwrite(\u0026#34;resize_img.jpg\u0026#34;, dst); return 0; } In the above code, we have included some OpenCV header files. If you look at the header file opencv.hpp, you will find that it actually includes other OpenCV header files, if they are not included in your code already. So in most cases, include opencv.hpp may be enough if you do not care about compilation time (see also here and here for more discussions on this).\nWe can compile the above program with the following command:\nclang++ -Wall \\ -I$HOME/local/include/opencv4/ \\ -L$HOME/local/lib/ \\ -lopencv_core -lopencv_imgcodecs -lopencv_imgproc \\ read_img.cc -o read_img Note that cv::imresize() requires libopencv_imgproc.so be linked against.\nIssues met when compiling # I met the following error:\nundefined references to cv::imread()\nIt is because if we use functions from some OpenCV module, we need to link our C++ program against the corresponding shared object file. We can specify the Library to link against with -l. For example, -lopencv_imgproc means to link against libopencv_imgproc.so.\nRef:\nUndefined reference to cv::imread(cv::String const\u0026amp;, int) Issue with the linker using opencv and C++ - Undefined Reference Cannot get OpenCV to compile because of undefined references? how do we know which header file to include Books: https://www.packtpub.com/product/learning-image-processing-with-opencv/9781783287659 ","date":"7 December 2020","externalUrl":null,"permalink":"/2020/12/07/build_opencv_cpp_library_linux/","section":"Posts","summary":"\u003cp\u003eIn this post, I will summarize how to build OpenCV from source, and introduce\nhow to use it when writing C++ programs.\u003c/p\u003e","title":"Building OpenCV from Source on Linux","type":"posts"},{"content":"To get a reasonably large collection of traditional and simplified Chinese characters in use toady, we may use zhon:\npip install zhon To get pinyin of a Chinese character, we use python-pinyin:\npip install pypinyin Here a script to get pinyin initials for valid Chinese character without tones:\nfrom zhon import cedict from pypinyin import pinyin, Style import yaml def main(): all_chars = set(cedict.all) ch_initials = {} for c in all_chars: ch_pinyin = pinyin(c, style=Style.NORMAL, errors=\u0026#39;ignore\u0026#39;) # if no pinyin for this char exists if not ch_pinyin: continue py_init = ch_pinyin[0][0][0] ch_initials[c] = py_init fname = \u0026#39;zh_char_initial.yaml\u0026#39; with open(fname, \u0026#39;w\u0026#39;) as f: yaml.dump(ch_initials, f) if __name__ == \u0026#34;__main__\u0026#34;: main() Ref # https://pypinyin.readthedocs.io/zh_CN/master/api.html ","date":"4 December 2020","externalUrl":null,"permalink":"/2020/12/04/pinyin_initials_of_chinese_char/","section":"Posts","summary":"\u003cp\u003eTo get a reasonably large collection of traditional and simplified Chinese\ncharacters in use toady, we may use \u003ca href=\"https://zhon.readthedocs.io/en/latest/\" target=\"_blank\"\u003ezhon\u003c/a\u003e:\u003c/p\u003e","title":"Get Pinyin Initials of Chinese characters","type":"posts"},{"content":" update log 2022-02-08: update fastgit URL In this post, I would like to share how to set up Neovim for writing simple C++ programs.\nPrerequisite # First, we need to install additional packages or tools. The installation sections below are mostly aimed at Linux. For macOS, clang is already installed, and for ccls (a LSP server for C++/C), you can simply install it via HomeBrew:\nbrew install ccls Install gcc # LLVM requires gcc to be at least 5.1, first, we need to update gcc.\nInstall gcc-7 on CentOS 7 # # How to do it on Ubuntu sudo yum install centos-release-scl sudo yum install devtoolset-7-gcc* scl enable devtoolset-7 bash which gcc gcc --version Ref:\nhttps://stackoverflow.com/a/39731134/6064933 Install gcc-7 on Ubuntu 16.04 # Install a newer version of GCC since it is required to compile ccls1. On Ubuntu, you can install newer gcc via the following command:\nsudo apt-get install -y software-properties-common sudo add-apt-repository ppa:ubuntu-toolchain-r/test sudo apt update sudo apt install g++-7 -y Set up gcc-7 to be the default:\nupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7 sudo update-alternatives --config gcc Ref:\nInstall gcc-7 on Ubuntu 16.04 Install CMake # Ccls requires newer version of cmake. The cmake on my system is tool old. First, we need to download cmake binary release:\nwget https://hub.fastgit.xyz/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-linux-x86_64.sh mkdir $HOME/tools/cmake bash cmake-3.18.4-Linux-x86_64.sh --prefix=$HOME/tools/cmake --exclude-subdir --skip-license Add cmake executable to PATH:\nexport PATH=\u0026#34;$HOME/tools/cmake/bin:$PATH\u0026#34; Ref:\nHow do I install the latest version of cmake from the command line? Install llvm and clang # To install clang, either build it from source or install the binary release if it is available for your system.\nBuild from source # Follow the guide here on building Clang and LLVM on your platform.\ngit clone --depth=1 https://hub.fastgit.xyz/llvm/llvm-project.git mkdir -p llvm-project/build cd llvm-project/build cmake -G \u0026#34;Unix Makefiles\u0026#34; -DLLVM_ENABLE_PROJECTS=\u0026#34;clang;clang-tools-extra\u0026#34; -DCMAKE_INSTALL_PREFIX=~/tools/llvm -DCMAKE_BUILD_TYPE=Release ../llvm # Note that make -j may error out due to excessive memory usage, so we restrict # the number of processor used to compile llvm. make -j 16 The option -DCMAKE_INSTALL_PREFIX specify where we want to install llvm and clang. Since I do not have root rights, I install it under $HOME/tools/llvm. You may change it to other directory. We add clang-tools-extra to option DLLVM_ENABLE_PROJECTS so that extra tools like clangd and clang-tidy can also be built.\nInstall binary release # Note that for some systems, clang also has pre-built binary so you do not need to build from source yourself, see here.\nFor example, there is binary release for Ubuntu 16.04:\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz tar xvf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz Do not forget to add the binary and include path to your PATH and LD_LIBRARY_PATH env variable.\nccls # ccls is a Language Server implementation for C++/C etc. It can be used for C++ code completion, linting, formatting etc. Ccls build instruction can be found here.\nBuild ccls # With all its dependencies installed, we can now build ccls:\ngit clone --depth=1 --recursive https://github.com/MaskRay/ccls cd ccls cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$HOME/tools/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-16.04 cmake --build Release If you see the following error:\nsrc/utils.hh:18:20: fatal error: optional: No such file or directory\nThis is because ccls can not find the optional header files. Your gcc version is too old, you should install gcc-7. See above section on how to install gcc-7 on Ubuntu.\nAnother error I met is that libtinfo is not found when compiling:\n/usr/bin/ld: cannot find -ltinfo\nJust install libtinfo-dev using apt:\nsudo apt install libtinfo-dev After all these steps, ccls should be compiled successfully. Add the executable directory to your PATH.\nRef:\nhttps://github.com/MaskRay/ccls/issues/41 https://github.com/MaskRay/ccls/issues/469 https://github.com/MaskRay/ccls/issues/195 Neovim config # Now comes to the configuration for Neovim.\nAuto-completion # For auto-completion, we use vim-lsp, together with deoplete-vim-lsp and deoplete.\nAn example config is shown below:\nPlug \u0026#39;prabirshrestha/vim-lsp\u0026#39; Plug \u0026#39;Shougo/deoplete.nvim\u0026#39; Plug \u0026#39;lighttiger2505/deoplete-vim-lsp\u0026#39; \u0026#34; setting with vim-lsp if executable(\u0026#39;ccls\u0026#39;) au User lsp_setup call lsp#register_server({ \\ \u0026#39;name\u0026#39;: \u0026#39;ccls\u0026#39;, \\ \u0026#39;cmd\u0026#39;: {server_info-\u0026gt;[\u0026#39;ccls\u0026#39;]}, \\ \u0026#39;root_uri\u0026#39;: {server_info-\u0026gt;lsp#utils#path_to_uri( \\ lsp#utils#find_nearest_parent_file_directory( \\ lsp#utils#get_buffer_path(), [\u0026#39;.ccls\u0026#39;, \u0026#39;compile_commands.json\u0026#39;, \u0026#39;.git/\u0026#39;]))}, \\ \u0026#39;initialization_options\u0026#39;: { \\ \u0026#39;highlight\u0026#39;: { \u0026#39;lsRanges\u0026#39; : v:true }, \\ \u0026#39;cache\u0026#39;: {\u0026#39;directory\u0026#39;: stdpath(\u0026#39;cache\u0026#39;) . \u0026#39;/ccls\u0026#39; }, \\ }, \\ \u0026#39;whitelist\u0026#39;: [\u0026#39;c\u0026#39;, \u0026#39;cpp\u0026#39;, \u0026#39;objc\u0026#39;, \u0026#39;objcpp\u0026#39;, \u0026#39;cc\u0026#39;], \\ }) endif If you are on Linux, the above config should work as expected. As soon as you started editing C++ source files, code auto-completion for standard C++ header and for methods/class in standard library should work.\nHowever, if we only use the above config, auto-completion only works for standard C++ libraries, since ccls does not know where to find the header file for other packages we use. We can create a .ccls under the project root to tell ccls our compilation flags. An example config for a source file using OpenCV is like the following:\nclang %h -x c++-header -Wall -Wextra %cpp -std=c++11 %c -std=c11 -I/home/jdhao/local/include/opencv4 -I. On macOS, I have encountered completion issues even for standard libraries. It seems that clang can not find the correct directory for the header files of standard libraries. The following is a working .ccls file:\nclang -isystem/Library/Developer/CommandLineTools/usr/include/c++/v1 %cpp -std=c++11 The directory /Library/Developer/CommandLineTools/usr/include/c++/v1 is where macOS stores the standard C++ header files. It uses the system clang. If you do not know where that directory is, use the following command:\nclang -v -fsyntax-only -x c++ /dev/null Some of the output will show the possible directories where standard C++ may exist:\n#include \u0026lt;...\u0026gt; search starts here: /usr/local/include /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1 /Library/Developer/CommandLineTools/usr/lib/clang/11.0.0/include /Library/Developer/CommandLineTools/usr/include /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory) If you install ccls on macOS via HomeBrew, it will also install a separate clang/llvm package on your system. The llvm directory is like /usr/local/Cellar/llvm/11.0.0. If that is the case, the following .ccls file is also working for macOS:\nclang -ccc-install-dir /usr/local/Cellar/llvm/11.0.0/bin %cpp -std=c++11 %cpp -stdlib=libc++ It uses clang installed via homebrew. The standard C++ header file location now becomes /usr/local/Cellar/llvm/11.0.0/include/c++/v1/, also see here.\nIf your project is a CMake project, you can also generate a compile_commands.json file for ccls to work. For the details, see here.\nRef:\nccls config: ccls Initialization options (can be set up via LS client in vim script) https://github.com/MaskRay/ccls/wiki/Customization https://github.com/MaskRay/ccls/wiki/Project-Setup#ccls-file https://github.com/neovim/nvim-lspconfig/issues/70 ccls C++ header file completion https://github.com/MaskRay/ccls/issues/191#issuecomment-453809905 https://github.com/MaskRay/ccls/issues/368 https://github.com/MaskRay/ccls/issues/450 Syntax highlighting # If you do not want to use lsp-based highlight, you may try chromatica.nvim or vim-cpp-enhanced-highlight. Vim-cpp-enhanced highlight is base on regex matching to highlight symbols. It does not understand the code. It may not be accurate compared to LSP.\nFor lsp highlight, use vim-lsp-cxx-highlight. I can not make it work with nvim-lsp though. It works with vim-lsp.\nExample config:\nPlug \u0026#39;jackguo380/vim-lsp-cxx-highlight\u0026#39; tags and navigation # We can use gutentags to generate tags for us. Example config below:\nlet g:gutentags_ctags_tagfile = \u0026#39;.tags\u0026#39; let s:vim_tags = expand(\u0026#39;~/.cache/tags\u0026#39;) let g:gutentags_cache_dir = s:vim_tags let g:gutentags_ctags_extra_args = [\u0026#39;--fields=+niazS\u0026#39;, \u0026#39;--extra=+q\u0026#39;] let g:gutentags_ctags_extra_args += [\u0026#39;--c++-kinds=+px\u0026#39;] let g:gutentags_ctags_extra_args += [\u0026#39;--c-kinds=+px\u0026#39;] Compilation and run # If you are writing a large code project, you should use make or other build tools. For simple programs, using clang directly is convenient.\nThis is how to compile and run a simple program via the built-in terminal:\nnnoremap \u0026lt;silent\u0026gt; \u0026lt;buffer\u0026gt; \u0026lt;F9\u0026gt; :call \u0026lt;SID\u0026gt;compile_run_cpp()\u0026lt;CR\u0026gt; function! s:compile_run_cpp() abort let src_path = expand(\u0026#39;%:p:~\u0026#39;) let src_noext = expand(\u0026#39;%:p:~:r\u0026#39;) \u0026#34; The building flags let _flag = \u0026#39;-Wall -Wextra -std=c++11 -O2\u0026#39; if executable(\u0026#39;clang++\u0026#39;) let prog = \u0026#39;clang++\u0026#39; elseif executable(\u0026#39;g++\u0026#39;) let prog = \u0026#39;g++\u0026#39; else echoerr \u0026#39;No compiler found!\u0026#39; endif call s:create_term_buf(\u0026#39;v\u0026#39;, 80) execute printf(\u0026#39;term %s %s %s -o %s \u0026amp;\u0026amp; %s\u0026#39;, prog, _flag, src_path, src_noext, src_noext) startinsert endfunction function s:create_term_buf(_type, size) abort set splitbelow set splitright if a:_type ==# \u0026#39;v\u0026#39; vnew else new endif execute \u0026#39;resize \u0026#39; . a:size endfunction References # http://www.skywind.me/blog/archives/2084 Strictly speaking, you can build ccls via clang, but I find it hard and can not seem to make it work.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"29 November 2020","externalUrl":null,"permalink":"/2020/11/29/neovim_cpp_dev_setup/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-02-08: update fastgit URL\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I would like to share how to set up Neovim for writing simple C++ programs.\u003c/p\u003e","title":"Setting up Neovim for C++ Development with LSP","type":"posts"},{"content":"Update 2021-01-14: I ended up writing a plugin called better-escape.vim which aims at solving this issue.\nA very popular insert mode mapping for Neovim/Vim is to map jk or kj or jj to \u0026lt;ESC\u0026gt; for quicker escaping from the insert mode. I have used the following mapping for quite some time:\ninoremap jk \u0026lt;ESC\u0026gt; However, it will cause lag whenever we press j in insert mode. Because Vim will wait for timeoutlen milliseconds to see if you want to enter j or if you mean the map jk.\nOf course, you can reduce timeoutlen option to very small values, but it is not user-friendly to type mappings that consists of several key strokes. Before you can press the next key in your mapping, Vim may have already time out.\nI saw on Reddit the other day that someone propose to check the character before the current one and leave insert mode based on some conditions. I thought this might be a better way. The idea is to have an insert mode mapping for k, when we press k, we then check the character before k. If that character is j, we will erase j and leave insert mode. Otherwise, we will insert k as is.\nHere is a crude implementation of that idea:\nscriptencoding utf-8 inoremap \u0026lt;expr\u0026gt; k EscapeInsertOrNot() \u0026#34; some test text function! EscapeInsertOrNot() abort \u0026#34; If k is preceded by j, then remove j and go to normal mode. let line_text = getline(\u0026#39;.\u0026#39;) let cur_ch_idx = CursorCharIdx() let pre_char = CharAtIdx(line_text, cur_ch_idx-1) echom \u0026#39;pre_char is:\u0026#39; pre_char if pre_char ==# \u0026#39;j\u0026#39; return \u0026#34;\\b\\e\u0026#34; else return \u0026#39;k\u0026#39; endif endfunction \u0026#34; split(line_text, \u0026#39;\\zs\u0026#39;) can split string into separate char \u0026#34;汉字测试这是一些汉字 some charjust \u0026#34; byte index of 这 is 14 (using col(\u0026#39;.\u0026#39;)) \u0026#34; let my_str = \u0026#39;你好吗\u0026#39; \u0026#34; strcharpart(my_str, 0, 1) is the first char in my_str (it is like my_str[0] in Python) \u0026#34; strcharpart(my_str, 1, 1) is the second char in my_str \u0026#34; let ch = \u0026#39;你\u0026#39; \u0026#34; byteidx(ch, 1) is the number of byte in UTF-8 encoding for ch (suppose \u0026#34; that the character encoding is UTF-8) function! CharAtIdx(str, idx) abort \u0026#34; Get char at idx from str. Note that this is based on character index \u0026#34; instead of the byte index. return strcharpart(a:str, a:idx, 1) endfunction function! CursorCharIdx() abort \u0026#34; This function returns the character-based index for character under \u0026#34; cursor. \u0026#34; Get the character under cursor let line_text = getline(\u0026#39;.\u0026#39;) let cur_byte_idx = col(\u0026#39;.\u0026#39;) echo \u0026#39;cur_byte_idx:\u0026#39; cur_byte_idx if cur_byte_idx == 1 echomsg \u0026#39;cursor char idx:\u0026#39; 0 return 0 endif \u0026#34; character index starts from zero let [ch_idx, byte_idx] = [-1, 0] for c in split(line_text, \u0026#39;\\zs\u0026#39;) let ch_idx += 1 let byte_idx += byteidx(c, 1) echomsg ch_idx c byte_idx if byte_idx+1 == cur_byte_idx let pre_char = strcharpart(line_text, ch_idx, 1) echomsg \u0026#39;pre char is:\u0026#39; pre_char \u0026#39;pre char index:\u0026#39; ch_idx let cursor_char = strcharpart(line_text, ch_idx+1, 1) echomsg \u0026#39;cursor char\u0026#39; cursor_char \u0026#39;index:\u0026#39; ch_idx+1 return ch_idx + 1 endif endfor endfunction Note that the above script is a little complex, because we need to take non-ASCII characters into account. The function CursorCharIdx() is used to get the character index of the cursor char in the cursor line. I have tested that it works for pure ASCII text and text containing non-ASCII characters.\nI feel that the function above to get the cursor char index is too complex. So I asked a question on stackexchange and got a more concise solution:\nfunction! CursorCharIdx() abort \u0026#34; A more concise way to get character index under cursor. let cursor_byte_idx = col(\u0026#39;.\u0026#39;) if cursor_byte_idx == 1 return 0 endif let pre_cursor_text = getline(\u0026#39;.\u0026#39;)[:col(\u0026#39;.\u0026#39;)-2] return strchars(pre_cursor_text) endfunction One issue is that if you want to insert jk literally, you can not just type j followed by k. It will be interpreted as escaping the insert mode. To insert k, we can press Ctrl-V, then press k. This works, because Vim will not consider character after Ctrl-v for mappings. See also :h i_CTRL-V for the details. Since I rarely use jk in my writing, I am fine with this issue.\nReferences # http://derekwyatt.org/2015/07/27/getting-character-under-cursor-in-vim/ Vim: do something in a function based on character under a cursor? Vim (vimscript) get exact character under the cursor How can I get the character at the cursor position in a multibyte aware manner? Reliably get the character at a byte index in a string ","date":"23 November 2020","externalUrl":null,"permalink":"/2020/11/23/neovim_better_mapping_for_leaving_insert_mode/","section":"Posts","summary":"\u003cp\u003e\u003cfont color=\"blue\"\u003eUpdate 2021-01-14: I ended up writing a plugin called\n\u003ca href=\"https://github.com/jdhao/better-escape.vim\" target=\"_blank\"\u003ebetter-escape.vim\u003c/a\u003e which aims at\nsolving this issue.\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003eA \u003ca href=\"https://vi.stackexchange.com/q/300/15292\" target=\"_blank\"\u003every popular insert mode mapping\u003c/a\u003e\nfor Neovim/Vim is to map \u003ccode\u003ejk\u003c/code\u003e or \u003ccode\u003ekj\u003c/code\u003e or \u003ccode\u003ejj\u003c/code\u003e to \u003ccode\u003e\u0026lt;ESC\u0026gt;\u003c/code\u003e for quicker escaping\nfrom the insert mode. I have used the following mapping for quite some time:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vim\" data-lang=\"vim\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003einoremap\u003c/span\u003e \u003cspan class=\"nx\"\u003ejk\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eESC\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"A Better Mapping to Leave Insert Mode than jk","type":"posts"},{"content":"TL;DR: do not use list multiplication to initialize an empty list of list, or you will end up wasting hours debugging your program.\nI wrote some Python code for my project and found that the result isn\u0026rsquo;t correct. So I spent quite some time debugging the whole working process of this program, and found sadly that the culprit is a list of empty list, which is wrongly initialized.\nWhat is the resulting list, if we do the following in Python?\nx = [[]] * 3 x[0].append(1.0) I expect x now becomes [[1.0], [], []]. Instead, it becomes [[1.0], [1.0], [1.0]]. This is because when we use multiplication to create list x, we actually created 3 references to an empty list. List is a mutable object in Python. When we append values to a list, we haven\u0026rsquo;t changed its identity. As a result, changing either one of the 3 sub-list will change the others, since they all refer to the same list.\nNote that things are different when we create a list of same immutable objects using multiplication. For example, if we create a list of same int, and then change one of the them, the other elements will not change, because we can not change the value of immutable types, assigning a new int to a list element will make it point to another address.\nIn [18]: a = [1] * 2 In [19]: a Out[19]: [1, 1] In [20]: print(id(a[0]), id(a[1])) 4438635584 4438635584 In [21]: a[0] = 2 In [22]: print(id(a[0]), id(a[1])) 4438635616 4438635584 To create a list 3 empty lists, we may use list comprehension instead:\nx = [[] for _ in range(3)] In each iteration, a new empty list is created. So the 3 sub-list are independent of each other. Changing one won\u0026rsquo;t affect the others.\nReferences # List of lists changes reflected across sublists unexpectedly https://bugs.python.org/issue27135 https://docs.python.org/3/faq/programming.html#how-do-i-create-a-multidimensional-list ","date":"22 November 2020","externalUrl":null,"permalink":"/2020/11/22/python_list_of_empty_list_pitfall/","section":"Posts","summary":"\u003cp\u003eTL;DR: do not use list multiplication to initialize an empty list of list, or\nyou will end up wasting hours debugging your program.\u003c/p\u003e","title":"The Correct Way to Create List of Empty List in Python","type":"posts"},{"content":" Update log 2021-10-23: fix typo，更新链接。 对几种中文分词工具进行了调研，简单总结一下。 工具介绍与安装 # 这里用了几种开源的分词工具，具体信息如下：\njieba：jieba 是分词领域还挺有名的一个工具。 pkuseg：pkuseg 是北京大学语言计算与机器学习研究组开源的一个分词工具。 LAC：LAC 是百度 NLP 团队开源的基于百度自家的 PaddlePaddle 的词法分析工具。 LTP: LTP 是哈工大社会计算与信息检索研究中心开源的一款中文自然语言处理工具。 这些库都提供了 Python 接口，使用 pip 安装命令如下：\npip install jieba pkuseg lac ltp 简单上手试用 # from LAC import LAC import pkuseg import jieba from ltp import LTP my_str = \u0026#34;索引图是一种特殊的图 ，它的存在主要是为了节省空间，索引图附带了一个 color palette/table 或者叫 color map，对应了 256 种颜色（所以 color table 大小为 256x3）），然后图像像素每个位置值在 0-255 之间，数值代表该处像素在 color table 对应的颜色的索引值，实际展示该图片的时候，我们利用这个索引就能在 color table 中找到真正要展示的颜色。从这个描述可以看出，索引图一个像素只需要 1 比特，所以索引图占的空间大小约为 RGB 图的 1/3 ，大大减少了存储占用\u0026#34; bseg = LAC(mode=\u0026#39;seg\u0026#39;) pseg = pkuseg.pkuseg() ltp = LTP() print(bseg.run(my_str)) print(pseg.cut(my_str)) print(list(jieba.cut(my_str))) # jieba.cut() 返回的是 iterator，所以转成了 list 显示 print(ltp.seg([my_str])[0]) 速度 benchmark # 同时也对比了一下几款工具的分词速度，\nIn [9]: %timeit bseg.run(my_str) 8.24 ms ± 68.8 µs per loop (mean ± std. dev. of 7 runs, 100 loops each) In [10]: %timeit list(jieba.cut(my_str)) Building prefix dict from the default dictionary ... Loading model from cache /var/folders/nj/53p0t04x2d76_9x8hsq0zfwc0000gn/T/jieba.cache Loading model cost 0.566 seconds. Prefix dict has been built successfully. 740 µs ± 7.24 µs per loop (mean ± std. dev. of 7 runs, 1 loop each) In [11]: %timeit pseg.cut(my_str) 5.31 ms ± 160 µs per loop (mean ± std. dev. of 7 runs, 100 loops each) In [12]: %timeit ltp.seg([my_str]) 54.7 ms ± 666 µs per loop (mean ± std. dev. of 7 runs, 10 loops each) 可以看出 jieba 的速度是最快的，其次是 pkuseg，然后百度的 LAC，最慢的是哈工大 LTP。检查分词的结果，发现 jieba 的分词准确率不及 pkuseg，LAC 和 LTP，pkuseg，LAC，LTP 结果比较接近。\n注：非专业测评，结果仅供参考，更客观全面的评测还需要在不同数据集上跑测试才能得出。\n参考 # https://www.52nlp.cn/%E4%BA%94%E6%AC%BE%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E5%B7%A5%E5%85%B7%E7%BA%BF%E4%B8%8Apk-jieba-snownlp-pkuseg-thulac-hanlp https://github.com/ownthink/evaluation https://www.cnblogs.com/maxxu11/p/12604569.html ","date":"20 November 2020","externalUrl":null,"permalink":"/2020/11/20/chinese_text_seg_tools/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-10-23: fix typo，更新链接。\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n对几种中文分词工具进行了调研，简单总结一下。","title":"几种中文分词工具对比","type":"posts"},{"content":"今天遇到了一个有趣的问题，有人在 v2ex 上说自己的图片，经过 PIL 缩放到 800x600 以后，非常模糊，有什么办法可以解决。\n现象与问题 # 我想这不可能啊，我把他的原图下载到本地，然后使用 PIL 进行缩放保存，原始的代码如下：\nfrom PIL import Image def main(): img = Image.open(\u0026#39;big_image.png\u0026#39;) im_resize = img.resize((800, 600), resample=Image.LANCZOS) im_resize.save(\u0026#39;big-resized-pil.png\u0026#39;, quality=90) if __name__ == \u0026#34;__main__\u0026#34;: main() 发现保存的图片中，文字部分的确很模糊，Image.LANCZOS 已经是最好的滤波器了，按理说不应该出现这种问题。我又把 PIL 提供的其他几种滤波器都试了一下，发现出来的结果没区别，都很差。\n我又用 OpenCV 试了一下，发现使用 OpenCV 缩放得到的图片效果还可以，下面是我的代码：\nimport cv2 def main(): im = cv2.imread(\u0026#39;big_image.png\u0026#39;) # https://docs.opencv.org/master/da/d54/group__imgproc__transform.html#ga47a974309e9102f5f08231edc7e7529d im_resize = cv2.resize(im, (800, 600), interpolation=cv2.INTER_LANCZOS4) write_param = [cv2.IMWRITE_PNG_COMPRESSION, 5] cv2.imwrite(\u0026#39;big-resized.png\u0026#39;, im_resize, write_param) if __name__ == \u0026#34;__main__\u0026#34;: main() 缩放以后的图片明显比 PIL 缩放出来的效果好了很多，上面的 Interpolation 参数类似于 PIL 中的 resample 参数，用来控制图像缩放时候使用的滤波器，不光 cv2.INTER_LANCZOS4 出来的效果可以，甚至 cv2.INTER_AREA 出来的效果也不错。\n即便 OpenCV 和 PIL 实现某个滤波器的细节有差异，缩放出来的结果差异也不应该如此明显，这样巨大的差异很难用实现细节不同来解释清楚。\n原因 # 后面那个问题又有人回复，说可能是因为提问者给的图是索引图 (index image，也叫 palette image) (索引图读取以后，使用 print(im.mode) 会输出 'P')。如果图片本身是索引图，PIL 在读取图片并不会自动转换为 RGB 图片，因此返回的 Image 对象仍然是索引图，这就带来了问题。\n如果我们仔细阅读 Image.resize() 方法的文档，其中对 resample 参数的解释提到：\nIf the image has mode “1” or “P”, it is always set to PIL.Image.NEAREST\n这样就解释了为什么我们最初使用 Image.LANCZOS 滤波器不管用的问题：因为这个图像是索引图像，PIL 只会使用 Image.NEAREST 滤波器，我们自己设定的滤波器压根没生效，所以才会出现糟糕的压缩效果。\n知道了这个原因，解决方法也很简单，那就是读取图像的时候，使用 Image.convert() 把图像转为 RGB 模式:\nimg = Image.open(\u0026#39;big_image.png\u0026#39;).convert(\u0026#39;RGB\u0026#39;) 然后对图像进行缩放，得到的结果就与 OpenCV 缩放以后的结果基本一致了。\n什么是索引图 # 我们常见的 RGB 图片，图片的每个像素分别用 R, G, B 三个颜色分量表示，一般取值是在 0-255 之间，每个颜色分量占 1 byte，所以一个像素占 3 byte 空间，如果图像大小为 MxN，那么图像占的内存空间大小约为 MxNx3 byte。\n索引图是一种特殊的图 ，它的存在主要是为了节省空间，索引图附带了一个 color palette/table 或者叫 color map，对应了 256 种颜色（所以 color table 大小为 256x3）），然后图像像素每个位置值在 0-255 之间，数值代表该处像素在 color table 对应的颜色的索引值，实际展示该图片的时候，我们利用这个索引就能在 color table 中找到真正要展示的颜色。从这个描述可以看出，索引图一个像素只需要 1 比特，所以索引图占的空间大小约为 RGB 图的 1/3 ，大大减少了存储占用1。\n我们在 PIL 中可以轻松创建索引图，一个改编例子如下：\nfrom PIL import Image from PIL import ImageDraw im = Image.new(\u0026#34;P\u0026#34;, (400, 400), 0) palette_color = im.getpalette() print(palette_color) im.putpalette([ 0, 0, 0, # black background 255, 0, 0, # index 1 is red 255, 255, 0, # index 2 is yellow 255, 153, 0, # index 3 is orange ]) # It seems that the image palette is automatically filled with numbers to make # it have size 256*3 (768), if you do not provide that much number to # putpaletter() method. palette_color = im.getpalette() print(palette_color) d = ImageDraw.ImageDraw(im) d.polygon((0, 0, 0, 400, 400, 400), fill=1) d.rectangle((100, 100, 300, 300), outline=2) d.ellipse((120, 120, 280, 280), outline=3) im.save(\u0026#34;out.gif\u0026#34;) 在 PIL 中，如果图像是一个索引图，我们可以使用 Image.getpalette() 方法得到它的 color palette，该 palette 是一个 768 元素的 list，按照 [r, g, b, r, g, b, ...] 这种顺序排布。为了方便找到某个 index 对应的颜色，我们可以把它变形：\npalette_color = np.asarray(palette).reshape(256, 3) 参考 # What is the difference between images in \u0026lsquo;P\u0026rsquo; and \u0026lsquo;L\u0026rsquo; mode in PIL? http://www.manifold.net/doc/mfd9/palette_images.htm 这只是一个粗糙计算，实际中还要考虑图像编码等其他因素。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 November 2020","externalUrl":null,"permalink":"/2020/11/18/pillow_image_resize_pitfall/","section":"Posts","summary":"\u003cp\u003e今天遇到了\u003ca href=\"https://www.v2ex.com/t/726518\" target=\"_blank\"\u003e一个有趣的问题\u003c/a\u003e，有人在 v2ex 上说自己的图片，经过 \u003ca href=\"https://python-pillow.org/\" target=\"_blank\"\u003ePIL\u003c/a\u003e 缩放到 800x600 以后，非常模糊，有什么办法可以解决。\u003c/p\u003e","title":"Pillow/PIL 缩放索引图像时的一个问题","type":"posts"},{"content":"","date":"16 November 2020","externalUrl":null,"permalink":"/tags/jedi/","section":"Tags","summary":"","title":"Jedi","type":"tags"},{"content":"","date":"16 November 2020","externalUrl":null,"permalink":"/tags/pyls/","section":"Tags","summary":"","title":"Pyls","type":"tags"},{"content":"Update 2021-07-15: Note that pyls has been deprecated. There is new fork of it called pylsp, which is maintained by the community.\nIn my older post, I have shared how to set up auto-completion for vim-lsp with the help of deoplete. One annoyance is that I can not use fuzzy matching for auto-completion: the completion items in the pop-up completion menu seems to be selected base on prefix matching.\nAfter consulting the deoplete documentation, I add the following config:\ncall deoplete#custom#source(\u0026#39;_\u0026#39;, \u0026#39;matchers\u0026#39;, [\u0026#39;matcher_full_fuzzy\u0026#39;]) call deoplete#custom#option({\u0026#39;camel_case\u0026#39;: v:true,}) Interestingly, the above config works for ccls, i.e., fuzzy matching now works for cpp files. For example, cv::imread(\u0026quot;test.jpg\u0026quot;, cv::imcolor) can show cv::IMREAD_COLOR as a completion candidate.\nHowever, for pyls, the above config does not work. Under the hood, pyls uses jedi for code completion feature (see here).\nIn newer version of Jedi, it actually supports fuzzy code completion in complete() method. Pyls turns off this feature by default. So to enable fuzzy matching, we need to config it manually. Based on example config here, I have figured out the correct config for vim-lsp:\nif executable(\u0026#39;pyls\u0026#39;) \u0026#34; pip install python-language-server augroup pyls_setup autocmd! autocmd User lsp_setup call lsp#register_server({ \\ \u0026#39;name\u0026#39;: \u0026#39;pyls\u0026#39;, \\ \u0026#39;cmd\u0026#39;: {server_info-\u0026gt;[\u0026#39;pyls\u0026#39;]}, \\ \u0026#39;allowlist\u0026#39;: [\u0026#39;python\u0026#39;], \\ \u0026#39;workspace_config\u0026#39;: { \\ \u0026#39;pyls\u0026#39;: \\ {\u0026#39;configurationSources\u0026#39;: [\u0026#39;flake8\u0026#39;], \\ \u0026#39;plugins\u0026#39;: {\u0026#39;flake8\u0026#39;: {\u0026#39;enabled\u0026#39;: v:true}, \\ \u0026#39;pyflakes\u0026#39;: {\u0026#39;enabled\u0026#39;: v:false}, \\ \u0026#39;pycodestyle\u0026#39;: {\u0026#39;enabled\u0026#39;: v:false}, \\ \u0026#39;jedi_completion\u0026#39;: {\u0026#39;fuzzy\u0026#39;: v:true}, \\ } \\ } \\ }}) augroup END endif Note that you also need to install the latest version of jedi1:\npip install -U jedi Now everything should work as expected.\nReferences # https://github.com/lighttiger2505/deoplete-vim-lsp/issues/23 The jedi version tested is 0.17.2\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 November 2020","externalUrl":null,"permalink":"/2020/11/16/vim_lsp_fuzzy_completion/","section":"Posts","summary":"\u003cp\u003e\u003cfont color=\"red\"\u003eUpdate 2021-07-15: Note that pyls has been deprecated. There\nis new fork of it called \u003ca href=\"https://github.com/python-lsp/python-lsp-server\" target=\"_blank\"\u003epylsp\u003c/a\u003e, which is maintained by the\ncommunity.\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2020/11/04/replace_deoplete_jedi_for_LSP/\" target=\"_blank\"\u003eolder post\u003c/a\u003e, I have shared how to set up\nauto-completion for vim-lsp with the help of deoplete. One annoyance is that I\ncan not use fuzzy matching for auto-completion: the completion items in the\npop-up completion menu seems to be selected base on prefix matching.\u003c/p\u003e","title":"Set up Fuzzy Completion for Vim-lsp","type":"posts"},{"content":"Shortly after I started using Neovim, I learned about the concept of text objects. For example, when the cursor is inside a pair of [], we can use ci] to change text inside them. This is definitely one of the greatest moments on my road of learning Vim. However, I haven\u0026rsquo;t really thought about how does text object really work.\nSince I use Markdown frequently, I often need to change URLs quickly. I thought it might be a good idea to define a text object for URL. Actually, there are already some plugins for it. However, they all rely on another plugin. Besides, I also want to learn how to write my own text objects from scratch. So I read some documentation and online posts. Now, I am able to create my own text objects with ease.\nHow to define new text objects # We can think of a text object as a piece of text. It is visually selected when we press the shortcut that defines it. When we want to define a new text objects, all we need to figure out is: how do we select it when we press the shortcut?\nTo select the desired text, it boils down to understanding two things:\nThe start and end position of this text object Is it character-wise or line-wise or even block-wise (I haven\u0026rsquo;t found block-wise useful, though)? Now, it is easy to define new text objects. All we do is to make sure that the desired text is selected when we press the shortcut. It does not really matter how do you achieve that with Vim script.\nFor example, if we want to define a text object for inner line (excluding blank space at head and tail of current line). Here is one such implementation:\nxnoremap il ^og_ onoremap il :normal vil\u0026lt;CR\u0026gt; In the above xnoremap, o is used to move cursor from on end of visual selection to another end, see :h v_o.\nText object for URL # To define a text object for URL, we need to first decide the complete URL text under cursor, find its start and end position in current line, then select the entire URL text in visual mode (char-wise not line-wise).\nvnoremap \u0026lt;silent\u0026gt; iu :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;URLTextObj()\u0026lt;CR\u0026gt; onoremap \u0026lt;silent\u0026gt; iu :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;URLTextObj()\u0026lt;CR\u0026gt; function! s:URLTextObj() abort if match(\u0026amp;runtimepath, \u0026#39;vim-highlighturl\u0026#39;) != -1 \u0026#34; Note that we use https://github.com/itchyny/vim-highlighturl to get the URL pattern. let url_pattern = highlighturl#default_pattern() else let url_pattern = expand(\u0026#39;\u0026lt;cfile\u0026gt;\u0026#39;) \u0026#34; Since expand(\u0026#39;\u0026lt;cfile\u0026gt;\u0026#39;) also works for normal words, we need to check if \u0026#34; this is really URL using heuristics, e.g., URL length. if len(url_pattern) \u0026lt;= 10 return endif endif \u0026#34; We need to find all possible URL on this line and their start, end idx. \u0026#34; Then find where current cursor is, and decide if cursor is on one of the \u0026#34; URLs. let line_text = getline(\u0026#39;.\u0026#39;) let url_infos = [] let [_url, _idx_start, _idx_end] = matchstrpos(line_text, url_pattern) while _url !=# \u0026#39;\u0026#39; let url_infos += [[_url, _idx_start+1, _idx_end]] let [_url, _idx_start, _idx_end] = matchstrpos(line_text, url_pattern, _idx_end) endwhile \u0026#34; echo url_infos \u0026#34; If no URL is found, do nothing. if len(url_infos) == 0 return endif let [start_col, end_col] = [-1, -1] \u0026#34; If URL is found, find if cursor is on it. let [buf_num, cur_row, cur_col] = getcurpos()[0:2] for url_info in url_infos \u0026#34; echo url_info let [_url, _idx_start, _idx_end] = url_info if cur_col \u0026gt;= _idx_start \u0026amp;\u0026amp; cur_col \u0026lt;= _idx_end let start_col = _idx_start let end_col = _idx_end break endif endfor \u0026#34; Cursor is not on a URL, do nothing. if start_col == -1 return endif \u0026#34; \u0026#34; now set the \u0026#39;\u0026lt; and \u0026#39;\u0026gt; mark call setpos(\u0026#34;\u0026#39;\u0026lt;\u0026#34;, [buf_num, cur_row, start_col, 0]) call setpos(\u0026#34;\u0026#39;\u0026gt;\u0026#34;, [buf_num, cur_row, end_col, 0]) normal! gv endfunction In the above code, we first find the end and start index of all URLs in current line. We then check if current cursor position is on one of those URLs. If that is true, we then set the '\u0026lt; and '\u0026gt; mark to the start and end index of this URL. Finally, we use gv to select this URL (see :h gv) .\nIn the above code, we use the URL pattern from a plugin called vim-highlighturl if it is installed or use expand(\u0026quot;\u0026lt;cfile\u0026gt;\u0026quot;) to get the URL under cursor. Note that expand(\u0026quot;\u0026lt;cfile\u0026gt;\u0026quot;) also works for non-URL text, the text object iu will also work for non-URL text. It is better to use the URL pattern provided by vim-highlighturl.\nThere is another shorter, but probably hacky way to define the URL text object:\nfunction! s:URLTextObj() abort \u0026#34; We need to find the start and end of URL, and select the entire URL string. \u0026#34; the following does not work well, since it also shows results even when \u0026#34; cursor is not on a valid URL. \u0026#34; let url = expand(\u0026#39;\u0026lt;cfile\u0026gt;\u0026#39;) \u0026#34; a better way to get url. let url = matchstr(getline(\u0026#39;.\u0026#39;), highlighturl#default_pattern()) normal! ^ \u0026#34; We should escape special patterns in url, see https://superuser.com/q/320398/736190, \u0026#34; see also https://stackoverflow.com/a/46235399/6064933 let url = escape(url, \u0026#39;/\u0026#39;) \u0026#34; I got the inspiration here: https://vi.stackexchange.com/a/2925/15292 silent! execute \u0026#34;normal! /\\\\V\u0026#34; . url . \u0026#34;/s\\\u0026lt;CR\u0026gt;v//e\\\u0026lt;CR\u0026gt;\u0026#34; endfunction Note that you are not required to define URL text object as iu, any valid LHS for mappings is acceptable. We use iu because it conforms to the naming style of native text objects.\nA text object for Markdown code blocks # For Markdown code blocks, it is necessary to define both inner and around text objects. We will use ic and ac to denote inner code block and around code block, respectively.\nHere is a sample implementation1:\nvnoremap \u0026lt;silent\u0026gt; ic :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;MdCodeBlockTextObj(\u0026#39;i\u0026#39;)\u0026lt;CR\u0026gt; onoremap \u0026lt;silent\u0026gt; ic :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;MdCodeBlockTextObj(\u0026#39;i\u0026#39;)\u0026lt;CR\u0026gt; vnoremap \u0026lt;silent\u0026gt; ac :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;MdCodeBlockTextObj(\u0026#39;a\u0026#39;)\u0026lt;CR\u0026gt; onoremap \u0026lt;silent\u0026gt; ac :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;MdCodeBlockTextObj(\u0026#39;a\u0026#39;)\u0026lt;CR\u0026gt; function! s:MdCodeBlockTextObj(type) abort \u0026#34; the parameter type specify whether it is inner text objects or around \u0026#34; text objects. \u0026#34; Move the cursor to the end of line in case that cursor is on the opening \u0026#34; of a code block. Actually, there are still issues if the cursor is on the \u0026#34; closing of a code block. In this case, the start row of code blocks would \u0026#34; be wrong. Unless we can match code blocks, it is not easy to fix this. normal! $ let start_row = searchpos(\u0026#39;\\s*```\u0026#39;, \u0026#39;bnW\u0026#39;)[0] let end_row = searchpos(\u0026#39;\\s*```\u0026#39;, \u0026#39;nW\u0026#39;)[0] let buf_num = bufnr() \u0026#34; For inner code blocks, remove the start and end line containing backticks. if a:type ==# \u0026#39;i\u0026#39; let start_row += 1 let end_row -= 1 endif \u0026#34; echo a:type start_row end_row call setpos(\u0026#34;\u0026#39;\u0026lt;\u0026#34;, [buf_num, start_row, 1, 0]) call setpos(\u0026#34;\u0026#39;\u0026gt;\u0026#34;, [buf_num, end_row, 1, 0]) execute \u0026#39;normal! `\u0026lt;V`\u0026gt;\u0026#39; endfunction Since code blocks are line-wise inherently, we only need to decide its start and end row. With this info, we can set the '\u0026lt; and '\u0026gt; mark. Then we can easily select the desire text. This time, we use visual-line mode, since it makes more sense to select code blocks in visual-line mode.\nConclusion # In this post, I have introduced how does text object work and how to define your own text objects. The most important part is to know your text object well and find ways to visually select it when the corresponding shortcut is pressed.\nReferences # vim wiki: create new text objects Is there a text object for current line? Is there a text object for the entire buffer? A plugin to create user text objects easily: https://github.com/kana/vim-textobj-user https://25.wf/posts/2020-09-04-vim-markdown-text-object.html https://vimways.org/2018/transactions-pending/ Other implementations can be found in this issue.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 November 2020","externalUrl":null,"permalink":"/2020/11/15/nvim_text_objects/","section":"Posts","summary":"\u003cp\u003eShortly after I started using \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e, I learned about the concept of \u003ca href=\"https://neovim.io/doc/user/motion.html#text-objects\" target=\"_blank\"\u003etext objects\u003c/a\u003e.\nFor example, when the cursor is inside a pair of \u003ccode\u003e[]\u003c/code\u003e, we can use \u003ccode\u003eci]\u003c/code\u003e to\nchange text inside them. This is definitely one of the greatest moments on my\nroad of learning Vim. However, I haven\u0026rsquo;t really thought about how does text\nobject really work.\u003c/p\u003e","title":"A Beginner's Guide on Creating Your Own Text Objects from Scratch in Neovim/Vim","type":"posts"},{"content":"","date":"15 November 2020","externalUrl":null,"permalink":"/tags/text-object/","section":"Tags","summary":"","title":"Text-Object","type":"tags"},{"content":"This is the 8th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ Use Neovim as man pager # The default pager used by man command on *nix lacks syntax highlighting and is not good for reading, searching. Why not turn nvim into the man pager? Just add the following setting to your shell config file:\nif [[ \u0026#34;$(command -v nvim)\u0026#34; ]]; then export EDITOR=\u0026#39;nvim\u0026#39; export MANPAGER=\u0026#39;nvim +Man!\u0026#39; export MANWIDTH=999 fi See also :h man.vim.\nRef:\nhttps://github.com/neovim/neovim/issues/9156 Close other windows quickly? # When we are in a certain window, we may want to close all other windows. We may go to the other windows and close them with :quit. It is a bit cumbersome.\nThe :only command is a much nicer way. It will close all the other windows except the one we are in. There is also an equivalent shortcut: \u0026lt;C-W\u0026gt; o (that is, Ctrl-W, followed by o).\nRef:\nCancel split window in Vim Execute a macro in several lines. # Macro is a powerful way to edit texts with similar structures. To execute a macro on several lines, we can use a line range if the lines are continuous. For example, execute macro a for line 10 to 15, use:\n10,15normal! @a Or we can visually select the lines, and run the following command (note that if you select these lines, and then press :, Nvim will insert '\u0026lt;,'\u0026gt; automatically):\n:\u0026#39;\u0026lt;,\u0026#39;\u0026gt;normal! @a To execute a macro only on lines matching a certain pattern, run the following command:\n:g/pattern/normal! @a Ref:\nIn Vim, how do I apply a macro to a set of lines? Copy URL under cursor into a register? # We can use \u0026lt;cfile\u0026gt; with expand() function get the URL under cursor (see :h \u0026lt;cfile\u0026gt;). To copy the URL to unnamed register, use the following command:\nlet @\u0026#34; = expand(\u0026#39;\u0026lt;cfile\u0026gt;\u0026#39;) The above method is not perfect, since expand('\u0026lt;cfile\u0026gt;') will also give you results even if your cursor is on a normal words (non-URL).\nA more sophisticated method would be using actual URL patterns and search the current line to get a valid URL. A good URL pattern is provided by plugin vim-highlighturl via highlighturl#default_pattern() method. With this knowledge, here is a more error-proof approach to get the current URL:\nlet @\u0026#34; = matchstr(getline(\u0026#39;.\u0026#39;), highlighturl#default_pattern()) Ref:\nHow do I copy the URL under the cursor? Get diff between two buffers or files # If we have two different versions of the same file and we want to find the differences between them, how do we do it inside Neovim?\nSuppose the two files are manual-v1.md, manual-v2.md, here is how to compare them inside Neovim.\nIf you haven\u0026rsquo;t start Nvim, you can run the following command:\nnvim -d manual-v1.md manual-v2.md This will start nvim in diff mode.\nIf you are already inside Neovim, first open manual-v1.md (:e manual-v1.md), then open manual-v2.md in a vertical split window (:vs manual-v2.md)1. Finally, run the following command to start comparing:\n:windo diffthis Ref:\nTake diff of two vertical opened windows in Vim Of course, you can use a horizontal split window, but vertical split window is better for comparing the two files, IMO.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 November 2020","externalUrl":null,"permalink":"/2020/11/11/nifty_nvim_techniques_s8/","section":"Posts","summary":"\u003cp\u003eThis is the 8th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 8","type":"posts"},{"content":"Some notes on using regular expressions in Python.\nEscape special characters # Some ASCII characters have special meaning in regex. If you want to match them literally in your pattern, you need to escape them. For example, if we want to match (abc) literally, we need to write it as \\(abc\\). Doing this manually is tedious and error-prone.\nA better way is using re.escape() instead of doing it manually.\nRef\nMatch literal parentheses in regex. The meaning of re.ASCII # re.ASCII only affects what characters are in a character class. It doesn\u0026rsquo;t restrict the searched strings in any way.\nRef:\nPython regex: pattern with re.ASCII can still match unicode characters? Regex search is slow? # If we have a lot of regex patterns, it is better to compile them using re.compile(). It will boost performance significantly.\nRef:\nIs it worth using Python\u0026rsquo;s re.compile? Using compiled regex in re.search() is slow. # I accidentally use compiled regex pattern in re.search() and find that it is slower than normal string patterns. To verify, see the below code:\nIn [1]: test = \u0026#39;sdf dfads dfads fsdfdas jkjlajdfsa adf\u0026#39; In [2]: p = \u0026#39;sdf\u0026#39; In [3]: import re In [4]: %timeit re.search(p, test) 1.17 µs ± 2.49 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each) In [5]: cp = re.compile(p) In [6]: %timeit cp.search(test) 381 ns ± 0.315 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each) In [7]: %timeit re.search(cp, test) 1.75 µs ± 7.24 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each) In the above code, in terms of execution speed, cp.search(test) (using compiled regex) is the fastest, re.search(p, test) (using the normal string) is the second, and re.search(cp, test) (using the compiled regex pattern in re.search) turns out to be the slowest.\nIn fact, when the pattern p is more complex, the time gap between re.search(p, test) and re.search(cp, test) is even larger.\nThis has something to do with how regex search is implemented in Python re package. If you use re.search(p, some_str), re package will try to compile the p string under the hood and cache it in an internal dict using its hash values if this pattern hasn\u0026rsquo;t been stored yet. If the pattern has been stored in the cache, re will use the compiled version.\nThe slowness for compiled pattern using re.search() is mainly caused by the calculating the hash key. Every time you call the re package with this compiled pattern, it will calculate the hash key for this pattern, consuming a lot of time. There is a more detailed discussion here.\nReferences # Show regex match visually: https://regex101.com/ Is it worth using Python\u0026rsquo;s re.compile? ","date":"9 November 2020","externalUrl":null,"permalink":"/2020/11/09/python_regex_notes/","section":"Posts","summary":"\u003cp\u003eSome notes on using regular expressions in Python.\u003c/p\u003e","title":"Notes on Using Python Regex Package","type":"posts"},{"content":"","date":"8 November 2020","externalUrl":null,"permalink":"/tags/lisp/","section":"Tags","summary":"","title":"Lisp","type":"tags"},{"content":"A quick summary on how to set up Lisp Development environment in Neovim.\nFirst we need to install a Lisp distribution. sbcl is a good start.\nInstall sbcl # Install using package manager # On Linux, we can install sbcl using package manager:\nsudo apt update \u0026amp;\u0026amp; sudo apt install sbcl # or use the following for CentOS # yum install sbcl Install binary release # We can also install a binary release if we do not have root right. All binary releases can be found here. One caveat is that if you install the latest version of sbcl and run it, it may not run due to dependency issues.\nFor example, on my system (CentOS 7.4), running sbcl fails since it requires a newer libc.so. It complains that:\nsbcl: /lib64/libc.so.6: version `GLIBC_2.28\u0026rsquo; not found (required by sbcl)\nThe following steps are tested on CentOS 7.4 and works as expected.\nwget https://master.dl.sourceforge.net/project/sbcl/sbcl/1.4.14/sbcl-1.4.14-x86-64-linux-binary.tar.bz2 tar xvf sbcl-1.4.14-x86-64-linux cd sbcl-1.4.14-x86-64-linux INSTALL_ROOT=$HOME/tools/sbcl sh install.sh Also update PATH and SBCL_HOME env variable\nexport PATH=\u0026#34;$HOME/tools/sbcl/bin:$PATH\u0026#34; export SBCL_HOME=\u0026#34;$HOME/tools/sbcl/lib/sbcl\u0026#34; Install quicklisp # Quicklisp is a package manager for Lisp. Here is how to install it.\nOn the command line:\ncurl -O https://beta.quicklisp.org/quicklisp.lisp sbcl --load quicklisp.lisp Then inside REPL, run:\n(quicklisp-quickstart:install :path \u0026#34;~/.quicklisp\u0026#34;) This will install quicklisp under ~/.quicklisp.\nAlso inside REPL, run:\n(ql:add-to-init-file) This will load quicklisp every time you start your Lisp.\nFix arrow key issues # By default, inside sbcl, we can not use up and down arrow keys to navigate the history. There is also no support for tab completion. We can use the package linedit to fix this.\nInside REPL, run (ql:quickload \u0026quot;linedit\u0026quot;) to install this package. Add the following settings to ~/.sbclrc to load linedit by default when starting sbcl:\n;;; Check for --no-linedit command-line option. (if (member \u0026#34;--no-linedit\u0026#34; sb-ext:*posix-argv* :test \u0026#39;equal) (setf sb-ext:*posix-argv* (remove \u0026#34;--no-linedit\u0026#34; sb-ext:*posix-argv* :test \u0026#39;equal)) (when (interactive-stream-p *terminal-io*) (require :sb-aclrepl) (require :linedit) (funcall (intern \u0026#34;INSTALL-REPL\u0026#34; :linedit) :wrap-current t))) Ref:\nhttps://common-lisp.net/project/linedit/\nInstall vlime # Finally, install the Vim plugin vlime using vim-plug:\nPlug \u0026#39;vlime/vlime\u0026#39;, {\u0026#39;rtp\u0026#39;: \u0026#39;vim/\u0026#39;} Then run sbcl sbcl --load path/to/vlime_plugin/vlime/lisp/start-vlime.lisp to start the vlime server. The actual path depends on where you install your plugins.\nSome handy shortcuts provided by Vlime:\n\\cc: create a server connection. \\cs: choose a server connection. \\ss: send the current line to REPL for evaluation. \\i: toggle interactive mode (in interactive mode, press \u0026lt;CR\u0026gt; will execute the code) References # http://www.sbcl.org/getting.html quicklisp https://www.quicklisp.org/beta/ https://lispcookbook.github.io/cl-cookbook/getting-started.html ","date":"8 November 2020","externalUrl":null,"permalink":"/2020/11/08/nvim_lisp_env_setup/","section":"Posts","summary":"\u003cp\u003eA quick summary on how to set up Lisp Development environment in Neovim.\u003c/p\u003e","title":"Set Up Lisp Dev Environment in Neovim","type":"posts"},{"content":"To profile Python code line by line, we can use line_profiler1.\nHow to install # Linux/macOS # Use pip to install this package:\npip install line_profiler Windows # It is easier to install using conda, since it does not require building the package from source:\n# if you use pip on Windows, you must have Visual Studio to build the package. conda install line_profiler How to profile? # Line profiler has a command line execute named kernprof. Annotate the function we want to profile with @profile annotation. Then run the following command on the command line:\nkernprof -v -l -u 1e-3 test_script.py By default, kernprof will only generate the profile result file, but do not print the result. The name of result file is the original Python script name suffixed with lprof. To check the profile result, we need to run line_profiler again:\npython -m line_profiler test_script.py.lprof The -v option tells kernprof to show the profile result. The -l option will print the profile time for each line for the given function. The -u option specify the unit of measure, which is 1e-6 seconds by default.\nThe command line options to test_script.py can be followed after it. Just like you call python test_script.py.\nReferences # https://jakevdp.github.io/PythonDataScienceHandbook/01.07-timing-and-profiling.html How can I profile Python code line-by-line? using line_profiler in another way: https://lothiraldan.github.io/2018-02-18-python-line-profiler-without-magic/ This is a fork of original line_profiler repo. The original repo is not maintained any more.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"6 November 2020","externalUrl":null,"permalink":"/2020/11/06/profile_python_line_profiler/","section":"Posts","summary":"\u003cp\u003eTo profile Python code line by line, we can use \u003ca href=\"https://github.com/pyutils/line_profiler\" target=\"_blank\"\u003eline_profiler\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Profiling Python Code with line_profiler","type":"posts"},{"content":"Update 2021-07-15: Note that pyls has been deprecated. There is new fork of it called pylsp, which is maintained by the community.\nIn my previous post, I have go over the basic setup to make vim-lsp work. However, I haven\u0026rsquo;t touch on an important part of writing code: linting. It turns out that configure it correctly is harder than I thought.\nI found the documentation of pyls to be vague and incomplete. It took me quite a few hours in order to understand how to configure flake8 correctly for pyls.\nPyls is a combination of different packages to form a unified workable language server. Flake8 is like a driver package for pycodestyle (former known as pep8 and got renamed) and pyflakes. In simple words, it uses pyflakes and pycodestyle and a few other packages to check your code for possible style issues and syntax errors.\nBy default, pyls disables flake8, and use pycodestyle and pyflakes for code checking directly. I do not want to configure two packages, I just want to configure flake8 for simplicity\u0026rsquo;s sake.\nFrom here and the actual code, we can see that flake8 is indeed disabled. Also, if we use flake8, it makes sense to disable pycodestyle and pyflakes, otherwise we will get duplicated diagnostic messages.\nif executable(\u0026#39;pyls\u0026#39;) \u0026#34; pip install python-language-server au User lsp_setup call lsp#register_server({ \\ \u0026#39;name\u0026#39;: \u0026#39;pyls\u0026#39;, \\ \u0026#39;cmd\u0026#39;: {server_info-\u0026gt;[\u0026#39;pyls\u0026#39;]}, \\ \u0026#39;allowlist\u0026#39;: [\u0026#39;python\u0026#39;], \\ \u0026#39;workspace_config\u0026#39;: { \\ \u0026#39;pyls\u0026#39;: \\ {\u0026#39;configurationSources\u0026#39;: [\u0026#39;flake8\u0026#39;], \\ \u0026#39;plugins\u0026#39;: {\u0026#39;flake8\u0026#39;: {\u0026#39;enabled\u0026#39;: v:true}, \\ \u0026#39;pyflakes\u0026#39;: {\u0026#39;enabled\u0026#39;: v:false}, \\ \u0026#39;pycodestyle\u0026#39;: {\u0026#39;enabled\u0026#39;: v:false}, \\ } \\ } \\ }}) endif This is the correct config for pyls to use flake8 for linting, period.\nconfig location # According to flake8 documentation, the location of flake8 config varies based on systems, on Linux and Mac, it is ~/.config/flake8 , and for Windows, it is $HOME\\.flake8 ($HOME is like C:\\\\Users\\sigmavirus24). The content should be in INI format:\n[flake8] max-line-length = 100 max-complexity = 30 ignore = # missing whitespace around arithmetic operator E226, # line break before/after binary operator W503, W504, # expected 1 blank line, found 0 E301,E302, To suppress a single warning, it is also handy to add # noqa: F841-like (change the code to the actual code you want to use) comment string to suppress it.\nReferences # https://github.com/palantir/python-language-server/issues/190 https://github.com/palantir/python-language-server/pull/656 ","date":"5 November 2020","externalUrl":null,"permalink":"/2020/11/05/pyls_flake8_setup/","section":"Posts","summary":"\u003cp\u003e\u003cfont color=\"red\"\u003eUpdate 2021-07-15: Note that pyls has been deprecated. There\nis new fork of it called \u003ca href=\"https://github.com/python-lsp/python-lsp-server\" target=\"_blank\"\u003epylsp\u003c/a\u003e, which is maintained by the\ncommunity.\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2020/11/04/replace_deoplete_jedi_for_LSP/\" target=\"_blank\"\u003eprevious post\u003c/a\u003e, I have go over the basic setup to make vim-lsp work.\nHowever, I haven\u0026rsquo;t touch on an important part of writing code: linting. It\nturns out that configure it correctly is harder than I thought.\u003c/p\u003e","title":"Flake8 Config in Pyls for Code Linting.","type":"posts"},{"content":"Update 2021-07-15: Note that pyls has been deprecated. There is new fork of it called pylsp, which is maintained by the community.\nAfter using deoplete along with deoplete-jedi for more than two years, I have finally decided to try something new for code completion. Yeah, you guess it, the Language Server Protocol (LSP in short).\nLSP is not new. It has been around for several years. Especially with the official LSP support in Neovim core, I think it is time to go for LSP.\nTo use LSP, there are two parts involved. First, we need to install a language server for the language we use. Second, we need to use a plugin that acts as an LSP client that communicates with this server.\nThere are quite a few LSP clients out there. Some of the most popular ones are:\ncoc.nvim vim-lsp LanguageClient-neovim vim-lsc Neovim built-in LSP client (you need to install nvim-lspconfig for easier configuration) I want something simple to set up, powerful, and yet not too monolithic. So I choose vim-lsp for a try. Here is how to configure it for Python auto-completion and more.\nFirst, we need to install a language server for Python. pyls is good choice. First, install pyls:\npip install \u0026#34;python-language-server[all]\u0026#34; After that, we need to install several plugins and configure it a bit:\nPlug \u0026#39;prabirshrestha/vim-lsp\u0026#39; Plug \u0026#39;Shougo/deoplete.nvim\u0026#39; Plug \u0026#39;lighttiger2505/deoplete-vim-lsp\u0026#39; \u0026#34; settings for pyls if executable(\u0026#39;pyls\u0026#39;) \u0026#34; pip install python-language-server au User lsp_setup call lsp#register_server({ \\ \u0026#39;name\u0026#39;: \u0026#39;pyls\u0026#39;, \\ \u0026#39;cmd\u0026#39;: {server_info-\u0026gt;[\u0026#39;pyls\u0026#39;]}, \\ \u0026#39;allowlist\u0026#39;: [\u0026#39;python\u0026#39;], \\ }) endif function! s:on_lsp_buffer_enabled() abort \u0026#34; use omnifunc if you are fine with it. \u0026#34; setlocal omnifunc=lsp#complete if exists(\u0026#39;+tagfunc\u0026#39;) | setlocal tagfunc=lsp#tagfunc | endif \u0026#34; some mappings to use, tweak as you wish. nmap \u0026lt;buffer\u0026gt; gd \u0026lt;plug\u0026gt;(lsp-definition) nmap \u0026lt;buffer\u0026gt; gr \u0026lt;plug\u0026gt;(lsp-references) nmap \u0026lt;buffer\u0026gt; gi \u0026lt;plug\u0026gt;(lsp-implementation) nmap \u0026lt;buffer\u0026gt; gt \u0026lt;plug\u0026gt;(lsp-type-definition) nmap \u0026lt;buffer\u0026gt; \u0026lt;leader\u0026gt;rn \u0026lt;plug\u0026gt;(lsp-rename) nmap \u0026lt;buffer\u0026gt; [g \u0026lt;Plug\u0026gt;(lsp-previous-diagnostic) nmap \u0026lt;buffer\u0026gt; ]g \u0026lt;Plug\u0026gt;(lsp-next-diagnostic) nmap \u0026lt;buffer\u0026gt; K \u0026lt;plug\u0026gt;(lsp-hover) endfunction augroup lsp_install au! \u0026#34; call s:on_lsp_buffer_enabled only for languages that has the server registered. autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled() augroup END By default, vim-lsp does not provide auto-completion feature, you need to use omnifunc and trigger completion yourself. If you like this, uncomment the following line in above config:\n\u0026#34; setlocal omnifunc=lsp#complete Then trigger completion via CTRL-X_CTRL-O (Ctrl-X followed by Ctrl-O) in insert mode.\nPlugin deoplete.nvim and lighttiger2505/deoplete-vim-lsp are used to provide IDE-like auto-completion feature.\nThere are other plugins that provide auto-completion support based on vim-lsp, for example, asyncomplete.vim along with asyncomplete-lsp.vim.\nPlug \u0026#39;prabirshrestha/asyncomplete.vim\u0026#39; Plug \u0026#39;prabirshrestha/asyncomplete-lsp.vim\u0026#39; vim-lsp has a lot of options to tweak, some of the configs are:\n\u0026#34; whether to enable diagnostics for vim-lsp (we may want to use ALE for other \u0026#34; plugins for that. let g:lsp_diagnostics_enabled = 1 \u0026#34; show diagnostic signs let g:lsp_signs_enabled = 1 let g:lsp_signs_error = {\u0026#39;text\u0026#39;: \u0026#39;✗\u0026#39;} let g:lsp_signs_warning = {\u0026#39;text\u0026#39;: \u0026#39;!\u0026#39;} let g:lsp_highlights_enabled = 0 \u0026#34; Do not use virtual text, they are far too obtrusive. let g:lsp_virtual_text_enabled = 0 \u0026#34; echo a diagnostic message at cursor position let g:lsp_diagnostics_echo_cursor = 0 \u0026#34; show diagnostic in floating window let g:lsp_diagnostics_float_cursor = 1 \u0026#34; whether to enable highlight a symbol and its references let g:lsp_highlight_references_enabled = 1 let g:lsp_preview_max_width = 80 See :h vim-lsp for more details.\nAfter all these settings, we should get a Python auto-completion, diagnostics etc. using LSP.\n","date":"4 November 2020","externalUrl":null,"permalink":"/2020/11/04/replace_deoplete_jedi_for_lsp/","section":"Posts","summary":"\u003cp\u003e\u003cfont color=\"red\"\u003eUpdate 2021-07-15: Note that pyls has been deprecated. There is new fork of it called \u003ca href=\"https://github.com/python-lsp/python-lsp-server\" target=\"_blank\"\u003epylsp\u003c/a\u003e, which is maintained by the community.\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003eAfter using deoplete along with deoplete-jedi for more than two years, I have\nfinally decided to try something new for code completion. Yeah, you guess it,\nthe \u003ca href=\"https://langserver.org/\" target=\"_blank\"\u003eLanguage Server Protocol\u003c/a\u003e (LSP in short).\u003c/p\u003e","title":"Replace Deoplete-jedi with LSP Finally","type":"posts"},{"content":"一个月之前，就发现自己的博客用的计数系统“不蒜子”对每篇博客访问量的统计出现了问题，刚写的博文，访问量都是几十万，显然不正常，但是很神奇，整个博客的访问量统计似乎并没有问题。当时也在 v2ex 发帖咨询了，不过没有人给出合理的答案，今天偶然间发现了原因，发文记录。\n原因 # 出现这个原因，和 Chrome 85 版本 Referrer Policy 更改有关。什么是 Referrer，简单理解，就是请求 Web 服务器时，可以在 HTTP Request 的请求头 (header) 中加上当前页面的 URL，例如我们在浏览某个博客页面，需要加载一些图片，从服务器请求这些图片时，referrer 就是当前的博客页面 URL。从这里也可以看出，referrer 可能会暴露请求来源的某些信息或者隐私，有一定的隐私或安全风险。之前版本的 Chrome 浏览器，如果网站没有指定自己的 Referrer Policy，那么 Chrome 默认 policy 是 no-referrer-when-downgrade，在 Chrome 85 版本中，为了保护用户的隐私，默认的 Referrer Policy 则变成了 strict-origin-when-cross-origin。\n不过这到底是什么意思？Referrer Policy 用来控制当前网站请求目标网站时， referer 这个字段发送的具体信息，如果 Referrer Policy 为：\nno-referrer-when-downgrade: 当两个网站的 http 协议安全等级相当，或者目的网站安全协议等级高于当前网站(HTTP \u0026ndash;\u0026gt; HTTP, HTTPS \u0026ndash;\u0026gt; HTTPS, HTTP \u0026ndash;\u0026gt; HTTPS)， referer 将会包含源网站的域名，路径，查询字符串；如果目的网站安全协议等级低于源网站 (HTTPS \u0026ndash;\u0026gt; HTTP)，将不会发送这些信息。 strict-origin-when-cross-origin： 只有当做同一域名请求时 (源网址和目标网址是同一域名），才发送域名，路径和请求字符串，当两个网站安全协议相当时，发送源网站的域名(没有具体路径信息和查询字符串)，如果目标网站安全协议等级低于源网站，不发送 header 信息。 不蒜子统计博客文章访问量就是通过 referer 来计算的，通过上面的分析，如果 Referrer Policy 是 strict-origin-when-cross-origin，不蒜子接收到的只有博客的域名，没有文章的具体路径，所以具体某个文章的 PV 统计会出现错误。例如 这篇文章，发送给不蒜子的 referer 只是 https://jdhao.github.io。\n所以，要想正确统计博客每篇文章的 PV，可以把 Referrer Policy 设置为 no-referrer-when-downgrade。\nHugo even 主题中如何更改 # 我目前使用的 Hugo-even 这个主题，更改很简单，进入 even 主题的根目录， 找到 layouts/partials/head.html 文件中关于不蒜子的部分，把下面的代码\n{{- if .Site.Params.busuanzi.enable -}} \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{- end -}} 改成\n{{- if .Site.Params.busuanzi.enable -}} \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;meta name=\u0026#34;referrer\u0026#34; content=\u0026#34;no-referrer-when-downgrade\u0026#34;\u0026gt; {{- end -}} 然后重新生成 Hugo 博客即可。\niPad 上文章计数问题 # 有人反馈，即使用了上面的设置，在 iPad 上用 Safari，Chrome，Firefox 浏览器查看文章的阅读量，还是不正确。\n经过搜索，发现原因是 iPad 上浏览器默认都是阻止 cross-site tracking 的，你加了 referrer meta tag 也没有用。需要用户手动允许 cross-site tracking 才能正常使用。\nSafari 设置，在 “PRIVACY \u0026amp; SECURITY” 部分，关掉 Prevent Cross-Site Tracking 即可。 对于 Chrome 和 Firefox 浏览器，设置里面，打开 Allow Cross-Website Tracking 即可。 参考\nSafari mobile and desktop are hiding full referrer URL: why?: https://stackoverflow.com/a/62860372/6064933 https://www.simoahava.com/privacy/intelligent-tracking-prevention-ios-14-ipados-14-safari-14/ ","date":"31 October 2020","externalUrl":null,"permalink":"/2020/10/31/busuanzi_pv_count_error/","section":"Posts","summary":"\u003cp\u003e一个月之前，就发现自己的博客用的计数系统\u003ca href=\"https://busuanzi.ibruce.info/\" target=\"_blank\"\u003e“不蒜子”\u003c/a\u003e对每篇博客访问量的统计出现了问题，刚写的博文，访问量都是几十万，显然不正常，但是很神奇，整个博客的访问量统计似乎并没有问题。当时也在 \u003ca href=\"https://v2ex.com/t/707052#reply7\" target=\"_blank\"\u003ev2ex\u003c/a\u003e 发帖咨询了，不过没有人给出合理的答案，今天偶然间\u003ca href=\"https://github.com/flysnow-org/maupassant-hugo/pull/121\" target=\"_blank\"\u003e发现了原因\u003c/a\u003e，发文记录。\u003c/p\u003e","title":"解决不蒜子 (busuanzi) 文章计数出错问题","type":"posts"},{"content":"在 YouTube 上看到了杨振宁在 2006 年的一个采访，挺不错。\n杨振宁 1922 年出生，小时候跟着父母在北京生活，在清华园呆了 7 年时间，1937 年抗战爆发以后随父母到昆明，在西南联大上完了大学和研究生。\n1945 年考取了公费留美，当时中国到没过没有航线，他从中国到印度的加尔各答，在加尔各答等了两个月，坐上了美国的运兵船，前往美国。\n杨振宁在芝加哥大学读博士，刚开始选择的是实验物理，但是发现自己并没有实验物理的天赋，在爱德华泰勒的建议下，转为理论物理学。他与费米也有交往，认为费米是 20 世纪最后一位对理论和实验物理都作出贡献的大师。1948 年在芝加哥大学获得物理学博士学位。\n1949 - 1966 年间，杨振宁就职于普林斯顿高等研究院，彼时正好是奥本海默在高等研究院任主任。杨振宁最初只打算在高等研究院做一年博士后，最后竟然呆了这么长时间。他说自己最重要的物理学成就都是在高等研究院期间完成的（(高等研究院以研究著称，行政事务很少，学生也很少，学者们只需要专注于研究)。\n奥本海默曾经向杨振宁提议，由他接任自己担任普林斯顿高等研究院下一任主任，但是杨认为自己并不适合做管理，写信拒绝了奥本海默。1965 年，杨振宁答应 Stony Brooks 大学校长，前往该大学，发展物理系。\n杨振宁与米尔斯一起，于 1954 年提出了 Yang-Mills 方程。自然界有四种作用力：重力，核力，弱力，电磁力。经典力学中，重力与距离的平方成反比，然而微观粒子的作用力并不遵循这一规律。她们之间的作用力如何用数学描述？Yang-Mills 方程就是干这个的。后来发展成为 规范场论(Gauge Principle)，最后发现方程不仅能描述弱力，也能描述重力。\n杨振宁谈中美教育区别：美国教育把小孩当大人，自由，学生可以自由选择自己的兴趣，可能会有很多兴趣和探索来发现自己真正想干的事情，很多美国本科生数学不好，对基础的数学知识不太熟练；中国学生比较听话，在高中就接受了大量的数学训练，这样可能会让学生失去创造力，不太自由。美国的研究生教育是世界最好的，中国的大学教育还可以，应该在中国上大学，美国读研究生1。\n其实杨振宁这个观点我不赞同，中国大部分大学都很垃圾，老师都是照本宣科，毫无技术含量，大学课程设置也很垃圾，培养出来的学生毫无竞争力，清华北大可能会好一些。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"30 October 2020","externalUrl":null,"permalink":"/2020/10/30/cn_yang_interview/","section":"Posts","summary":"\u003cp\u003e在 YouTube 上看到了\u003ca href=\"https://en.wikipedia.org/wiki/Yang_Chen-Ning\" target=\"_blank\"\u003e杨振宁\u003c/a\u003e在 2006 年的\u003ca href=\"https://www.youtube.com/watch?v=6d3hZ8jnqXg\" target=\"_blank\"\u003e一个采访\u003c/a\u003e，挺不错。\u003c/p\u003e","title":"杨振宁的一个采访","type":"posts"},{"content":"When I was in a folder and tried to edit multiple files using glob pattern with the following Neovim command:\n:edit *.vim I was surprised to find that Neovim gives the following error message:\nE77: Too many file names.\nThis is because the command :edit only supports editing one file. There are several ways to open multiple files at once.\nUse argument list # We can Neovim\u0026rsquo;s built-in in argument list feature to open multiple files. When we open Neovim from command line with multiple files, argument list will be filled with a list of file names. To replace the argument list with new file names, we can use :args {glob_pattern} or :next {glob_pattern}.\nFor example, to open all files in current directory with extension .vim, use :args *.vim or :next *.vim. You can then traverse the list of files using : next and :previous command.\nFor more info, see :h argument-list.\nDefine your own custom command # The second way is to define a custom :Edit command that can take glob patterns. Something like the following should work:\nfunction! MultipleEdit(p_list) for p in a:p_list for c in glob(p, 0, 1) execute \u0026#39;edit \u0026#39; . c endfor endfor endfunction command! -bar -bang -nargs=+ -complete=file Edit call MultipleEdit([\u0026lt;f-args\u0026gt;]) Then we can use :Edit *.vim or :Edit *.vim *.py to open multiple files.\nReferences # How can I open multiple tabs at once? How to open multiple files matching a wildcard expression? How do I make vim open all files matching a pattern in different tabs? ","date":"28 October 2020","externalUrl":null,"permalink":"/2020/10/28/edit_multiple_files_nvim/","section":"Posts","summary":"\u003cp\u003eWhen I was in a folder and tried to edit multiple files using glob pattern with the\nfollowing Neovim command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vim\" data-lang=\"vim\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"nx\"\u003eedit\u003c/span\u003e *.\u003cspan class=\"nx\"\u003evim\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI was surprised to find that Neovim gives the following error message:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eE77: Too many file names.\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Edit Multiple Files at once in Neovim","type":"posts"},{"content":"In Bash shell, when editting in the command line. There are two different modes, vi mode or Emacs mode. Emacs-mode is the default mode. Below are some of the handy shortcuts in Emacs-mode.\nShortcuts # ALT-b and ALT-f: go backward(toward begining of the line)/forward (toward end of the line) a word. Note that - is a word separator in this case. Ctrl-D: delete one character to the right of the cursor. Ctrl-A and Ctrl-E: go to begining/end of the line. Ctrl-K and Ctrl-U: delete till the end/begining of the line. Ctrl-R: search history command. Press Enter to run a command, or press movement key to edit it. ALT-D: Delete from current cursor position to the end of the word. Ctrl-_: Undo edit. ALT-R: Revert command to original. Ctrl-W: Delete a word backward. Note that here word is separate by space. So if we have python util/test.py| (| indicate cursor) , pressing Ctrl-W leave us with only python . - is not a word separator in this case. A little inconsistent, IMHO. Refs # https://askubuntu.com/a/269048/768311 https://mehmandarov.com/navigating-and-editing-the-command-line/ https://superuser.com/q/705807/736190` http://teohm.com/blog/shortcuts-to-move-faster-in-bash-command-line/ https://lornajane.net/posts/2011/navigating-bash-history-with-ctrlr ","date":"26 October 2020","externalUrl":null,"permalink":"/2020/10/26/bash_emacs_style_shortcut/","section":"Posts","summary":"\u003cp\u003eIn Bash shell, when editting in the command line.\nThere are two different modes, \u003ca href=\"https://unix.stackexchange.com/q/85390/221410\" target=\"_blank\"\u003evi mode or Emacs mode\u003c/a\u003e. Emacs-mode is the default mode.\nBelow are some of the handy shortcuts in Emacs-mode.\u003c/p\u003e","title":"Bash Emacs-style Shortcut Cheatsheet","type":"posts"},{"content":"I usually use {num}Ctrl-6 to switch buffers in Neovim, where {num} is the number of buffer (see this post). Since Neovim has built-in gt mapping to switch between tabpages, I thought it might be a good idea to use gb as buffer switching shortcut avoid strech when pressing Ctrl-6.\nHere is what I have got:\nClick to show the code. nnoremap \u0026lt;silent\u0026gt; gb :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;GoToBuffer(v:count, \u0026#39;forward\u0026#39;)\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gB :\u0026lt;C-U\u0026gt;call \u0026lt;SID\u0026gt;GoToBuffer(v:count, \u0026#39;backward\u0026#39;)\u0026lt;CR\u0026gt; function! s:GoToBuffer(count, direction) abort if a:count == 0 if a:direction ==# \u0026#39;forward\u0026#39; bnext elseif a:direction ==# \u0026#39;backward\u0026#39; bprevious else echoerr \u0026#39;Bad argument \u0026#39; a:direction endif return endif \u0026#34; Check the validity of buffer number. if index(s:GetBufNums(), a:count) == -1 echohl WarningMsg | echomsg \u0026#39;Invalid bufnr: \u0026#39; a:count | echohl None return endif if a:direction ==# \u0026#39;forward\u0026#39; silent execute(\u0026#39;buffer\u0026#39; . a:count) endif endfunction function! s:GetBufNums() abort let l:buf_infos = getbufinfo({\u0026#39;buflisted\u0026#39;:1}) let l:buf_nums = map(l:buf_infos, \u0026#34;v:val[\u0026#39;bufnr\u0026#39;]\u0026#34;) return l:buf_nums endfunction You can use gb and gB without count to switch forward and backward in the buffer list. When provided with a count, gb can also switch the buffer with that number. For example, if we have buffer with number 6, press 6gb in normal mode will switch to that buffer.\nIssues I have met # Using count in mappings # If we use a count before the mapping, and then execute some command, vim will insert a range for this command automatically1. To prevent this, we use Ctrl-U to delete the range inserted by Vim.\nRefs:\nWhy do some Vim mappings include after a colon? Creating a Vim function mapping that takes a count s:MyFunc or \u0026lt;SID\u0026gt;MyFunc # Another issue is that we need to use call \u0026lt;SID\u0026gt;GoToBuffer instead of call s:GoToBuffer. The s: notation only works if we are in the same script that defines this function. When we execute the mapping, we are usually in other files. If we use s: notation, we get the following error:\n\u0026gt; E81: Using \u0026lt;SID\u0026gt; not in a script context See also Neovim help file on this topic (h \u0026lt;SID\u0026gt;).\nRef:\nhttp://vim.1045645.n5.nabble.com/lt-SID-gt-or-s-General-questions-about-functions-td4297515.html To verify, press a number, and then press : to enter command line mode.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 October 2020","externalUrl":null,"permalink":"/2020/10/16/nvim_switch_buffer_with_mapping/","section":"Posts","summary":"\u003cp\u003eI usually use \u003ccode\u003e{num}Ctrl-6\u003c/code\u003e to switch buffers in Neovim, where \u003ccode\u003e{num}\u003c/code\u003e is the\nnumber of buffer (see \u003ca href=\"https://jdhao.github.io/2018/09/29/Switching_buffers_quickly_Neovim/\" target=\"_blank\"\u003ethis post\u003c/a\u003e).\nSince Neovim has built-in \u003ccode\u003egt\u003c/code\u003e mapping to switch between tabpages, I thought it\nmight be a good idea to use \u003ccode\u003egb\u003c/code\u003e as buffer switching shortcut avoid strech when\npressing \u003ccode\u003eCtrl-6\u003c/code\u003e.\u003c/p\u003e","title":"Switching Buffers in Neovim with mapping","type":"posts"},{"content":"Except for the ASCII characters, it is often not straightforward to insert Unicode characters into Vim/Neovim. Below I will summarize a few ways to enter Unicode characters inside Neovim/Vim.\nI assume that you are using UTF-8 encoding (:set encoding=utf-8), and you are using a font with proper support for Unicode symbols, e.g., nerd-fonts. Otherwise, some Unicode characters shown below may not show correctly on your terminal.\nUse Ctrl-V to insert character # The native way to insert a Unicode character is via Ctrl + V. In insert mode, we first press Ctrl + V, and then for Unicode characters whose code points1 are less than:\nffff (in hex format): press u ( lower case), followed by its four-digit hex representation. 7fffffff (in hex format): press U ( upper case), followed by its eight-digit hex representation. For example, to insert the middle dot symbol (·), we can press \u0026lt;C-v\u0026gt;u00b7 or \u0026lt;C-v\u0026gt;ub7 followed by ESC. To insert the crying cat emoji (😿), we can press \u0026lt;C-v\u0026gt;U0001f63f2 or \u0026lt;C-v\u0026gt;U1f63f followed by ESC.\nUse special escape sequence notation # We can also use special escape sequence to represent a character. To represent middle dot in the above section, use \\u00b7 or \\ub7. To represent the cry cat, use \\U0001f63f or \\U1f63f. Backspace is \\b and Escape is \\e.\nFor more details, see :h string.\nUse plugin unicode.vim # To ease manipulation of Unicode characters, there is also a plugin called unicode.vim.\nUnicode.vim provides an enhanced version of the built-in ga (see :h ga) operation. To use it, add the following setting to init.vim:\nnmap ga \u0026lt;Plug\u0026gt;(UnicodeGA) It also provides several useful commands:\n:UnicodeName: show the Unicode info about character under cursor. :UnicodeSearch: search a Unicode character. It supports regular expression. For example, to search Unicode character containing CAT, we can use :UnicodeSearch \\\u0026lt;CAT\\\u0026gt;. The bang version (:UnicodeSearch!) can also insert the chosen character into cursor position. Insert-mode completion # Unicode.vim also provides insert mode completion for Unicode characters. We can type some character in the name of Unicode character, and press \u0026lt;C-X\u0026gt;\u0026lt;C-Z\u0026gt; (i.e., Ctrl+X followed by Ctrl+Z). Alternatively, we can also provide the Unicode code point of a character and press \u0026lt;C-X\u0026gt;\u0026lt;C-Z\u0026gt;.\nFor example, to insert middle dot, we can:\ntype dot, and press \u0026lt;C-X\u0026gt;\u0026lt;C-Z\u0026gt; (A completion menu will pop up with candidate character).\ntype U+00b7, and press \u0026lt;C-X\u0026gt;\u0026lt;C-Z\u0026gt;.\nIf you have fzf installed, you can also activate the fuzzy search feature to search Unicode (see :h unicode-fuzzy-insertion).\nUse digraphs # Vim/Neovim also provides a feature called digraphs (see :h digraphs). Some non-printed character or commonly-used Unicode characters can be easily inserted using this feature. The command :digraphs will print the pre-defined digraphs table, like the following:\n...... PI ¶ 182 pp ¶ 182 .M · 183 ~. · 183 \u0026#39;, ¸ 184 1S ¹ 185 A\u0026#39; Á 193 A\u0026gt; Â 194 A^ Â 194 A? Ã 195 A~ Ã 195 A: Ä 196 ...... In each digraph group, the first two characters are the codes for the actual character, the middle being the actual character, and the last being the decimal value of the characters. For example, the codes for middle dot is .M, and its decimal number is 183.\nTo enter a character, press Ctrl-K in insert mode, followed by its codes. For example, to insert middle dot using digraphs, press \u0026lt;C-K\u0026gt;.M. To insert the copyright symbol (©), press \u0026lt;C-K\u0026gt;Co. To insert trademark symbol (™), press \u0026lt;C-K\u0026gt;TM.\nDefine your own digraphs # We can also define our own digraphs. The syntax is:\n:digraphs {char1}{char2} {number} {number} is the decimal value for the Unicode character. For example, to define a digraph entry for the loud crying face emoji (😭, decimal value 128557), use the following command:\n:digraphs lc 128557 Then, in insert mode, pressing \u0026lt;C-K\u0026gt;lc will insert this emoji.\nReferences # How to enter non-ASCII characters using hex or octal codes in vi? What is the easiest way to insert Unicode characters into a document? Enter Unicode characters with 8-digit hex code https://sanctum.geek.nz/arabesque/special-characters-in-vim/ See :h i_CTRL-V_digit inside Neovim/Vim for the official doc.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSince the crying cat emoji has 5-digit hex, we have to use upper case U followed by 8-digit hex number. The three leading zeros can not be omitted\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"7 October 2020","externalUrl":null,"permalink":"/2020/10/07/nvim_insert_unicode_char/","section":"Posts","summary":"\u003cp\u003eExcept for the ASCII characters, it is often not straightforward to insert Unicode characters into Vim/Neovim.\nBelow I will summarize a few ways to enter Unicode characters inside Neovim/Vim.\u003c/p\u003e","title":"How to Insert Unicode Characters in Neovim/Vim","type":"posts"},{"content":"最近一个月读了 Kai bird 和 Martin J. Sherwin 的《American prometheus》，这本书是著名物理学家奥本海默的传记，详细讲述了奥本海默的一生。为了写这本书，作者花了 25 年的时间，做了很多采访，查看了很多 FBI 关于奥本海默的资料。这本书是关于奥本海默的权威著作，2005 甫一问世， 2006 年就获得了普利策奖(传记类)。\n少年天才 # 奥本海默于 1904 年生于美国纽约一个富庶的犹太裔德国移民家庭，他的父亲是一名布匹商人，他的母亲是一名画家。生在一个富裕的家庭，奥本海默的父母尽量满足他的需求，支持他发展广泛的兴趣爱好，他从十几岁时爱上了收集岩石，12岁时就在纽约的地理学会登台演讲。进入中学，奥本海默各门功课都能得 A，同时他也喜欢阅读诗歌，能阅读拉丁文，希腊文的著作。对诗歌的爱好也伴随了奥本海默的一生，在1930年代担任伯克利物理教授时，他向伯克利的语言教授学习梵文，阅读梵文经典《薄伽梵歌》。1945 年第一颗原子弹试爆( trinity 测试)以后，奥本海默从博迦梵歌引用了一句来表达自己的心情：“Now I am become death, the destroyer of worlds”。(参见这里)。\n哈佛时光 # 1921年春中学毕业以后，奥本海默被哈佛大学录取，他本应该在 1921 入学，但是由于在随父母去欧洲游览途中生病，不得不延迟一年入学。在身体恢复修养期间，奥本海默随着自己中学老师 herbert smith 第一次去新墨西哥州 santa fe 旅行，那里美丽而粗犷的环境给奥本海默留下了深刻的印象，在那里奥本海默学会了骑马，他们经常骑着马长途跋涉，虽然奥本海默外表看上去很虚弱，但是这种经历磨练了奥本海默的内心，养成了他坚韧的精神。在这附近有一个地方叫洛斯阿拉莫斯，日后成了曼哈顿计划选定的地点。\n进入哈佛大学以后，奥本海默仍然显示出他极高的领悟能力，对于学习的课程都能优异成绩通过，有一位同学说，在他为物理课程苦苦挣扎的时候，奥本海默却能够轻松通过:\nI had visions of him suddenly bursting forth as a great physicsts, and here I was just trying to get through Harvard.\n奥本海默的思维非常敏捷，经常在别人提出问题以后，他能马上提出解决方法，他的哈佛同学 William C. Boyd 说：\nHe had a very quick mind. For instance, when someone would propose a problem, he would give two or three wrong answers, followed by the right ones, before I could think of a single answer.\n奥本海默并没有选择物理学作为自己的专业，而是选择了化学。为了能在三年毕业，他每学期都学习六门课程，并且去旁听额外的课程，但是他会隐藏自己刻苦学习的状态以使得表面上看起来他的聪慧看起来毫不费力。在哈佛，他继续自己在人文方面的爱好，学习历史，哲学，法国文学，他大量阅读，并开始写作诗歌：\nHe read all three thousand pages of Gibbon\u0026rsquo;s classic history, The Decline and Fall of the Roman Empire. He also read in French literature and began writing poetry\u0026hellip;\n在大学第一年，他就明白了自己真正夏欢的物理学，而不是化学，于是他说服学校让自己跳过基础物理学习，直接学习研究生级别的物理，他的导师是 Percy Bridgman。奥本海默对于实验物理学很不擅长，操作各种设备笨拙，他的特长在于理论分析。仅仅用了三年时间，奥本海默于1925年以最高荣誉(Summa Cum Laude)从哈佛大学以化学学士学位毕业。但是他的志向在物理学，当时（1920年代），世界物理的中心在英国，于是奥本海默说服 Bridgman 帮他写了一封推荐信给剑桥大学卡文迪许实验室的卢瑟福。可能是认为奥本海默没有物理学的背景，不是科班毕业，卢瑟福并没有同意指导奥本海默，但把他推荐给了 J. J. Thomson。\n欧洲岁月 # 抑郁的剑桥岁月 # 1925 年九月，21 岁的奥本海默前往剑桥大学，开始了他的博士生涯。研究生活不同于本科的学习，他不再是课堂上的“天才”，他也经历人生中非常重大的危机。一方面，奥本海默并不擅长实验物理学，因为实验物理学要求研究者具有动手能力，而奥本海默对此并没有天赋：\nClumsy and inept at his meticulous work, Robert soom found himself avoiding the laboratory.\n在给朋友 Fergusson 信中，奥本海默写到他那时的状态：\nI am having a pretty bad time. The lab work is a terrible bore, and I am so bad at it that it is impossible to feel that I am learning anything.\n奥本海默处在一种极度抑郁的状态，他和导师 Backett 关系也很糟糕，据传他曾在一个苹果上抹上药物，放在导师的桌上。由于这起事件，他险些被剑桥大学开除，经过他父亲的斡旋，剑桥大学同意保留奥本海默的学籍，但是要求奥本海默定期去看心理医生，进行治疗。\n当时正是量子力学的萌芽阶段，海森堡和薛定谔分别提出了自己的量子力学理论，由于不擅长实验物理学，奥本海默的注意力也集中到量子力学上。1926 年春天，奥本海默在剑桥大学遇到了 Max Born，Born 当时是哥廷根大学理论物理学研究所的主任，Born 认为奥本海默是一个有天分的年轻人，邀请奥本海默前往哥廷根学习。\n奥本海默也慢慢从自己抑郁的状态走了出来，开始了哥廷根求学生涯。\n崭露头角\u0026ndash;哥廷根大学 # 1926 年夏，奥本海默前往哥廷根大学。哥廷根当时是世界的理论物理中心，群星汇聚，狄拉克，冯诺伊曼等都在哥廷根做研究。在哥廷根，奥本海默活跃了起来，一扫在剑桥的阴霾，奥本海默开始夜以继日研究量子力学，也为自己赢得了初步的名声（少年天才）。一位正巧在哥廷根访问的哈佛教授，如此评论道：\nOppenheimer is turning out to be even more brilliant than we thought when we had him at harvard. He is turning out new work very rapidly and is able to hold his own with any of the galaxy of young mathematical physicists here.\n1927 年 6 月，在仅仅到达哥廷根九个月之后，奥本海默就完成了自己的博士论文。\n博士后生涯 # 1927 年完成博士学位以后，奥本海默短暂返回美国，后又重返欧洲开始博士后研究，在 Paul Ehrenfest 手下研究，后又前往瑞士在 Wolfgang Pauli 指导下学习。等他 1929 年返回美国时，他在物理学界已经有世界级声望，从 1926 年到 1929 年，他总共发表了惊人的 16 篇论文!\n伯克利执教 # 1929 年奥本海默选择加州大学伯克利分校物理系，在那里担任教授，介绍新兴的量子力学。在伯克利，奥本海默研究范围广泛，他发表了一些关于宇宙射线，伽马射线，量子电动力学的论文。 1939 年 9 月 1 日，奥本海默和自己的学生 Hartland Snyder 提出了最早的黑洞理论1，然而未被重视。奥本海默的研究风格是直击问题核心，但是却不愿花过多篇幅详细阐释，所以论文通常比较简短。有一位伯克利同时如此评价奥本海默做研究的风格：\nOppie was extremely good at seeing the physics and doing the calculations on the back of the envelope and getting all the main factors\u0026hellip; As far as finishing and doing an elegant job like Dirac would do, that wasn\u0026rsquo;t Oppie\u0026rsquo;s style. He worked \u0026ldquo;Fast and dirty, like the American way of building a machine.\u0026rdquo;\n关于奥本海默为什么没有获得诺贝尔奖，作者认为奥本海默太聪明，但是又具有强烈的批判和怀疑精神，对于提出的新想法不能坚持做下去，而这正是做出诺奖级别研究需要的东西。奥本海默总是在做出新的东西以后，又转向另外一个感兴趣的问题，所以与诺奖错失。曾经在奥本海默手下做博士后研究的 Edwin Uehling 认为：\nHis knowledge of physics was extremely comprehensive. I am not sure that one should say that he didn\u0026rsquo;t do Nobel Prize-quality work; but it just didn\u0026rsquo;t happen to lead to that kind of result which the Nobel Prize committee regarded as exciting.\n师生关系 # 奥本海默对于聪明的研究生通常要求更加严格，但是对于相对没有天赋的学生，则比较温柔和充满温情。他的博士生 Joe Weinberg 讲到了一件小事，有一次他去奥本海默的办公室，抽出一篇论文，才看了一段，就觉得这是一个可以继续做下去的课题。然而奥本海默让他把论文放回远处，奥本海默对他说：“这不是你应该研究的内容”。后来他发现，奥本海默的另外一个研究生，开始研究这个课题，这个课题对他很合适，适合他的理解深度，他也凭借这篇论文获得了博士学位。 Weinberg 认为奥本海默就像带自己蹒跚学步的小孩一样，照顾着这位学生：\nHe needed special treatment, and by God, Oppie was going to give it to him. It showed a great deal of love, sympathy and human understanding.\n社会活动与生活 # 1930 年代的大萧条，给美国社会带来了巨大的打击，很多毕业生难以找到合适的工作，工人罢工争取提高薪酬和福利。奥本海默的生活看上去高雅，富足，他对当时社会的变化并非一无所知，同时他对自己优越的生活也有一丝愧疚，因此也慢慢介入到社会政治生活中，不再是象牙塔中的一名物理学教授。\n1933 年代随着希特勒的上台，反犹运动引起了奥本海默的关注，1934 年，为了支持犹太物理学家离开德国，奥本海默立即同意把每年工资的 3% 捐出来用于这项工作。1936 年，奥本海默还通过美国共产党渠道捐款给西班牙内战中对抗法西斯政权的武装力量。在 1930 年代的时代背景下，美国大学里的知识分子，有很多属于 左翼知识分子，追求种族平等、社会公平，当时关于成立没多久的苏联社会的正面消息也让很多美国人向往，正是基于自己的追求和对共产主义的认识 ，一些人加入了美国共产党。当时虽然共产党员并没有被公开欢迎，但也没有像麦卡锡主义盛行的 50 年代前期那样被排斥和迫害:\nParty membership, to be sure, was not without its risks. But in 1937 there was little stigma attached to it among Berkeley liberals.\n后来在恋人 Jean 的鼓励下，奥本海默更多地参与社会组织和活动，并与许多共产党员结识，参加共产党小组的会议，但是他从未成为正式的注册共产党员。奥本海默的弟弟，Frank Oppenhimer，比他更加激进，正式加入了美国共产党。\n1938 年，两位在苏联短暂逗留的物理学家 George Placzek 和 Victor Weisskopf，拜访奥本海默，向奥本海默讲述了他们在苏联的遭遇，奥本海默对苏联和共产注意的幻想也逐渐破灭：\nThis was a very decisive week in his life, and he told me so\u0026hellip; That weekend started Oppenheimer;s turning wasy from the Communist Party.\n奥本海默过去的共产主义活动其实早就被 FBI 盯上了，与奥本海默曾过从甚密的美国共产党党员 steve nelson 的办公室被 FBI 安装了窃听器。奥本海默的好几个学生也与美国共产党有密切联系，这些情况都被 FBI 所掌握。在一名名为 joe 的人和 nelson 的窃听对话中，nelson 提到奥本海默不肯透露关于他们正在进行的的工作(指的是原子弹研究)的信息，同时奥本海默和共产党的关系几近断绝了，然而 FBI 还是据此认为奥本海默是一个可疑的共产主义分子。\n当然由于奥本海默的巨大声望，军方和 FBI 暂时都对他无可奈何，然而奥本海默的学生就没那么幸运了。1943 年春天，David bohm 的研究材料被收缴，被列为机密材料，他被禁止用自己的研究内容写毕业论文，奥本海默不得不写了一封证明信，说明 Bohm 已经达到了 phd 毕业的要求，bohm 在没有写论文的情况下拿到了博士学位。Rossi Lomanitz 和 weinberg 被军方征调前往军方服役，Max friedman 被大学解雇，自此他无法在美国找到工作，唯一能找到教职的地方是波多黎各大学。\n感情生活 # 1936 年春天，奥本海默在聚会上认识了 Jean Tatlock，Jean 当时是斯坦福医学院的一名研究生，同时也是一位美国共产党的党员，在此之前，奥本海默也曾约会多位女性，但 Jean 成为奥本海默一生的最爱(即使奥本海默日后和其他人结婚，奥本海默还是深爱着 Jean，曾多次和 Jean 约会，从这个意义上看，奥本海默好像是一个大家口中的“渣男”2)。Jean 的情绪不稳定， 她 和奥本海默关系未能长久，到了 1939 年，两人的关系已经接近破裂。奥本海默甚至曾向 Jean 求婚，但 Jean 拒绝了他。然而奥本海默与 Jean 的关系并未断绝， 1943 年 6 月，奥本海默已经是曼哈顿计划的科学主管，在出差途中，奥本海默曾前往 Jean 的公寓与她约会。Jean 于 1944 年 1 月被发现死在公寓的浴缸内，法医给出的结论是自杀，然而也有人认为 Jean 是被美国 FBI 的特工谋杀以防止她从奥本海默出获取到美国原子弹研究的信息，并传递给美国共产党（毕竟 Jean 曾和共产党关系甚密），美剧《曼哈顿计划》对这一事件也有涉及3。\n1939 年 8 月，奥本海默在聚会上遇到了 Kitty Harrison，Kitty 对奥本海默一见钟情：\nI fell in love with Robert that day, but hoped to conceal it.\nKitty 曾经有过三段婚姻，第一段婚姻在很短时间就结束了，第二任丈夫 Joe Dallet 因为参加西班牙内战而死。当她在 1939 年遇到奥本海默时，和第三任丈夫还未离婚：\nThough Kitty was still married, they made no effort to conceal the affair.\n1940 年夏天，奥本海默邀请 Kitty 夫妇去他的农场做客，Kitty 丈夫未能前往，Kitty 和奥本海默一起在农场呆了两个月，最后 Kitty 怀孕了，奥本海默打电话给 Kitty 的丈夫通知了这件事，Kitty 丈夫同意和 Kitty 离婚，1940 年 11 月 1 日，Kitty 在离婚当天和奥本海默领取了结婚证书。\n曼哈顿计划 # 初试锋芒 # 早在 1941 年，Ernest Lawrence 曾想拉奥本海默参加原子弹研究，然而由于奥本海默与共产党千丝万缕的联系，军方不肯给奥本海默相关的权限。1941 年秋天，Lawrence 担心美国原子弹研究严重滞后于德国人，极力劝说原子弹研究委员会主席康普顿允许奥本海默参加 10 月 21 号的一次讨论。在这次会议上，奥本海默给出制造原子弹所需要的 U-235 的大致质量：100 公斤左右。\n1942 年 1 月，奥本海默被委派主导快中子研究，奥本海默在 1942 年夏天组织了一场研讨会，研究原子弹的设计，材料等问题。与会者包括 Hans Bethe 以及 Edward Teller，奥本海默广泛的知识给 Bethe 留下了深刻的印象：\nNow I could see at firsthand the tremendous intellectual power of Oppenheimer who was the unquestioned leader of our group\u0026hellip;. The intellectual experience was unforgettable.\n他们的研究也发现，原子弹制造需要大量的铀，光靠实验室是无法生产如此大量的铀，必须要靠大规模工业生产，这也意味着制造原子弹成本高昂（参考 这里）。\n洛斯阿拉莫斯实验室 # 到了 1942 年，美国原子弹委员会的委员们已经被奥本海默的能力所折服，他们当时想要成立一个致力于原子弹研究的实验室，来统筹美国所有原子弹研究的力量，奥本海默就成了绝佳人选。此时军方仍然拒绝给予奥本海默相关的安全权限，奥本海默作为一名忠诚的爱国者，也意识到自己“可疑”的过去给自己为国效力带来了麻烦，也决定断绝自己和共产党的联系。\n原子弹的研制也离不开军方，1942 年 9 月 18 日，Leslie Groves 将军被任命为曼哈顿计划军方总负责人。10 月，Groves 第一次和奥本海默会面，奥本海默建议新的实验室应该建在一个偏远与世隔绝的地方，确保绝密信息不易外泄。奥本海默也指出了，建造原子弹这样一个实际的武器，需要多学科合作，涉及到许多方面，包括化学，冶金，工程，物资供应等方面，此前从未有人考虑过这些问题。Groves 被奥本海默的气质和智慧所吸引，Groves 告诉记者：\nHe\u0026rsquo;s a genius, a real genius. While Lawrence is very bright, he\u0026rsquo;s not a genius, just a good hard worder. Oppenhemier knows about everything.\n这次会面以后，Groves 心中已敲定奥本海默作为新实验室的主任。Groves 的提议遭到了科学界的反对，Hans Bethe 认为奥本海默没有领导一群人的经验，另外奥本海默是一个理论物理学家，对于实际的设备一窍不通，怎么能领导一个实际的工程项目呢？他的朋友 I. I. Rabi 说到：\nHe was a very impractical fellow\u0026hellip; He didn\u0026rsquo;t know anything about equipment. He couldn\u0026rsquo;t run a hamburger stand.\n军方人士也反对任命奥本海默，然而他们并不能找到一个比奥本海默更合适的人选，于是 1942 年 10 月末，奥本海默被正式任命为要筹建的新实验室的主任。战争结束以后，Rabi 回首往事，认为 Groves 选择奥本海默作为实验室主任是“天才的选择”。\n1942 年 11 月，奥本海默与劳伦斯同军方人员一起敲定了新墨西哥州的洛斯阿拉莫斯作为新实验室的场地，他们买下了一个学校的场地作为实验室的地点。\n实验室筹建 # 要在几近蛮荒的地方建立实验室需要的工作量是巨大的。首先是要建立科学家以及工作人员的居住房屋，另外要建立各种实验室，安装原子弹研究需要的各种设备。所有琐碎的工作，都要求一个事无巨细，认真的领导者，奥本海默显然不是这种人。最初的几个月实验室的建设一片混乱，然而奥本海默很快改变了自己的个性以适应自己的领导工作，他的助手 Wilson 说到：\nWhatever we felt about his deficiencies, in a few months he had corrected those deficiencies, and obviously knew a lot more than we did about administrative procedures.\n奥本海默将实验室分为四个不同部门，实验物理，理论物理，化学和冶金, 以及物资供应。然而最初对这项工作所需要的人力显然低估了，他最初认为只需要六个科学家，再加一些工程师和技术人员，即可完成这项工作。实际上，到 1945 年夏天，洛斯阿拉莫斯已经成为一个小镇，居住了 4000 平民和 2000 军人。\n奥本海默的另外一项工作是说服美国各地的科学家前往洛斯阿拉莫斯，奥本海默想邀请 Rabi 加入，但是 Rabi 拒绝了奥本海默的邀请，他认为原子弹威力巨大，一旦投放到实战，造成的人道主义灾难是巨大的。不过 Rabi 劝说 Hans Bethe 等其他科学家前往洛斯阿拉莫斯。1943 年 3 月，奥本海默一家人正式搬到洛斯阿拉莫斯（又称为 The Hill），最初的条件十分简陋，一下雨路都泥泞不堪，无法行车，科学家以及工作人员在这样的条件下开始了原子弹的研究。\n原子弹研制 # 原子弹的研究时间很紧，所有人每周都工作 6 天时间，周日休息。原子弹研究更多的是一个工程项目，奥本海默将自己从一个犹豫、羞怯的人变成了一个有决断力的领导者。奥本海默对工程问题的领悟能力也让他的同事们惊叹：\nHe had a remarkable ability to absorb things so rapidly.\n为了促进各个部门和学科之间的交流，在 Bethe 的建议下，洛斯阿拉莫斯每周举行一个小型研讨会，参与者为拥有最高机密权限的科学家。奥本海默的学生 Bob Serber 向科学家们介绍了实验室的任务以及原子弹的初步设计，Serber 介绍了枪式结构和内爆式设计的最初想法。\n最初原子弹研制主要研究的是枪式结构，也就是把两块低于 临界质量 的核原料使用炸药高速碰撞在一起，达到临界质量，瞬间释放核能。内爆式设计只作为备用方案，1943 年初，奥本海默任命 Seth Neddermeyer 负责研究内爆式设计，但是进展缓慢，1943 年秋天，奥本海默找来了冯诺伊曼，冯诺伊曼从理论上证明了内爆式原子弹的可行性。然而到了 1944 年 7 月，初步实验表明，工厂提纯得到的钚元素纯度不够，采用枪式设计将会导致钚原子弹提前爆炸，达不到设计的效果。此时也没有更多的资源和时间进一步提纯钚元素，使用内爆式设计的钚原子弹成了唯一选择，奥本海默说服大家孤注一掷，赌内爆式设计能够在工程上实现。1944 年 6 月，由于 Neddermeyer 领导工作不力，奥本海默将内爆式设计的负责人换成了哈佛大学的 Kistiakowsky。到了 1945 年 1 月，内爆式设计仍然不能按照预想工作，军方担心实验进度被耽误，要求更改设计方案，但奥本海默给予了 Kistiakowsky 支持，在随后的几个月他们完善了设计，到了 1945 年 5 月份，内爆式设计终于能正常工作。\nTrinity 测试与原子弹投放 # 爱德华·泰勒与氢弹研究 # Edward Teller 出生于匈牙利，1942 年，泰勒和费米讨论了利用原子弹爆炸引发热核反应的可能性，这就是氢弹的雏形，从此之后，泰勒就迷上了氢弹的研究。尽管泰勒也被奥本海默招到了洛斯阿拉莫斯，负责原子弹内爆相关的计算工作，但是他对原子弹研究没有兴趣，也讨厌在 Hans Bethe 手下工作。奥本海默容忍了任性的泰勒，决定把泰勒的工作交给了心来的英国科学家 Rudolf Peierls，并且允许泰勒继续氢弹研究，他还每周抽出宝贵的一个小时，和泰勒探讨问题。然而泰勒还是对奥本海默不满，认为他已经变成了一个官僚气息十足的政治家。\n安全措施与间谍活动 # 由于原子弹研究项目的敏感，军方希望能够最大程度保证信息不泄露，Groves 将军要求保持不同部门之间的信息隔离，然而科学家们并不喜欢这样，一方面是因为科学家不喜欢约束，喜欢自由，另外自由交流也能激发新的想法，加快原子弹的研究。奥本海默也尽最大努力为科学家争取相对自由的环境，作为曼哈顿计划科学主管，奥本海默拥有相当大的权威和影响力，最终信息隔离政策只停留在纸面上，并没有严格实施。这也给苏联的间谍活动提供了便利，洛斯阿拉莫斯实验室一些同情苏联的科学家，偷偷向苏联提供了大量原子弹研究的绝密信息，所以苏联在原子弹还没有爆炸之前就知道了美国正在研制原子弹。尽管如此，军方还是实行了其他的保密错失，所有进出洛斯阿拉莫斯的邮件都会被检查，所有通话都被监听，甚至奥本海默本人也被严密监视，他的助手和司机都是军方的便衣特工，监视着他的一举一动。\n然而，这些保密措施并未阻挡住苏联的间谍活动，从 1944 年秋天开始，Klaus Fuchs 向苏联传递了关于内爆型原子弹设计的信息。另外一名向苏联传递机密信息的是 Ted Hall。在洛斯阿拉莫斯，Hall 听到了许多关于原子弹对战后世界影响的讨论，Hall 认为，如果美国垄断了原子弹制造技术，那么第三次世界大战不可避免:\nit seemed to me that an American monopoly was dangerous and should be prevented.\n因此 Hall 主动向苏联情报机构提供了许多原子弹研制的机密信息。\n关于原子弹的思考 # 1943 年 12 月，波尔访问洛斯阿拉莫斯，波尔带来了德国人原子能研究的消息，此前，波尔曾和海森堡会面，海森堡告诉了波尔德国的原子弹研究，然而当时德国人正在研究的似乎是核反应堆，并不是原子弹，核反应堆的军事价值并不大，不能作为实际的战争武器。波尔对于原子弹最大的担忧是战后可能西方和苏联之间会进行核军备竞赛，这对于人类的前途是巨大的威胁，波尔认为要避免这种结局，必须倡导一种新的国际秩序，也就是“开放世界”，苏联有权力知道英美加的原子弹研究计划，苏联科学家也应该参加到原子弹研究中，如果苏联被蒙在鼓里，这将不可避免地导致苏联和西方之间的猜疑，核竞赛将不可避免：\nA postwar nuclear arms race could be prevented, Bohr believed, if Statlin was informed of the existence of the Manhattan Project and assured that it posed no threat to the Soviet Union.\n此前奥本海默一直忙于原子弹研究的具体工作，无暇思考原子弹研究成功对世界格局的影响，从那时起，奥本海默开始思考这个问题。政治家的短视让他们没能意识到这个问题，波尔的意见被否定，丘吉尔和罗斯福政府都认为英美能够保持自己的核武器上的垄断，拥有威吓苏联的能力。\n1944 年底，纳粹在欧洲已经节节败退，用原子弹来对付纳粹德国似乎已经没有必要性，洛斯阿拉莫斯的科学家们讨论了是否有必要继续研制原子弹，奥本海默认为作为科学家他们的任务主要是研制原子弹，在原子弹究竟如何使用这个问题上他们没有更多的权力，奥本海默还认为原子弹的出现可能会终结未来所有的战争。在 1945 年 3 月的一次讨论中，奥本海默认为原子弹必须在战争中使用一次，让人们意识到原子弹的恐怖，如 果原子弹作为秘密武器没有应用在战争中，那么下一次世界大战几乎可以确定一定会是原子弹大战。\nChevalier 事件 # 1942 年冬天发生的 Chevalier 事件影响了奥本海默之后的命运。Haakon Chevalier 是伯克利的一名法国文学教授，很早就与奥本海默熟识，Chevalier 的一位朋友 Elenton 是壳牌公司的员工，Elenton 对苏联抱有同情，认为当时正在同德军作战的苏联没有得到盟友应有的待遇(美国并没有和苏联共享所有的情报消息)，Elenton 向 Chevalier 提议，要他从奥本海默那里打探关于原子弹研究的消息，然后由 Elenton 转发给旧金山苏联领事馆。在 1942 冬天奥本海默举办的家庭宴会上，Chevalier 向奥本海默转达了 Elenton 的想法，奥本海默认为这是叛国行为，不予考虑，但是并没有在当时就向军方报告这件事(可能是为了保护 Chevalier)，然而就是这样一件小事，在十多年以后导致奥本海默失去了参与美国原子弹相关事物的最高安全权限。\n1943 年 8 月，奥本海默向军方情报人员报告了几个月前的 Elenton 事件：Elenton 通过一个中间人，接触了三位或多位参与曼哈顿计划的科学家，希望套取关于原子弹研究的信息。然而奥本海默拒绝说出中间人的姓名，因为他认为 Chavaier 并不是苏联间谍，只是负责把话转达到他而已。1943 年 12 月，在 Groves 将军的再三要求下，奥本海默说出了中间人的名字，也就是他的朋友 Chevalier。\n战后 # 听证会 (1954 年) # 子女 # 奥本海默和 Kitty 总共育有两个孩子，大儿子 Peter，小女儿 Toni。Peter 刚生下来没多久，奥本海默夫妇就把他托付给朋友照顾，两个人出去度假几个月，在这个关键的时期，父母和孩子之间没有形成紧密的关系，Peter 长大之后 变成了一个害羞和敏感的孩子，Kitty 于 Peter 的关系一直很紧张，给了 Peter 很多压力，Peter 在奥本海默去世后继承了他在新墨西哥州的农场，做起了农民和木匠。\nToni 是一个美丽的女孩，出生于洛斯阿拉莫斯实验室，在 Toni 几个月大的时候，由于 Kitty 带着 Peter 去匹兹堡休养，曾被托付给奥本海默的朋友 Pat Sherr 照顾。可能是由于巨大的工作压力以及长时间的工作，Pat Sherr 留意到奥本海默对于女儿反常的态度：\nHe would come and sit and chat with me, but he wouldn\u0026rsquo;t ask to see the baby. She might as well have been God knows where, but he never asked to see her.\n几个月后，奥本海默甚至向 Sherr 提议收养 Toni，当 Sherr 问起原因时，奥本海默说到：“我无法爱她。” 1967 年，奥本海默去世给 Toni 巨大打击，1969 年，由于 FBI 拒绝给她相关的安全权限，Toni 丢掉了她在联合国的翻译工作，随后她搬到了美属维京群岛，1977 年，Toni 自杀身亡，真是巨大的悲剧。\n做名人的孩子也不一定就是一件幸福的事情。\n论文名字叫“On Continued Gravitational Contraction”，具体见 这里。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n人性是复杂的，这让我想起了《繁花》作者金宇澄采访中说的一段话，见这里。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n也可以参考这篇博客 http://blog.nuclearsecrecy.com/2015/12/11/the-curious-death-of-oppenheimers-mistress/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"3 October 2020","externalUrl":null,"permalink":"/2020/10/03/american_prometheus_jro/","section":"Posts","summary":"\u003cp\u003e最近一个月读了 Kai bird 和 Martin J. Sherwin 的\u003ca href=\"https://www.goodreads.com/book/show/80571.American_Prometheus\" target=\"_blank\"\u003e《American prometheus》\u003c/a\u003e，这本书是著名物理学家奥本海默的传记，详细讲述了奥本海默的一生。为了写这本书，作者花了 25 年的时间，做了很多采访，查看了很多 FBI 关于奥本海默的资料。这本书是关于奥本海默的权威著作，2005 甫一问世， 2006 年就获得了\u003ca href=\"https://www.pulitzer.org/winners/kai-bird-and-martin-j-sherwin\" target=\"_blank\"\u003e普利策奖(传记类)\u003c/a\u003e。\u003c/p\u003e","title":"美国普罗米修斯--奥本海默传","type":"posts"},{"content":"This is the 7th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ Copy several lines to destination line # Use :copy command:\n:[range]copy {address} [range] is a line range that has very flexible syntax, see :h cmdline-ranges for the details. {address} is the destination address you want to copy text to.\nLet\u0026rsquo;s see some concrete examples.\nCopy line 1 to 3 to below line 11:\n:1,3copy 11 Copy three lines from current cursor position to the end of the file:\n:.,.+2copy $ Ref:\nCopy lines to other line in Vim. Save state of all opened files and open them later # Sometimes, we want to restart Vim/Neovim, but do not want to lose the current state since we may have opened a lot of files. A simple way is to use :mksession command. It will create a file named Session.vim. Or you can provide a custom name for it :mksession my-sess.vim.\nWhen you start Vim/Neovim later, you can use :source my-sess.vim to restore the state of previous state of Vim, with all the previous files opened.\nThere is also vim plugins such as vim-obession that helps you simplify the management of sessions.\nRef:\nRestore opened files in Vim. Delete lines matching/not matching a pattern? # To delete lines matching a pattern, we can use the :global command:\n:%g/some pattern/d Some explanation on this command:\n%: specify the whole file. We can also specify a custom range, e.g., 2,10 (line 2 to line 10). See also : h cmdline-ranges. some pattern: The pattern we want to match. It can be normal text or regular expressions. d: For command :delete. To delete lines not matching a pattern, we simply reverse the :global command via :global!:\n:%g!/some pattern/d which will delete lines not matching some pattern.\n:g! is also equivalent to :vglobal (or :v) command (think of it as grep -v):\n:%v/some pattern/d Ref:\nHow to delete all lines that do NOT contain a certain word in Vim? Close the help window quickly? # According to answer here, we can simply the use the :helpclose command to close the help window, which is by far the simplest way I have found.\nJump to the first occurence of a search term? # When we search a pattern, we may want to go to the first occurence of the search pattern. Just press ggn in normal mode:\ngg: go the begining of the file n: search forward for the pattern. Ref:\nHow do I go to the first search result in a file? Keep only the lines matching a pattern from command output? # A vim command may output a lot of text, making it hard for us to find what we want. For example, :highlight command will print a lot of lines of the highlight group info.\nWe can use :filter to get only what we are interested. The syntax is:\n:filter /pattern/ [cmd] where pattern is the string pattern we want to search and [cmd] is a vim command. If we want to ignore cases, we can add \\c before pattern:\n:filter /\\cpattern/ [cmd] For example, to search highlight groups that contains the word search (ignoring the case), we use the following comamnd:\n:filter /\\csearch/ highlight we only get the following three lines instead of the hundreds of lines:\nIncSearch xxx cterm=reverse gui=reverse guifg=#fe8019 guibg=#1d2021 Search xxx cterm=reverse ctermfg=0 ctermbg=11 gui=reverse guifg=#fabd2f guibg=#1d2021 Searchlight xxx links to ErrorMsg Ref:\nHow to grep in ex command output? ","date":"22 September 2020","externalUrl":null,"permalink":"/2020/09/22/nifty_nvim_techniques_s7/","section":"Posts","summary":"\u003cp\u003eThis is the 7th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 7","type":"posts"},{"content":"I want to use a custom highlight group for yank highlighting. Initially, I use the predefined highlight group IncSearch. I thought it a bit dim and want something brighter. So I defined the following highlight group:\nhighlight YankColor ctermfg=59 ctermbg=41 guifg=#34495E guibg=#2ECC71 Then, I use it in function vim.highlight.on_yank{}:\naugroup highlight_yank autocmd! au TextYankPost * silent! lua vim.highlight.on_yank{higroup=\u0026#34;YankColor\u0026#34;, timeout=700} augroup END However, when I started Neovim, the custom yank highlight did not work. The output of :hi YankColor shows:\nYankColor xxx cleared After digging up a bit, I find that it is because the colorscheme I use (a variant of gruvbox) will use :hi clear command to clear all custom highlight and reset highlighting to the defaults (see here for example).\nSo my custom highlight does not work anymore. A solution is to use a special event ColorScheme, which is triggered whenever we change the colorscheme. After changing the color scheme, we redefine the custom highlight group:\naugroup custom_highlight autocmd! au ColorScheme * highlight YankColor ctermfg=59 ctermbg=41 guifg=#34495E guibg=#2ECC71 augroup END After using this autocmd, everything works as expected.\nRef:\nThe right way to override any highlighting Why do custom highlights in my vimrc get cleared or reset to default? https://superuser.com/q/466662/736190 ","date":"22 September 2020","externalUrl":null,"permalink":"/2020/09/22/highlight_groups_cleared_in_nvim/","section":"Posts","summary":"\u003cp\u003eI want to use a custom highlight group for \u003ca href=\"https://neovim.io/doc/user/lua.html#lua-highlight\" target=\"_blank\"\u003eyank highlighting\u003c/a\u003e.\nInitially, I use the predefined highlight group \u003ccode\u003eIncSearch\u003c/code\u003e. I thought it a bit\ndim and want something brighter. So I defined the following highlight group:\u003c/p\u003e","title":"Highlight Groups Cleared after Starting Neovim","type":"posts"},{"content":"As a Neovim user who writes frequently, I want to use Neovim to check my grammar before posting it in my blog. In this post, I will compare several plugins used for grammar checking. Under the hood, they all use the opensource tool languagetool.\nI will use macOS as example here. First, we need to install languagetool using homebrew:\nbrew install languagetool It will also install open-jdk for you, but the path is not set by default. We have to set the open-jdk path manually:\nexport PATH=\u0026#34;/usr/local/opt/openjdk/bin:$PATH\u0026#34; Now I introduce several similar plugins that use languagetool for grammar checking.\nLanguageTool.nvim # update 2023-01-04: This plugins has been deprecated.\nLanguageTool.nvim is neovim plugin that support asynchronous grammar checking. Install LanguageTool.nvim using vim-plug:\nPlug \u0026#39;vigoux/LanguageTool.nvim\u0026#39; The only setting to make it work is:\nlet g:languagetool_server_jar=\u0026#34;/usr/local/opt/languagetool/libexec/languagetool-server.jar\u0026#34; Then open a file, run the following commands:\n:LanguageToolSetup: set up the languagetool server :LanguageToolCheck: check the current file :LanguageToolSummary: open a buffer and list all the grammar errors found in the file. It seems that languagetool.nvim is fork of vim-LanguageTool, but the author intends to rewrite it to use more neovim-specific features.\nPros and cons # Pros: asynchronous grammar check. Has error highlighting. Cons: very slow. vim-grammarous # vim-grammarous is a more polished plugin.\nInstall:\nPlug \u0026#39;rhysd/vim-grammarous\u0026#39; Run command: :GrammarousCheck to check grammar. It is asynchrous and non-blocking. When it finishes, it will notify the user in the statusline how many errros have been found.\nIt has options for you to configure the rules and categories for languagetool. See my config here. The explanation of categories and rules can be found here.\nPros and cons # Pros: Asynchronous and relatively fast. Various configs for you to tweak. Can specifiy the rules and categories to use for languagetool. Has error highlighting. Cons: not found yet. vim-languagetool # Another plugin: https://github.com/dpelle/vim-LanguageTool\nInstall with vim-plug:\nPlug \u0026#39;dpelle/vim-LanguageTool\u0026#39; Only config you need:\nlet g:languagetool_jar=\u0026#34;/usr/local/opt/languagetool/libexec/languagetool-commandline.jar\u0026#34; Run command: :LanguageToolCheck to check grammar.\nPros and cons # Pros: Has error highlighting. Cons: It is not asynchronous, so it will hang until the results are produced. vim-langtool # Another similar plugin is vim-langtool. Install:\nPlug \u0026#39;Konfekt/vim-langtool\u0026#39; Simple config:\nlet g:langtool_jar = \u0026#39;/usr/local/opt/languagetool/libexec/languagetool-commandline.jar\u0026#39; Command to run: :LangTool.\nPros and cons # Pros: It will populate quickfix list with errors. Cons: It is not asynchronous. No error highlighting. Ale # Ale also support languagetool, add the following config:\nlet g:ale_linters = { \\ \u0026#39;python\u0026#39;: [\u0026#39;pylint\u0026#39;], \\ \u0026#39;vim\u0026#39;: [\u0026#39;vint\u0026#39;], \\ \u0026#39;cpp\u0026#39;: [\u0026#39;clang\u0026#39;], \\ \u0026#39;c\u0026#39;: [\u0026#39;clang\u0026#39;], \\ \u0026#39;markdown\u0026#39;: [\u0026#39;languagetool\u0026#39;] \\} Then Ale will populate errors in the quickfix list.\nPros and cons # Pros: It will populate quickfix list with errors. Cons: No custom config available. Common issues # A common issue with languagetool is that it is intended for plain text, while filetypes like Markdown or LaTeX contains a lot of formatting commands or structure. So using languagetool directly on these filetypes produces a lot of false positives, as discussed here. However, it is not easy to fix this problem.\nConclusion # Right now, it seems vim-grammarous the best plugin we can use for grammar checking.\n","date":"20 September 2020","externalUrl":null,"permalink":"/2020/09/20/nvim_grammar_check_languagetool/","section":"Posts","summary":"\u003cp\u003eAs a Neovim user who writes frequently, I want to use Neovim to check my\ngrammar before posting it in my blog. In this post, I will compare several\nplugins used for grammar checking. Under the hood, they all use the opensource\ntool \u003ca href=\"https://languagetool.org/\" target=\"_blank\"\u003elanguagetool\u003c/a\u003e.\u003c/p\u003e","title":"Grammar Check in Neovim with LanguageTool","type":"posts"},{"content":"","date":"20 September 2020","externalUrl":null,"permalink":"/tags/writing/","section":"Tags","summary":"","title":"Writing","type":"tags"},{"content":"When we are working on a real project, we may want to know from which commit a particular line is introduced.\nWe can use the following git-log command to find:\ngit log -S \u0026#34;search term\u0026#34; For example, to find when the line foo = foo + bar was introduced, we may use the following command:\ngit log -S \u0026#34;foo = foo + bar\u0026#34; It will find the commit that created this line.\nAnother similar command is git-blame, for example, to find which commit introduced line 100, we can use the following command:\ngit blame -L 100,100 In fact, git-blame shows the most recent change to this line. So if this line has been updated since its creation, for example, you have removed the trailing white spaces or renamed variables in this line, git-blame does not work.\nRef:\nHow to find out in which commit a particular code was added? git log -S ","date":"14 September 2020","externalUrl":null,"permalink":"/2020/09/14/git_find_line_history/","section":"Posts","summary":"\u003cp\u003eWhen we are working on a real project, we may want to know from which commit a particular line is introduced.\u003c/p\u003e","title":"Find Line History in Git","type":"posts"},{"content":"Tqdm is a popular package to show a progress bar. Here are a few tips when using tqdm.\nWindows display issue # On Windows, it seems that tqdm will print a new line when showing the progress, which is annoying.\nAccording to issue here, this is due to buggy Unicode handling in Windows terminal. We can add ascii=True in tqdm() to prevent this behavior. Works for me on Windows for both Cmder and plain cmd.\nIterate over each line in a file and show progress? # When we are processing files with large number of lines, we may want to see the progress. To see the progress, we need to know the number of lines in this file. Here is a sample code to show the progress bar using tqdm:\nfrom tqdm import tqdm file_path = \u0026#34;test.txt\u0026#34; num_lines = sum(1 for line in open(file_path, \u0026#39;r\u0026#39;)) with open(file_path, \u0026#39;r\u0026#39;) as f: for line in tqdm(f, total=num_lines): # deal with this line... pass Ref\npython enumerate tqdm bar when reading a file? Show progress for concurrent.futures.ThreadPoolExecutor # Here is an example of using tqdm together with concurrent.futures:\nfrom concurrent.futures import ThreadPoolExecutor import time from tqdm import tqdm def square(x): time.sleep(0.01) return x*x def main(): nums = list(range(10000)) with ThreadPoolExecutor() as executor: results = list(tqdm(executor.map(square, nums), total=len(nums))) if __name__ == \u0026#34;__main__\u0026#34;: main() The output of executor.map(square, nums) is a generator containing all the returned results from the function square(). So we need to supply the total number in the total argument.\nIn the latest version of tqdm, we can also simplify the above code by using tqdm.contrib.concurrent.thread_map() method, which is essentially a wrapper around above code:\nfrom concurrent.futures import ThreadPoolExecutor import time from tqdm.contrib.concurrent import thread_map def square(x): time.sleep(0.01) return x*x def main(): nums = list(range(10000)) with ThreadPoolExecutor() as executor: results = thread_map(square, nums) if __name__ == \u0026#34;__main__\u0026#34;: main() The above code is tested on tqdm version 4.48.2.\nRef:\nUse tqdm with concurrent.futures? Another way: https://gist.github.com/alexeygrigorev/79c97c1e9dd854562df9bbeea76fc5de doc on tqdm.contrib.concurrent. ","date":"5 September 2020","externalUrl":null,"permalink":"/2020/09/05/tqdm_tips/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/tqdm/tqdm\" target=\"_blank\"\u003eTqdm\u003c/a\u003e is a popular package to show a progress\nbar. Here are a few tips when using tqdm.\u003c/p\u003e","title":"Tqdm Issues and Tips","type":"posts"},{"content":" Update log 2022-08-20: Add how to remove remote tracking branches that does not exist anymore This post summarizes some commonly used Git commands related to branch operations.\nCreate a new branch (locally and remotely) # Create a branch locally # We can use the following command to create a new branch\ngit branch \u0026lt;new_branch\u0026gt; At this time, we are still in original branch. To switch to new branch, use the following command:\ngit checkout \u0026lt;new_branch\u0026gt; The two steps can be combined with the following command:\ngit checkout -b \u0026lt;new_branch\u0026gt; Create a branch remotely # To create a remote branch, use the following command:\ngit push -u origin \u0026lt;local_branch\u0026gt; The -u option sets a upstream branch of the same name for tracking, i.e., now our local branch corresponds to a remote branch of the same name.\nRef:\nHow to create remote branch. Push local to remote and track it. git push -u option doc What exactly does the “u” do? “git push -u origin master” vs “git push origin master” Create a git branch from a specific commit # Sometimes, we may need to fix a flaw in a specific commit, but current work has not been finished. We may create a new branch from that commit, and after that, merge that branch to current branch.\nThis is how we do this using git:\ngit branch fix_bug \u0026lt;commit_id\u0026gt; git checkout fix_bug \u0026lt;commit_id\u0026gt; is the hash of that commit as shown in the git log output.\nThe above command can also be simplified using -b for checkout:\ngit checkout -b fix_bug \u0026lt;commit_id\u0026gt; After fixing the issue in branch fix_bug, we can then merge the change into the original branch, say, master branch:\ngit checkout master git merge fix_bug Ref:\nBranch from a previous commit using Git How to create the branch from specific commit in different branch Show branches # show all branches (local and remote): git branch -a show all local branches: git branch -l show all remote branches: git branch -r Delete a branch # Delete a local branch: git branch -d \u0026lt;branch_name\u0026gt;.\nNote that we can not delete a local branch when we are on it! We need first to checkout to another branch. Delete a remote branch: git push \u0026lt;remote_name\u0026gt; -d \u0026lt;remote_branch\u0026gt; If you are using GitHub and delete a remote tracking branch via the GitHub GUI interface, when you run git branch -a locally, they are still shown. To remove the remote tracking branches locally, we can do git remote prune origin.\nRef:\nDelete git branch. Remove tracking branches no longer on remote: https://stackoverflow.com/q/7726949/6064933 Rename a branch locally and remotely # Suppose we want to rename the branch foo in local and remote repo to name bar, first we need to rename the local branch:\ngit branch -m foo bar git branch --unset-upstream foo Then we push the bar branch to the remote:\n# create a remote branch of the same name and track it. git push -u origin bar If the original remote branch foo is the default branch, we need to set other branch as the default. Otherwise, we can not delete remote branch foo. In GitHub, go to Settings --\u0026gt; Branches and change the default branch. After making sure that foo is not the default remote branch, run the following command to delete it from remote:\n# suppose that origin is the remote name git push origin -d foo Ref:\nHow do I rename both a Git local and remote branch name?: https://stackoverflow.com/q/30590083/6064933 Cannot delete a remote master branch on git? https://stackoverflow.com/q/12208751/6064933 Create a local branch from a remote branch? # I have a remote branch and I would like to create a local branch based on it. First, we need to fetch the remote changes:\ngit fetch Then we can create a local branch from the remote branch:\ngit checkout -b local_branch_name remote_name/remote_branch If we do not want to change the remote name, we can also also -t:\ngit checkout -t \u0026lt;name of remote\u0026gt;/\u0026lt;remote branch name\u0026gt; It will create a local branch of the same name.\nRef:\nhttps://stackoverflow.com/q/1783405/6064933 https://stackoverflow.com/q/24301914/6064933 Create local branch from remote branch. Find remote tracking branch for local branch # If we want to find the remote branch that a local branch is tracking, we can use the following command:\ngit branch -vv We can also use the git remote command to show remote tracking branch:\ngit remote show \u0026lt;remote name\u0026gt; Ref:\nhttps://stackoverflow.com/q/171550/6064933 https://stackoverflow.com/q/4950725/6064933 ","date":"3 September 2020","externalUrl":null,"permalink":"/2020/09/03/git_branch_operations/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202021114754.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-08-20: Add how to remove remote tracking branches that does not exist anymore\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eThis post summarizes some commonly used Git commands related to branch operations.\u003c/p\u003e","title":"A List of Common Git-branch Operations","type":"posts"},{"content":"LeaderF is Vim/Neovim plugin to fuzzy-search files, colorschemes, tags etc. quickly. It works across different platforms flawlessly. Here are some of its settings to address minor issues.\nFile names with non-ASCII characters shown as escaped number? # When I am inside a git repository and use :Leaderf file, I find that files whose names containing non-ASCII characters are shown as escaped numbers. For example, 测试.md is shown as \\346\\265\\213\\350\\257\\225.md.\nThis is because Leaderf file use git to index files under git repos by default. Git shows non-ASCII characters as escaped numbers. To fix this, run the following command:\ngit config --global core.quotePath false Ref:\nhttps://github.com/Yggdroot/LeaderF/issues/203 git not displaying unicode file names Can not search files in a git submodule # In a git repo that has submodules in it, I find that command Leaderf file can not list files under these submodules.\nWhy? Because in a git repository, LeaderF will the command git ls-files to list files, which by default will exclude files inside git submodules.\nIf we are using Git 2.11 or later, we can set the following options:\nlet g:Lf_RecurseSubmodules = 1 Under the hood, it uses the --recurse-submodules option to list files in submodules.\nIf we are using older version of Git, we can use the following option:\nlet g:Lf_UseVersionControlTool = 0 It will disable using git to index files.\nDo not show fancy filetype icons # By default, LeaderF will try to show fancy filetype icons before file names when we use :Leaderf file. However, due to font issues, some of the icons may not show properly. To disable this feature, add the following option:\nlet g:Lf_ShowDevIcons = 0 Set working directory for git repository # In a Git repository, I want to always search files under the project root, even though my current working directory may not be in the project root. We can set g:Lf_WorkingDirectoryMode to customize how the project root directory is found.\nlet g:Lf_WorkingDirectoryMode = \u0026#39;a\u0026#39; If we use the above setting, LeaderF will find ancestor of current directory that contains .git or other root indicators. See :h g:Lf_WorkingDirectoryMode for more help.\nRef:\nhttps://github.com/Yggdroot/LeaderF/issues/702 Refresh file indexing every time we use LeaderF? # I created a new source file under the current project. After a while, I started LeaderF and found that I can not search the newly created file without refreshing LeaderF (i.e., press F5 to refresh). This is because LeaderF will cache your project files once you start using LeaderF for the first time, to save some precious time. To disable this behavior, that is, to indexing files every time you invoke LeaderF, add the following setting:\nlet g:Lf_UseMemoryCache = 0 For very large project, it may take quite some time to finish indexing files. So you should use this option with care.\nRef:\nhttps://github.com/Yggdroot/LeaderF/issues/161 ","date":"26 August 2020","externalUrl":null,"permalink":"/2020/08/26/leaderf_nvim_settings/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/Yggdroot/LeaderF\" target=\"_blank\"\u003eLeaderF\u003c/a\u003e is Vim/Neovim plugin to fuzzy-search files, colorschemes, tags etc. quickly.\nIt works across different platforms flawlessly.\nHere are some of its settings to address minor issues.\u003c/p\u003e","title":"My Settings for the Fuzzy-finder LeaderF","type":"posts"},{"content":"关于产品设计的一些想法。\n微信扫一扫 # 经常用微信扫一扫扫描二维码的人会发现，这个功能体验很不错，有一个值得注意的现象：无论二维码距离摄像头远近以及二维码在摄像头拍摄图片中的位置，二维码都能被准确识别。如果拍摄的二维码距离摄像头很远，那么二维码在整图中占的比例很小，很小的二维码不利于识别，微信扫一扫功能还能自动放大图片，“就像”调整摄像头焦距一样（这里不确定微信具体实现方法，是调整摄像头焦距，还是直接把二维码所在区域裁剪出来），把二维码区域放大到比较大的比例。\n先说二维码位置不影响识别，微信应该加了一个检测二维码位置的算法，所以可以确定二维码位置，确定位置以后把二维码区域送到二维码识别算法，排除了二维码位置的影响，就算二维码不在图像中心也可以识别。\n再说自动放大二维码功能，这个也依赖二维码位置检测，通过检测到的二维码位置，确定二维码区域在全图的比例，这里应该有一个阈值，如果二维码占比小于这个阈值，那么微信就会放大二维码区域，方便二维码识别算法去识别。\n","date":"24 August 2020","externalUrl":null,"permalink":"/2020/08/24/thought_on_product_design/","section":"Posts","summary":"\u003cp\u003e关于产品设计的一些想法。\u003c/p\u003e","title":"从产品猜测设计","type":"posts"},{"content":"In Python, context manager is a great way to handle the closing of resources. It makes sure that resources are correctly closed after their use.\nBasically, a context manager consists of two parts: enter and exit. You can create a class to function as a context manager, but it is kind of verbose (see here). In Python3, we can use the contextlib to create custom context managers easily using the decorator. A good example is to measure the running time of a code block. Here is the code:\nfrom contextlib import contextmanager import time @contextmanager def report_time(name): start = time.time() yield end = time.time() print(f\u0026#34;Time needed for {name}: {end-start}\u0026#34;) In the above code, we define a context manager report_time, when the block it manages starts, it will set the start time in start. Then it yields, which means that the block it manages starts running. When the block finishes, report_time resumes running and prints the running time of the measured code block.\nHere is an example to use this code:\nimport requests with report_time(\u0026#34;httpbin request\u0026#34;): r = requests.get(\u0026#34;https://httpbin.org/get\u0026#34;) Ref:\nhttps://jeffknupp.com/blog/2016/03/07/python-with-context-managers/ https://www.youtube.com/watch?v=U2t2t_cpvoc ","date":"18 August 2020","externalUrl":null,"permalink":"/2020/08/18/context_manager_for_measuring_runtime/","section":"Posts","summary":"\u003cp\u003eIn Python, context manager is a great way to handle the closing of resources. It\nmakes sure that resources are correctly closed after their use.\u003c/p\u003e","title":"Measuring Code Running Time with contextmanager","type":"posts"},{"content":" update log 2022-04-12: add warning about dangers of omitting stroke_fill parameter. Sometimes, we may want to add outline color to text strokes with Pillow. Prior to version 6.2.0, we can not do this in Pillow. Fortunately, starting from version 6.2.0, pillow supports text outlines natively in its ImageDraw.text() method.\nThe code # Here is a sample snippet to draw outline text:\nfrom PIL import Image, ImageFont, ImageDraw def main(): im = Image.new(\u0026#39;RGB\u0026#39;, (500, 500), (255, 255, 255)) text = \u0026#34;测试文字\u0026#34; font = ImageFont.truetype(font=\u0026#34;C:/WINDOWS/Fonts/STKAITI.TTF\u0026#34;, size=70) drawer = ImageDraw.Draw(im) fill_color = (255, 0, 0) stroke_color = (0, 0, 255) drawer.text((50, 10), text, font=font, fill=fill_color, stroke_width=1, stroke_fill=stroke_color) drawer.text((50, 80), text, font=font, fill=fill_color, stroke_width=3, stroke_fill=stroke_color) drawer.text((50, 150), text, font=font, fill=fill_color, stroke_width=5, stroke_fill=stroke_color) drawer.text((50, 220), text, font=font, fill=fill_color, stroke_width=7, stroke_fill=stroke_color) im.show(\u0026#34;text-image\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: main() The parameter stroke_width controls the width of outline, and stroke_fill controls the outline color.\nThe above script will create an image like the title image.\nNote that you must specify both stroke_width and stroke_fill when creating outline text. If stroke_fill is omitted, it will default to text fill color, which will create terrible and illegible text on the image.\nReferences # How can I draw text with different stroke and fill colors on images with python? Pillow 6.2 release note ","date":"18 August 2020","externalUrl":null,"permalink":"/2020/08/18/pillow_create_text_outline/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-04-12: add warning about dangers of omitting stroke_fill parameter.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20200818221311.png\" width=\"400\"\u003e\n\u003c/p\u003e\n\u003cp\u003eSometimes, we may want to add outline color to text strokes with Pillow.\nPrior to version 6.2.0, we can not do this in Pillow.\nFortunately, starting from version 6.2.0, pillow supports text outlines natively in its \u003ca href=\"https://pillow.readthedocs.io/en/stable/reference/ImageDraw.html#PIL.ImageDraw.ImageDraw.text\" target=\"_blank\"\u003e\u003ccode\u003eImageDraw.text()\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e","title":"Create Outline Text in Python with Pillow","type":"posts"},{"content":"Warmup is a training technique often used in training deep neural networks. In this post, I will try to explain what is warmup, and how does it work.\nWarmup was originally proposed in this paper: Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour. It gives a good explanation on why warmup is needed, and explains different strategies of warmup.\nWhy do we need warmup # Suppose that we use learning rate $\\eta$ on a single GPU with batch size $n$, when we train the network on 8 GPUs, now the batch size becomes $8n$. The learning rate also needs to change to suit the distributed training scenario. The author find that in practice, the linear scaling of learning rate works pretty well. For example, when we use initial learning rate 0.01 for one GPU, we may use an initial learning rate of 0.08 for distributed training, i.e., 0.01*8.\nHowever, to use linear scaling of learning rate, certain condition have to be met1. On the initial training stage, due to the rapid change of network parameters, the condition that makes linear scaling work does not hold any more. So, in the initial training stage, the authors propose warmup to tackle this issue.\nThe basic idea is that we should use a small learning rate than the value calculated by linear scaling policy. There are two strategies for warmup:\nconstant: Use a low learning rate than 0.08 for the initial few epochs. gradual: In the first few epochs, the learning rate is set to be lower than 0.08 and increased gradually to approach 0.08 as epoch number increases. In maskrcnn, a linear warmup strategy is used for control warmup factor in the initial learning stage. After the warmup epochs, the learning rate strategy would return to normal. You can change the learning rate based on the task at hand.\nWarmup applications # Warmup in ResNet # In Deep residual learning, when training a 110-layer ResNet on CIFAR-10 (section 4.2), the authors used constant warmup to ease the initial training iterations:\nIn this case, we find that the initial learning rate of 0.1 is slightly too large to start converging. So we use 0.01 to warm up the training until the training error is below 80% (about 400 iterations), and then go back to 0.1 and continue training.\nHow does linear warmup work in maskrcnn # In maskrcnn-benchmark, there is some config parameters about warmup in solver (WARMUP_FACTOR, WARMUP_ITERS, WARMUP_METHOD). The warmup method used by maskrcnn-benchmark can be found here:\ndef get_lr(self): warmup_factor = 1 if self.last_epoch \u0026lt; self.warmup_iters: if self.warmup_method == \u0026#34;constant\u0026#34;: warmup_factor = self.warmup_factor elif self.warmup_method == \u0026#34;linear\u0026#34;: alpha = float(self.last_epoch) / self.warmup_iters warmup_factor = self.warmup_factor * (1 - alpha) + alpha return [ base_lr * warmup_factor * self.gamma ** bisect_right(self.milestones, self.last_epoch) for base_lr in self.base_lrs ] In the above code, self.last_epoch is the current training iteration (because maskrcnn-benchmark use iteration instead of the usual epoch to measure the training process). self.warmup_iters is the number of iterations for warmup in the initial training stage. self.warmup_factors are a constant (0.333 in this case).\nOnly when current iteration number is below self.warmup_iters, will the warmup_factor be used. Otherwise, it will be 1 and not affect the learning rate.\nWhen current iteration is below warmup_iters and warmup method is linear. The warmup factor used is calculated as follows:\nwarmp_factor = 0.667 * (current_iter/warmup_iters) + 0.333 So as current iteration approaches warmup_iters, warmup_factor will gradually approach 1. As a result, the learning rate used will approach base learning rate.\nReferences # How the learning rate change? Discussions about warmup policy see section 2.1 of the paper for details.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 August 2020","externalUrl":null,"permalink":"/2020/08/14/warmup_maskrcnn_how_does_it_work/","section":"Posts","summary":"\u003cp\u003eWarmup is a training technique often used in training deep neural networks.\nIn this post, I will try to explain what is warmup, and how does it work.\u003c/p\u003e","title":"The Warmup Trick for Training Deep Neural Networks","type":"posts"},{"content":"MIUI 12 更新以后，新增了更加细致的权限管理和隐私保护功能。\n前几天尝试关闭了所有 APP 不该需要的功能。结果发现讯飞输入法复制文本，粘贴文本的功能无法使用了。\n例如，在浏览器里面，使用输入法的复制功能，然后进入微信粘贴，发现文本并没有被粘贴下来。在权限管理里，打开讯飞输入法访问剪切板的权限，仍然无法复制文本。\n在 v2ex 上发帖询问，有人提醒，是不是没有打开浏览器的访问剪切板的权限。我试着打开浏览器的剪切板权限，果然可以正常复制粘贴文本。但是对于没有给予访问剪切板权限的应用，在里面仍然无法复制文本到剪切板（需要我们单独给每个应用加上权限）。不清楚为什么输入法从应用里面复制文本，为什么需要应用也获取访问剪切板的权限，我的理解是只需要输入法有访问剪切板的权限，获取文本以后直接把文本写入到系统的剪切板上，看来实际上并不是这样的过程。\n","date":"6 August 2020","externalUrl":null,"permalink":"/2020/08/06/miui12_clipboard_issue/","section":"Posts","summary":"\u003cp\u003eMIUI 12 更新以后，新增了更加细致的权限管理和隐私保护功能。\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20200806235442.jpeg\" width=\"200\"\u003e\n\u003c/p\u003e","title":"MIUI 12 输入法无法复制文本到剪切板","type":"posts"},{"content":" Relationship between point and pixel size # In digital typography, the size of text is commonly specified in points (pt). What is a point? A point is 1/72 of an inch (25.4 mm), i.e., 0.3528 mm (25.4/72). Therefor, point is a physical unit that has absolute value.\nPixels are the smallest unit on screen to display images and graphics. It is not a physical unit. So there is no fixed relationship between point and pixel.\nppi # Their relationship depends on the ppi (pixel per inch), A.K.A., pixel density.\nHow do we calculate ppi? It is simple. We need screen resolution and screen size. Screen resolution refers to how many pixels are there for its width and height. Ppi is equal to diagonal pixel number divided by screen size in inches. Here, we use pixel number in diagonal direction because the screen size are commonly measured diagonally (see here).\nTake the iPhone 11 for an example. According to wikipedia:\nThe iPhone 11 has a 6.1 in (15.5 cm) IPS LCD, unlike the Pro models which have OLED displays.\nThe resolution is 1792 × 828 pixels (1.5 megapixels at 326 ppi) with a maximum brightness of 625 nits and a 1400:1 contrast ratio.\nSo the screen ppi of iPhone 11 is:\nsqrt(1792*1792 + 828*828)/6.1 = 323.6 which is pretty close to the provided ppi value. There is also online tools to help us calculate the ppi values.\nOnce we know ppi value of a device, we can then know the relationship between point and pixel:\npixel = point/72 * ppi Ref:\nhttps://graphicdesign.stackexchange.com/q/199/113389 font size in pixels https://www.onlineprinters.co.uk/magazine/font-sizes/ font size for web design # It seems that for web design, there is another set of specification. There is relationship between pt and px. But px here is not referring to pixels in the digital device (computer screens for example). It is called CSS reference pixel. Since I am not a web developer right now, I will not dive too deep into this topic.\nRef:\nhttps://webplatform.github.io/docs/tutorials/understanding-css-units/ ","date":"4 August 2020","externalUrl":null,"permalink":"/2020/08/04/fontsize_point_pixel_relationship/","section":"Posts","summary":"Relationship between point and pixel size # In digital typography, the size of text is commonly specified in points (pt). What is a point? A point is 1/72 of an inch (25.4 mm), i.e., 0.3528 mm (25.4/72). Therefor, point is a physical unit that has absolute value.\nPixels are the smallest unit on screen to display images and graphics. It is not a physical unit. So there is no fixed relationship between point and pixel.","title":"Note on font size","type":"posts"},{"content":"","date":"29 July 2020","externalUrl":null,"permalink":"/tags/anaconda/","section":"Tags","summary":"","title":"Anaconda","type":"tags"},{"content":"I am using pip installed via minconda. I installed it under ~/miniconda3 and then move the installation directory to ~/tools/miniconda3. After that, I changed the PATH accordingly. However, when I use pip, I am seeing the following error:\n/home/jdhao/miniconda3/bin/python: bad interpreter: No such file or directory\nthis is because the executable pip under ~/tools/miniconda3/bin/ is actually a Python source file. Its first line is a shebang:\n#!/home/jdhao/miniconda3/bin/python\nand it still points to the old Python that is no longer there. Hence, the error message.\nA simple solution is to remove miniconda3 directory and install it again.\nRef:\nhttps://docs.anaconda.com/anaconda/user-guide/tasks/move-directory/ ","date":"29 July 2020","externalUrl":null,"permalink":"/2020/07/29/pip_bad_interpreter/","section":"Posts","summary":"\u003cp\u003eI am using pip installed via \u003ca href=\"https://docs.conda.io/en/latest/miniconda.html\" target=\"_blank\"\u003eminconda\u003c/a\u003e. I installed it\nunder \u003ccode\u003e~/miniconda3\u003c/code\u003e and then move the installation directory to\n\u003ccode\u003e~/tools/miniconda3\u003c/code\u003e. After that, I changed the \u003ccode\u003ePATH\u003c/code\u003e accordingly. However,\nwhen I use pip, I am seeing the following error:\u003c/p\u003e","title":"pip bad interpreter issue","type":"posts"},{"content":"One way to achieve parallelism is to use multi-processing, where we can execute tasks in different cores of the CPU to reduce the total processing time. Python provides the multiprocessing package to facilitate this.\nThis post summarizes some of the questions I have when I learn to use multiprocessing in Python.\nHow many processes should we use? # For CPU-bound tasks, set the process number to the number of CPU cores is perhaps appropriate. To get the number of CPUs in your system:\nimport multiprocessing as mp print(mp.cpu_count()) However, the time to complete our task will stop decreasing when the number of processes reach a certain number due to other factors. So it is a good idea to do some benchmark to find the optimal number of processes to use.\nRef:\nHow many processes should I run in parallel? Python multiprocessing\u0026rsquo;s Pool process limit Do I need to use pool.close() and pool.join() after finishing my tasks? # pool.close() makes sure that process pool does not accept new processes, and pool.join() waits for the processes to properly finish their work and return. So it is a good idea to use pool.close() and pool.join() explicitly.\nOtherwise, the processes may not be released properly. In our application, we have seen error related to memory usage:\nOSError: [Errno 12] Cannot allocate memory\nRef:\nhttps://stackoverflow.com/q/35708371/6064933 Python cannot allocate memory using multiprocessing.pool: https://stackoverflow.com/q/26717120/6064933 Difference between pool.map() and pool.map_aysnc()? # pool.map is blocking until it gets the actual results, that is, it will block the execution of code until it gets all the result from the processes. pool.map_async, on the other hand, is non-blocking and will return immediately and all we get is an AsyncResult object. To get the actual result, we use result.get() to retrieve them. To illustrate their differences:\nimport multiprocessing as mp def toy(x): print(\u0026#34;function gets executed.\u0026#34;) return x*x def main(): p = mp.Pool() result = p.map(toy, [1]) print(\u0026#34;after p.map\u0026#34;) print(result) res = p.map_async(toy, [1]) print(\u0026#34;after p.map_async()\u0026#34;) print(res.get()) if __name__ == \u0026#34;__main__\u0026#34;: main() If you use p.map(), you will see the following result:\nfunction gets executed. after p.map() [1] This is because p.map() is blocking. So the statement following it won\u0026rsquo;t be executed if p.map() hasn\u0026rsquo;t got the results back.\nUnlike p.map, p.map_async is non-blocking. The output for second part of the code is:\nafter p.map_async() function gets executed. [1] That is because p.map_async will not wait for the function to be executed and returned. So you see the output after p.map_async() first. Then you see function gets executed..\nmultiprocessing.Pool: When to use apply, apply_async or map? pool.map() without argument? # The function pool.map() is used to feed the element of an iterable to a function one by one. We can not use it to run functions without argument. However, we may change the function to accept an argument and ignore that argument. Or we can write a wrap function to accept argument and invoke the original function in the wrap function.\nimport multiprocessing as mp def f(): print(\u0026#34;function without argument\u0026#34;) def wrap_func(x): f() p = mp.Pool() p.map(wrap_func, range(10)) Ref:\nhttps://stackoverflow.com/q/27689834/6064933 functions with multiple arguments? # pool.map() can only execute functions that accept one argument, to run a function that accepts multiple arguments, we can use pool.starmap():\nimport multiprocessing as mp def func(x, y): return x * y p = mp.Pool() l1 = range(1, 10) l2 = range(10, 19) res = p.starmap(func, zip(l1, l2)) print(res) If the other parameters of the function are constants, it may be convenient to use partial functions instead:\nfrom functools import partial l1 = range(1, 10) # If one of the parameters is constant. partial_func = partial(func, y=2) res = p.map(partial_func, l1) print(res) ","date":"27 July 2020","externalUrl":null,"permalink":"/2020/07/27/python_multiprocessing/","section":"Posts","summary":"\u003cp\u003eOne way to achieve parallelism is to use multi-processing, where we can\nexecute tasks in different cores of the CPU to reduce the total processing\ntime. Python provides the \u003ca href=\"https://docs.python.org/3/library/multiprocessing.html\" target=\"_blank\"\u003emultiprocessing\u003c/a\u003e package to facilitate this.\u003c/p\u003e\n\u003cp\u003eThis post summarizes some of the questions I have when I learn to use\nmultiprocessing in Python.\u003c/p\u003e","title":"Using Multiprocessing in Python","type":"posts"},{"content":"A list of Linux command for common operations.\nGenerate fixed width numbers with leading zeros # We can use seq command to generate number of fixed width (padded with leading zeros). For example, to generate number 1 to 999, with width 4 and padded with leading zeros, we can use the following command:\nseq -f \u0026#34;%04g\u0026#34; 1 999 Ref:\nRange with leading zero in bash How to zero pad a sequence of integers in bash so that all have the same width? Split large files into fixed size part # We can use split command to split large files into fixed size parts:\nsplit [options] zip_file prefix For example, to split test.zip into smaller size with each part exactly 4000m, we can use the following command:\nsplit -d -b 4000m test.zip test The -d option will ensure that numeric indexing is used for the split parts, test is the prefix we use for each part. The generated files are like:\ntest00, test01, test02, ..., test10, ... Ref:\nSplit files using tar, gz, zip, or bzip2 Copy a directory to another directory and show progress # During copy of large files, it is nice to show the progress of copying., we can use rsync to copy a directory to another directory and show progress:\nrsync -ah --progress src dest Since rsync version 3.1.0, we can also use the following options:\nrsync -ah --info=progress2 src dest The progress shown is not the overall progress, it is just the progress for a single file. Nonetheless, it is better than nothing and shows that something is being copied.\nNote in the above, there is not slash / after src, which makes sure that src is copied as dest/src with all its structures. If you want to copy all files and folders under src to dest and do not create src directory under dest, you can add a slash after src:\nrsync -ah --progress src/ dest Ref:\nHow to rsync a directory to a new directory with different name? How can I view a progress bar when running rsync? rsync -r to existing folder Showing total progress in rsync: is it possible? Move all files and subdirectories to a directory except one # Suppose I am at a certain directory and want to move all the files and sub-directories to a directory except one file (test.jpg). We can use the following command to achieve what we want:\n\\ls | \\grep -v test.jpg |xargs -I{} mv {} other_directory/ Note that in the above command we use backslashed version of ls and grep command to avoid any command alias, because the command alias may cause the failure of the above command.\nRef:\nRun command shadowed by an alias. Mv all files except one. zip all files under a directory without the directory itself? # If we have a test folder under which there are a lot of files and directories. If we use the following zip command to compress the directory:\nzip test.zip -r test/ this will add one more level of folder structures. We get the following:\n--\u0026gt; test --\u0026gt; test --\u0026gt; all files and folders under original test folder The original test folder is also included in the zipped file. To avoid this, we can use the following command:\ncd test \u0026amp;\u0026amp; zip -r ../test.zip . If there are no directories under test or we do not care about directory structure under test, we can also use the -j option:\nzip test.zip -j -r test/ The above command will flatten all files under test recursively into one directory, which may not be what you want, especally when there are same name filder under different child directories.\nRef:\nZip the contents of a folder without including the folder itself Zip an archive without including parent directory ","date":"23 July 2020","externalUrl":null,"permalink":"/2020/07/23/linux_command_cheat_sheet_s2/","section":"Posts","summary":"\u003cp\u003eA list of Linux command for common operations.\u003c/p\u003e","title":"Linux Tips and Tricks -- s2","type":"posts"},{"content":"I found a strange issue when I wanted to get the value of an env variable from Python script.\nTo reproduce, we can first set the value of FOO in the Bash shell:\n$ FOO=123 Then execute the following python command:\n$ python -c \u0026#34;import os; print(os.getenv(\u0026#39;FOO\u0026#39;, \u0026#34;None\u0026#34;))\u0026#34; The output is None. So the python process can not see the variable FOO. However, if we run the two command in one line:\n$ FOO=123 python -c \u0026#34;import os; print(os.getenv(\u0026#39;FOO\u0026#39;, \u0026#34;None\u0026#34;))\u0026#34; The output will be 123.\nIf we use export FOO=123 instead of FOO=123, we can also get the value of FOO in Python.\nBut why? What is the difference here? This is in fact a bit complexer than what I think.\nBash built-in and external commands # First, we need to know that, when Bash executes commands, it treats the built-in and external commands differently. Built-in commands are those that are, literally, built into the Bash executable. External commands are those commands that are not part of the Bash shell.\nWhen Bash executes built-in commands, it does not create a new process. When it executes external commands, it will create a new shell and then execute the external commands. The new shell will inherit the environment variables of its parent shell (see here on why Bash needs to create a new process to execute an external command).\nHow do we check if a command is a Bash builtin or an external command?\nFirst, we can check the output of help, it will list all Bash built-in commands. We can also use the type command to check if a command is a built-in command:\ntype -t some_command For built-in commands, it will output builtin. For external commands, it will output different info, for example, file (see help type for more info).\nRef:\nhttps://www.theunixschool.com/2012/03/internal-vs-external-commands.html Check if a command is builtin. How does shell execute commands. https://linuxconfig.org/internal-vs-external-linux-shell-commands When will variable value be available in a process? # If we define variable without using export, it is not part of the environment variable. When Bash create a new process, this variable will not be available there.\nOne exception is that if you set the variable and run the command in the same line, it will be available only to that command. From the Bash manual:\nThe environment for any simple command or function may be augmented temporarily by prefixing it with parameter assignments, as described in Shell Parameters. These assignment statements affect only the environment seen by that command.\nIf a variable is not exported, it is only a shell variable. When it is exported, it is an environment variable that will be available in all subprocesses.\nRef:\nDefining a variable with or without export. Bash: difference between “export k=1” vs. “k=1”. Difference between shell variables which are exported and those which are not in bash Difference between “a=b” and “export a=b” in bash Back to the issue # Now with sufficient background knowledge on how Bash works, we are able to understand why certain ways work or fail.\n# Fails $ FOO=123 $ python -c \u0026#34;import os; print(os.getenv(\u0026#39;FOO\u0026#39;, \u0026#34;None\u0026#34;))\u0026#34; The above way to get the value of FOO fails, because python is an external command for Bash. Bash will execute python in a new process. However, FOO defined via FOO=123 is only available in the shell that invoking python command, not the sub-process (also a Bash shell) that actually run python command.\n# work $ FOO=123 python -c \u0026#34;import os; print(os.getenv(\u0026#39;FOO\u0026#39;, \u0026#34;None\u0026#34;))\u0026#34; The above way works because the variable definition is in the same line with python command. It will be available temporily for this command. If you execute python -c \u0026quot;import os; print(os.getenv('FOO', \u0026quot;None\u0026quot;)) in a second line, it will not work any more.\n$ export FOO=123 $ python -c \u0026#34;import os; print(os.getenv(\u0026#39;FOO\u0026#39;, \u0026#34;None\u0026#34;))\u0026#34; This way also works because we set an environment variable FOO via export. So FOO will be available to all subprocesses created by this shell.\nReferences # python - os.getenv and os.environ don\u0026rsquo;t see environment variables of my Bash shell. Why can\u0026rsquo;t Python see environment variables. ","date":"15 July 2020","externalUrl":null,"permalink":"/2020/07/15/python_can_got_env_variable_value/","section":"Posts","summary":"\u003cp\u003eI found a strange issue when I wanted to get the value of an env variable from\nPython script.\u003c/p\u003e","title":"Why Cannot I Get the Value of A Env Variable in Python?","type":"posts"},{"content":" How to check request header and body? # When making requests, we may want to see exactly what are being requested. With requests, it is easy do access the request header and request body:\nimport requests url = \u0026#34;http://httpbin.org/post\u0026#34; payload = {\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.com/demo.jpg\u0026#34;} r = requests.post(url, json=payload) print(f\u0026#34;request headers: {r.request.headers}\u0026#34;) print(f\u0026#34;request body: {r.request.body}\u0026#34;) A sample output is:\nrequest headers: {\u0026#39;User-Agent\u0026#39;: \u0026#39;python-requests/2.19.1\u0026#39;, \u0026#39;Accept-Encoding\u0026#39;: \u0026#39;gzip, deflate\u0026#39;, \u0026#39;Accept\u0026#39;: \u0026#39;*/*\u0026#39;, \u0026#39;Connection\u0026#39;: \u0026#39;keep-alive\u0026#39;, \u0026#39;Content-Length\u0026#39;: \u0026#39;69\u0026#39;, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;} request body: b\u0026#39;{\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.com/demo.jpg\u0026#34;}\u0026#39; Ref:\nHow to display body and headers before sending POST request? How can I see the entire HTTP request that\u0026rsquo;s being sent by my Python application? How to encode JSON when using application/x-www-form-urlencoded? # When making requests using json data in requests.post(url, data=json_dict), the Content-Type is application/x-www-form-urlencoded. How is JSON encoded by requests?\nIn requests, this is handled by class RequestEncodingMixin, it provides _encode_params() method to convert provided into url-encoded string (JSON is converted to query string and some characters are escaped). Under the hood, it is using urllib.parse.urlencode() to encode the json data.\nurl = \u0026#34;http://httpbin.org/post\u0026#34; payload = {\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.com/demo.jpg\u0026#34;} r = requests.post(url, data=payload) print(f\u0026#34;request body: {r.request.body}\u0026#34;) The request body is:\napple=10\u0026amp;pear=20\u0026amp;pear=30\u0026amp;img=http%3A%2F%2Fexample.com%2Fdemo.jpg We can also encode JSON directly using urllib:\nimport urllib payload = {\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.com/demo.jpg\u0026#34;} print(urllib.parse.urlencode(payload, doseq=True)) The encoded string is the same.\nRef:\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST Python requests module: urlencoding json data Set up max retries # When we use requests to request a URL, we may sometimes get \u0026ldquo;max retried exceed\u0026rdquo; errors due to various causes such as unstable network or frequent request.\nWe can add retry features using requests to increase the chance of successful request:\nfrom requests.adapters HTTPAdapter from requests.packages.urllib3.util.retry import Retry session = requests.Session() retry_strategy = Retry(total=2) adapter = HTTPAdapter(max_retries=retry_strategy) session.mount(\u0026#34;http://\u0026#34;, adapter) session.mount(\u0026#34;https://\u0026#34;, adapter) r = session.get(url) In the above code, we first set the parameter max_retries for HTTPAdapter, which can be a simple number or a Retry object from the urllib3 package.\nThen we change the original adapter used by session by using the mount() method. The first parameter is the URL prefix for a certain adapter: when the URL matches the prefix, the corresponding adapter will be used by requests session.\nRef:\nMax retries exceeded with URL in requests ","date":"9 July 2020","externalUrl":null,"permalink":"/2020/07/09/requests_notes/","section":"Posts","summary":"How to check request header and body? # When making requests, we may want to see exactly what are being requested. With requests, it is easy do access the request header and request body:\nimport requests url = \u0026#34;http://httpbin.org/post\u0026#34; payload = {\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.com/demo.jpg\u0026#34;} r = requests.post(url, json=payload) print(f\u0026#34;request headers: {r.request.headers}\u0026#34;) print(f\u0026#34;request body: {r.request.body}\u0026#34;) A sample output is:\nrequest headers: {\u0026#39;User-Agent\u0026#39;: \u0026#39;python-requests/2.19.1\u0026#39;, \u0026#39;Accept-Encoding\u0026#39;: \u0026#39;gzip, deflate\u0026#39;, \u0026#39;Accept\u0026#39;: \u0026#39;*/*\u0026#39;, \u0026#39;Connection\u0026#39;: \u0026#39;keep-alive\u0026#39;, \u0026#39;Content-Length\u0026#39;: \u0026#39;69\u0026#39;, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;} request body: b\u0026#39;{\u0026#34;apple\u0026#34;: 10, \u0026#34;pear\u0026#34;: [20, 30], \u0026#34;img\u0026#34;: \u0026#34;http://example.","title":"Note on Using requests package","type":"posts"},{"content":"In this post, I will share how PyTorch set the number of the threads to use for its operations.\ntorch.set_num_threads() is used to set the number of threads used for intra operations on CPU. According to discussions here, intra operation roughly means operations executed within an operation, for example, for matrix multiplication. By default, pytorch will use all the available cores on the computer, to verify this, we can use torch.get_num_threads() get the default threads number.\nFor operations supporting parallelism, increase the number of threads will usually leads to faster execution on CPU. Apart from setting the number of threads via torch.set_num_threads, we can also set the env variable OMP_NUM_THREADS or MKL_NUM_THREADS to set the number of threads. Below is a toy script to verify this (adapted from code here):\nimport time import numpy as np import torch INDEX = 10000 NELE = 1000 a = torch.rand(INDEX, NELE) index = np.random.randint(INDEX-1, size=INDEX*8) b = torch.from_numpy(index) start = time.time() for _ in range(10): res = a.index_select(0, b) print(\u0026#34;the number of cpu threads: {}, time: {}\u0026#34;.format(torch.get_num_threads(), time.time()-start)) Setting OM_NUM_THREADS to 1, 2, 4, 8, the running time is:\nthe number of cpu threads: 1, time: 2.927994728088379 the number of cpu threads: 2, time: 1.6809608936309814 the number of cpu threads: 4, time: 1.092754602432251 the number of cpu threads: 8, time: 0.7028472423553467 References # Set env variable to control the num of threads pytorch uses may not always work. https://github.com/pytorch/pytorch/issues/3146 https://github.com/pytorch/pytorch/issues/975 https://pytorch.org/docs/stable/notes/cpu_threading_torchscript_inference.html Meaning of inter_op_parallelism_threads and intra_op_parallelism_threads https://github.com/pytorch/pytorch/issues/19002 https://github.com/pytorch/pytorch/issues/19001 ","date":"6 July 2020","externalUrl":null,"permalink":"/2020/07/06/pytorch_set_num_threads/","section":"Posts","summary":"\u003cp\u003eIn this post, I will share how PyTorch set the number of the threads to use for\nits operations.\u003c/p\u003e","title":"Set the Number of Threads to Use in PyTorch","type":"posts"},{"content":"","date":"6 July 2020","externalUrl":null,"permalink":"/tags/thread/","section":"Tags","summary":"","title":"Thread","type":"tags"},{"content":"在实际编程中，我们总会遇到各种各样的代码运行问题，如何快速发现问题的根源需要一些系统的方法，构造一个最小的能够复现错误的环境至关重要，也就是所谓的 MWE，minimal working example。\n为什么 MWE 很重要？因为通过构造MWE，我们能不断缩小问题的范围，定位问题的根源，而不是表面的现象，例如代码在 Linux 上运行错误，我们不能把代码错误归结为操作系统原因，这个范围太庞大，无助于解决问题。另外，通过构造 MWE，在这个过程中，我们可能靠自己就能解决问题，即使解决不了问题，在 stackoverflow 或者 github 上提供 MWE，也更有可能得到别人的回复。\n如果是一个很大的项目，有时候很难找到具体出错位置，可以根据报错的信息，在代码中加入 log 打印，这样可以大致锁定出错的位置。\n锁定出错的位置以后，需要新建一个 toy 项目，这个项目应该用最少的，最简单的代码来尝试复现问题，代码越简单，越容易找到问题的本质。通常我们还需要引用一些库或者安装一些程序，要保持这些引用或者安装在最小的程度，足够复现问题即可。\n一旦确定了表面问题，可以试着把出现问题的代码注释，或者换一种写法，看问题是否还会出现，进一步确定问题根源。另外，有的时候，可能是代码和库的版本配合问题，对于 Python，用的哪个版本的 Python 影响比较大，可以尝试更换版本，观察问题是否仍然存在。通常确定问题根源的过程需要反复尝试，才能最终确定 bug 的根源。\n通过不断缩小问题范围，通常能很快定位到问题根源，看似“浪费”了很多时间来复现 bug，综合算起来还是节省了时间，避免大量无头苍蝇式的尝试。\n","date":"5 July 2020","externalUrl":null,"permalink":"/2020/07/05/how_to_find_casue_of_technical_issues/","section":"Posts","summary":"\u003cp\u003e在实际编程中，我们总会遇到各种各样的代码运行问题，如何快速发现问题的根源需要一些系统的方法，构造一个最小的能够复现错误的环境至关重要，也就是所谓的 \u003ca href=\"https://stackoverflow.com/help/minimal-reproducible-example\" target=\"_blank\"\u003eMWE\u003c/a\u003e，minimal working example。\u003c/p\u003e","title":"如何找到技术问题根源？","type":"posts"},{"content":"To build different projects, we may need to install different versions of the same software. To use a specific version, we may need to create a sym link to that version of the executable.\nOn Ubuntu, we can also alleviate the issue of switching command versions with update-alternatives.\nOne of the most common tool that needs multiple versions is GCC. On Ubuntu 18.04, the default GCC version is 7.4.0. However, sometimes, we also need to use older GCC such as gcc-4.8. The GCC toolset will install several executables under /usr/bin/, such as gcc-4.8, g++-4.8, among others.\nIf we want the command gcc to point to /usr/bin/gcc-4.8, we often want g++ to point to /usr/bin/g++-4.8. Using symlinks to manage version switch is not convenient in this case, since we need to create two or more symlinks. If we want to switch back to GCC 7.4, we then need to remove the old symlinks and create new ones, which is cumbersome.\nupdate-alternatives provides what is called master and slave alternatives, where if you change the master symlink, the slave symlinks will also get changed automatically. The syntax is:\nupdate-alternatives --install link name path priority [--slave link name path] link is the generic name used to invoke a command, for example, /usr/bin/gcc. name is the alternative name used under the alternative directory (which is usually /etc/alternatives), for example, gcc. path is the actual path to a specific version, e.g., /usr/bin/gcc-4.8. priority is a score given to this alternative. If you have several alternatives for a command, the one with the highest priority will be used. The link after --install is the master link.\nThe format for --slave is the same as master link. You are allowed to add multiple slave links like this:\nupdate-alternatives --install link name path priority --slave link1 name1 path1 --slave link2 name2 path2 For GCC, we can use the following command to add two alternatives:\nupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 10 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8 update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 20 --slave /usr/bin/g++ g++ /usr/bin/g++-7 So by default, GCC 7.4 will be used. In order to switch to another versions, we can run the following command:\nupdate-alternatives --config gcc You will be prompted to choose an alternative from a list of alternatives. After that, the gcc and g++ version will be switched to the version you want.\nThe alternatives work like this. /usr/bin/gcc will point to /etc/alternatives/gcc, which in turn points to the real command /usr/bin/gcc-7 or /usr/bin/gcc-4.8 depending on which alternative you choose. So when you change the alternative, you are changing the mapping from /etc/alternatives/gcc to the actual executables.\nReferences # how to use “update-alternatives” to manage multiple installed version of the same app? How to choose the default gcc and g++ version? https://bitmingw.com/2019/08/28/ubuntu-update-alternatives/ ","date":"2 July 2020","externalUrl":null,"permalink":"/2020/07/02/ubuntu_update_alternatives/","section":"Posts","summary":"\u003cp\u003eTo build different projects, we may need to install different versions of the\nsame software. To use a specific version, we may need to create a sym link to\nthat version of the executable.\u003c/p\u003e","title":"Switch Command with update-alternatives on Ubuntu","type":"posts"},{"content":"My notes on several issues when installing and running uWSGI.\npip install uwsgi error # When I try to install uwsgi using pip, there are compilation errors. After some search, based on discussions here, I find the cause of this issue is that the version of gcc is too high. I am using Ubuntu 18.04, and the default gcc version is 7.4.0.\nBased on this post, the minimum gcc we can install from the default Ubuntu 18.04 remote repo is gcc-4.8. There is no gcc-4.7 available for install. It turns out that gcc-4.8 works fine:\napt-get update \u0026amp;\u0026amp; apt-get install gcc-4.8 g++-4.8 Then we need to change the gcc command to point to gcc-4.8:\nrm /usr/bin/gcc \u0026amp;\u0026amp; ln -s /usr/bin/gcc-4.8 /usr/bin/gcc After that, I can install uwsgi successfully using pip. Finally, let\u0026rsquo;s revert the gcc version to its old state:\nrm /usr/bin/gcc \u0026amp;\u0026amp; ln -s /usr/bin/gcc-7 /usr/bin/gcc uwsgi can not find shared object # I use the following command to install uwsgi with conda:\nconda create -n py36 -c conda-forge python==3.6.5 uwsgi When I run uwsgi --version, I see the following error message:\nerror while loading shared libraries: libicui18n.so.58: cannot open shared object file: No such file or directory\nThe solution is to run conda install icu=58, ref here.\nuwsgi segmentation fault # I am using uwsgi 2.0.18 (installed via conda install -c conda-forge uwsgi) with python 3.7.7 from Miniconda. When I use uwsgi to server a simple Flask application, I see segmentation errors below:\nuwsgi(uwsgi_backtrace+0x2c) [0x5638f8685bbc] uwsgi(uwsgi_segfault+0x32) [0x5638f8685ff2] /lib/x86_64-linux-gnu/libc.so.6(+0x3ef20) [0x7f8c09c22f20] /opt/miniconda/lib/python3.7/lib-dynload/_queue.cpython-37m-x86_64-linux-gnu.so(+0x2932) [0x7f8c07fe9932] uwsgi(_PyDict_DelItem_KnownHash+0x36b) [0x5638f860ec1b] uwsgi(_PyEval_EvalFrameDefault+0x2510) [0x5638f85a1680] uwsgi(_PyEval_EvalCodeWithName+0x2f9) [0x5638f862abc9] uwsgi(_PyFunction_FastCallDict+0x1d7) [0x5638f86045a7] uwsgi(+0x1ed7a3) [0x5638f86057a3] uwsgi(PyObject_CallFunctionObjArgs+0x99) [0x5638f8605a09] uwsgi(PyObject_ClearWeakRefs+0x33c) [0x5638f86010fc] uwsgi(+0x1a638c) [0x5638f85be38c] uwsgi(+0x1b9a27) [0x5638f85d1a27] uwsgi(+0x1f70b8) [0x5638f860f0b8] uwsgi(+0x1a6435) [0x5638f85be435] uwsgi(_PyFunction_FastCallKeywords+0x290) [0x5638f8604020] uwsgi(_PyEval_EvalFrameDefault+0x40a) [0x5638f859f57a] uwsgi(_PyFunction_FastCallDict+0x10b) [0x5638f86044db] uwsgi(_PyEval_EvalFrameDefault+0x1e1d) [0x5638f85a0f8d] uwsgi(_PyFunction_FastCallKeywords+0xfb) [0x5638f8603e8b] uwsgi(_PyEval_EvalFrameDefault+0x6d4) [0x5638f859f844] uwsgi(_PyFunction_FastCallKeywords+0xfb) [0x5638f8603e8b] uwsgi(_PyEval_EvalFrameDefault+0x6d4) [0x5638f859f844] uwsgi(_PyFunction_FastCallKeywords+0xfb) [0x5638f8603e8b] uwsgi(_PyEval_EvalFrameDefault+0x6d4) [0x5638f859f844] uwsgi(_PyFunction_FastCallDict+0x10b) [0x5638f86044db] uwsgi(_PyObject_Call_Prepend+0x63) [0x5638f86054b3] uwsgi(+0x1b56fa) [0x5638f85cd6fa] uwsgi(PyObject_Call+0x6b) [0x5638f8604bdb] uwsgi(python_call+0x12) [0x5638f869ffa2] uwsgi(uwsgi_request_wsgi+0x266) [0x5638f86a2556] uwsgi(wsgi_req_recv+0xa7) [0x5638f8633557] uwsgi(simple_loop_run+0xd1) [0x5638f8681521] uwsgi(simple_loop+0x11) [0x5638f8681301] uwsgi(uwsgi_ignition+0x315) [0x5638f8686395] uwsgi(uwsgi_worker_run+0x2b4) [0x5638f868aef4] uwsgi(uwsgi_run+0x525) [0x5638f868b575] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7) [0x7f8c09c05b97] uwsgi(+0x21abed) [0x5638f8632bed] *** end of backtrace *** My MWE flask application:\nimport concurrent.futures from flask import Flask app = Flask(__name__) @app.route(\u0026#34;/toy\u0026#34;, methods=[\u0026#34;GET\u0026#34;]) def process_request(): results = do_concurrent() if not results: return \u0026#34;Fail.\u0026#34; return \u0026#34;Success\u0026#34; def simple_task(num): return 1 def do_concurrent(): dummy_list = list(range(100)) with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor: results = list(executor.map(simple_task, dummy_list)) return results The uwsgi command to run flask application:\nuwsgi --http 0.0.0.0:6012 --wsgi-file flask_demo.py --callable app --processes 1 --threads 1 The scrip to test this service:\nimport requests url = \u0026#34;http://0.0.0.0:6012/toy\u0026#34; r = requests.get(url, timeout=5) print(r) When I request the service, I see the above segmentation errors.\nIf I create a conda virtual env with python version 3.6:\nconda create -n py36 -c conda-forge python==3.6.5 uwsgi icu=58 flask run the service using uwsgi and request again, the error disappears.\nIf I do not use concurrent.futures, I see no errors both for python 3.7 and python 3.6. I am not knowledgeable enough to know the exact cause of this issue. It seems there is some compatibility issue with uwsgi, python version and concurrent package.\nsymbol not found on macOS # I am using Python 3.7 installed via Anaconda, and uWSGI is installed via pip. When I run my simple Flask application, I see the following error:\nImportError: dlopen(/Users/jdhao/anaconda3/lib/python3.7/lib-dynload/math.cpython-37m-darwin.so, 2): Symbol not found: _PyExc_MemoryErrorImportError: dlopen(/Users/jdhao/anaconda3/lib/python3.7/lib-dynload/math.cpython-37m-darwin.so, 2): Symbol not found: _PyExc_MemoryError Referenced from: /Users/jdhao/anaconda3/lib/python3.7/lib-dynload/math.cpython-37m-darwin.so Expected in: flat namespace This seems to be a compatibility issue between uWSGI and Anaconda python. There are two solutions:\nUninstall uWSGI installed via pip and install it using conda:\n# uWSGI is provided by the conda-forge channel conda install -c conda-forge uwsgi Using Python 3.6 with uWSGI. We can create a new virtual env with Python 3.6.5 and intall uWSGI inside.\nconda create -n py36 python==3.6.5 flask After that, activate the virtual env and install uWSGI inside:\nconda activate py36 pip install uwsgi ","date":"2 July 2020","externalUrl":null,"permalink":"/2020/07/02/uwsgi_install_use_issue/","section":"Posts","summary":"\u003cp\u003eMy notes on several issues when installing and running \u003ca href=\"https://uwsgi-docs.readthedocs.io/en/latest/\" target=\"_blank\"\u003euWSGI\u003c/a\u003e.\u003c/p\u003e","title":"uWSGI Install and Use Issues","type":"posts"},{"content":"In my previous post, I write about how to download an image from URL using requests. In this post, I want to share ways to make the download speed faster.\nVarious ways exist for downloading an image using the requests package.\nPersistent session or not? # There are two ways to make an HTTP request using requests:\nusing requests.get() using session.get() where session is a requests.Session() object. The difference is that with requests.get(), a new session object is created each time when we make a request. It means that each time we make the request, we need to establish a new TCP connection to the remote host. The connection is closed when we finish the request. Since establishing a connection to the server takes some time, downloading images using requests.get() causes extra overhead.\nWith session.get(), if we are making several requests to the same host, the connection will be reused so that no time is wasted re-establishing new connections. This is also known as HTTP persistent connection. In summary, using session will reduce the image download time.\nstream or not? # As said in the previous post, for large files, we may want to use stream parameter when making the request, which will reduce the memory overhead. So we have two ways to get the binary image from the response:\nusing response.content using response.raw.read() Benchmark # By combining session options and stream options, we have four different ways to download images using requests:\nr.raw with session r.content with session r.raw without session r.content without session In order to find which is faster, I have run a small benchmark. I combine concurrent.futures and requests to download several images concurrently using the above four different settings of requests. The complete code can be found here.\nAccording to benchmark result, using sessions is faster than requests without explicit sessions. For the stream option, using r.raw is generally faster than using r.content, but it is not always the case. If the image size not big enough, using either r.raw or r.content is fine.\nThe benefit of using explicit sessions is more apparent when we are downloading more images concurrently. On my Mac, when downing 20 images concurrently, I get the following result:\navg time (r.raw with session): 0.2751150131225586 avg time (r.content with session): 0.2750370740890503 avg time (r.raw no session): 1.5932393550872803 avg time (r.content no session): 0.8408806085586548 With 40 images, the output is:\navg time (r.raw with session): 0.3991949200630188 avg time (r.content with session): 0.42252095937728884 avg time (r.raw no session): 1.937515652179718 avg time (r.content no session): 1.912631618976593 Conclusion # From the above results, we can conclude that using requests with sessions will reduce image download time immensely.\nReferences # https://requests.readthedocs.io/en/master/user/advanced/ Difference between using requests.get() and requests.session().get()? Python 3 urllib Vs requests performance. ","date":"21 June 2020","externalUrl":null,"permalink":"/2020/06/21/faster_im_download_with_requests/","section":"Posts","summary":"\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2020/06/17/download_image_from_url_python/\" target=\"_blank\"\u003eprevious post\u003c/a\u003e,\nI write about how to download an image from URL using \u003ca href=\"https://github.com/psf/requests\" target=\"_blank\"\u003erequests\u003c/a\u003e.\nIn this post, I want to share ways to make the download speed faster.\u003c/p\u003e","title":"Downloading Images Faster with requests Sessions","type":"posts"},{"content":"IrfanView is a lightweight, fast and powerful image viewer for Windows. Here are some settings to make it more useful.\nAuto-jump to next file after deleting current one # By default, IrfanView will not jump to next image if you delete the current one. To enable this, click Options --\u0026gt; Properties/Settings... --\u0026gt; File Handling. Under the delete section, check the following box:\nJump to the next file after deleting/moving\nFit image to window size when viewing # When we are viewing images in a directory, it is annoying that window size changes as image sizes vary. To keep the window size and fit the image to window, go to View --\u0026gt; Display options (window mode) and choose Fit images to window.\nRef:\nhttps://irfanview-forum.de/showthread.php?t=11273 Do not exit program when pressing ESC # By default, Irfanview will exit immediately if we press ESC when we are viewing an image, which is really annoying. To disable this behavior, go to Options --\u0026gt; Properties/Settings, in the popup window, click Start / Exit options. In the Exit options section, check the box Warning on ESC program exit. Do not forget to click OK button to save your settings.\nRef:\nhttps://irfanview-forum.de/showthread.php?t=1092 Skip txt files when viewing files in a directory # By default, ifranview will also show text files, which is annoying. Here is how to disable this behavior. Go to Options -\u0026gt; Properties/Settings -\u0026gt; Extentions:\nCheck the boxes for the file extensions that we want irfanview to open Select the option \u0026ldquo;Load only associated types while moving through directory\u0026rdquo;. Ref:\nhttps://superuser.com/q/149910/736190 Copy current image path quickly # When I check an image with irfanview, often I want to copy the image path to use in command line. Currently, I have to press i (show image properties), then copy the full image path. This is boring and cumbersome. I found from the irfanview forum the following AutoHotKey script to automate this process:\nClick to show the code. #NoEnv ; Recommended for performance and compatibility with future AutoHotkey releases. SendMode Input ; Recommended for new scripts due to its superior speed and reliability. SetWorkingDir %A_ScriptDir% ; Ensures a consistent starting directory. ; If IV is running, then the script will modify the key combination Ctrl+Shift+C to ; copy file path (oposed to set image as desktop background) ; OPTIONAL: Following code ensure that script terminates when IV close. Delete (or comment out) ; line 10 - 19 for letting the script run until manually stopped by user. SetTimer, check_window, 500 return check_window: IfWinNotExist, ahk_class IrfanView { TrayTip, \u0026#34;IrfanView check\u0026#34;, IrfanView har being closed. Script terminate. Sleep 3000 ExitApp, 1 } return ; RESTRICT HOTKEY TO IRFANVIEW ONLY \u0026lt;BEGIN\u0026gt; ; Ensures that hotkey manipulation works ONLY when IrfanView program window is active (most foremost) #IfWinActive ahk_class IrfanView ^+c:: WinWait, ahk_class IrfanView, , 5 if errorlevel { MsgBox, 0, venter på vindu, IrfanView ikke funnet på 5 sekunder - avslutter ExitApp, 1 } ; Remove any existing content on clipboard. clipboard = WinActivate, ahk_class IrfanView Sleep 300 ; Simulate key press \u0026#34;i\u0026#34; to open image properties dialog box (ipdb). Send, i WinWaitActive, IrfanView - Image properties, , 2 ; If ipdb for some reason fail to open, user get an error message and script terminate. if errorlevel { MsgBox, 0, Waiting, Image properties window didn\u0026#39;t appear. Script terminates now. ExitApp, 1 } ; Hit tab three times Send, {TAB 3} ; COpy text (image path) to clipboard Send, {CTRLDOWN}c{CTRLUP} ; Waiting until clipboard contains data (in most cases this command could be ommitted without any effect) ClipWait ; Quits the ipdb Send, {ALTDOWN}o{ALTUP} ; OPTIONAL - Make a tray tip (baloon) appear. User should be confident that image path is actually copied to clipboard TrayTip, Image path:, %clipboard%, 4 Sleep 4000 HideTrayTip() HideTrayTip() { TrayTip ; Attempt to hide it the normal way. if SubStr(A_OSVersion,1,3) = \u0026#34;10.\u0026#34; { Menu Tray, NoIcon Sleep 200 ; It may be necessary to adjust this sleep. Menu Tray, Icon } } ; RESTRICT HOTKEY TO IRFANVIEW ONLY \u0026lt;END\u0026gt; #IfWinActive First, we need to install autohotkey. Save the above script in a directory and name it copy_im_path_irfanview.ahk. Open the irfanview window, then double click the script file to run this script.\nWhen you are viewing an image, press Ctrl-Shift-C to copy the image path. A tooltip will also pop up on the bottom right corner to show the image path copied. Unfortunately, Ctrl-shift-C is also used by Irfanview to set the desktop wallpaper. You may want to change to other shortcut (change the line ^+c:: to what you want, for example ^!C::, i.e., Ctrl-Alt-C1).\nSee [https://www.autohotkey.com/docs/Tutorial.htm#s21] on how speical keys such Ctrl, Alt are represented in AutoHotKey.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 June 2020","externalUrl":null,"permalink":"/2020/06/20/irfanview_usage/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://www.irfanview.com/\" target=\"_blank\"\u003eIrfanView\u003c/a\u003e is a lightweight, fast and powerful\nimage viewer for Windows. Here are some settings to make it more useful.\u003c/p\u003e","title":"IrfanView Settings","type":"posts"},{"content":"When I am working on a project, I find that the same message is printed twice. The following minimal code can reproduce this issue:\nSource code for logger.py:\nimport sys import logging class MyLogger: def __init__(self, name): self.logger = logging.getLogger(name) self.logger.setLevel(logging.DEBUG) stream_handler = logging.StreamHandler(sys.stderr) formatter = logging.Formatter( \u0026#34;[%(asctime)s] [%(name)s] [%(levelname)s] %(message)s\u0026#34;, \u0026#34;%Y-%m-%d %H:%M:%S\u0026#34; ) stream_handler.setFormatter(formatter) stream_handler.setLevel(logging.DEBUG) self.logger.addHandler(stream_handler) # self.logger.propagate = False def info(self, message): self.logger.info(\u0026#34;{}\u0026#34;.format(message)) my_logger = MyLogger(\u0026#34;Logging debug\u0026#34;) Source code for main.py:\nimport logging from logger import my_logger root_logger = logging.getLogger() stream_handler = logging.StreamHandler() root_logger.addHandler(stream_handler) my_logger.info(\u0026#34;demo\u0026#34;) my_logger.info(\u0026#34;another test\u0026#34;) When we run main.py, we can see that each log message is printed twice on the console:\n[2020-06-19 21:56:53] [Logging debug] [INFO] demo demo [2020-06-19 21:56:53] [Logging debug] [INFO] another test another test But why? The reason is that, when we use logging.getLogger() without any argument, we will get the root logger. my_logger in logger.py is thus a child logger of this root logger. By default, child logger messages will be propagated to the logger in the upper hierarchy.\nWe have two options: (1) Disable propagation from child logger (2) Do not use root logger.\nOption 1: In the logger.py, uncomment the line self.logger.propagate = False to make sure that child logger does not propagate its message to the root logger.\nOption 2: Simply do not use root logger in main.py. For example, we can get another logger by using another_logger = logging.getLogger('main'). In this way, logging message from my_logger have no relationship with another_logger. So the logging messages are printed only once.\nReferences # Duplicate log output when using Python logging module. Advanced logging tutorial. ","date":"20 June 2020","externalUrl":null,"permalink":"/2020/06/20/python_duplicate_logging_messages/","section":"Posts","summary":"\u003cp\u003eWhen I am working on a project, I find that the same message is printed twice.\nThe following minimal code can reproduce this issue:\u003c/p\u003e","title":"Duplicate Logging Messages in Python","type":"posts"},{"content":"Recently, I want to download some images using Python. This is what I\u0026rsquo;ve learned after the survey.\nUsing urllib package # The native and naive way is to use urllib.request module to download an image.\nimport urllib.request url = \u0026#34;https://cdn.pixabay.com/photo/2020/05/12/17/04/wind-turbine-5163993_960_720.jpg\u0026#34; r = urllib.request.urlopen(url) with open(\u0026#34;wind_turbine.jpg\u0026#34;, \u0026#34;wb\u0026#34;) as f: f.write(r.read()) However, the above code may error out with following message:\nurllib.error.HTTPError: HTTP Error 403: Forbidden\nIn this case, we need to add a HTTP header to the request:\nimport urllib.request # The following way works. Ref: https://stackoverflow.com/a/45358832/6064933 req = urllib.request.Request(url, headers={\u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0\u0026#39;}) with open(\u0026#34;wind_turbine.jpg\u0026#34;, \u0026#34;wb\u0026#34;) as f: with urllib.request.urlopen(req) as r: f.write(r.read()) Using requests package # A better way is to use requests package. Here is a simple example to download an image using requests:\nimport requests url = \u0026#34;https://cdn.pixabay.com/photo/2020/05/12/17/04/wind-turbine-5163993_960_720.jpg\u0026#34; r = requests.get(url) with open(\u0026#34;wind-turbine.jpg\u0026#34;, \u0026#34;wb\u0026#34;) as f: f.write(r.content) Downloading large files with streaming # response.iter_content # In the above code, all content of the image will be read into memory at once. If the image is large, it may consume too much memory.\nAlternatively, we can set stream parameter to True to stream request. In this case, only the response header is downloaded. We can retrieve the image in a whole using response.content1 or chunk by chunk by using response.iter_content method:\n# Using requests to download large files. with requests.get(url, stream=True) as r: with open(\u0026#34;wind-turbine.jpg\u0026#34;, \u0026#34;wb\u0026#34;) as f: for chunk in r.iter_content(chunk_size=1024): if chunk: f.write(chunk) response.raw # When stream is True, we can also use response.raw to stream the download. response.raw is a file-like object. With the help of shutil.copyfileobj(), we can save the image like this:\n# using r.raw with requests.get(url, stream=True) as r: with open(\u0026#34;wind-turbine.jpg\u0026#34;, \u0026#34;wb\u0026#34;) as f: r.raw.decode_content = True shutil.copyfileobj(r.raw, f) # or f.write(r.raw.read()) References # Python 3 urllib HTTP 403 error. Why to use iter_content and chunk_size in python requests? How to download image using requests? Download large file in python with requests. https://requests.readthedocs.io/en/latest/user/advanced/#body-content-workflow You may want to avoid this for large files!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 June 2020","externalUrl":null,"permalink":"/2020/06/17/download_image_from_url_python/","section":"Posts","summary":"\u003cp\u003eRecently, I want to download some images using Python.\nThis is what I\u0026rsquo;ve learned after the survey.\u003c/p\u003e","title":"How to Download Image from URL using Python","type":"posts"},{"content":"I have several terminal emulators installed on my Mac: kitty, Alacritty and iterm2. When I start a Tmux session in Alacritty and try to create another tmux session in kitty, I noticed this strange error that I have never met before:\nopen terminal failed: missing or unsuitable terminal: xterm-kitty\nFor clarity, kitty seems to use its own terminfo file called xterm-kitty, and Alacritty and iterm2 both use the good-old xterm-256color.\nThe author of kitty claims that:\ntmux does not support multiple terminfo. You will need to kill all existing tmux sessions and start a new one.\nI find his claim to be partly true. If I create a session in Alacritty, I can not attach to this session or create new session in kitty. However, if I initially create a new session (before that, there is not tmux session running) in kitty, I can indeed attach to that session or create a new session in Alacritty.\nMy version info:\nkitty: 0.17.2 Alacritty: 0.4.0 Tmux: 3.1b So my temporary solution is to kill all sessions in other terminal emulators if you want to use tmux in kitty.\nTmux error when sshing to remote server # If you ssh to another server using kitty terminal and met this issue when starting tmux on that server. The reason may be that xterm-kitty terminfo file may not be available on that server. You can use the following command to copy the terminfo file to the remote server as indicate here:\nkitty +kitten ssh myserver References # Tmux under kitty terminal. https://github.com/tmux/tmux/issues/1433 https://github.com/kovidgoyal/kitty/issues/370 ","date":"14 June 2020","externalUrl":null,"permalink":"/2020/06/14/kitty_tmux_open_terminal_fail/","section":"Posts","summary":"\u003cp\u003eI have several terminal emulators installed on my Mac: \u003ca href=\"https://sw.kovidgoyal.net/kitty/\" target=\"_blank\"\u003ekitty\u003c/a\u003e,\n\u003ca href=\"https://github.com/alacritty/alacritty\" target=\"_blank\"\u003eAlacritty\u003c/a\u003e and \u003ca href=\"https://www.iterm2.com/\" target=\"_blank\"\u003eiterm2\u003c/a\u003e.\nWhen I start a Tmux session in Alacritty and try to create another tmux session\nin kitty, I noticed this strange error that I have never met before:\u003c/p\u003e","title":"Tmux: Open Terminal Failed in Kitty Terminal","type":"posts"},{"content":"In my older post, I have shared how to run the built-in development server to serve Flask web service. For production, we need to use more powerful web servers. Flask complies to the WSGI specification and can work with any web server that conforms to WSGI.\nIn this post, I want share how to run Flask applications using uWSGI \u0026mdash; a popular WSGI-compliant server.\nInstall and simple running # To install uWSGI, we can use pip:\npip install uwsgi To serve a simple flask application using uWSGI, we can run the following command:\nuwsgi --http 0.0.0.0:8081 --module flask-app:app --master --processes 2 --threads 2 # or run following command # uwsgi --socket 0.0.0.0:8081 --protocol=http --module flask-app:app Run uWSGI via config # When we add more options via the command line, it becomes less convenient. We can also use a config file (in ini format) to run uWSGI:\n[uwsgi] chdir=/path/to/project wsgi-file=flask-demo.py callable=app http=0.0.0.0:1234 need-app=true lazy-apps=true master=true processes=2 threads=2 single-interpreter=true die-on-term=true procname-prefix-spaced=flask demo vacuum=true pidfile=demo.pid worker-reload-mercy=5 Save this file as uwsgi.ini (or whatever you like), and then run the application using uwsgi --ini uwsgi.ini. If the extension of config file is ini, we can also directly run uWSGI: uwsgi uwsgi.ini. Note that the first line ([uwsgi]) is necessary and must not be omitted.\nBelow are the meanings of some of these options:\nchdir # The chdir option specifies the directory to run the application.\nwsgi-file and callable # Option wsgi-file specify the source file where your application resides. Option callable sets the name of your application. For example, if you define your application like this: app = Flask(__name__), then you should set callable = app.\nmaster # With master mode on, the master process will restart a worker process if it dies. Generally, it is a good idea to turn master mode on with master = true.\nSee also: https://stackoverflow.com/q/35072176/6064933\nsingle-interpreter # By default, uwsgi will enable multiple interpreter mode, i.e., running multiple apps in a single process using different interpreter. If we are running a single app, it is not necessary to run in this mode.\nRef:\nhttp://lists.unbit.it/pipermail/uwsgi/2010-April/000247.html https://docs.newrelic.com/docs/agents/python-agent/web-frameworks-servers/python-agent-uwsgi-web-server die-on-term # without die-on-term = true, you can not kill uwsgi process via kill xxx. Instead, uWSGI will reload a process if it were killed. This may not be what you want.\nneed-app # if need-app = true, uWSGI will not run if it can not find the application to run. Otherwise, it will load even without an application. When you request the service, you will get HTTP 500 responses. So setting need-app to true is a sane choice.\nlazy-apps # With lazy-apps=true, each process will initialize applications independently of each other. If you do not set this option, you may run into troubles. For example, someone reported that PyTorch model does not run properly if lazy-apps option is not set.\nSee also official discussion here.\nproc-name-spaced # It will add a custom prefix to uwsgi processes so that you can find the processes for a specific application easily. For example, with the following config:\nproc-name-spaced = demo the output will be:\njdhao 29516 1.0 0.0 110104 14852 pts/31 S+ 21:16 0:00 demo uWSGI master jdhao 29520 5.5 0.0 186184 28080 pts/31 S+ 21:16 0:00 demo uWSGI worker 1 jdhao 29521 0.0 0.0 110104 7644 pts/31 S+ 21:16 0:00 demo uWSGI http 1 py-autoreload # py-autoreload=2 will check if file is modified every 2 seconds and restart application if modification detected. This should only be used for debugging, and not for production.\nRef:\nhttps://uwsgi-docs.readthedocs.io/en/latest/Configuration.html#ini-files pidfile # The option pidfile will create a file under specified location with the pid of uWSGI master process. To kill the uWSGI process safely, you can run the following command:\nuwsgi --stop demo.pid Ref:\nHow to kill all instance of uwsgi? worker-reload-mercy # When I try to kill the uwsgi process via Ctrl-C, I found that uwsgi takes long time to stop and prints the following message when it finally stops:\nworker 1 buried after 30 seconds goodbye to uWSGI. VACUUM: pidfile removed. To close the uwsgi processes quicker, we can add the worker-realod-mercy option and set it to a small value:\n# set it to 5 seconds worker-reload-mercy = 5 It sets the number of seconds uWSGI will wait for the worker to exit before killing it forcefully.\nThen when you start uwsgi, you will see the following log message:\nyour mercy for graceful operations on workers is 5 seconds Ref:\nhttps://www.mail-archive.com/uwsgi@lists.unbit.it/msg05155.html https://github.com/unbit/uwsgi/issues/844#issuecomment-455756013 NGINX - Python - UWSGI kill issue References # https://uwsgi-docs.readthedocs.io/en/latest/ParsingOrder.html https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/ Configuring uWSGI for Production: The defaults are all wrong: https://www.youtube.com/watch?v=p6R1h2Nn468 ","date":"13 June 2020","externalUrl":null,"permalink":"/2020/06/13/flask_serving_via_wsgi_server/","section":"Posts","summary":"\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2020/04/06/build_webapi_with_flask_s1/\" target=\"_blank\"\u003eolder post\u003c/a\u003e, I have shared how to run the built-in development server to serve Flask web service.\nFor production, we need to use more powerful web servers.\nFlask complies to the \u003ca href=\"https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface\" target=\"_blank\"\u003eWSGI\u003c/a\u003e specification and can work with any web server that conforms to WSGI.\u003c/p\u003e\n\u003cp\u003eIn this post, I want share how to run Flask applications using \u003ca href=\"https://uwsgi-docs.readthedocs.io/en/latest/\" target=\"_blank\"\u003euWSGI\u003c/a\u003e \u0026mdash; a popular WSGI-compliant server.\u003c/p\u003e","title":"Serving Flask Applications with uWSGI","type":"posts"},{"content":"Conda is the default package and environment management tool shipped with Anaconda.\nThis post logs my cheatsheet and notes for working with virtual environments with conda.\ncommonly used commands for virtual env # Create a new environment: conda create -n my_env List environments on the system: conda env list Delete an environment: conda env remove -n my_env Activate an env: Windows: conda activate my_env Mac/Linux: source activate my_env Exit/quit an env: Windows: conda deactivate my_env Mac/Linux: source deactivate my_env How to install packages into a specific environment? # Outside an env, we can use the -n option to specify which environment we want to install packages into:\nconda install -n my_env -c some_channel some_package If we are inside the virtual environment, there is no need to use the -n option. We can install a package with conda install.\nRemove package in an env # Remove pakcage from an env: conda remove -n my_env some_package. If you do not specify -n, some_package in current env will be removed. If you are not in any virtual env, some_package in the global Python path will be removed.\nUsing pip inside env install packages to global site-package location? # When I am inside a virtual env, I am surprised that pip install some_package installs the package to the global site-package instead of inside the virtual env.\nAfter some digging, I find that reason is that I was not using the pip command inside that virtual environment. To check this, use the following command before using pip install:\nwhich pip If the pip path is not inside the virtual env, then we are using the system-wide pip. So pip install some_package will install some_package into to global Python path instead of the virtual environment.\nReferences # Where to install pip packages inside my Conda environment? How to add package to conda environment without pip? ","date":"11 June 2020","externalUrl":null,"permalink":"/2020/06/11/conda_env_management/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://docs.conda.io/projects/conda/en/latest/\" target=\"_blank\"\u003eConda\u003c/a\u003e is the default package\nand environment management tool shipped with\n\u003ca href=\"https://www.anaconda.com/products/individual\" target=\"_blank\"\u003eAnaconda\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis post logs my cheatsheet and notes for working with virtual environments\nwith conda.\u003c/p\u003e","title":"Virtual Environment Management with Conda","type":"posts"},{"content":"After running a Ubuntu docker container, I found that the default time zone is UTC. I want to change it to my local timezone.\nThis is how to change the timezone when we are building the docker container:\nENV DEBIAN_FRONTEND=noninteractive RUN apt-get update \u0026amp;\u0026amp; apt-get install -y --no-install-recommends tzdata \\ \u0026amp;\u0026amp; rm -rf /var/lib/apt/lists/* RUN ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\ \u0026amp;\u0026amp; dpkg-reconfigure --frontend noninteractive tzdata Since we can enter input when building docker images, by setting DEBIAN_FRONTEND to noninteractive, we make sure apt-get will install tzdata package in a non-interactive way.\nPackage tzdata will install a lot of timezone files under /usr/share/zoneinfo directory. We then create a symlink to use Asia/Shanghai as the new timezone:\nln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime Finally, we use dpkg-reconfigure to configure tzdata to use the new timezone:\ndpkg-reconfigure --frontend noninteractive tzdata The option --frontend noninteractive avoids the interactive prompt to choose area and city.\nReferences # Avoid user interaction when installing tzdata. Automate dpkg-reconfigure. Install tzdata on Ubuntu docker image. https://github.com/phusion/baseimage-docker/issues/415#issuecomment-305962877 What is /etc/timezone used for? What is /etc/localtime? ","date":"11 June 2020","externalUrl":null,"permalink":"/2020/06/11/linux_set_timezone/","section":"Posts","summary":"\u003cp\u003eAfter running a Ubuntu docker container, I found that the default time zone is\nUTC. I want to change it to my local timezone.\u003c/p\u003e","title":"Set Timezone inside Docker Container","type":"posts"},{"content":"","date":"7 June 2020","externalUrl":null,"permalink":"/tags/async/","section":"Tags","summary":"","title":"Async","type":"tags"},{"content":"I was using asyncio inside a view function for Flask to run some asynchronous functions and met an error.\nHere is the demo code:\nimport asyncio from flask import Flask, jsonify app = Flask(__name__) @app.route(\u0026#34;/toy\u0026#34;, methods=[\u0026#34;GET\u0026#34;]) def index(): loop = asyncio.get_event_loop() result = loop.run_until_complete(hello()) return jsonify({\u0026#34;result\u0026#34;: result}) async def hello(): await asyncio.sleep(1) return 1 if __name__ == \u0026#34;__main__\u0026#34;: app.run(host=\u0026#34;0.0.0.0\u0026#34;, port=4567, debug=False) When I request this service, I get the following error from asyncio.event:\nRuntimeError: There is no current event loop in thread \u0026lsquo;Thread-1\u0026rsquo;.\nfor the following line of code:\nloop = asyncio.get_event_loop() From the asyncio documentation on default event loop policy:\nIf the current thread doesn’t already have an event loop associated with it, the default policy’s get_event_loop() method creates one when called from the main thread, but raises RuntimeError otherwise\nSo it seems that the view function index() is not run in the main thread. As a result, there is no event loop associated with the current thread, hence the error message. To verify this, we can use the threading module to help us find which thread we are currently in:\nimport threading import asyncio from flask import Flask, jsonify print(f\u0026#34;In flask global level: {threading.current_thread().name}\u0026#34;) app = Flask(__name__) @app.route(\u0026#34;/toy\u0026#34;, methods=[\u0026#34;GET\u0026#34;]) def index(): print(f\u0026#34;Inside flask function: {threading.current_thread().name}\u0026#34;) loop = asyncio.get_event_loop() result = loop.run_until_complete(hello()) return jsonify({\u0026#34;result\u0026#34;: result}) async def hello(): await asyncio.sleep(1) return 1 if __name__ == \u0026#34;__main__\u0026#34;: app.run(host=\u0026#34;0.0.0.0\u0026#34;, port=4567, debug=False) When running the flask app, we can see the following message:\nIn flask global level: MainThread\nSo the statement outside the view function is run in the main thread.\nWhen we request the service, we can see the following message from the view function:\nInside flask function: Thread-1\nThis verifies that Flask is indeed running the view functions in a separate thread other than the main thread.\nIn the Flask.run() doc, this is also briefly mentioned in the changelog part:\nChanged in version 1.0: If installed, python-dotenv will be used to load environment variables from .env and .flaskenv files.\nIf set, the FLASK_ENV and FLASK_DEBUG environment variables will override env and debug.\nThreaded mode is enabled by default.\nUnder the hood, Flask.run() is using werkzeug.serving.run_simple() to server the app and set the threaded option to True by default:\nthreaded – should the process handle each request in a separate thread?\nWhat does the threaded mode mean? It means that the server can serve requests in a non-blocking fashion, i.e., it does not need to wait for one request to finish to process another request. That is often preferred than the single-threaded mode. Note, however, that the development server is not for production purposes. We need to use dedicated WSGI server such as gunicorn and uWSGI in production for better performance.\nReferences # Can I serve multiple clients using just Flask app.run() as standalone?. Handle Flask requests concurrently with threaded=True. ","date":"7 June 2020","externalUrl":null,"permalink":"/2020/06/07/asyncio_inside_flask/","section":"Posts","summary":"\u003cp\u003eI was using \u003ca href=\"https://docs.python.org/3/library/asyncio.html\" target=\"_blank\"\u003easyncio\u003c/a\u003e inside a\nview function for Flask to run some asynchronous functions and met an error.\u003c/p\u003e","title":"How to Use Asyncio with Flask Applications","type":"posts"},{"content":"","date":"1 June 2020","externalUrl":null,"permalink":"/tags/markdown/","section":"Tags","summary":"","title":"Markdown","type":"tags"},{"content":" update log 2022-02-08: Add sections on using CSS with Markdown. In this post, I share some of the tricks that will Make the Markdown file better and more beautiful.\nHow to color text # To color some text, we can use the font tag, which is deprecated in HTML5.\n\u0026lt;font color=\u0026#34;red\u0026#34;\u0026gt;red text\u0026lt;/font\u0026gt; We can also use the span tag:\n\u0026lt;span style=\u0026#34;color:blue\u0026#34;\u0026gt;this is blue text\u0026lt;/span\u0026gt;. To color entire paragraph, the p tag can be used:\n\u0026lt;p style=\u0026#34;color:red\u0026#34;\u0026gt;This is a paragraph.\u0026lt;/p\u0026gt; How to center align image and set image size # To center align image and set image size, we can combine the p tag and img tag:\n\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;URL\u0026#34; width=\u0026#34;800\u0026#34;\u0026gt; \u0026lt;/p\u0026gt; The above HTML code will center the image and also set its width to 800 pixels.\nCreate collapsible content # Sometimes, it is handy to create some collapsible content to make the post concise. Like what is shown below.\nClick to show the code. import random nums = list(range(100)) print(random.choices(nums, k=10)) We can use the detail tag to achieve this:\n\u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;\u0026lt;font size=\u0026#34;2\u0026#34; color=\u0026#34;red\u0026#34;\u0026gt;Click to show the code.\u0026lt;/font\u0026gt;\u0026lt;/summary\u0026gt; ``` import random nums = list(range(100)) print(random.choices(nums, k=10)) ``` \u0026lt;/details\u0026gt; Create anchor for text # Sometimes, we want to anchor a position in the post so that when the reader click its reference, they will be brought to the referred position. This can be achieved by using anchor tag. For example, click here to go to first section.\nThe code to achieve this is:\n# \u0026lt;a name=\u0026#34;color_text\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;How to color text? click [here](#color_text) to go to first section. This works both for Markdown headers and normal text in some Markdown flavor.\nFor some Markdown variant, to go to a header, remove all punctuations in the header title and turn all text in header to lowever case and replace space with -, click here to go to section 1.\nLiteral backticks in inline code or code blocks # Backtick in ininlie code block # To use backticks inside inline code blocks, we can use more backticks as the openning and closing inline code delimiter. For example, to produce foo`, use the following:\n`` foo` `` How to render three backticks in code blocks # Since the usual delimiter for code block is three backticks, using three literal backticks inside the usual three-backtick code block will result in rendering problems.\nTo fix this problem we can use more backticks as the code block delimiter.\nStyle text with CSS # To create stylish component in Markdown, we may need a little bit CSS. Below is a div element styled with CSS.\nthis is some demo text We can use inline style or internal style to reproduce this effect.\nInline style # Using style attribute inside a HTML tag. The code is:\n\u0026lt;div style=\u0026#34;color: #ff0000; background-color: #ffbaba; padding: 10px; border: 3px dashed; border-radius: 10px;\u0026#34;\u0026gt; this is some demo text \u0026lt;/div\u0026gt; Internal style # We can also inline CSS in Markdown using HTML style tag. The code is:\n\u0026lt;style\u0026gt; .demo { color: #ff0000; background-color: #FFBABA; padding: 10px; border: 3px dashed; border-radius: 10px; } \u0026lt;/style\u0026gt; \u0026lt;div class=\u0026#34;demo\u0026#34;\u0026gt; this is some demo text \u0026lt;/div\u0026gt; It will create exactly the same styled text.\nCreat warning/info/success/error boxes # Using the techniques discussed above. We can create beautiful text boxes with different styles.\nUsing inline style:\n\u0026lt;div style=\u0026#34;padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #3c763d; background-color: #dff0d8; border-color: #d6e9c6;\u0026#34;\u0026gt; I am a success message \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #a94442; background-color: #f2dede; border-color: #ebccd1;\u0026#34;\u0026gt; I am an error message \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #31708f; background-color: #d9edf7; border-color: #bce8f1;\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;\u0026amp;#9432; Info:\u0026lt;br/\u0026gt;\u0026lt;/strong\u0026gt; I am a info message \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;padding: 15px; border: 1px solid transparent; border-color: transparent; margin-bottom: 20px; border-radius: 4px; color: #8a6d3b;; background-color: #fcf8e3; border-color: #faebcc;\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;\u0026amp;#9888; Warning:\u0026lt;br/\u0026gt;\u0026lt;/strong\u0026gt; I am a warning message \u0026lt;/div\u0026gt; The produced text boxes are like this:\nUsing internal style (ideas are from here):\n\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; @import url(\u0026#39;//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\u0026#39;); .info-msg, .success-msg, .warning-msg, .error-msg { margin: 5px 0; margin-bottom: 20px; padding: 10px; border-radius: 5px 5px 5px 5px; border: 2px solid transparent; border-color: transparent; } .info-msg { color: #059; background-color: #BEF; } .success-msg { color: #270; background-color: #DFF2BF; } .warning-msg { color: #9F6000; background-color: #FEEFB3; } .error-msg { color: #D8000C; background-color: #FFBABA; } \u0026lt;/style\u0026gt; \u0026lt;div class=\u0026#34;info-msg\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;fa fa-info-circle\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; This is an info message. \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;success-msg\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;fa fa-check\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; This is a success message. \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;warning-msg\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;fa fa-warning\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; This is a warning message. \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;error-msg\u0026#34;\u0026gt; \u0026lt;i class=\u0026#34;fa fa-times-circle\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; This is a error message. \u0026lt;/div\u0026gt; The produce text boxes are like:\nReferences # Apply color in Markdown. Center align image. Anchored text in Markdown. Collapsible content in Markdown. Backticks Escape backtick in inline code block. Fenced code block inside fenced code block. CSS: https://www.w3schools.com/html/html_css.asp markdown css: https://stackoverflow.com/a/66407948/6064933 https://www.w3schools.io/file/markdown-css/ ","date":"1 June 2020","externalUrl":null,"permalink":"/2020/06/01/markdown_writing_tricks/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-02-08: Add sections on using CSS with Markdown.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I share some of the tricks that will Make the Markdown file better and more beautiful.\u003c/p\u003e","title":"Markdown Writing Tricks","type":"posts"},{"content":"If you find yourself repeatedly type some similar-structured text in Vim/Nvim, you need to ask yourself if there is a better way to do it.\nSnippet is a good way to insert structured text: you just need to type the trigger word and press the trigger key, then you have the whole text ready for you to edit. For example, when I am writing my blog post, I use meta as the trigger to generate the post front matter info.\nUltisnips is a good tool to automate text insertion, an it can increase your efficiency dramatically. For how to configure ultisnips for Neovim, refer to this post. In the following, I would like to show several cases of using snippet to improve my efficiency.\nGenerate debian change log file signature # I saw a post on stackExchange that some one want to insert debian change file signature of the format:\n-- Alexis Wilke \u0026lt;alexis@example.com\u0026gt; Tue, 26 May 2020 18:00:09 -0800 Each time when he writes this signature, only the date changes. The date is also in standard format. This is good case to show how we can save our time with snippet.\nWe need create a file named debchangelog.snippets in our custom snippet directory and add the following snippet into it:\nsnippet debsig \u0026#34;debian change log signature\u0026#34; w -- Alexis Wilke \u0026lt;alexis@example.com\u0026gt; `!v strftime(\u0026#39;%a, %d %b %Y %X %z\u0026#39;)` endsnippet The backticked text use the interpolation feature of Ultisnips. !v means to use Vim language interpolation, and it should be followed by valid Vim script expressions, like the one given above.\nAfter adding this snippet, when you open a debian changelog file1, type debsig and press the trigger key, it will be expanded to the signature automatically.\nGenerate main function template for Python # If a Python module can be imported and run as standard alone script, it is often a good practice to use the following template:\ndef main(): # the main function logic here if __name__ == \u0026#34;__main__\u0026#34;: main() It is cumbersome and time-wasting to type this every time we create a file. Let\u0026rsquo;s create a snippet for it. In the file python.snippet under your custom snippet directory, add the following snippet:\nsnippet main \u0026#34;Main function boilerplate\u0026#34; b def main(): $0 if __name__ == \u0026#34;__main__\u0026#34;: main() endsnippet When you create a Python source file, type main and press trigger, the file template will be created automatically for you.\nInsert center-aligned image in Markdown # The default Markdown syntax for image can not align the image or set the image display size. We can use the raw HTML tag to achieve this:\n\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;image_url\u0026#34; width=\u0026#34;800\u0026#34;\u0026gt; \u0026lt;/p\u0026gt; To avoid typing these HTML tags every time, we can add the following image snippet to the file markdown.snippet under our custom snippet directory:\nsnippet img \u0026#34;Aligned image using HTML tag\u0026#34; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;${1:URL}\u0026#34; width=\u0026#34;${2:800}\u0026#34;\u0026gt; \u0026lt;/p\u0026gt; $0 endsnippet Then we can use img to trigger the image snippet. You can then press the forward jump and backward jump shortcut for Ultisnips to jump back and forth between the predefined stop positions to insert URL and adjust the image display size.\nMake sure that the filetype is debchangelog, otherwise set the filetype to debchangelog manually.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"27 May 2020","externalUrl":null,"permalink":"/2020/05/27/why_you_should_use_snippets_in_vim/","section":"Posts","summary":"\u003cp\u003eIf you find yourself repeatedly type some similar-structured text in Vim/Nvim,\nyou need to ask yourself if there is a better way to do it.\u003c/p\u003e","title":"Why You Should Use Snippets in Vim/Neovim","type":"posts"},{"content":"update (2020-09-19): update the settings for Nvim to reflect the latest changes in API.\nIn Vim or Neovim, showing the yanked region in color gives use visual feedback on what we have copied. Here is how you can highlight yanked region in Vim or Neovim.\nFor Neovim and vim # There is a plugin vim-highlightedyank for this, which works both for vim and Neovim. Install it with your favorite plugin manager and it just works. You can also adjust highlight duration by adding the following config:\n\u0026#34; set highlight to 1000 ms let g:highlightedyank_highlight_duration = 1000 Neovim only # If you are using the latest version of Neovim. They have make this little feature built-in in this pull request (see also :h lua-highlight).\nInstall the latest version of Neovim and add the following config to your init.vim:\naugroup highlight_yank autocmd! au TextYankPost * silent! lua vim.highlight.on_yank{higroup=\u0026#34;IncSearch\u0026#34;, timeout=700} augroup END The first parameter is the highlight group to use, and the second parameter is the highlight duration time measured in milliseconds.\nEnjoy it. One more plugin to remove :)\n","date":"22 May 2020","externalUrl":null,"permalink":"/2020/05/22/highlight_yank_region_nvim/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eupdate (2020-09-19): update the settings for Nvim to reflect the latest\nchanges in API.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIn Vim or Neovim, showing the yanked region in color gives use visual feedback\non what we have copied. Here is how you can highlight yanked region in Vim or\nNeovim.\u003c/p\u003e","title":"Highlight Yanked Region in Nvim/Vim","type":"posts"},{"content":"人工智能 (AI)甚嚣尘上，动则称颠覆，各家公司纷纷推出了自己的 AI 产品，但是这些产品真的有那么多人用吗？\n别看各种论文宣称他们的算法有多么牛逼，一到实际场景，要做成能让消费者使用的产品，不费一番功夫优化是不可能的。论文里的算法之所以厉害，是因为他们专门针对数据集进行了优化，而实际场景的数据通常是复杂的。\n另外一方面，我们要区分“能用”和“好用”，经过大量的优化和数据拟合，AI 算法大都能到“能用”的程度，但是要达到让消费者满意的程度，是非常困难的。例如图像分割算法，要做到准确分割各种物体是很难的，由于现实世界的物体千差万别，不像论文里是限定种类，分割算法要做到让人满意其实是很难的，很多时候，产生的图像粗看还可以，细看的话，一些细节处理就不到位，不能令人满意。更不用说一些现在还不成熟的技术了，强行上马只会导致算法只对某些场景有用，达不到消费者的预期。\n前不久在华为的专卖店体验了华为手机拍照翻译功能，首先翻译效果很差，另外翻译以后的文本贴回去的时候排版粗糙不堪，这样辣鸡的拍照翻译，是梁静茹给了勇气上马到手机吗？\n虽然 AI 被吹的神乎其神，但是真正对消费者产生价值的产品有多少呢？人脸识别算是一个，现在大部分手机都有人脸识别解锁的功能，语音识别也算是一个吧，语音转文本能帮用户节省大量手动录入的时间，还有什么呢，一时竟想不起来了。大部分算法并未达到成熟应用到产品的地步。\n我们在做产品的时候，应该做真正为消费者产生价值的 AI 产品，而不是赶所谓的首发或者创造一些噱头。\n","date":"22 May 2020","externalUrl":null,"permalink":"/2020/05/22/the_ai_hype/","section":"Posts","summary":"\u003cp\u003e人工智能 (AI)甚嚣尘上，动则称颠覆，各家公司纷纷推出了自己的 AI 产品，但是这些产品真的有那么多人用吗？\u003c/p\u003e","title":"AI 的噱头","type":"posts"},{"content":"two meetings 即将或者正在召开，上个谷歌也越来越难，最近墙对各种工具的阻断非常严重，连之前使用了 obfs 的 ss 都不行了，最近一段时间也处于时断时续的状态。\nJustmysocks 之前一直用的都是 shadowsocks 协议，对墙的反制能力不行，每到关键时候就显露疲态。好消息是，justmysocks 终于在最近推出了基于 v2ray 协议的线路。\nv2ray 相对于 shadowsocks，隐蔽性更好，所以也更加稳定。由于 justmysocks 的 v2ray 目前刚推出，只能手动设置，具体如何设置，可以搜索 v2ray 设置教程。\nv2ray 的客户端也很多选择，完整列表见这里。列举一些常见的客户端：\nWindows: V2rayN Mac: v2rayU, ClashX, Qv2ray. Android: v2rayNG, BifrostV. 更新： 2020-05-28\n近期 justmysocks 又推出了一个支持 v2ray 的 s801 节点，参见下图\n官方的说法是这个节点真正计算的数据量是实际使用数据量的 1/10，但是这个节点只是友情提供，不保证质量，也不提供任何形式的服务，并且随时可能会被下架。见 这里 说明。\n更新： 2020-06-19\n今天查看 justmysocks 的网站，3-5 三个服务器都已经变为 v2ray 协议了，三个服务器的配置都是完全一样的。估计 justmysocks 所有节点以后都会转为 v2ray 协议。\n参考 # https://www.youtube.com/watch?v=A3R7j_dpGLc https://medium.com/@kissmk3515/2020%E6%9C%80%E5%A5%BD%E7%9A%84v2ray%E6%9C%BA%E5%9C%BA%E8%AF%84%E6%B5%8B-b76a075e4f26 ","date":"22 May 2020","externalUrl":null,"permalink":"/2020/05/22/v2ray_justmysocks/","section":"Posts","summary":"\u003cp\u003etwo meetings 即将或者正在召开，上个谷歌也越来越难，最近墙对各种工具的阻断非常严重，连之前\u003ca href=\"https://jdhao.github.io/2020/04/25/shadowsocks_obfs_setup/\" target=\"_blank\"\u003e使用了 obfs 的 ss\u003c/a\u003e 都不行了，最近一段时间也处于时断时续的状态。\u003c/p\u003e\n\u003cp\u003eJustmysocks 之前一直用的都是 shadowsocks 协议，对墙的反制能力不行，每到关键时候就显露疲态。好消息是，justmysocks 终于在最近推出了基于 \u003ca href=\"https://www.v2ray.com/en/\" target=\"_blank\"\u003ev2ray\u003c/a\u003e 协议的线路。\u003c/p\u003e","title":"Justmysocks 支持 v2ray 协议了！","type":"posts"},{"content":"I was doing some typograph for Chinese text and want to insert a space equal to the width of a Chinese character.\n最近在做一些中文排版的工作，有一个需求是在中文字符之间插入空格，并且空格的宽度等于中文字符的宽度，在某些情况下这样排版显得更加美观。\nIdeographic space(全角空格) # The usual space we use (U+0020) does not met this requirement since it is very thin compared to Chinese characters. I do not know what this kind of space is called or whether this character even exists. I searched the web using Google and found that this space is called full width space or ideographic space. It is equal to the width the CJK character so that it is aesthetically pleasing to insert such a space when needed. The code point for ideographic space is U+3000 and it looks like the following:\n我们通常使用空格键打出的空格（Unicode 编码为 U+0020）不满足排版的需求，因为这个空格的宽度和汉字字符宽度相比非常窄。起初我不知道是否存在这种宽度等于汉字字符宽度的空格，也不知道它叫什么。不过经过一番查找，我发现这种空格是存在的，我们可以叫它 全角空格 或 表意空格。这个空格的占的宽度等于中日韩字符的宽度，在某些情况下，如果在排版的时候插入这种空格，结果会更美观。全角空格的 Unicode 编码是 U+3000。\n在 Mac 系统上，我们可以使用自带的输入法插入全角空格，按下快捷键 Shift+ Option + B，在弹出的菜单选择 “符号”，第六个候选项就是全角空格。\nThere are other kind of spaces that I am not aware of, e.g., space (U+2000) that are 1/2 of the height of a font size.\n除了全角空格以外，Unicode 字符集实际上还规定了其他类型的空格以满足不同排版的需求。例如，编码为 U+2000 的字符，Unicode 规定它的宽度等于字符大小（字符高度）的一半。这些宽度不同的空格可以帮助我们在排版的时候产生更加愉悦的视觉效果，例如，这篇文章展示了在前端网页设计时，利用不同空格来两端对齐长短不同的中文。\nReferences（参考资料） # A good article on Unicode spaces. https://en.wikipedia.org/wiki/Whitespace_character http://keithtam.net/designing-with-the-hanzi-script/ https://medium.com/@bobtung/best-practice-in-chinese-layout-f933aff1728f https://webdesign.tutsplus.com/articles/the-complete-beginners-guide-to-chinese-fonts--cms-23444 在 Mac 中输入全角空格. ","date":"16 May 2020","externalUrl":null,"permalink":"/2020/05/16/space_for_cjk/","section":"Posts","summary":"\u003cp\u003eI was doing some typograph for Chinese text and want to insert a space equal to\nthe width of a Chinese character.\u003c/p\u003e\n\u003cp\u003e\u003cfont color=\"red\"\u003e最近在做一些中文排版的工作，有一个需求是在中文字符之间插入空格，并且空格的宽度等于中文字符的宽度，在某些情况下这样排版显得更加美观。\u003c/font\u003e\u003c/p\u003e","title":"Space for CJK Languages (CJK 语言中的空格)","type":"posts"},{"content":"之前感叹过使用中文搜索经常找不到想要的结果，这篇文章总结我对于如何有效搜索的一些想法。\n使用英文搜索 # 之所以使用英文搜索，一方面因为中文互联网世界的信息很多都是复制粘贴别处的文章，或者虽然是原创，写的语焉不详，没有自己的总结和分析，有价值的信息太少。另外，由于谷歌退出了中国，目前谷歌对中文搜索服务的质量似乎已经不太关注了，使用中文在谷歌搜索，经常会看到很多 SEO 网站 (这种网站也被称为“内容农场”，content farm)，像什么 hotbak，兰州养生网，谷歌也没有采取任何行动打击这种辣鸡网站，所以现在谷歌的中文搜索体验也不是很好了。\n使用长句子搜索还是关键词搜索？ # 有的人用中文搜索问题，喜欢用自然语言描述自己的问题，全部输入到搜索框，以“禁止 vscode 按下点自动补全”为例，有的人可能会直接输入下面的查询语句\n怎么禁止在 vscode 里面按下键盘上的点自动补全？ 一般来说，输入一句话相对于输入关键词查找，得到的相关结果会更少，因为一句话一般会包含一些没有信息含量的词语。虽然谷歌如何使用这句话中的词语很难有一个确定的答案，但是搜索引擎在匹配的时候肯定会考虑这些无用的词语，这样其实暗中降低了找到有用信息的概率。最好使用比较简短的关键词，或者关键词再加简短的不完整语句，例如，要给一个 Python list 的每个元素加上 index 转为 tuple，可以用下面的查询\npython turn list item to indexed tuple 没必要使用完整但冗长语句查询\nhow do I turn a list item to an indexed tuple in Python? 另外，保证自己的关键词比较通用(也就是遇到问题大家都会用的一些词语)，例如右键菜单相关的问题，context menu 就是一个必要的词语。如果想要精确匹配，就用比较多的关键词缩小候选范围，反之就可以用较少的关键词。\n这里有一个例外，就是搜索错误，例如运行 python 代码，出现一个错误，程序打印了许多 stacktrace。这时候可以直接把异常复制过来搜索相关问题，找到解决方案。但是也不能复制过多无用的信息，例如，如果是自己的写的代码模块报错，文件名，第几行等信息，就不用复制，这些信息不是通用的，如果加入搜索查询中，反而会导致匹配的网页减少，降低找到答案的可能性。\n如何确定搜索关键词？ # 不经常使用英语的人，在搜索的时候遇到的很大的一个挑战，就是面对一个想要解决的问题，不知道用什么英语关键词来搜索，思维还是中式的。好的关键词很重要，如果关键词不对，就可能错过要找的东西。\n我认为比较好的方式，是先想清楚我们到底想要问什么问题，特别是对于技术问题，问题发生的地方，现象是什么，例如我之前遇到的鼠标右键菜单卡顿的问题，右键菜单，发生的地方是文件管理器，系统是 windows，现象是卡顿，有了这些关键信息，很容易提出搜索词： windows，file explorer，context menu，hangs。根据这些检索词，从返回的结果中就能够找到满意的答案，如果少了关键词，结果差别很大。\n另外，有时候一个检索词可能有近义词，如果这个检索词搜出来的结果不理想，可以换一个近义词试试。例如想要表达「无响应」，你可以说 hangs，也可以说 freezes。再比如，你想要禁止某个东西，可以说 prevent something from doing something，也可以说 disable something。换一个检索词或者说法可能就柳暗花明了！\n积累专业相关英语词汇 # 使用英语搜索，一个需要长期培养的能力是熟练掌握中文和英文的对应关系，例如，文件浏览器无响应，那么我们要知道，\u0026ldquo;文件浏览器\u0026quot;用英语怎么说，\u0026ldquo;无响应\u0026quot;怎么表达，无响应可以说 “hangs” 或 \u0026ldquo;freezes\u0026rdquo;，右键菜单，我们要知道它的英文是 “context menu”；再比如我们想配置 Vim 的自动补全 (Auto completion)功能，那么我们得知道\u0026quot;自动补全\u0026quot;用英语怎么来说。这些词语有的是没办法从字面翻译的，或者从字面翻译比较蹩脚，我们必须知道固定的说法，不能用 chinglish 或者机翻，否则搜索出来的结果也不好。平时注意积累本领域常用的中文词汇对应的英语词汇，搜索的时候就不会写不出检索词。\n递进式检索\u0026ndash;从搜索结果中寻找蛛丝马迹 # 有的时候，我们遇到了一个问题，如果对这个领域比较陌生，我们甚至不知道用什么关键词来搜索，不知道关键词，就搜不到有用的内容，搜不到有用的内容，就学不到相关的关键词，陷入了一种死循环。\n这个时候可以先尽量写出自己认为正确的检索词，或者可能找到相关答案的检索词，采用旁敲侧击的方式来解决，大量翻阅返回的结果，这些返回的网页中，可能就包含我们需要的概念对应的专业词汇。对于复杂的问题，可能需要根据搜索返回的结果以及自己的理解，一步步优化自己的检索词，经过多个来回，才能找到自己想要的答案。\n例如，我们看到别人在视频中使用 Vim 的命令行模式时，可以使用 Tab 来补全命令的参数或者补全命令，这个需要进行设置才能生效或者达到自己需要的效果，但是我们不知道应该设置哪个选项，可以使用初步的检索词\nvim Tab Completion Command line 然后从返回结果找到这个页面，进而知道有两个选项控制 vim 在命令行的自动补全功能，分别是 wildmenu 和 wildmode，知道这个以后，就可以比较轻松的找到相关的设置了。\n","date":"9 May 2020","externalUrl":null,"permalink":"/2020/05/09/search_for_solution_with_web_engine/","section":"Posts","summary":"\u003cp\u003e之前感叹过\u003ca href=\"https://jdhao.github.io/2020/01/22/why_use_english_and_google/\" target=\"_blank\"\u003e使用中文搜索经常找不到想要的结果\u003c/a\u003e，这篇文章总结我对于如何有效搜索的一些想法。\u003c/p\u003e","title":"如何高效使用搜索引擎解决技术问题","type":"posts"},{"content":"My Git learning notes.\nHow to change most recent commit message # After we have added a local commit, we may find that we need to do some updates before pushing to remote repo. We can use git commit --amend to change last commit.\nWith --amend option, we can change not just commit message. Files in local repo can also be updated. After using this option, last local commit will be replaced with the new commit.\nReferences # https://stackoverflow.com/q/179123/6064933 https://help.github.com/en/github/committing-changes-to-your-project/changing-a-commit-message How to show changes for a specific file # Sometimes, we want to show the changes for a particular file across commits. This can be achieved by git log command:\ngit log -p \u0026lt;file_path\u0026gt; The -p option will show detailed diff info for the file.\nA more complete and useful version is:\ngit log --stat -p --follow \u0026lt;file_path\u0026gt; Meaning of options used:\n--stat: show info about file changed, deletions and insertions. --follow: show file change info before it was renamed (by default, file history before renaming is not shown). To show only the latest five changes, we can use the -n option:\ngit log --stat -p --follow -n 5 \u0026lt;file_path\u0026gt; A similar command is git whatchanged:\ngit whatchanged -p \u0026lt;file_path\u0026gt; The git-whatchanged command is similar to git log and is kept for backward compatibility. New users are encouraged to use git log instead.\nReferences # Difference between git-log and git-whatchanged. git-whatchanged doc. https://stackoverflow.com/a/12359963/6064933 See changes to a specific file. https://kgrz.io/use-git-log-follow-for-file-history.html Git log doc. How to set up editor for git commit # I am used to writing my commit message on the command line with -m option (git commit -m \u0026quot;xxx\u0026quot;). This works well for short commit message. When we want to write the detailed explanation for a change in commit message, it is better to do it in a text editor, e.g., in Vim or Neovim.\nThere are basically two way to set up the editor.\nSet up the EDITOR and VISUAL env variable: export EDITOR=\u0026#34;nvim\u0026#34; export VISUAL=\u0026#34;$EDITOR\u0026#34; Set up the editor git uses via git config: git config --global core.editor \u0026#34;nvim\u0026#34; After that, when you want to commit, just type git commit in the command line.\nNeovim will be opened with a file named COMMIT_EDITMSG, you can edit this file. Anything not starting with # will be treated as your commit message. After you have done writing the commit message, exit the insert mode, save the file and quilt. This commit will be done.\nReferences # https://stackoverflow.com/q/2596805/6064933 https://stackoverflow.com/q/13239368/6064933 ","date":"7 May 2020","externalUrl":null,"permalink":"/2020/05/07/git_learning_notes_s2/","section":"Posts","summary":"\u003cp\u003eMy Git learning notes.\u003c/p\u003e","title":"Git Learning Notes (2)","type":"posts"},{"content":" Changelog 2021-08-21: Update the part on how to open URLs since some options are removed. Kitty is a fast and lightweight terminal emulator for Mac and Linux. In this post, I will summarize some of its settings.\nWe can download the kitty binary release from its GitHub release page. After installation, its config file is located at $HOME/.config/kitty/kitty.conf.\nHow to copy and paste in Kitty terminal? # By default, to copy selected text to clipboard in Kitty, use the shortcut Ctrl+ Shift + C. To paste selected text, we can use mouse middle click.\nWe can also edit the Kitty config and add more shortcut for copy-pasting:\nmap cmd+c copy_to_clipboard map cmd+v paste_from_clipboard map shift+insert paste_from_clipboard Most terminal emulators have this nice feature to copy the selected text to clipboard automatically. In Kitty, we can also do this by enabling the following option:\ncopy_on_select yes How to open URLs? # Iterm2 has a feature to open a URL in default browser if you press Ctrl and click the URL link. In kitty, you can press Ctrl + Shift and then click the left mouse to open a URL.\nIf you are using the lastest version of Kitty (tested on kitty 0.23), you can also add the following kitty config:\nmouse_map ctrl+left press ungrabbed,grabbed mouse_click_url Tab configuration # By default, Kitty will show tab when tab number is above 1. The tab will be shown at the bottom of Kitty window. To change this behaviour, use the following setting:\ntab_bar_edge top Use option as alt key # By default, Option + LETTER will input the corresponding Unicode characters on macOS. So any shortcut starting with Option can not work properly. To use Option as Alt, use the following config:\nmacos_option_as_alt yes More documentation here.\nHow to change color schemes? # Kitty uses a list of colors for setting the color scheme. Unlike iterm2, we need to manually change the color config inside kitty.conf.\nWe can find a lot of color schemes or themes for Kitty on GitHub. To use these color themes, just copy the color definition to your Kitty config.\nThis repo also has a lot of Kitty themes for you to choose.\nReferences # Offical on kitty conf: https://sw.kovidgoyal.net/kitty/overview/#configuring-kitty Copy text on select. Copy and paste in Kitty. Use option as meta key. ","date":"5 May 2020","externalUrl":null,"permalink":"/2020/05/05/kitty_config_mac/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eChangelog\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-08-21: Update the part on how to open URLs since some options are removed.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/kovidgoyal/kitty\" target=\"_blank\"\u003eKitty\u003c/a\u003e is a fast and lightweight terminal\nemulator for Mac and Linux. In this post, I will summarize some of its\nsettings.\u003c/p\u003e","title":"Kitty Terminal Config on Mac","type":"posts"},{"content":"本文总结一些 Docker 使用以及 Docker 镜像构建过程中遇到的问题。\nUnable to find xxx locally # 使用 docker run -it centos:7 命令，遇到提示：\nUnable to find image \u0026lsquo;centos:7\u0026rsquo; locally\n可以等待一会，收到提示：\n7: Pulling from library/centos Digest: sha256:307835c385f656ec2e2fec602cf093224173c51119bbebd602c53c3653a3d6eb Status: Downloaded newer image for centos:7 当使用 docker run 运行镜像的时候，如果镜像不存在，那么 docker 会从 docker hub 寻找对应的镜像，下载运行。出现这个错误提示可能是因为网络原因，耐心等待就可以了，参考这里\nwget 命令未找到 # docker hub 上的 CentOS 镜像和普通的 CentOS 安装包有一定区别，执行的是最小安装，有很多常用的工具并没有安装，例如 wget, which 等，需要自己去安装。\nNvidia cuda 的 CentOS 系统镜像是基于 Docker hub 上 CentOS 7 的镜像，所以这些工具也没有安装，需要自己安装。\n参考 # https://stackoverflow.com/q/28885137/6064933 docker run -it 选项作用 # docker run 命令很常用的两个选项是 -it，-i 作用是把 host 的 input 和容器的 input 连接起来，-t 创造一个 pseudo terminal，这两个命令连起来使用，就好像直接在 container 里面创建了 bash shell，可以接收输入和输出，就像用户使用 host 机器的 shell 一样。\n参考 # https://stackoverflow.com/q/30137135/6064933 https://stackoverflow.com/a/22287905/6064933 如何从容器中拷贝东西到 host 机器 # 参考 这里，可以使用 docker cp 命令：\ndocker cp CONTAINER_ID:/path/inside/docker/container /path/in/host/machine Dockerfile 里面的 RUN 命令默认运行目录在哪里？ # Dockerfile 如果没有指定 WORKDIR，那么默认执行命令的目录是在 /，并不是 /root, 如果基础镜像指定了 work dir，那么 workdir 就是基础镜像指定的目录。因此在使用 Dockerfile 构建自己的镜像时，最好使用 WORKDIR 命令指定自己的工作目录，避免受到基础镜像的影响。\n参考 # What\u0026rsquo;s the default WORKDIR in docker? https://stackoverflow.com/q/35286990/6064933 Dockerfile 如何设置变量以便后续使用 # 使用 Dockerfile 构建镜像时，有时候我们需要设置一些变量，以便后续引用，节省时间。可以利用 ARG 命令设置变量，指的注意的是，ARG 命令设置变量，只在 build 的时候有效，ENV 设置的变量，镜像 build 完成，进入镜像以后，仍然是有效的。\n参考 # How to define a variable inside Dockerfile. Difference between ARG and ENV. COPY failed: Forbidden path outside the build context # 当我试图从当前 Dockerfile 所在目录的上一级目录拷贝某个文件到镜像的某个目录：\nCOPY ../some_file /path/inside/container 然后遇到了上述错误，原因是 docker 只允许从当前 Dockerfile 的build context下某个目录 copy 文件。\n参考 # The purpose of build contex https://medium.com/lucjuggery/docker-tips-about-the-build-context-dbc76505e178 Dockerfile ARG 和 ENV 指令无法扩展某些变量或者符号 # Dockerfile 的 ARG 和 ENV 指令，无法 expand $HOME, ~，如果要使用路径，最好使用绝对路径。\n例如，ctags 被安装在 /root/tools/ctags，如果用 ENV 定义 PATH 环境变量：\nENV PATH=$HOME/tools/ctags/bin:$PATH 然后在 Dockerfile 中运行下面的指令：\nRUN which ctags 会提示错误，如果我们把 PATH 打印出来 RUN echo $PATH, 会发现 ctags 有关的一项目录是错的，显示的是 /tools/ctags/bin，也就是使用 ENV 指令定义 PATH 的时候，$HOME 是空的，并不会被 expand 为 /root。同样如果使用 ~：\nENV PATH=~/tools/ctags/bin:$PATH 也不会被正确 expand 为 /root, 如果要运行 ctags 相关的指令也是不成功的。如果要设置环境变量，可以设置为绝对路径；如果觉得啰嗦，可以利用 ARG 自定义一个 HOME 变量：\nARG HOME=/root 然后在设置 ENV 变量的时候引用 HOME 变量就不会出错。\n如何从某一个命令之后开始强制重新 build？ # Dockerfile 如果从开始到某一步在 build 的时候没有出错，并且没有增加或者删除 build 的步骤，那么下一次 build 镜像的时候，默认使用上一步 build 的缓存，不会重新 build，这样可以加快镜像构建的速度。如果想从某一步开始重新开始 build，可以在这一步之前加入一个没用的不耗时的命令，例如\nRUN echo \u0026#34;hello world\u0026#34; 重新构建的时候，新加入的命令及以后的所有步骤就会重新 build。\n参考 # Disable cache for specific RUN command. source 命令未找到 # 当我试着用 RUN 指令运行 source 命令:\nRUN source /root/.bash_profile 遇到了错误提示：\nsource: command not found\n原因是什么呢，原来是 docker 默认用来执行命令的 shell 是 /bin/sh，并不是 bash，在 sh 下，source 命令并不存在，如果想要执行 source 命令。有两个办法，一个办法是使用 SHELL 指令，把使用的 shell 更改为 bash：\nSHELL [\u0026#34;/bin/bash\u0026#34;, \u0026#34;-c\u0026#34;] 另外一种办法是使用 exec 形式的 RUN 指令，仅仅在这个指令中使用 bash shell 而不是 sh：\nRUN [\u0026#34;/bin/bash\u0026#34;, \u0026#34;-c\u0026#34;, \u0026#34;source /root/.bash_profile\u0026#34;] 参考 # https://stackoverflow.com/a/39777387/6064933 登陆 container 以后 bash 不是 login shell # 运行容器以后，发现 /root/.bash_profile 没有生效，经过排查，发现原因是 bash 不是 login shell，可以设置 CMD 指令，把 bash 变为 login shell：\nCMD [\u0026#34;/bin/bash\u0026#34;, \u0026#34;-l\u0026#34;] 不要使用 docker commit 方式创建镜像 # 启动 docker 镜像以后，如果在里面又进行了修改（例如安装了额外的工具或者进行了其他的配置）, 那么使用 docker commit 会保存这些更改，生成新的镜像。但是这种方式生成的镜像，除了 作者，其他用户很难清楚到底进行了什么操作，安装了哪些东西，不利于后续的维护，因此更好的方式是使用 Dockerfile 管理镜像，把要安装的软件都放到 Dockerfile 里面配置。这样的话，其他用户也可以轻松使用你的 Dockerfile 构建出同样的 Docker 镜像。\n参考 # https://yeasy.gitbooks.io/docker_practice/image/commit.html https://stackoverflow.com/a/51763737/6064933 ","date":"2 May 2020","externalUrl":null,"permalink":"/2020/05/02/docker_knowledge_s2/","section":"Posts","summary":"\u003cp\u003e本文总结一些 Docker 使用以及 Docker 镜像构建过程中遇到的问题。\u003c/p\u003e","title":"Docker 学习系列 --- 2","type":"posts"},{"content":"Docker 是一种类似虚拟机的机制，允许我们在 host 机器创建一个隔绝的小型操作系统环境，并且可以保存下这个环境（称为 Docker 镜像），把这个 Docker 镜像部署到其他 host 机器，各个机器上的环境完全一致。这样我们就不需要每次在部署新环境的时候，重复执行安装程序、配置环境的流程，大大简化了我们的工作，提升了工作效率。\nDocker 镜像的使用 # Docker 镜像就像一个小的操作系统，从哪里获取我们需要的 Docker 镜像呢？ Docker hub 是 Docker 官方提供的镜像托管仓库，里面包含了很多用户上传的镜像。docker hub 上的镜像，可以直接使用 docker run 命令来运行镜像，不需要 docker pull,然后再 docker run。如果运行一个镜像不在本地，docker 会尝试从 docker hub 下载这个镜像，然后再运行。\n镜像 与 容器 两个概念有什么区别？ # 可以简单认为，镜像是死的，是冻结的容器，镜像实例化运行以后，就是容器，所以从一个镜像可以运行多个容器，这些容器初始状态都是完全一样的。镜像和容器的关系，类似于编程中 ”类“ 和 ”对象“ 的关系。\n参考 # https://stackoverflow.com/q/21498832/6064933 https://stackoverflow.com/q/23735149/6064933 如何退出当前运行的 docker 容器 # 如果以 -t 方式运行容器，那么可以使用 ctrl-p 然后 ctrl-q 挂起容器，后续可以再使用 attach 命令进入容器，参考这里。\n重新进入正在运行的容器？ # 当容器以交互式方式运行 (-i) 时，可以在多个地方连接到这个容器，查看容器的内容，连接到正在运行的容器的命令是：\ndocker attach CONTAINER_ID 此时在一个地方输入指令，其他地方也会同时显示相同的指令和输出结果。\n列出系统上正在运行的运行 # 要列出系统上目前正在运行的容器：\ndocker ps 停止容器运行 # 要停止一个正在运行的 container，使用\ndocker stop CONTAINER_ID container 运行退出以后，不会自动删除，还在系统上，需要重启的时候可以使用(参考 这里)\ndocker start -ai CONTAINER_ID 删除容器 # 如果需要删除某个 container，可以使用(参考这里)\ndocker rm CONTAINER_ID Cuda Dockerfile 资源 # 英伟达官方提供了大量的含有 Cuda 环境的 Dockerfile 资源，地址如下：\nhttps://gitlab.com/nvidia/container-images/cuda\n包含了各个系统以及各个版本的 cuda。如果要构建使用英伟达显卡的镜像，可以使用这些镜像中的一个作为基础镜像。\nDocker 镜像构建重要心得 # 我们可以使用 Dockerfile 来构建 Docker 镜像，Dockerfile 相当于是构建镜像的模版。构建镜像最令人烦躁的问题就是在构建过程中突然出错，我们不得不一次次修改 Dockerfile，解决各种问题。所以构建 Docker 镜像的一个重要心得就是：尽量防止 build 出错。\n我们构建镜像的时候，一般会从一个基础镜像开始构建，由于基础镜像通常执行的是最小安装[^1]，很多常用工具并没有安装，所以镜像 build 过程中，经常因为没有安装一些库而中途出错。一个好的方法是开两个 terminal 窗口，一个窗口，可以先 docker run 进入基础镜像的容器，然后在容器里面一步一步运行想要执行的操作，如果在基础镜像里面运行没有错误，在另外一个 terminal 窗口，把这些操作写到 Dockerfile；如果在基础镜像里面运行某个命令有错误，那么解决这个错误，把需要添加的库或者需要执行的命令补充到 Dockerfile 里面。\n按照上面这个步骤来建立 Dockerfile，可以极大减少出错的机会。\n","date":"2 May 2020","externalUrl":null,"permalink":"/2020/05/02/docker_knowledge_s1/","section":"Posts","summary":"\u003cp\u003eDocker 是一种类似虚拟机的机制，允许我们在 host 机器创建一个隔绝的小型操作系统环境，并且可以保存下这个环境（称为 Docker 镜像），把这个 Docker 镜像部署到其他 host 机器，各个机器上的环境完全一致。这样我们就不需要每次在部署新环境的时候，重复执行安装程序、配置环境的流程，大大简化了我们的工作，提升了工作效率。\u003c/p\u003e","title":"Docker 学习系列 --- 1","type":"posts"},{"content":"Writing robust scripts # We should use the following options in our bash script for better quality:\nset -eux set -o pipefail Meaning of these option:\n-e: Exit immediately if a command fails. -u: If a variable is not set, this is considered an error1. -x: Expand variables in a command and print it before executing the command (better for debugging if command fails). -o pipefail: If any command in a pipe fails, this pipe will fail. For more options, see bash set command doc.\ncommon check conditions for files # Some commonly used options for checking file conditions:\noption meaning [ -d FILE ] True if FILE exists and is a directory [ -f FILE ] True if FILE exists and is a regular file [ -r FILE ] True if FILE exists and is readable [ -w FILE ] True if FILE exists and is writable [ -x FILE ] True if FILE exists and is executable [ -z STRING ] True if length of STRING is zero [ -n STRING ] True if length of STRING is not zero Note that to check if the opposite is true, use [ ! condition ].\nUse [ ] or [[ ]] for condition check? # Both [ ] and [[ ]] can be used to check some conditions, but [ ] is POSIX compatible, and [[ ]] is not. Both bash, zsh support [[ ]].\n[[ ]] is also more versatile and powerful than [ ]. For example, it supports \u0026amp;\u0026amp;, || and grouping command using () etc.\nCompare string equality # We can use = and != to compare the equality of strings. Unlike common programming languages, use of == is non-standard (see here).\nHow to set boolean variable? # In bash, there is not really a boolean type. We can just use literal string true to set a bool variable and check if variable is equal to string true. For example:\nuse_python=true if [[ $use_python = true ]]; then # do something else: # do another thing fi How to check if a command exists? # We can use command -v YOUCOMMAND to check if YOURCOMMAND exists. For example:\nif [[ ! \u0026#34;$(command -v rg)\u0026#34; ]]; then # install ripgrep else echo \u0026#34;ripgrep already exists. No action needed.\u0026#34; fi According to here, which command is not a reliable way to do this, since it may return an exit code of 0 even if no command is found.\nReferences # Introduction to bash if. More advanced if usage. Difference between [ and [[. Check if a command exists in bash script. How to declare boolean variable. you will see unbound variable error message.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"27 April 2020","externalUrl":null,"permalink":"/2020/04/27/bash_script_notes_s1/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eWriting robust scripts \n    \u003cdiv id=\"writing-robust-scripts\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#writing-robust-scripts\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eWe should use the following options in our bash script for better quality:\u003c/p\u003e","title":"Bash Script Note 1","type":"posts"},{"content":"","date":"26 April 2020","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"引子 # 最近使用工作电脑的时候，不知道为什么，在文件资源管理器里面鼠标右键单击打开菜单(也叫context menu)的时候，系统很大概率会卡顿，鼠标指针开始转圈，文件管理器白屏，然后会提示\u0026quot;未响应\u0026quot;,过一会儿，右键菜单才会出现。以至于我每次点击右键之前，都很烦躁，希望不要出现卡顿的情况。\n使用 Windows，总有一种碰运气的感觉，如果什么东西不能正常工作了，很多时候，我们并不清楚为什么？可能重启一下，就没有这个问题了。另外一些问题，重启也无法解决，譬如这个右键菜单卡顿的问题，我**重启了好几次也没有用。从这个角度来看，我更喜欢 Linux 系统，基本上出现了问题，从谷歌总能找到确定性（definitive）的答案，而不是像 Windows 一样，你需要尝试 N 种你也不确定能不能成功的方案。\n解决方案 # 回归到这个问题，经过各种查找，大概确定这个卡顿的原因可能是第三方软件在右键菜单添加了太多项目，所以我们需要把一些没用的软件快捷方式从右键菜单里面清除出去。另外一些没用的软件，可以一起清理掉。\n第一步：清理无用的应用。打开 Win10 设置（快捷键 Win + I），进入应用，没用的，长时间未使用的应用全部卸载。\n第二步：清理右键菜单快捷方式。下载 ShellMenuView这个小工具(下载地址这里)。无需安装，解压即可运行。\n然后使用 Ctrl-F 快捷键查找希望禁用的右键快捷方式，找到某个项目以后，右键单击，然后选择 \u0026ldquo;Disable Selected Items\u0026rdquo; 或者直接使用 F7 快捷键。如果要查看该项目在注册表中的位置，可以用选择 \u0026ldquo;Open in RegEdit\u0026rdquo; 或者直接使用 F6 快捷键。\n进行上述操作之后，重启系统，在文件管理器使用右键菜单，发现卡顿消失，可以确定卡顿就是第三方在右键菜单添加项目导致的。\n参考 # https://superuser.com/q/5011/736190 Right click crashes Windows 10 Pro. https://windowsreport.com/windows-explorer-crash-right-click/ https://www.zhihu.com/question/41279815/answer/139007395 ","date":"26 April 2020","externalUrl":null,"permalink":"/2020/04/26/windows_context_menu_hang_solution/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003e引子 \n    \u003cdiv id=\"%E5%BC%95%E5%AD%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%BC%95%E5%AD%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e最近使用工作电脑的时候，不知道为什么，在文件资源管理器里面鼠标右键单击打开菜单(也叫\u003ca href=\"https://en.wikipedia.org/wiki/Context_menu\" target=\"_blank\"\u003econtext menu\u003c/a\u003e)的时候，系统很大概率会卡顿，鼠标指针开始转圈，文件管理器白屏，然后会提示\u0026quot;未响应\u0026quot;,过一会儿，右键菜单才会出现。以至于我每次点击右键之前，都很烦躁，希望不要出现卡顿的情况。\u003c/p\u003e","title":"解决 Windows 下文件管理器中右键单击无响应问题","type":"posts"},{"content":"最近几个月在手机上使用 justmysocks，感觉速度很慢，经常断流，连接不上。通过搜索，发现原因是使用的线路问题。为了学习之用，我们可以通过配置 obfs 增强服务稳定性。\njustmysocks 提供了五条线路，这五条线路使用的运营商不同，导致各条线路速度差异很大，经过测试，发现第三条线路速度比较稳定版。第三条线路使用的是中国电信的 CN2 GIA线路(可以简单认为该线路访问国外网站速度更快)，支持 obfs，但是需要进行额外的设置。以下为针对不同系统开启 obfs 的方法。\n安卓手机配置 # 除了 ss 客户端，还需要安装 simple-obfuscation 这个工具。打开 ss 客户端，添加新的配置，输入服务器地址，端口，密码。\n然后移动到配置最下面的插件部分，点击插件，选择 simple obfuscation.\n然后点击下面的配置，在弹出的页面，obfuscation wrapper 选择 tls，确认更改即可。\n最后保存这个新添加的配置，然后使用这个配置打开 ss。\nMac 设置 # Mac 客户端可以使用 shadowsocks-NG, 它自带了 obfs 插件，不需要额外再安装插件。设置 obfs 比较简单，在服务器设置那里，增加新的服务器，首先把线路 3 的 ip 以及端口，密码，加密方式等信息填好，然后 插件 那里填写 simple-obfs，插件选项填写 obfs=tls，保存配置即可。\nWindows 设置 # Windows 下开启 obfs，首先下载 obfs-local，解压到和 shadowsock.exe 同一个目录。然后添加新的服务器，填入线路3或者4的信息都可以，插件程序 栏目填 obfs-local，插件选项栏目填 obfs=tls，保存配置，使用该服务器即可。\n总结 # 经过测试，使用了 obfs 以后，访问谷歌的速度比之前快了一些，也更加稳定，延迟比较低，推荐使用。\n参考 # 安卓设置 obfs. Mac 设置 obfs. https://ijustmysocks.com/122.html ","date":"25 April 2020","externalUrl":null,"permalink":"/2020/04/25/shadowsocks_obfs_setup/","section":"Posts","summary":"\u003cp\u003e最近几个月在手机上使用 justmysocks，感觉速度很慢，经常断流，连接不上。通过搜索，发现原因是使用的线路问题。为了学习之用，我们可以通过配置 \u003ca href=\"https://github.com/shadowsocks/simple-obfs\" target=\"_blank\"\u003eobfs\u003c/a\u003e 增强服务稳定性。\u003c/p\u003e","title":"Shadowsocks 配置 obfs","type":"posts"},{"content":"When we are working on a project, we often need to log some message for easier debugging. How do we configure logging once and use it across the project?\nSet up logging for the project # Suppose we have the following file in our project:\nmain.py module1.py module2.py main.py is the entry point of our project and use functions or classes from module1 and module2.\nThe best practice is to set up logging in main.py like this:\nimport module1 import module2 import logging # other imports logging_level = logging.DEBUG main_logger = logging.getLogger() main_logger.setLevel(logging_level) # Set up a stream handler to log to the console stream_handler = logging.StreamHandler() stream_handler.setLevel(logging_level) formatter = logging.Formatter(\u0026#34;%(name)s - %(levelname)s - %(message)s\u0026#34;) stream_handler.setFormatter(formatter) # Add handler to logger main_logger.addHandler(stream_handler) # other codes In the above code, we define a root logger main_logger via logging.getLogger() (notice that no name is provided to this method), and set up the handlers and logging level properly.\nIn module1 and module2, we only need to define a logger like this:\nimport logging logger = logging.getLogger(__name__) # then use logger.info() or logger.debug() in your code. In other modules, if we define the logger using logging.getLogger(__name__), it will automatically use the settings from the root logger. This ensures that we only need to configure logging once in our project.\nChanging logging level to disable some logging message # There is also another benefit in using a unified config: we can easily control the logging message verbosity by changing the logging level. For example, in the above example, we set logging level in main.py to logging.DEBUG, so all logger.debug() and logger.info() message will be printed to the console. If we do not want to see debug messages anymore, we can set logging level to logging.INFO, which will disable any debug message across the whole project.\nDisable logging message from other packages # When we import 3rd party packages in our own project and set proper logging level for the project, if a logging message in 3rd party packages is above that level, the message will also be printed. Since we usually only care about logging messages in our project, we can disable logging message in 3rd party packages by setting their logger level higher, or by disabling logging entirely for 3rd party packages. Here is the code:\nimport logging # suppose that the logger level of our module is logging.DEBUG, we set # logger level of other module higher than logging.DEBUG for m in (\u0026#34;urllib3\u0026#34;, \u0026#34;foo\u0026#34;, \u0026#34;bar\u0026#34;): logging.getLogger(m).setLevel(logging.CRITICAL) # To disable it entirely, use the following. # logging.getLogger(m).disabled = True References # Using logging in multiple modules: https://stackoverflow.com/a/15735146/6064933 https://stackoverflow.com/q/47608069/6064933 Disable logger message from other packages. ","date":"24 April 2020","externalUrl":null,"permalink":"/2020/04/24/python_logging_for_multiple_modules/","section":"Posts","summary":"\u003cp\u003eWhen we are working on a project, we often need to log some message for easier debugging.\nHow do we configure logging once and use it across the project?\u003c/p\u003e","title":"How to Use Unified Logging Config Across Your Project","type":"posts"},{"content":"This is my personal note on learning Git.\nUncommited changes in a file are visible in all branches? # I checked out from master branch to branch feature-foo and made some uncommitted changes in a file foo.py. When I switch back to branch master, I am surprised to find that changes in foo.py are visible in master branch.\nI have also thought that changes in a branch belongs to that branch, but it seems that I am terribly wrong. The truth is: until you commit your changes in a certain branch, it will be visible in other branches too.\nReferences # Git automatically merge changes in one branch to master. Git keeps showing my changes when I switch branches. Why are changes in one branch visible in another branch? How to show file version in a specific commit # We can use git show \u0026lt;revision\u0026gt;:/path/to/file to show the version of file in a specific commit.\n\u0026lt;revision\u0026gt; can be a commit hash or something like HEAD or HEAD~2 or tag name that can identify a specific commit. For example, to show file readme.md in current HEAD, use the following command:\ngit show HEAD:readme.md To show readme.md in commit 410d12ed0, use git show 410d12ed0:readme.md.\nReferences # https://www.systutorials.com/how-to-view-a-file-at-a-specific-commit-in-git/ https://stackoverflow.com/a/338470/6064933 Delete files that have been commited after adding them to gitignore # We may have commited some files that we do not want to include in the repo to the remote repo. How do we delete these files from remote repo?\nFirst, we need to edit .gitignore file and add the files we want git to ignore. Then use the following command to delete these files from remote repo:\ngit rm --cached path/to/file git commit -m \u0026#34;delete unwanted files\u0026#34; git push origin master The command git rm --cached test.txt will remove file test.txt from the Git index, but not from your disk. If you omit option --cached, the file will also be removed from your disk.\nReferences # https://stackoverflow.com/a/7927283/6064933 Show difference between working directory, index and commit tree for a certain file # Suppose we want to know the difference bewtween working directory, index, and commit tree for file test.txt, we can use the following commands:\ngit diff test.txt: difference between working directory and index git diff HEAD test.txt: difference between working directory and HEAD git diff --staged test.txt or git diff --cached test.txt: difference between index and HEAD. References # https://stackoverflow.com/q/3527856/6064933 https://stackoverflow.com/a/30023448/6064933 Difference between git add -A, git add . and git add -u? # For the commit tree, there are three types of files: modifed, deleted and new files. What these commands do to the three types of files are:\ncommand modified files deleted files new files description git add -A yes yes yes stage modified, deleted and new files git add . yes yes yes stage modified, deleted and new files EndFragment git add -u yes yes no stage modified and deleted files, but not new files git add --ignore-removal . yes no yes stage new and modified files, but not deleted files Using git add -A and git add -u without specifying the path will act on the entire working tree, regardless of your current directory:\nIf no is given when -u option is used, all tracked files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).\nReferences # https://stackoverflow.com/a/26039014/6064933 How to list all file in current repository # We can use git ls-tree command:\ngit ls-tree --name-only --full-tree -r HEAD The meaning of options:\n--full-tree: print the whole tree under the working tree root no matter which directory you are in --name-only: print file names only (do not show file type and hash etc.) -r: recursively list files under the root directory. Note that if -r is omitted and only --full-tree and --name-only are used, only files and directories under repo root are listed.\nWe can also use git ls-files to show all the file in current repo. By default, git ls-files will also show files that are staged but not yet committed, which is different from git ls-tree since it only shows committed files. git ls-files also has more features than that.\nReferences # https://stackoverflow.com/q/8533202/6064933 ","date":"23 April 2020","externalUrl":null,"permalink":"/2020/04/23/git_learning_notes_s1/","section":"Posts","summary":"\u003cp\u003eThis is my personal note on learning Git.\u003c/p\u003e","title":"Git Learning Notes (1)","type":"posts"},{"content":"","date":"19 April 2020","externalUrl":null,"permalink":"/tags/c/","section":"Tags","summary":"","title":"C","type":"tags"},{"content":"This post summarizes how to set up various plugins needed for C++/C code editing, linting and formatting.\nPre-requisite # This post assumes that deoplete has been installed and set up properly on your system. If that is not the case, you may refer to this post on how to do it.\nInstall clang and llvm # To enable C++/C code auto-completion, we need to install clang first.\nLinux # On Linux, we can build the latest clang from source using the following command:\ngit clone --depth=1 https://github.com/llvm/llvm-project.git cd llvm-project mkdir build \u0026amp;\u0026amp; cd build cmake -DLLVM_ENABLE_PROJECTS=clang -G \u0026#34;Unix Makefiles\u0026#34; -DCMAKE_BUILD_TYPE=Release ../llvm make -j$(nproc) The flag -DCMAKE_BUILD_TYPE=Release will build a release version of clang, which is much smaller than the default one (Debug type).\nThe build process will take about half of an hour on our 12-core server, and the time may vary depending on your hardware.\nAfter that, we need to add the clang binary path to the PATH variable, and add the directory containing libclang.so to env variable LD_LIBRARY_PATH. Edit ~/.bash_profile and add following settings:\nexport PATH=\u0026#34;$HOME/tools/llvm-project/build/bin:$PATH\u0026#34; export LD_LIBRARY_PATH=\u0026#34;$HOME/tools/llvm-project/build/lib:$LD_LIBRARY_PATH\u0026#34; Under directory $HOME/tools/llvm-project/build/bin, there are a lot of executables, including clang, clang++, and clang-format (which we will use to format C++/C code later).\nDo not forget to source the file to refresh the env variables.\nmacOS # For macOS, clang is shipped with it so we do not need to install clang. We need to install clang-format though since clang-format is not shipped with clang by default (source here).\nThe easiest way to install clang-format is via Homebrew:\nbrew install clang-format On Mac, the name of the clang share library is libclang.dylib, and we should add its parent directory to env variable LD_LIBRARY_PATH1:\nexport LD_LIBRARY_PATH=\u0026#34;/Library/Developer/CommandLineTools/usr/lib/:$LD_LIBRARY_PATH\u0026#34; Auto-completion # To provide C++/C code autocompletion, we can use deoplete-clang:\n\u0026#34; Install using vim-plug Plug \u0026#39;deoplete-plugins/deoplete-clang\u0026#39; If you have set up the libclang path properly, then auto-completion should work when you start editing C++/C source files.\nLinting # For code linting, we can use ale. Add the following setting to Neovim config:\nlet g:ale_linters = { \\ \u0026#39;python\u0026#39;: [\u0026#39;pylint\u0026#39;], \\ \u0026#39;vim\u0026#39;: [\u0026#39;vint\u0026#39;], \\ \u0026#39;cpp\u0026#39;: [\u0026#39;clang\u0026#39;], \\ \u0026#39;c\u0026#39;: [\u0026#39;clang\u0026#39;] \\} Code formatting # We can use the command line tool clang-format shipped with clang for code formatting, with the help of pluign Neoformat to format our code. Make sure that clang-format is on your PATH. Add the following settings to Neovim config:\n\u0026#34; custom setting for clangformat let g:neoformat_cpp_clangformat = { \\ \u0026#39;exe\u0026#39;: \u0026#39;clang-format\u0026#39;, \\ \u0026#39;args\u0026#39;: [\u0026#39;--style=\u0026#34;{IndentWidth: 4}\u0026#34;\u0026#39;] \\} let g:neoformat_enabled_cpp = [\u0026#39;clangformat\u0026#39;] let g:neoformat_enabled_c = [\u0026#39;clangformat\u0026#39;] Notice that the linter name for clang-format is clangformat, not clang-format. I have wasted ten minutes trying to find why clang-format does not with Neoformat until I found here that we should use clangformat as the linter name.\nReferences # Build and run clang \u0026ndash; official guide. Build clang. ALE: supported tools. clang-format doc. clang-format style options. you can find its path via command mdfind -name libclang.dylib.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"19 April 2020","externalUrl":null,"permalink":"/2020/04/19/nvim_cpp_and_c_completion/","section":"Posts","summary":"\u003cp\u003eThis post summarizes how to set up various plugins needed for C++/C code\nediting, linting and formatting.\u003c/p\u003e","title":"Set up for C++/C Development in Neovim","type":"posts"},{"content":"I am trying to generate a custom time format using the Python datetime package. My original code is:\nfrom datetime import datetime print(datetime.now().strftime(\u0026#34;%Y-%m-%d %H:%M:%S%z\u0026#34;)) Strangely, the time zone field %z is not present in the generated time string. The generated string is like:\n\u0026lsquo;2020-04-17 20:41:35\u0026rsquo;\nI checked the documentation of strftime(), and the meaning of %z is:\nUTC offset in the form ±HHMM[SS[.ffffff]] (empty string if the object is naive).\nHere, we need to understand what is a naive or aware time object. Simply put, a naive time object has no timezone info, thus is incomplete. On other hand, an awaretime object has timezone info and is complete. A full explanation can be found here.\nBy default, the time object we get from datetime.now() is a naive object, thus having no timezone info attached. To convert the time object to an aware object with our local time zone info, we can use datetime.astimezone():\naware_time = datetime.now().astimezone() print(aware_time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S%z\u0026#34;)) Now, we will get the expected result:\n2020-04-17 20:53:13+0800\nReferences # %Z in strftime() does not work . How to make a naive time object an aware time object. What is the point of a naive datetime? ","date":"17 April 2020","externalUrl":null,"permalink":"/2020/04/17/python_datetime_timezone/","section":"Posts","summary":"\u003cp\u003eI am trying to generate a custom time format using the Python \u003ccode\u003edatetime\u003c/code\u003e\npackage. My original code is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrftime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;%Y-%m-\u003c/span\u003e\u003cspan class=\"si\"\u003e%d\u003c/span\u003e\u003cspan class=\"s2\"\u003e %H:%M:%S%z\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Get Current Time with Time Zone Info in Python","type":"posts"},{"content":"This is a simple post about how to send JSON-like Dict data to a Flask server via requests package.\nPost dict to Flask server # To post Python dict using requests package, we can use the data parameter:\nimport requests payload = {\u0026#39;foo\u0026#39;: 1, \u0026#39;bar\u0026#39;: 2} requests.post(url, data=payload) In the above example, the Content-Type for posted data is application/x-www-form-urlencoded, you can get the posted data in the Flask server side via request.form:\nfrom flask import request data = request.form.to_dict() Post and receive dict with value of list type # One caveat when we use request.form.to_dict() is that we only get the first element for a dict value of list type. For example, if payload is the following dict:\npayload = {\u0026#39;id\u0026#39;: \u0026#39;123\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;jpg\u0026#39;, \u0026#39;box\u0026#39;: [0, 0, 100, 100]} On the Flask server side, after request.form.to_dict(), you only get the following:\n{\u0026#39;id\u0026#39;: \u0026#39;123\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;jpg\u0026#39;, \u0026#39;box\u0026#39;: \u0026#39;0\u0026#39;} which is completely non-obvious for Flask beginners. To get the full list instead, we have two ways:\nUse requests.form.to_dict(flat=False) (see here on the description about to_dict()). One drawback is that values that are non-list originally are converted to list. So now you get: {\u0026#39;id\u0026#39;: [\u0026#39;123\u0026#39;], \u0026#39;type\u0026#39;: [\u0026#39;jpg\u0026#39;], \u0026#39;box\u0026#39;: [\u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;100\u0026#39;, \u0026#39;100\u0026#39;]} Use request.form.getlist('key') to get the list corresponding to key, more about this here. Directly posting JSON data # Another way to post Python dict is to directly post and receive JSON data. When making requests, we can use the json parameter of requests.post() method:\nr = requests.post(url, json=payload) In this way, requests package will serialize your dict into JSON format. The Content-Type in HTTP header will be set to application/json. In the Flask side, we need to use request.get_json() to get the posted JSON data.\nPost or return base64 encoded image in dict # When you post base64 encoded image in dict via requests package, you may see the following error:\nTypeError: Object of type bytes is not JSON serializable\nThis is because the Python JSON library cannot serialize byte type. You can convert the base64 encoded image as string via decode() method:\nimport base64 import requests with open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;) as f: im_b64 = base64.b64encode(f.read()) payload = {\u0026#39;image\u0026#39;: im_b64.decode()} r = requests.post(url, json=payload) Similarly, when you want to return base64 encoded image in the Flask server side via jsonify() method, you need also to convert bytes type to str before JSON library can serialize it.\nReferences # Flask: get request.form as normal dict. Convert form to dict in Flask. Flask: post a list. Flask: objects of bytes type not JSON serializable. Content-Type in POST request. Post JSON via Python requests package. Send multipart/form-data request in Python. ","date":"13 April 2020","externalUrl":null,"permalink":"/2020/04/13/build_webapi_with_flask_s3/","section":"Posts","summary":"\u003cp\u003eThis is a simple post about how to send JSON-like Dict data to a Flask server\nvia \u003ca href=\"https://requests.readthedocs.io/en/master/\" target=\"_blank\"\u003erequests\u003c/a\u003e package.\u003c/p\u003e","title":"Build Web API with Flask --- Work with JSON-like Dict","type":"posts"},{"content":"In this post, I want to write about how to build a simple image processing web API that returns the size of an image. The topics include how to build this web API with Flask and how to post image to this web API and get response.\nThere are mainly two ways by which we can send an image to the web service. Based on how you send the image, the way to get the uploaded image on the server side also varies.\nPost binary image # You can directly post binary image to the server using the files parameter of requests.post():\nurl = \u0026#39;http://127.0.0.1:5000/im_size\u0026#39; my_img = {\u0026#39;image\u0026#39;: open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;)} r = requests.post(url, files=my_img) # convert server response into JSON format. print(r.json()) In the above code, the Content-Type of the Header of the POST request will be multipart/form-data. Then in the server side, you can get the posted image like this:\nfrom flask import Flask, request, jsonify app = Flask(__name__) @app.route(\u0026#34;/im_size\u0026#34;, methods=[\u0026#34;POST\u0026#34;]) def process_image(): file = request.files[\u0026#39;image\u0026#39;] # Read the image via file.stream img = Image.open(file.stream) return jsonify({\u0026#39;msg\u0026#39;: \u0026#39;success\u0026#39;, \u0026#39;size\u0026#39;: [img.width, img.height]}) if __name__ == \u0026#34;__main__\u0026#34;: app.run(debug=True) In the server side, the posted image will be in request.files['image'], which is of type werkzeug.datastructures.FileStorage. You can save the image to disk via save() method of this object:\nfile.save(\u0026#39;im-received.jpg\u0026#39;) The image is also stored in file.stream, which is a file-like object so that you can easily read the image for later processing:\n# img is PIL Image object img = Image.open(file.stream) Finally, we construct a Python dict and convert it to JSON format via the jsonify() method provided by Flask.\nHow to post multiple files # To post multiple images to the server, you can post a list of file tuples like the following:\nmultiple_files = [ (\u0026#39;image\u0026#39;, (\u0026#39;test.jpg\u0026#39;, open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;))), (\u0026#39;image\u0026#39;, (\u0026#39;test.jpg\u0026#39;, open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;))) ] # simplified form # multiple_files = [ # (\u0026#39;image\u0026#39;, open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;)), # (\u0026#39;image\u0026#39;, open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;)) # ] r = requests.post(url, files=multiple_files, data=data) In the server side, you can still receive the posted images using request.files:\nfrom flask import Flask, request # ... other code files = request.files.to_dict(flat=False) ## files is a list containing two images. for i, file in enumerate(files): file.save(f\u0026#39;image-{i}.jpg\u0026#39;) Post additional data # We usually want to post more meta info than merely the image itself. We can use the data parameter in requests.post():\npayload = {\u0026#39;id\u0026#39;: \u0026#39;123\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;jpg\u0026#39;} r = requests.post(url, files=files, data=payload) To get the payload dict in the server side, we use request.form, which is of type werkzeug.datastructures.ImmutableMultiDict. We use request.form.to_dict() to convert the received form data into Python dict:\npayload = request.form.to_dict() id = payload[\u0026#39;id\u0026#39;] im_type = payload[\u0026#39;type\u0026#39;] Post base64 encoded image # Another way is to just encode the image with base64 and post all the info via data parameter in requests.post() in the client side.\nimport base64 with open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;) as f: im_b64 = base64.b64encode(f.read()) payload = {\u0026#39;id\u0026#39;: \u0026#39;123\u0026#39;, \u0026#39;type\u0026#39;: \u0026#39;jpg\u0026#39;, \u0026#39;box\u0026#39;: [0, 0, 100, 100], \u0026#39;image\u0026#39;: im_b64} In the server side, we fetch the posted payload, get the base64 encoded image and decode it:\nimport base64 import io from PIL import Image payload = request.form.to_dict(flat=False) im_b64 = payload[\u0026#39;image\u0026#39;][0] # remember that now each key corresponds to list. # see https://jdhao.github.io/2020/03/17/base64_opencv_pil_image_conversion/ # for more info on how to convert base64 image to PIL Image object. im_binary = base64.b64decode(im_b64) buf = io.BytesIO(im_binary) img = Image.open(buf) Post multiple based64 encoded image # To post multiple base64 encoded images to the server, post them as a list of base64 string:\nb64_ims = [] for im_path in im_paths: with open(im_path, \u0026#39;rb\u0026#39;) as f: im_b64 = base64.encode(f.read()) b64_ims.append(im_b64) payload = {\u0026#34;images\u0026#34;: b64_ims} In the server side, you can get the posted dict and decode the base64 image one by one, just like what I have shown above for a single image.\nReferences # Upload image in flask. Send file and JSON in single request. requests.post() method doc. Post file with requests. Get data received in Flask. Post multipart files. ","date":"12 April 2020","externalUrl":null,"permalink":"/2020/04/12/build_webapi_with_flask_s2/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to write about how to build a simple image processing web\nAPI that returns the size of an image. The topics include how to build this web\nAPI with Flask and how to post image to this web API and get response.\u003c/p\u003e","title":"Build Web API with Flask -- Post and Receive Image","type":"posts"},{"content":"Web API is a kind of web application. Simply put, web APIs are built for other applications to get info from the web server. For Python, Flask can be used to build web applications. In this post, I want to share how to build web APIs with Flask.\nA simple web API # Supposing that we want to build a simple web API that returns the square root a number, the following code shows how to do that:\nimport math from flask import Flask, request, jsonify app = Flask(__name__) @app.route(\u0026#39;/sqrt\u0026#39;, methods=[\u0026#34;POST\u0026#34;]) def sqrt(): num = request.form.get(\u0026#39;num\u0026#39;, type=int) return jsonify({\u0026#39;result\u0026#39;: math.sqrt(num), \u0026#39;msg\u0026#39;: \u0026#39;success\u0026#39;}) In the above code, we first create a flask application using Flask(__name__), which lets Flask know that we are building an application. We then use the @app.route() decorator to define a URL path that we can later incorparate with IP and port number to access our web API. The methods parameter is used to specify what kinds of HTTP requests the server can process from the client.\nBelow the app decorator, we define a view function to process the client request, the actual name of this view function does not matter. The view function name does not have be the same as app.route path (ref here).\nProcessing the client request # To process the client requests in the server side, Flask provides the request module. When a client is using a POST request to post a JSON object, the posted data will be available in request.form, which is like a Python dictionary. Note that by default, the value for a key is of string type. You have to specify the type parameter to convert the value to desired type:\nnum = request.form.get(\u0026#39;num\u0026#39;, type=int) If you do not use type=int, num will be a string instead of an integer..\nReturn JSON object to client # Flask provides the jsonify method to serialize any compatible data type to JSON format. Finally, we return the result in JSON format.\nRunning the development server # After we build the simple web API, we need to test if it works. First, we need to run the web server. Flask ships with a simple web server for testing purposes. There are two ways that we can run the web server: via app.run() or via the Flask command line interface.\nRun the HTTP server via app.run() # Add the following code to the Flask application module:\nif __name__ == \u0026#34;__main__\u0026#34;: # the server will listen on port 1234. Default is port 5000. app.run(port=1234) If we do not specify the host address, the default will be 127.0.0.1, which means that we can only access the service in our machine. To use the IP address of our machine, we can specify the host parameter in app.run:\napp.run(host=\u0026#34;0.0.0.0\u0026#34;, port=1234) Then other machines in the same network can access the web service.\nFinally, we can start the HTTP server with python application.py (suppose that our module is named application.py). We will see the following message on command line:\n* Serving Flask app \u0026#34;application\u0026#34; (lazy loading) * Environment: production WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead. * Debug mode: off * Running on http://127.0.0.1:1234/ (Press CTRL+C to quit) Run the server via Flask command line interface # The second and officially-recommended way to run Flask application is via the Flask command line interface (flask run).\nWhen we run the application using flask run, the following settings does not work:\nif __name__ == \u0026#34;__main__\u0026#34;: # when debug is True, flask will reload app once code changes. app.run(host=\u0026#34;0.0.0.0\u0026#34;, port=8081) The correct way to run the application is to run the following command:\nexport FLASK_APP=application FLASK_ENV=development flask run --host=0.0.0.0 --port 1234 FLASK_APP variable is used to specify which file our flask application resides. FLASK_ENV is used to specify the flask running environment. The default is production. If you use development, Flask will activate debug mode, i.e., it will reload the application once the code changes.\n--host is used to specify the host address. --port is used to specify the listening port. We can also change the port number via FLASK_RUN_PORT env variable:\nexport FLASK_APP=application export FLASK_RUN_PORT=1234 FLASK_ENV=development flask run --host=0.0.0.0 Auto reloading on code changes # Flask provides a debug mode where the app will be reloaded once the code changes, so we do not need to manually stop the server and run it again.\nIf we run the server via app.run(), we can activate debug mode via debug=True:\nif __name__ == \u0026#34;__main__\u0026#34;: # when debug is True, flask will reload app once code changes. app.run(host=\u0026#34;0.0.0.0\u0026#34;, port=1234, debug=True) We may encounter following errors when we run python application.py:\nOSError: [Errno 8] Exec format error\nThe reason for this error can be found here. To put it simply, if application.py has execution right, then Flaks assumes that the script can be run via ./application.py. So we must add shebang at the beginning of the module:\n!#/usr/bin/env python Or we must disable the execution right of this module. When the application is reloaded, it will be run via python application.py.\nAnother way is to run the app via Flask command line interface, as we have mentioned earlier. Set the FLASK_ENV variable to development or set FLASK_DEBUG to 1:\nexport FLASK_APP=application FLASK_ENV=development flask run --host=0.0.0.0 --port 1234 # or the following # FLASK_DEBUG=1 flask run --host=0.0.0.0 --port 1234 Test the web API # The full URL for the web API is: http://127.0.0.1:1234/sqrt.\nWe can test the web API via curl:\ncurl -XPOST -d num=4 \u0026#34;http://127.0.0.1:1234/sqrt\u0026#34; It is more convenient to test the API via requests package using the following code:\nimport requests def post_data(): url = \u0026#34;http://127.0.0.1:1234/sqrt\u0026#34; payload = {\u0026#39;num\u0026#39;: 4} response = requests.post(url, data=payload) return response.json() def main(): result = post_data() print(result) if __name__ == \u0026#34;__main__\u0026#34;: main() If everything is OK, you will see the following output:\n{\u0026#39;msg\u0026#39;: \u0026#39;success\u0026#39;, \u0026#39;result\u0026#39;: 2.0} References # Flask quickstart guide. What is endpoint in Flask. Run flask server. change host and port. configure flask server to be visible across the network. flask run: configure port. Get data received in Flask. ","date":"6 April 2020","externalUrl":null,"permalink":"/2020/04/06/build_webapi_with_flask_s1/","section":"Posts","summary":"\u003cp\u003eWeb API is a kind of web application. Simply put, web APIs are built for other\napplications to get info from the web server. For Python,\n\u003ca href=\"https://flask.palletsprojects.com/en/1.1.x/\" target=\"_blank\"\u003eFlask\u003c/a\u003e can be used to build web\napplications. In this post, I want to share how to build web APIs with Flask.\u003c/p\u003e","title":"Build A Web API Service Using Flask -- The Basics","type":"posts"},{"content":" Changelog 2020-12-24: Add how to convert pptx to pdf using unoconv. In this post, I will share how to convert PPTX file to images. There are two steps. The first step is to convert PPTX to PDF, and the second step is to convert PDF to JPEG.\nFirst, we need to install libreoffice:\napt update \u0026amp;\u0026amp; apt install libreoffice To install the latest version of libreoffice, run the following command instead:\n# in order to use add-apt-repository command apt install software-properties-common apt-add-repository -y ppa:libreoffice/ppa apt update \u0026amp;\u0026amp; apt install libreoffice Step one: from PPTX to PDF # To convert PPTX to image, we need to first convert it to PDF\nUse libreoffice directly # We can use soffice provided by libreoffice to convert pptx to pdf directly:\nsoffice --headless --convert-to pdf test.pptx This will create a file named test.pdf.\nUse unoconv # Apart from soffice, we can also use unoconv. Install the related packages first:\napt update \u0026amp;\u0026amp; apt install python3-uno unoconv Then use unoconv to convert pptx to pdf:\nunoconv -f pdf demo.pptx I met the following error when I run unoconv:\nunoconv: Cannot find a suitable pyuno library and python binary combination in /usr/lib64/libreoffice ERROR: Please locate this library and send your feedback to: [http://github.com/dagwieers/unoconv/issues](https://github.com/dagwieers/unoconv/issues) No module named uno unoconv: Cannot find a suitable office installation on your system. ERROR: Please locate your office installation and send your feedback to: [http://github.com/dagwieers/unoconv/issues](https://github.com/dagwieers/unoconv/issues) For me the error is because unoconv is using the wrong python. In fact, unoconv is just a python script with a shebang:\n#!/usr/bin/env python3 Since I also installed python3 via Anaconda and add it to the system path, the above shebang will actually use python3 from Anaconda, which is wrong.\nThe uno.py package is located in /usr/lib/python3/dist-packages/uno.py, and we need to use the system python3.\nSo we need to change the shebang of unoconv to:\n#!/usr/bin/python3 According to comment here, we can also sed to do this:\nsed -i \u0026#39;s|#!/usr/bin/env python3|#!/usr/bin/python3|\u0026#39; /usr/bin/unoconv Step two: from PDF to image # In order to turn PDF to images, we can use imagemagick or poppler.\nWith Imagemagick # We need to install imagemagick:\napt install imagemagick Then we can convert PDF file to image using convert:\nconvert -density 150 test.pdf -quality 80 output-%3d.jpg The -desnity option will control the dpi of generated image.\nPossible issues # During conversion, two errors occur after running the convert command:\nconvert-im6.q16: not authorized `multiple_img.pdf\u0026#39; @ error/constitute.c/ReadImage/412. convert-im6.q16: no images defined `output-%3d.jpg\u0026#39; @ error/convert.c/ConvertImageCommand/3258. For the first error, you can edit /etc/ImageMagick-6/policy.xml and change the following line:\n\u0026lt;policy domain=\u0026#34;coder\u0026#34; rights=\u0026#34;none\u0026#34; pattern=\u0026#34;PDF\u0026#34; /\u0026gt; to\n\u0026lt;policy domain=\u0026#34;coder\u0026#34; rights=\u0026#34;read|write\u0026#34; pattern=\u0026#34;PDF\u0026#34; /\u0026gt; For the second error, this is because ghostscript has not been installed on the system. Try to install it:\napt install ghostscript After that, you should be fine to generate from PPTX to jpg/png images.\nWith poppler # We need to install poppler-utils:\napt-get update \u0026amp;\u0026amp; apt-get install -y poppler-utils For further steps, refer to this post.\nReferences # How to convert pptx files to jpg or png (for each slide) on linux? How can I convert a ppt to a pdf from the command line? https://jdhao.github.io/2019/11/20/convert_pdf_to_image_imagemagick/ convert:not authorized aaaa @ error/constitute.c/ReadImage/453 Can\u0026rsquo;t convert PDF into image, because of \u0026rsquo;no images defined\u0026rsquo; error ImageMagick:convert-im6.q16: no images defined ","date":"30 March 2020","externalUrl":null,"permalink":"/2020/03/30/pptx_to_image/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eChangelog\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2020-12-24: Add how to convert pptx to pdf using unoconv.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I will share how to convert PPTX file to images. There are two steps.\nThe first step is to convert PPTX to PDF, and the second step is to convert PDF to JPEG.\u003c/p\u003e","title":"Convert PPTX Document to JPEG Images on Ubuntu","type":"posts"},{"content":"","date":"30 March 2020","externalUrl":null,"permalink":"/tags/office/","section":"Tags","summary":"","title":"Office","type":"tags"},{"content":"When we are building web services using Python, we often send or receive images in base64 encoded format. However, when we are doing image processing tasks, we need to use PIL or OpenCV. In this post, I will share how to convert between OpenCV or PIL image and base64 encoded image.\nbase64 to PIL or OpenCV image # base64 to PIL Image # import base64 from io import BytesIO from PIL import Image with open(\u0026#34;test.jpg\u0026#34;, \u0026#34;rb\u0026#34;) as f: im_b64 = base64.b64encode(f.read()) im_bytes = base64.b64decode(im_b64) # im_bytes is a binary image im_file = BytesIO(im_bytes) # convert image to file-like object img = Image.open(im_file) # img is now PIL Image object In the above code, since Image.open() only accepts image path or file-like object, we first convert the base64 encoded image to BytesIO object and then read the image using PIL.\nbase64 to OpenCV Image # import base64 import numpy as np import cv2 with open(\u0026#34;test.jpg\u0026#34;, \u0026#34;rb\u0026#34;) as f: im_b64 = base64.b64encode(f.read()) im_bytes = base64.b64decode(im_b64) im_arr = np.frombuffer(im_bytes, dtype=np.uint8) # im_arr is one-dim Numpy array img = cv2.imdecode(im_arr, flags=cv2.IMREAD_COLOR) In the above code, we first convert binary image to Numpy array, then decode the array with cv2.imdecode(). The final img is an OpenCV image in Numpy ndarray format.\nPIL or OpenCV image to base64 # PIL Image to base64 # import base64 from io import BytesIO from PIL import Image img = Image.open(\u0026#39;test.jpg\u0026#39;) im_file = BytesIO() img.save(im_file, format=\u0026#34;JPEG\u0026#34;) im_bytes = im_file.getvalue() # im_bytes: image in binary format. im_b64 = base64.b64encode(im_bytes) In the above code, instead of saving the PIL Image object img to the disk, we save it to im_file which is a file-like object. Note that in this case, we need to specify the image format in img.save().\nOpenCV to base64 image # import base64 import numpy as np import cv2 img = cv2.imread(\u0026#39;test.jpg\u0026#39;) _, im_arr = cv2.imencode(\u0026#39;.jpg\u0026#39;, img) # im_arr: image in Numpy one-dim array format. im_bytes = im_arr.tobytes() im_b64 = base64.b64encode(im_bytes) In the above code, we first save the image in Numpy ndarray format to im_arr which is a one-dim Numpy array. We then get the image in binary format by using the tobytes() method of this array.\nReferences # Convert OpenCV or PIL image to bytes. base64 image to PIL Image. Byte array to OpenCV image. OpenCV image to base64. ","date":"17 March 2020","externalUrl":null,"permalink":"/2020/03/17/base64_opencv_pil_image_conversion/","section":"Posts","summary":"\u003cp\u003eWhen we are building web services using Python, we often send or receive images\nin \u003ca href=\"https://docs.python.org/3/library/base64.html\" target=\"_blank\"\u003ebase64\u003c/a\u003e encoded format.\nHowever, when we are doing image processing tasks, we need to use PIL or\nOpenCV. In this post, I will share how to convert between OpenCV or PIL image\nand base64 encoded image.\u003c/p\u003e","title":"Conversion between base64 and OpenCV or PIL Image","type":"posts"},{"content":"","date":"16 March 2020","externalUrl":null,"permalink":"/tags/cdn/","section":"Tags","summary":"","title":"CDN","type":"tags"},{"content":"","date":"16 March 2020","externalUrl":null,"permalink":"/tags/%E5%9B%BE%E5%BA%8A/","section":"Tags","summary":"","title":"图床","type":"tags"},{"content":"","date":"16 March 2020","externalUrl":null,"permalink":"/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/","section":"Tags","summary":"","title":"对象存储","type":"tags"},{"content":"本文主要分享腾讯云对象存储开启 CDN 的方法，不需要购买额外的域名。\n之前博文记录过把博客的图床从七牛迁移到了腾讯云对象存储，刚开始用腾讯云，觉得花费不算很贵，一个月不超过 10 元。直到有一次发了一篇关于机械键盘的文章，放了两张没有经过压缩的图片，由于访问人数稍微过大，几天时间就消耗了将近 40 元的流量费用。当时也在 V2ex 发了帖子，有人建议套个 CDN，因为 CDN 的流量相对于对象存储的流量更便宜。由于当时对 CDN 怎么使用不了解，以为还要自己再买一个域名，所以就没有深入了解下去。最近，趁着有时间，研究了一下博客的图床怎么使用 CDN，才发现原来设置很简单，也不需要购买域名。\nCDN 基本概念 # 设置 CDN 之前，需要理解几个相关的专业名词。\n源站：简单理解，源站可以理解为最初的站点，由于这个站点的资源（图像，html，视频等）访问不方便，所以我们可以借助 CDN 来加速访问，减轻或者杜绝对源站资源的直接访问。相当 CDN 的节点服务器把源站的资料拷贝到自己的硬盘上，当有用户请求某个数据的时候，实际上访问到的是 CDN 的节点拷贝的数据。\n回源：当源站的资料有更新，或者访问 CDN 节点缓存中不存在的某个资源，CDN 的节点会向源站请求更新的数据或者新的资料，这个过程就叫回源。CDN 可以设置回源时间，如果源站内容更新频繁，回源频率可以高一些，保证资料和源站一致，否则，回源的频率可以降低，减少对源站的压力和流量消耗。\n回源鉴权：当 CDN 节点把源站的资料拷贝到该节点时，源站需要鉴定这些节点是否有从自己这里拷贝资料的适当权限，如果有权限，才可以拷贝资料。\n腾讯云存储如何开启 CDN # 首先，找到自己存放图片的云存储的存储桶，进入以后点击「域名管理」，会出现域名管理的页面。由于我不想自己申请域名，所以选择设置「默认加速域名」一项。「默认加速域名」意思就是使用腾讯云的 CDN 提供的默认域名访问自己的存储桶里面的图片，这样用户就不需要额外申请一个域名了。\n如果是第一次使用腾讯云的 CDN 服务，需要到 CDN 的控制台进行注册，注册以后，就会得到加速域名，下面的「源站域名」就是没有使用 CDN 的时候，访问我们建立的图床存储桶时使用的域名。这两个域名比较类似，只是把中间的代表存储桶区域的字符换成了 file，其余部分完全相同。在写博客引用图片的时候，应该使用新的加速域名来访问图片。如果一个图片之前的完整 URL 是：\nhttps://blog-resource-1257868508.cos.ap-hongkong.myqcloud.com/test.jpg 那么该图片新的 URL 变成了：\nhttps://blog-resource-1257868508.file.myqcloud.com/test.jpg 「加速地域」现在还不能选择，只能是「国内加速」，国内加速的含义是通过 CDN 节点来访问图片时，这些节点使用的服务器都是在国内，不论访问某一张博客图片的人位于国内还是国外。在这里，「源站」指的就是作为图床的这个存储桶，这是因为 CDN 节点上的图片其实都是来自于这个存储桶，或者当我们通过 CDN 提供的域名访问某个图片访问不到时，CDN 也会向这个源站请求图片。「源站类型」不用更改，选择「默认源站」设置即可。\n如果存储桶设置的是公有读，那么下面的「回源鉴权」和 「CDN鉴权」不需要开启，否则建议开启「回源鉴权」。\n保存这些配置以后，就会看到加速域名正在部署，过几分钟就会部署完毕。此时，进入腾讯云 CDN 的域名管理页面，可以看到已经添加了加速域名：\nCDN 设置 # 腾讯云 CDN 也提供了很多对域名的管理功能，在 「域名管理」页面，点击刚才配置好的域名，可以对域名配置进行修改。在 「访问控制」下面，可以设置 CDN 的防盗链功能，可以在 refer白名单下填上允许访问图片的域名，域名格式是一个模式一行，不用加 http://，例如，我的设置是：\njdhao.github.io 127.0.0.1 References # https://www.cloudflare.com/learning/cdn/what-is-a-cdn/ https://www.cloudflare.com/learning/cdn/glossary/origin-server/ 对象存储作为 CDN 源站 使用 CDN 加速访问对象存储 对象存储开启域名管理 腾讯云 CDN 防盗链设置 ","date":"16 March 2020","externalUrl":null,"permalink":"/2020/03/16/tencent_cos_cdn_setup/","section":"Posts","summary":"\u003cp\u003e本文主要分享腾讯云对象存储开启 CDN 的方法，不需要购买额外的域名。\u003c/p\u003e","title":"腾讯云对象存储博客图床开启 CDN 加速(不需要购买额外域名)","type":"posts"},{"content":"In Sublime-Text and other editors, we can press Ctrl-Shift-F to invoke the search and replace UI. We can also accomplish this task easily in Vim or Neovim with the built-in features. Here is how.\nThere are two steps involved in this task. The first step is to find the files containing the search pattern under the current project or directory. The second step is to perform replacement for each file found in 1st step.\nDepending on which Vim command to use, there are basically two ways to do this task. For illustrating purposes, we will try to replace all Neovim occurrences in my nvim config repo to Nvim.\nUse vimgrep or grep with cfdo # We can use vimgrep or grep command to populate the Vim quickfix list with files matching our specific pattern. The cfdo command can then be utilized to perform replacement operation for each file in the quickfix list1.\nThe difference between vimgrep and grep command is that vimgrep is internal and provided by Vim, while grep command uses external programs to search files depending on the platform (see :h grepprg).\nvimgrep # To find all files containing Neovim under current directory using vimgrep, we can use the following the command:\n:vimgrep /Neovim/gj **/* In the above command, Neovim is our search pattern. The meanings of g and j flags are as follows:\ng: Add all matches in a line to the quickfix list. j: Do not jump the cursor to the location of first pattern match. The **/* specify the files to search for the pattern. In this case, it means to search recursively under the current directory and for all files types2. You can also search only in certain files types, for example, in Vim script:\n:vimgrep /Neovim/gj **/*.vim After this step, the quickfix will be populated with the matching files, lines and column number (use copen to open the quickfix list):\ngrep # If we use grep command, it is often useful to specify the external grep program that we want to use via the grepprg option. For this, I highly recommend ripgrep, which is one of the fastest command line search tools. We need to add the following settings to Neovim or Vim config:\nset grepprg=rg\\ --vimgrep\\ --no-heading\\ --smart-case set grepformat=%f:%l:%c:%m To search Neovim under current directory using grep, just use grep Neovim.\ncfdo # After the quickfix list is filled with files containing the search pattern, we now use cfdo command to perform replace operation on each file:\n:cfdo %s/Neovim/Nvim/ge | update The cfdo command can be followed by one command or a series of commands (separated by |). In the above example, we first perform substitution, then followed by update command so that the replacement change is saved.\nUse args and argdo # Another way to perform search and replace is to use args and argdo command. The args command is used to build a list of files that we would like to perform an action. argdo command is then used to perform this action on each file in the argument list.\nTo add files to the argument list, we can use external tools like grep or ripgrep to search files with backtick. For example:\n:args `grep Neovim -l -r .` or\n:args `rg Neovim -l` One issue with backtick is that it does not work on Windows. You can only use the above command on Linux or macOS.\nAfter adding all files containing the pattern to argument list, we then use argdo to perform replacement (works similarly to cfdo command):\n:argdo %s/Neovim/Nvim/ge | update References # Search and replace all files in current folder. set up grepprg for ripgrep. https://gabri.me/blog/multiple-files-search-and-replace-in-vim https://chrisarcand.com/vims-new-cdo-command/ https://thoughtbot.com/blog/lists-vim-and-you Ripgrep cheatsheet. http://vimcasts.org/episodes/using-argdo-to-change-multiple-files/ The cfdo command was added in Vim 7.4.858. Your Vim version should be newer than that.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor more info on the glob pattern, see :h starstar-wildcard inside Vim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 March 2020","externalUrl":null,"permalink":"/2020/03/14/nvim_search_replace_multiple_file/","section":"Posts","summary":"In Sublime-Text and other editors, we can press Ctrl-Shift-F to invoke the search and replace UI. We can also accomplish this task easily in Vim or Neovim with the built-in features. Here is how.\nThere are two steps involved in this task. The first step is to find the files containing the search pattern under the current project or directory. The second step is to perform replacement for each file found in 1st step.","title":"Search and Replace in Multiple Files in Vim/Neovim","type":"posts"},{"content":"When we create tables in LaTeX, the table column width will be automatically decided based on the content in the table cell. Sometimes, maybe we are not satisfied with the default column width and want to customize the column width. In this post, we will explain how to it in LaTeX.\nOur initial table is like the following:\nThe code to produce this table is:\nClick to show the code. \\documentclass{article} \\usepackage{booktabs} \\usepackage{multirow} \\begin{document} \\begin{table}[t] \\centering \\begin{tabular}{llll} \\toprule \\multirow{2}{*}{Country} \u0026amp; \\multicolumn{2}{c}{GDP} \u0026amp; Change \\\\ \\cmidrule{2-3} \\\\ {} \u0026amp; 2010 \u0026amp; 2015 \u0026amp; {} \\\\ \\midrule United States \u0026amp; 14964.400 \u0026amp; 18036.650 \u0026amp; 20.53\\% \\\\ China \u0026amp; 5812.464 \u0026amp; 11226.186 \u0026amp; 93.14\\% \\\\ Japan \u0026amp; 5793.455 \u0026amp; 4382.420 \u0026amp; -24.36\\% \\\\ Germany \u0026amp; 3309.668 \u0026amp; 3365.293 \u0026amp; 1.68\\% \\\\ United Kingdom \u0026amp; 2246.079 \u0026amp; 2863.304 \u0026amp; 27.48\\% \\\\ \\bottomrule \\end{tabular} \\end{table} \\end{document} Column type with width parameter # Column width of the produced table is small. To control the column width, we need to use another three column types p, m, b:\nColumn type Description p{width} Create fixed width column with top alignment m{width} Create fixed width column with middle alignment b{width} Create fixed width column with bottom alignment The width parameter can be absolute value, like 2cm, 20pt etc. It can also be a relative value, e.g., 0.2\\textwidth. Using relative width is preferred since the table width are often measured relative to \\textwidth.\nTable cell horizontal alignment # The above three column types only specify the vertical alignment of table column cell. To specify the horizontal alignment of table cell, we need to use the following three command provided by the array package:\nAlignment Description \\centering Center alignment \\raggedright Left alignment \\raggedleft Right alignment To add the alignment command to each cell, thus adjusting the column cell horizontal alignment, we use the following syntax before the table column type declaration:\n\u0026gt;{some_command} This will ensure that some_command is inserted before every column cell content.\nTable with wider column and custom alignment # To use bigger column width and center alignment in first and last column in the above table, we can use the following code:\nClick to show the code. \\documentclass{article} \\usepackage{booktabs} \\usepackage{multirow} \\usepackage{array} \\begin{document} \\begin{table}[t] \\centering \\begin{tabular}{\u0026gt;{\\centering}p{0.25\\textwidth}p{0.2\\textwidth}p{0.2\\textwidth}\u0026gt;{\\centering\\arraybackslash}p{0.15\\textwidth}} \\toprule \\multirow{2}{*}{Country} \u0026amp; \\multicolumn{2}{c}{GDP} \u0026amp; Change \\\\ \\cmidrule{2-3} \\\\ {} \u0026amp; 2010 \u0026amp; 2015 \u0026amp; {} \\\\ \\midrule United States \u0026amp; 14964.400 \u0026amp; 18036.650 \u0026amp; 20.53\\% \\\\ China \u0026amp; 5812.464 \u0026amp; 11226.186 \u0026amp; 93.14\\% \\\\ Japan \u0026amp; 5793.455 \u0026amp; 4382.420 \u0026amp; -24.36\\% \\\\ Germany \u0026amp; 3309.668 \u0026amp; 3365.293 \u0026amp; 1.68\\% \\\\ United Kingdom \u0026amp; 2246.079 \u0026amp; 2863.304 \u0026amp; 27.48\\% \\\\ \\bottomrule \\end{tabular} \\end{table} \\end{document} For table cells where the horizontal alignment is not explictly defined, the default is left alignment. Note that if you want to change the alignment of last column, the \\arraybackslash command must also be supplied, or you will encounter errors when compiling the LaTeX source code:\nExtra alignment tab has been changed to \\cr.\nThe reason of this error can be found here if you are interested.\nThe created table will be like the following:\nDefining new column types to simplify things # Writing column width and alignment in the tabular column type option is rather lengthy and error-prone. We can define new column types and use them in the column type option to simplify things.\nThe \\newcolumntype command from array package is used to define new column types, for example:\n\\newcolumntype{A}{\u0026gt;{\\centering}p{0.25\\textwidth}} Using this command, our code now becomes more concise and readable:\nClick to show the code. \\documentclass{article} \\usepackage{booktabs} \\usepackage{multirow} \\usepackage{array} \\begin{document} \\newcolumntype{A}{\u0026gt;{\\centering}p{0.25\\textwidth}} \\newcolumntype{B}{p{0.2\\textwidth}} \\newcolumntype{C}{\u0026gt;{\\centering\\arraybackslash}p{0.15\\textwidth}} \\begin{table}[t] \\centering \\begin{tabular}{ABBC} \\toprule \\multirow{2}{*}{Country} \u0026amp; \\multicolumn{2}{c}{GDP} \u0026amp; Change \\\\ \\cmidrule{2-3} \\\\ {} \u0026amp; 2010 \u0026amp; 2015 \u0026amp; {} \\\\ \\midrule United States \u0026amp; 14964.400 \u0026amp; 18036.650 \u0026amp; 20.53\\% \\\\ China \u0026amp; 5812.464 \u0026amp; 11226.186 \u0026amp; 93.14\\% \\\\ Japan \u0026amp; 5793.455 \u0026amp; 4382.420 \u0026amp; -24.36\\% \\\\ Germany \u0026amp; 3309.668 \u0026amp; 3365.293 \u0026amp; 1.68\\% \\\\ United Kingdom \u0026amp; 2246.079 \u0026amp; 2863.304 \u0026amp; 27.48\\% \\\\ \\bottomrule \\end{tabular} \\end{table} \\end{document} References # Control column width. World GDP data. \\newcolumntype usage. ","date":"8 March 2020","externalUrl":null,"permalink":"/2020/03/08/change_table_column_width_latex/","section":"Posts","summary":"\u003cp\u003eWhen we \u003ca href=\"https://jdhao.github.io/2019/08/27/latex_table_with_booktabs/\" target=\"_blank\"\u003ecreate tables in LaTeX\u003c/a\u003e,\nthe table column width will be automatically decided based on the content in\nthe table cell. Sometimes, maybe we are not satisfied with the default column\nwidth and want to customize the column width. In this post, we will explain how\nto it in LaTeX.\u003c/p\u003e","title":"Change Table Column Width in LaTeX","type":"posts"},{"content":"When we are writing articles using LaTeX, we often need to create side-by-side images or tables. In this post, I summarize several methods to achieve that.\nWhen we want to show images or tables side by side, we may have different requirements. In some situation, we want to combine the images or tables to illustrate a bigger idea or something. Each sub-image or sub-table has its own caption and label, and the whole image or table also has its own caption and label. Other times, we just want to display images or tables side by side to save space. These images or tables are not subpart of a whole image or table, i.e., there are independent1.\nTo display image or table side by side. There are several ways:\nIf the images or tables are sub-image or sub-tables: use subcaption or subfig package. If the images or tables are independent: use minipage environment. Images or tables not independent # Use subcaption # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subcaption} \\usepackage[capitalize]{cleveref} \\begin{document} In~\\cref{fig:test}, we show two images: \\cref{fig:sub1} and \\cref{fig:sub2}. \\begin{figure}[h] \\centering \\begin{subfigure}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} \\end{subfigure}% \\begin{subfigure}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} \\end{subfigure} \\caption{Two cats.} \\label{fig:test} \\end{figure} \\end{document} Use subfig # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} In~\\cref{fig:test}, we show two images: \\cref{fig:sub1} and \\cref{fig:sub2}. \\begin{figure}[h] \\centering \\subfloat[caption for figure1a]{ \\includegraphics[width=0.4\\linewidth]{cat1.jpeg} \\label{fig:sub1} } \\subfloat[caption for figure1b]{ \\includegraphics[width=0.4\\linewidth]{cat2.jpeg} \\label{fig:sub2} } \\caption{A figure with two subfigure} \\label{fig:test} \\end{figure} \\end{document} In the following code, the generated caption is below the image. If you want to put the caption above the image, you need to change an option when importing the subfig package:\n\\usepackage[position=top]{subfig} The caption position of the whole image depends on where you put it.\nThe above two code snippets are images. For tables, the subcaption package provides the subtable environment; for subfig package, you can still use \\subfloat command. Change other code based on the tables, and you should be fine.\nImages or tables are not independent # If you want to display images or tables side by side, but they are independent, you can use the minipage environment or use parbox (only works partially).\nUse minipage # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} We show two images \\cref{fig:sub1} and \\cref{fig:sub2} below. \\begin{figure}[h] \\centering \\begin{minipage}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} \\end{minipage}% \\begin{minipage}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} \\end{minipage} \\end{figure} \\end{document} The code above is easy to understand. The only thing we should notice is the % character between the two minipage environments. This % character is indispensable, which means that the two minipage environment are close to each other and no space is allowed between them. If there is not %, the images will be displayed in one above the other, not side by side.\nLet\u0026rsquo;s take another example to illustrate the use of %. Suppose we have a word and we write it in two separte line, but we do not want to have space between the two parts. If % is not used, there will be space between the two parts. Otherwise, the space will disappear.\nimpre ssive impre% ssive Use parbox # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} We show two images \\cref{fig:sub1} and \\cref{fig:sub2} below. \\begin{figure}[h] \\parbox{0.5\\textwidth}{ \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} } \\parbox{0.5\\textwidth}{ \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} } \\end{figure} \\end{document} The parbox command has a drawback: if two images have captions of unequal length or have unequal size, the two iamges will not be aligned properly. So parbox is not a good choice.\nThe above two code snippets are for figures. If you need to deal with tables, change the code related to figures and replace them with the table-related code, you should be fine.\nReferences # The use of minipage and subcaption. Minipage and the use of %. The use % sign. Figures side by side. Introduction to minipage. An introduction to subfig and subcaption package with code. The use of parbox. When you refer to these images or tables, the indexes are not shown as 1a, 1b, 1c, but are independent numbers.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"7 March 2020","externalUrl":null,"permalink":"/2020/03/07/latex_figure_table_side_by_side_en/","section":"Posts","summary":"\u003cp\u003eWhen we are writing articles using LaTeX, we often need to create side-by-side images or tables. In this post,\nI summarize several methods to achieve that.\u003c/p\u003e","title":"Image or Table Side by Side in LaTeX","type":"posts"},{"content":"使用 LaTeX 写文章的时候，经常需要并排显示图片或者表格，本文总结几种实现方法。\n当我们把表格或者图片并显示时，我们在不同时候需求是不一样的，有的时候我们要求几张图片或者表格是一个整体的一部分，这些小图片或者表格要有自己的 caption 以及 label；另外的时候，我们只是想并列图片或者表格来节省空间，或者产生对比，这些图片或者表格并不是一个整体，而是毫无关系，相互之间独立的（independent），也就是说这些图片(表格)有自己的 caption 和 label，并且这些 label 是独立的，举例来说，就是这些图片在引用时候，不是以 1a, 1b, 1c 这种形式呈现的，而是单独的数字编号.\n对于图像，可以采用两种方式，一种是使用 LaTeX 自带的 minipage 环境，另外一种借助于 subcaption 这个库，还可以使用 subfig 这个库。 如果想要图片或者表格拥有自己的 caption 跟 label，并且整体还有一个 caption 和 label，可以使用 subcaption 与 subfig 这两个库。\n图片或表格不相互独立 # 使用 subcaption 的写法 # Click to view the code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subcaption} \\usepackage[capitalize]{cleveref} \\begin{document} In~\\cref{fig:test}, we show two images: \\cref{fig:sub1} and \\cref{fig:sub2}. \\begin{figure}[h] \\centering \\begin{subfigure}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} \\end{subfigure}% \\begin{subfigure}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} \\end{subfigure} \\caption{Two cats.} \\label{fig:test} \\end{figure} \\end{document} 使用 subfig 的写法 # Click to view the code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} In~\\cref{fig:test}, we show two images: \\cref{fig:sub1} and \\cref{fig:sub2}. \\begin{figure}[h] \\centering \\subfloat[caption for figure1a]{ \\includegraphics[width=0.4\\linewidth]{cat1.jpeg} \\label{fig:sub1} } \\subfloat[caption for figure1b]{ \\includegraphics[width=0.4\\linewidth]{cat2.jpeg} \\label{fig:sub2} } \\caption{A figure with two subfigure} \\label{fig:test} \\end{figure} \\end{document} 上述代码，子图的 caption 默认都是在图片下面，如果想要让子图的 caption 在图片上面，需要在添加 subfig 库的时候加上一些选项，\\usepackage[position=top]{subfig}, 总的图片的 caption 位置则视 caption 放置位置而定。\n上述两段代码都是针对图像的，对于表格，subcaption 提供的是 subtable 环境，subfig 仍然使用 \\subfloat 命令，其他的代码针对 table 做一个小修改就可以了，基本不变。\n图片或表格相互独立 # 如果想要各个图片或表格只是并列，相互之间独立，可以使用 minipage 环境，或者使用 parbox 也可以部分达成这种目的，\n使用minipage的写法， # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} We show two images \\cref{fig:sub1} and \\cref{fig:sub2} below. \\begin{figure}[h] \\centering \\begin{minipage}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} \\end{minipage}% \\begin{minipage}[t]{.5\\textwidth} \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} \\end{minipage} \\end{figure} \\end{document} 上面的源代码很容易看懂，不用太多解释，唯一需要注意的是第一个 minipage 环境结束后的百分号,这个百分号是必不可少的，百分号的意思就是两个 minipage 环境之间不要有空隙，紧密相连，如果没有百分号，编译以后的文档中，两个图片是上下排放的，并不是左右并列。\n对百分号再举一个例子，譬如有一个单词，需要分开上下两行，但是不希望隔断，如果不加百分号，两部分中间会有一个空格，加百分号就不会有这种现象了。\nimpre ssive impre% ssive 可以看到，空格不见了，这就是百分号的作用。\n使用parbox的写法 # Click here to view code. \\documentclass{article} \\usepackage{graphicx} \\usepackage{subfig} \\usepackage[capitalize]{cleveref} \\begin{document} We show two images \\cref{fig:sub1} and \\cref{fig:sub2} below. \\begin{figure}[h] \\parbox{0.5\\textwidth}{ \\centering \\includegraphics[width=0.9\\linewidth]{cat1.jpeg} \\caption{caption 1} \\label{fig:sub1} } \\parbox{0.5\\textwidth}{ \\centering \\includegraphics[width=0.9\\linewidth]{cat2.jpeg} \\caption{caption 2} \\label{fig:sub2} } \\end{figure} \\end{document} 但是 parbox 有一个缺点，如果两个图片的 caption 的文本数量不一样或者两个图片大小不一致，不能上端对齐或者下端对齐，因而 parbox 并不是一个很好的选项，并不推荐。\n上述的两段代码都是针对 figure 的，如果要并排 table，改变跟 figure 有关的代码，换成 table 相关的就可以了，不再赘言。\n参考资料 # 讲到了 minipage 与 subcaption 的用法. minipage 环境，对百分号特意说明了. 百分号的用法. stackexchange 里面的问答，参考最高票回答. minipage 环境的一个详细介绍. 对 subfig 与 sucaption 环境的一个介绍，并且含有代码. 提到了使用 parbox. ","date":"7 March 2020","externalUrl":null,"permalink":"/2020/03/07/latex_figure_table_side_by_side_zh/","section":"Posts","summary":"\u003cp\u003e使用 LaTeX 写文章的时候，经常需要并排显示图片或者表格，本文总结几种实现方法。\u003c/p\u003e","title":"LaTeX 并排显示图像或表格","type":"posts"},{"content":"Some useful tips on writing papers in LaTeX.\nUse package cleveref for easier reference. # If you use the LaTeX built-in command \\ref{} to refer to a table or image, it will only give you the index of referred object. You have to manually type ref type, i.e., Fig. or Table. The package cleveref will help you to insert the reference type automatically. It provides the \\cref (used inside a sentence) and \\Cref (used at the beginning of sentence) command to refer to an object easily. \\cref can also be used to refer to multiple labels like this:\n% no space allowed between different labels \\cref{label1,label2,label3} Add the following setting to your header in order to use cleveref:\n\\usepackage[capitalise]{cleveref} % for cleveref \\newcommand{\\crefrangeconjunction}{--} In the above command, we modify the \\crefrangeconjunction to --, since the default is to use to between a range of references.\nUse punctuations after equations. # Usually we will show some equations in the paper to show the formal formulation. Equations are like text and should be given proper punctuation. If it is in the middle of an sentence, use a comma. If it is in the end of a sentence, use a period. For example,\nEinstein propose the famous matter-energy equation: \\begin{equation} E = mc^{2}. \\end{equation} How to reduce lines # You should use the microtype package. It can help to adjust the word spacing to reduce the lines taken. You will often see less underfull or overfull hbox warning after using this package.\nYou shouldn\u0026rsquo;t add blank lines before and after the display style equations if the text before and after the equation belong to the same paragraph. This will also help to reduce space.\nReferences # Punctutation: https://tex.stackexchange.com/q/7542/114857 https://tex.stackexchange.com/q/32853/114857 https://mathoverflow.net/questions/6675/periods-and-commas-in-mathematical-writing microtype: https://tex.stackexchange.com/questions/66052/should-i-load-microtype-with-pdflatex http://texblog.net/latex-archive/latex-general/pdflatex-microtype/ http://www.khirevich.com/latex/microtype/ https://docs.google.com/document/d/1zXXtti9JgcTERvIZXNwSRncw2T1dUC8dt6PJlYSH-2g/edit#heading=h.zf43ulrlas66 ","date":"6 March 2020","externalUrl":null,"permalink":"/2020/03/06/latex_writing_tips_s2/","section":"Posts","summary":"\u003cp\u003eSome useful tips on writing papers in LaTeX.\u003c/p\u003e","title":"Tips on Writing Papers in LaTeX","type":"posts"},{"content":"Suppose that we have a straight line formed by point B and C, and we have another point A. What is the distance from point A to line BC?\nThere are various ways to calculate this distance. Using vector calculus is one of the easiest ways to do it.\nFrom elementary math, we know that distance from A to line BC is the distance between point A and D, where D is a point in line BC and line AD is perpendicular to line BC.\nSo the problem really boils down to finding the distance between between point A and D. That is, we need to find the value of following equations:\n\\[\\begin{equation} \\Vert \\overrightarrow{AD} \\Vert = \\sqrt{(D_x - A_x)^2 + (D_y - A_y)^2} \\end{equation}\\]\nSince point D is in line BC, so vector \\(\\overrightarrow{BD}\\) and vector \\(\\overrightarrow{DC}\\) is parallel to each other, i.e., \\(\\overrightarrow{BD} = t\\cdot \\overrightarrow{DC}\\). We also know that \\(\\overrightarrow{AD}\\) is perpendicular to \\(\\overrightarrow{BC}\\). From these two conditions, we have the following two equations:\n\\[\\begin{gather} \\frac{D_x - B_x}{C_x - D_x} = \\frac{D_y - B_y}{C_y - D_y} \\label{eq2} \\\\ (D_x - A_x)(C_x - B_x) + (D_y - A_y)(C_y - B_y) = 0 \\label{eq3} \\end{gather}\\]\nSimplifying \\(\\eqref{eq2}\\), we get:\n\\[\\begin{equation} (D_x - B_x)(C_y - D_y) - (D_y - B_y)(C_x - D_x) = 0 \\label{eq4} \\end{equation}\\]\nTransforming \\(\\eqref{eq4}\\) a bit, and we get:\n\\[\\begin{equation} \\begin{split} [(D_x - A_x) + (A_x - B_x)][(A_y - D_y) + (C_y - A_y)] -\\\\ [(D_y-A_y) + (A_y-B_y)][(A_x-D_x) + (C_x - A_x)] = 0 \\end{split}\\label{eq5} \\end{equation}\\]\nNow, to simplify calculation, we use the following substitution:\n\\[\\begin{align} D_x - A_x \u0026amp;= m \\label{eq6} \\\\ D_y - A_y \u0026amp;= n \\label{eq7} \\end{align}\\]\nSubstitute m and n into equation \\(\\eqref{eq3}\\) and \\(\\eqref{eq5}\\), and simplifying a bit, we now get:\n\\[\\begin{gather} m(C_x-B_x) + n(C_y-B_y) = 0 \\label{eq8} \\\\ m(C_y-B_y) - n(C_x - B_x) = (A_y - B_y)(C_x-A_x) - (A_x - B_x)(C_y-A_y) \\label{eq9} \\end{gather}\\]\nFrom equation \\(\\eqref{eq8}\\) and \\(\\eqref{eq9}\\), it it now easy to derive the value of \\(m\\) and \\(n\\):\n\\[\\begin{align} m \u0026amp;= - \\frac{(C_y - B_y)[A_y(B_x - C_x) - B_y(A_x - C_x) + C_y(A_x - B_x)]}{(C_x - B_x)^2 + (C_y - B_y)^2}\\\\ n \u0026amp;= \\frac{(C_x - B_x)[A_y(B_x - C_x) - B_y(A_x - C_x) + C_y(A_x - B_x)]}{(C_x - B_x)^2 + (C_y - B_y)^2}\\\\ \\end{align}\\]\nSo the square sum of \\(m\\) and \\(n\\) is:\n\\[\\begin{equation} m^2 + n^2 = \\frac{[A_y(B_x - C_x) - B_y(A_x - C_x), + C_y(A_x - B_x)]^2}{(C_x - B_x)^2 + (C_y - B_y)^2} \\end{equation}\\]\nThe norm of vector \\(\\overrightarrow{AD}\\) is:\n\\[\\begin{equation} \\Vert \\overrightarrow{AD} \\Vert = \\frac{\\lVert A_y(B_x - C_x) - B_y(A_x - C_x), + C_y(A_x - B_x)\\rVert}{\\sqrt{(C_x - B_x)^2 + (C_y - B_y)^2}} \\end{equation}\\]\nIn the above equation, the denominator is the norm of vector \\(\\overrightarrow{BC}\\), the nominator is the norm of cross product between \\(\\overrightarrow{BC}\\) and \\(\\overrightarrow{BA}\\).\nSo the distance from point A to line BC can also be written as\n\\[\\begin{equation} \\lVert \\overrightarrow{AD} \\rVert = \\frac{\\lVert \\overrightarrow{BC} \\times \\overrightarrow{BA} \\rVert}{\\lVert \\overrightarrow{BC} \\rVert} \\end{equation}\\]\nReferences https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line https://stackoverflow.com/q/39840030/6064933 https://math.stackexchange.com/questions/330269/the-distance-from-a-point-to-a-line-segment ","date":"23 February 2020","externalUrl":null,"permalink":"/2020/02/23/point_to_line_dist_2d/","section":"Posts","summary":"\u003cp\u003eSuppose that we have a straight line formed by point B and C, and we\nhave another point A. What is the distance from point A to line BC?\u003c/p\u003e","title":"Point to Line Distance in 2D Plane","type":"posts"},{"content":"","date":"22 February 2020","externalUrl":null,"permalink":"/tags/encoding/","section":"Tags","summary":"","title":"Encoding","type":"tags"},{"content":"","date":"22 February 2020","externalUrl":null,"permalink":"/tags/matplotlib/","section":"Tags","summary":"","title":"Matplotlib","type":"tags"},{"content":"","date":"22 February 2020","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"注：这是一篇旧文的中文翻译版本。\n前不久，我在使用 Matplotlib 画图的时候，发现一些 Unicode 字符(例如，汉字) 无法正常显示：在生成的图片中，汉字是乱码的，显示为一个方框。经过大量的查找和阅读，我终于明白了如何在使用 Matplotlib 时，正确渲染 Unicode 字符1。\n简单来说，之所以中文字符被显示为方框，是因为 Matplotlib 默认使用的字体并不支持中文字符，并不是 Matplotlib 本身的原因。为了能够在图片上正确显示中文字符，我们需要指示 Matplotlib 使用一种支持中文的字体即可。或者，更直接地，我们在画图时可以直接给 Matplotlib 提供一个中文字体的路径。\n本文假设 fc-list 命令安装在你的电脑上。如果你的电脑上没有这个命令，你应该先安装 fontconfig。在 Linux 系统上，这个程序通常是自带的，无需安装；在 Windows 系统上，可以安装 MiKTeX 或 TeX Live 来使用 fc-list 命令。\n以下介绍几种在 Matplotlib 中使用中文字符的不同方式。\n指定中文字体名称 # 第一种使用中文的方式是给 Matplotlib 提供一个有效的中文字体名。再开始下面步骤之前，确保你的系统上已经安装了中文字体，如果你使用的是中文系统，这应该不是问题；或者如果你想使用一种新的中文字体，可以尝试 Google 和 Adobe 发布的 Source Han Serif。首先，你需要在系统上安装中文字体2。\n找到有效的中文字体名 # Matplotlib 提供了FontManager 类来处理字体相关的操作。这个类有一个 ttflist 属性，该属性提供了 Matplotlib 所能够发现到的字体列表。从这个字体列表，我们也可以很容易得到这些字体的名称。问题是，我们不清楚这些字体中有哪些字体是支持中文的。\n这时候，我们就需要 fc-list 帮助了。这个命令行工具可以帮助我们找到系统上安装的中文字体：使用 fc-list :lang=zh 可以列出系统上可用的中文字体。值得注意的是，这些中文字体并非都可以被 Matplotlib 使用：Matplotlib 无法使用其中的 ttc 格式的字体(参见这里)。所以我们需要得到 Matplotlib 索引的字体和系统提供的中文字体两个集合的交集。\n使用字体 # 找到了 Matplotlib 索引的中文字体以后，我们可以通过更改 Matplotlib rc 指示 Matplotlib 使用中文字体。这样设置以后，后续脚本中的画图语句都会使用新指定的中文字体。加入我们在系统中安装了 STKaiti 这个字体，下面的脚本将会使用这个字体来渲染图片中的中文：\nimport matplotlib as mpl font_name = \u0026#34;STKaiti\u0026#34; mpl.rcParams[\u0026#39;font.family\u0026#39;]=font_name mpl.rcParams[\u0026#39;axes.unicode_minus\u0026#39;]=False # in case minus sign is shown as box plt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;) plt.show() 在上面的代码中，font_name 可以任意一个有效的中文字体名。另外，如果你仅仅想在某个画图命令中使用中文字体，可以在画图命令中指定使用的字体名称，如下所示：\nplt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;, fontname=font_name) 这种方式是我认为比较好的在 Matplotlib 中使用中文的方式。\n指定中文字体的具体路径 # 为了使用系统中的任何字体，我们也可以使用第二种方式：直接给 Matplotlib 提供一个字体的路径。代码如下：\nimport matplotlib.font_manager as mfm import matplotlib.pyplot as plt font_path = \u0026#34;/usr/share/fonts/custom/simhei.ttf\u0026#34; prop = mfm.FontProperties(fname=font_path) plt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;, fontproperties=prop) plt.show() 上述代码中，变量 font_path 是系统上某个中文字体的绝对路径。\n结论 # 以上提供的两种方式都比较方便实用，我们可以根据自己的实际需要选取使用。要获取完整的代码，可以参考 这里。\n参考链接 # 第一种方式 https://segmentfault.com/a/1190000005144275 https://my.oschina.net/u/1180306/blog/279818 第二种方式 https://stackoverflow.com/q/7726852/6064933 https://matplotlib.org/examples/api/font_file.html 两种方式都提到 https://blog.csdn.net/rumswell/article/details/6544377 https://blog.csdn.net/dgatiger/article/details/50414549 如何使用 fontconfig 模式查找字体 尽管这篇文章是以中文为例，但是对于其他语言也是同样的道理，只需要相应设置即可。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n如果不清楚如何在不同系统上安装新字体，可以查看 这里 和 这里的指导。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 February 2020","externalUrl":null,"permalink":"/2020/02/22/guide-on-how-to-use-chinese-with-matplotlib_zh/","section":"Posts","summary":"\u003cp\u003e注：这是一篇\u003ca href=\"https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/\" target=\"_blank\"\u003e旧文\u003c/a\u003e的中文翻译版本。\u003c/p\u003e\n\u003cp\u003e前不久，我在使用 Matplotlib 画图的时候，发现一些 Unicode 字符(例如，汉字) 无法正常显示：在生成的图片中，汉字是乱码的，显示为一个方框。经过大量的查找和阅读，我终于明白了如何在使用 Matplotlib 时，正确渲染 Unicode 字符\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e","title":"解决 Matplotlib 使用中文乱码问题","type":"posts"},{"content":"新型冠状病毒疫情已经持续了差不多一个月，一切还没有恢复正常，3 号从家里回到深圳，正是疫情严重的时刻，大家都如临大敌。住处附近的餐馆都关了门，想在外面吃饭也不行了。为了减少外出，降低感染的风险，于是尽量从网上买菜。疫情之前，已经开始用叮咚买菜和朴朴超市，不过用的频率不高，疫情来了，更依赖这些在线服务，感谢这些疫情期间仍然开张的在线服务和送菜的小哥们。\n由于远程办公，整天都呆在家里，所以做饭的任务主要落在了我的肩上。在家里也做了几个之前没有尝试过的「新菜」，总结一下步骤和要点。\n果仁菠菜 # 锅中加水烧开，新鲜菠菜用沸水焯一下，放入冷水中，捞出备用。菠菜焯水时间不能太长(大约 30s)，否则会变软。 取龙口粉丝一团，用开水泡一下，泡十分钟左右(确保粉丝变软)。 取一些花生🥜，用热油炸一下。注意要小火，否则花生外面会焦掉，而里面没炸好。另外炸好以后，在小碗放一些陈醋，将花生放入，可以增加花生的脆度，吃起来不会那么软。 取一个鸡蛋🥚，锅中加油，鸡蛋搅匀，在锅中尽量摊开，用小火煎成大的薄片，取出切丝备用。 取小碗，加入醋，生抽，盐，调料(看手头有什么，五香粉，胡椒粉或者调料面都可以放)，白糖适量(这些料的量可以根据自己口味加入)，搅拌均匀。 取一个大盘子，放入菠菜，粉丝，炸好的花生，鸡蛋丝，倒入调好的汁水，适当搅拌均匀即可。 番茄肉酱意大利面🍝 # 取意大利面适量，锅中烧水，放入适量食盐，橄榄油，水开后下面煮十分钟（如果想软一些，可以适当延长两三分钟）,捞出备用。 取两个西红柿🍅，在开水中烫一下，然后去皮，切成很小的块。 取半个洋葱🧅，切成小碎块备用(洋葱切碎一些会比较好)，取几个生蒜切碎备用。 取猪肉沫 200-250 g 左右（稍微瘦一些比较好）,加入适量料酒，盐，少许淀粉，搅拌均匀，腌制 10 分钟。 开小火，锅中放入一小块黄油🧈，加入蒜末和洋葱碎，翻炒，然后加入肉沫翻炒，肉变色以后，加入西红柿翻炒。 加入适量的番茄酱🥫 (主要是为了增加颜色和酸味)，再加入少量水，继续翻炒，把西红柿尽量炒到看不到块。 加入煮好的意大利面条，和肉酱一起翻炒均匀，收汁，即可出锅，吃之前可以撒上一点黑胡椒粉。 蒜蓉粉丝蒸虾 # 虾🦐开背：取活虾 8-10 只，去掉虾线，用剪刀从背部中间从上往下剪开，用切菜刀顺着剪开的缝隙劈下去，把虾背砍成左右两半(不完全砍断)。 把开背的虾放到小盆里，倒上料酒和生抽，腌制三十分钟。 取一盘大蒜🧄，剥好，切成蒜末，起锅放油，小火炒蒜末，放上食盐，稍微把蒜炒香即可(大概 1-2 分钟)，时间不宜过长。 烧开水，泡一盘龙口粉丝，十分钟左右，把粉丝泡软即可。 粉丝装进盘里，在粉丝上面摆上腌制的虾，然后把炒好的蒜末均匀涂在虾背上，再把腌制虾的料酒和生抽均匀倒在盘里。 蒸锅装水烧开，虾在锅里蒸 8 分钟左右。 蒸好的虾出锅，切一些葱花，洒在上面，起锅热少许油，油热以后，浇在葱花上面即可。 喜欢吃醋，可以倒点醋，生抽，倒进蒸好的虾里面。 地三鲜(少油版) # 茄子🍆一个，滚刀切成小块，加入适量的淀粉，用手把淀粉和茄子混合均匀，保证茄子快表面都涂上了淀粉；土豆🥔一到两个，滚刀切块。 青椒一个，切成丝；少许生姜，切成末；大蒜若干，切成蒜末备用。 取小碗，调料汁：加入适量的淀粉，清水，醋，生抽，盐，白糖，调料，混合均匀。 锅中加入稍多的油(茄子比较吸油，所以要加入比平时多的油)，开中火，加入青椒和生姜炒香，加入土豆块，翻炒，然后加入茄子快，继续翻炒，注意火不用太大，以防炒焦。 翻炒 2-3 分钟，然后加入调的料汁，大火烧开，转中小火，盖上锅盖焖 2-3 分钟，确保土豆和茄子都熟了(土豆和茄子都变软了)。 开稍大的火收汁，注意要不断搅拌，防止糊锅(因为汤汁中有淀粉，所以很容易糊锅)，快出锅前，加入切好的蒜末，再撒上一些青椒。 ","date":"21 February 2020","externalUrl":null,"permalink":"/2020/02/21/food_during_sars-cov-2/","section":"Posts","summary":"\u003cp\u003e新型冠状病毒疫情已经持续了差不多一个月，一切还没有恢复正常，3 号从家里回到深圳，正是疫情严重的时刻，大家都如临大敌。住处附近的餐馆都关了门，想在外面吃饭也不行了。为了减少外出，降低感染的风险，于是尽量从网上买菜。疫情之前，已经开始用\u003ca href=\"http://www.dingdongmc.com/\" target=\"_blank\"\u003e叮咚买菜\u003c/a\u003e和\u003ca href=\"https://www.pupumall.com/\" target=\"_blank\"\u003e朴朴超市\u003c/a\u003e，不过用的频率不高，疫情来了，更依赖这些在线服务，感谢这些疫情期间仍然开张的在线服务和送菜的小哥们。\u003c/p\u003e","title":"疫情时期的食物","type":"posts"},{"content":"Ripgrep is a command line tools that searches patterns under your current directory, like the good old grep, but with faster speed. In this post, I list some of the commonly-used flags for ripgrep.\ncommand Description rg image utils.py Search in a single file utils.py rg image src/ Search in dir src/ recursively rg image Search image in current dir recursively rg '^We' test.txt Regex searching support (lines starting with We) rg -i image Search image and ignore case (case-insensitive search) rg -s image Smart case search rg -F '(test)' Search literally, i.e., without using regular expression rg image -g '*.py' File globing (search in certain files), can be used multiple times rg image -g '!*.py' Negative file globing (do not search in certain files) rg image --type py or rg image -tpy1 Search image in Python file rg image -Tpy Do not search image in Python file type rg -l image Only show files containing image (Do not show the lines) rg --files-without-match image Show files not containing image rg -v image Inverse search (search files not containing image) rg -w image Search complete word rg --count Show the number of matching lines in a file rg --count-matches Show the number of matchings in a file rg neovim --stats Show the searching stat (how many matches, how many files searched etc.) How to enable shell completion for ripgrep? # The binary release of ripgrep also include completion files for Bash, Zsh. When we extract the binary release, the completion file is under completion/_rg. For zsh, we should move this file to one of the paths in env variable $fpath.\nHow to exclude directories # To exclude directories, we also use the -g option. For example, to exclude dir1 and dir2, use the following command:\nrg pattern -g \u0026#39;!dir1/\u0026#39; -g \u0026#39;!dir2/\u0026#39; Changelog update: 2020-12-03, add --stats option\nReferences # Ripgrep user\u0026rsquo;s guide. ripgrep: print only filenames matching pattern. shell completion setup for rg. To list the supported filetypes, use rg --type-list.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 February 2020","externalUrl":null,"permalink":"/2020/02/16/ripgrep_cheat_sheet/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/BurntSushi/ripgrep\" target=\"_blank\"\u003eRipgrep\u003c/a\u003e is a command line tools that searches patterns under your current directory, like the good old \u003ca href=\"https://en.wikipedia.org/wiki/Grep\" target=\"_blank\"\u003egrep\u003c/a\u003e, but \u003ca href=\"https://blog.burntsushi.net/ripgrep/\" target=\"_blank\"\u003ewith faster speed\u003c/a\u003e. In this post, I list some of the commonly-used flags for ripgrep.\u003c/p\u003e","title":"Ripgrep Searching CheatSheet","type":"posts"},{"content":"本文简单总结 macOS 系统远程连接 Windows 系统需要的工具以及简单设置。\nTeamViewer # 最简单的方式还是使用 TeamViewer，非商业应用，建议使用个人版。在 Mac 上和要连接的 Windows 机器上都安装好 TeamViewer，然后在 Windows 机器上打开 TeamViewer，会有显示 TeamViewer ID 以及密码。在 Mac 上打开 TeamViewer，输入 ID 以及密码，即可连接到 Windows 机器。\n偶尔由于网络连接等因素影响，连接可能会中断，需要重新连接。这种连接方式非常简单，不需要太多复杂的设置，适合普通用户使用。\nMicrosoft Remote Desktop # 如果是连接公司内部的电脑，可能需要 VPN 才能连上1，不能使用 TeamViewer 直接连接，VPN 设置好以后，就可以使用 Microsoft Remote Desktop 连接远程电脑。\nMicrosoft Remote Desktop 是微软提供的连接 Windows 电脑的工具，有多种客户端可以下载。美区的 App Store 账号可以直接从 App store 下载，App Store 有两个版本，Microsoft Remote Desktop 8 和 Microsoft Remote Desktop 10，版本 8 是旧版本，已经停止更新，建议使用版本 10。\n国内 App Store 没有上架 Microsoft Remote Desktop，可以直接从 这里 下载 Beta 版本 (可能需要梯子才能访问)安装。\n安装完成之后，点击 \u0026ldquo;Connections \u0026ndash;\u0026gt; Add PC\u0026rdquo; 或者直接使用 ⌘ + N 可以创建新的连接。PC name 一般情况下填写电脑的 IP2。\n然后，User account 一栏，在下拉菜单选择 “Add User Account\u0026hellip;”，在弹出的窗口，填写自己的用户名，以及电脑的登陆密码。\n如果一切设置正确，点击连接，等待一段时间，即可连接上 Windows 电脑，如果通过 VPN 连接 Windows，注意一定要保持 VPN 出于连接状态，否则无法连接到 Windows 电脑。\nJump Desktop # Jump Desktop 也是一款远程桌面应用，需要付费，支持 14 天免费试用，点击 这里 可以下载。安装以后，点击 Quick Connection 按钮，选择 RDP 协议，输入 windows 电脑的 IP 地址。添加完成以后，双击新建的连接，输入远程电脑的用户名还有密码，即可连接远程桌面。\n个人感觉，Jump Desktop 的显示效果比 Microsoft Remote Desktop 要好很多，Microsoft Remote Desktop 显示的桌面比较模糊，Jump Desktop 显示的桌面很清晰。\nRemotix # Remotix 也可以用于连接远程的 Windows 桌面，可以免费试用 15 天时间。安装以后，点击界面左上角 「Create New Connection」，选择 RDP 协议，然后在弹出的窗口，输入远程电脑的 IP，在 Authentification 部分，输入用户名还有密码，然后保存连接即可。\nRemotix 显示效果也比 Microsoft Remote Desktop 好，但是略差于 Jump Desktop，也可能是默认设置的问题。\n参考 # https://www.maczd.com/post/microsoft-remote-desktop-mac.html https://blog.devhitao.com/2019/03/23/microsoft-remote-desktop-for-mac/ https://www.waitsun.com/tag/yuan-cheng-zhuo-mian 如果需要 VPN，首先需要把 VPN 连接上，否则无法连接上远程的 Windows 电脑。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIP 地址可以在 Windows 命令行使用 ipconfig 命令查看，查看「IPv4 Address」那一项。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 February 2020","externalUrl":null,"permalink":"/2020/02/09/mac_connect_windows_remotely/","section":"Posts","summary":"\u003cp\u003e本文简单总结 macOS 系统远程连接 Windows 系统需要的工具以及简单设置。\u003c/p\u003e","title":"Mac 系统如何远程连接控制 Windows 电脑","type":"posts"},{"content":"V2ex 是一个程序员聚集的论坛，也是我经常访问的一个论坛，经常有人在论坛上提问技术问题。前两天遇到一个帖子，问的是 vscode 如何取消按下点以后自动补全第一个候选项。\n这其实是一个很简单的问题，自己搜一下就可以找到答案了,不需要在论坛上提问，肯定有人已经有类似的问题了。我打算回复说这个问题很简单，不过为了保持严谨，我想还是先自己在搜索引擎找一下，看能不能很容易就找到答案，结果令人有点意外。\n我先使用了下面的检索关键词：\nvs code 关闭按下点自动补全\n用百度和谷歌都试了一圈，虽然结果有很多都是和 vscode 自动补全相关，但是没有找到该问题的答案。我想是不是我的输入关键词有问题，换成了下面的关键词\nvscode python 关闭按下 dot 自动补全\n还是没有找到相关的设置。\n我又试着用英语搜索，使用的关键词如下：\nvs code disable autocompletion after pressing dot\n马上就找到了具体的解决方案，原来是 vscode 在写 javascript 时候，默认设置是按下 dot 以后，会自动把自动补全菜单第一个候选项插入到当前文件，可以通过下面的选项关闭这种行为：\n\u0026#34;editor.acceptSuggestionOnCommitCharacter\u0026#34;: false, 实际上，使用 vs code disable dot autocompletion 作为关键词也能搜到我们想要的答案。\n使用百度，用以上的英语关键词也不能找到关键的信息，百度和谷歌，高下立判。然而，总有人为百度辩护，觉得百度的搜索结果也不差啊，事实上，百度真的很差，比谷歌的搜索结果低了不止一个档次，稍微复杂一些的搜索，可能就是一无所获，要找到有用的信息如大海捞针。对于做技术的人，使用英语+谷歌搜索，能够节省大量查找资料浪费的时间。\n为什么用中文搜索不到很多有用的信息呢，难道中文不如英文？使用中文的人肯定有人有类似的问题，但是却找不到相关的内容。我觉得有两个原因，一个中文缺乏一个有影响力的像 stack overflow 一样高质量的问答论坛（不要说知乎，知乎人均 985，人均哈佛耶鲁，年薪百万）；另外，中文环境总体上缺乏高质量的分享文章（这个原因比较多，不细说了），使用某个关键词能够搜到的内容很多都是重复复制，而且这些文章很多都不注重内容的排版和结构，这方面的坏典型有 CSDN 和简书，以致于现在很多人在谷歌搜索的时候默认把 CSDN 和简书等平台给屏蔽了。\n无论做不做技术，我们都应该使用谷歌（在目前国内的环境，能够使用谷歌就是一种优势），停止使用百度，对于做技术的人，还应该加上一条，尽量使用英语关键词搜索。\n","date":"22 January 2020","externalUrl":null,"permalink":"/2020/01/22/why_use_english_and_google/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://www.v2ex.com/\" target=\"_blank\"\u003eV2ex\u003c/a\u003e 是一个程序员聚集的论坛，也是我经常访问的一个论坛，经常有人在论坛上提问技术问题。前两天遇到\u003ca href=\"https://v2ex.com/t/637584\" target=\"_blank\"\u003e一个帖子\u003c/a\u003e，问的是 vscode 如何取消按下点以后自动补全第一个候选项。\u003c/p\u003e","title":"为什么要用英语以及谷歌？","type":"posts"},{"content":"After updating Hugo to the latest version (v0.62), apart from the issue of missing HTML code, I have also observed that level 1 header written in Markdown is not rendered in the generated TOC.\nAfter searching for a little bit, it turns out it has also something to do with Hugo\u0026rsquo;s new goldmark Markdown renderer. According to Hugo\u0026rsquo;s documentation, it now renders Markdown headings starting from level 2 and ending in level 3. That is why level 1 headings are now not rendered.\nTo fix this issue, you need to add the following settings to your config.toml:\n[markup] [markup.tableOfContents] endLevel = 4 startLevel = 1 References # https://github.com/gohugoio/hugo/issues/1778 https://github.com/Track3/hermit/issues/112 https://github.com/okkur/syna/issues/682 ","date":"19 January 2020","externalUrl":null,"permalink":"/2020/01/19/hugo_toc_header_missing/","section":"Posts","summary":"\u003cp\u003eAfter updating Hugo to the latest version (v0.62), apart from the issue of\n\u003ca href=\"https://jdhao.github.io/2019/12/29/hugo_html_not_shown/\" target=\"_blank\"\u003emissing HTML code\u003c/a\u003e, I\nhave also observed that level 1 header written in Markdown is not rendered in\nthe generated \u003cabbr title=\"Table of Content\"\u003eTOC\u003c/abbr\u003e.\u003c/p\u003e","title":"Missing Level 1 Header in TOC in Latest Hugo","type":"posts"},{"content":" 引子 # 从完全使用 Neovim 进行日常项目开发与文档写作到现在，已经过去大约一年半的时间。一年半以前，我对 Vim 的了解还处在非常初级的阶段，甚至还不知道 Neovim，经过长时间的使用与学习，目前已经达到了熟练使用的程度。当然，Vim 的知识过于庞大，即便我已经使用了一年半的时间，还有很多 Vim/Neovim 的特性或者知识仍然有待了解与发掘。\n在使用 Neovim 的过程中，我对 Neovim 和 Vim 的历史以及它们之间的恩怨情仇也产生了兴趣，散布在互联网上各处的博客、视频以及论坛讨论让我对过去的历史有了一定了解。\nP.S., 我建立了一个 nvim 中文用户 tg 群，有兴趣可以加入。\nVim 的历史 # 想要了解 Vim 的历史，一个很好的资料是 Vim 创始人 Bram Moolenaar 在 VimConf1 2018 上的专题演讲，他在演讲中全面回顾了 Vim 的发展以及 Vim 即将添加的一些新特性。出于兴趣，我把他的 原始演讲视频 从 YouTube 上扒了下来，添加了英文字幕，上传到了 B 站。另外一个很好的视频是 Bram 在 Vim 25 周年活动上发表的演讲。\n简单来说，Vim 于 1991 年由 Bram 发布，最初 Vim 模仿了 Vi 编辑器的特性，后面加以扩展，逐步添加了很多新功能。今年距离 Vim 首次发布已经快 30 年了，Vim 这个强大的编辑器仍然在不断更新，并且被许多人所使用和讨论，这也从侧面说明了 Vim 的魅力 (Vim 被网友们尊称为「编辑器之神」)。刚开始，Vim 完全由 Bram 独立开发维护，后来不断有开发者加入 Vim 的开发，并把 Vim 移植到了不同的系统平台上。有一段时间，Bram 甚至辞去了工作，全力投入到 Vim 的开发，靠着网友的捐助维持基本生活。2006 年 Bram 加入了 Google 位于苏黎世的分部，Google 出于对 Bram 的尊重以及对开源文化的认同，同意 Bram 每周可以花 20% 的工作时间用于和 Vim 相关的工作，谷歌真是一家开明的公司。\nVim 开发模式与弊端 # Vim 最初开发的年代，虽然已经兴起了开源运动，例如大名鼎鼎的 GNU 项目，但是开源项目的组织与运行还不像现在这样方便，Git 和 GitHub 要在十几年后才会出现。其他开发者向 Bram 贡献 Vim 源代码的方式是通过邮件，向 Bram 提交 patch，如果 Bram 觉得这个 patch 不错，就会把 patch 合并到 Vim 的源代码中。20 多年过去了，开源项目的协作方式由于 Git 和 GitHub 的出现发生了很大变化。很多顶级开源项目都选择使用 GitHub 进行代码的开发和管理：开发者通过 Git 提交 pull request 方式贡献自己的代码，如果项目的维护者觉得代码的质量 OK，就会合并这个请求，将代码并入主线代码。\n是否可持续发展的隐忧 # Vim 代码曾托管在 Google Code，随着 Google Code 于 2015 年关闭，Vim 源代码被迁移到 GitHub。表面上看起来 Vim 的开发模式遵循了开源项目的范式，实际上并不是，因为 Vim 并没有采用 GitHub pull request 的方式。关于 Vim 开发相关的讨论，都在 vim-dev 进行，开发者仍然要向 Bram 提交 patch，如果 patch 通过，再由 Bram 本人提交到 GitHub 上2，和之前的开发方式并没有本质区别。所以 Vim 虽然看起来也有很多贡献者，但是只有 Bram 才有权力决定什么代码可以合并入 Vim，什么样的代码不行 (Bram 就是 Vim 项目的 BDFL)。Bram 对于添加新功能非常谨慎，导致之前有很多开发者提交的 patch 都没有被合并，引起了一些开发者对 Vim 开发模式的不满。这也引发了很多人对 Vim 项目未来能否可持续发展的担忧，当 Bram 去世以后，Vim 的未来会怎样？甚至 Bram 本人在采访中被问到，如何确保 Vim 项目可持续发展，他的回答是\nKeep me alive.\n不知是开玩笑，还是他真正想法如此？也正是因为 Bram 的这种对新功能的「审慎」态度，Vim 7.0 版本于 2006 发布，一直到了十年之后的 2016 年，Vim 才发布了有重大更新的 8.0 版本，增加了开发者期待已久的异步操作等新特性。\nNeovim 的诞生 # Neovim 之所以诞生，就与 Vim 这种「怪异」的开发模式有关。Vim 在版本 8.0 之前是没有异步执行功能的，这意味着，如果你运行一个命令，必须等到命令执行完毕，才可以继续操作当前 buffer，命令执行过程，会阻断当前的 UI，用户只能等着。Neovim 项目的发起人 tarruda3 曾经给 Vim 提了一个 patch，为 Vim 增加了 job 功能，可以帮助 Vim 异步执行操作。不过遗憾的是，该 patch 不知为什么没有被 Bram 接受。因此 Tarruda 在 2014 年 fork 了 Vim，发起了 Neovim 项目，开始改变 Vim 的开发模式，遵循现代开源项目的开发流程，同时对 Vim 杂乱的代码进行了大的清理和重构，去掉了对老旧系统的支持，同时添加了新的特性。\nNeovim 特性 # 经过几年的发展，Neovim 没有陷入凋亡，目前来看，项目很活跃，开发者众多。Neovim 实现了很多新特性，例如内置 terminal 和异步功能都是 Neovim 率先实现，然后 Vim 才跟进实现的，可能是 Bram 也感受到了来自 Neovim 竞争的压力，不希望自己的项目失去开发者的青睐，加快了开发的步伐。遗憾的是，Vim 重新实现的异步功能，方法命名上选择了与 Neovim 不兼容，在 Neovim 中，发起和停止 job 的方法是 jobstart() 和 jobstop()，但是 Vim 使用的是 job_start() 和 job_stop()，这也给开发者和用户造成了不必要的麻烦，在使用异步功能的时候，需要面对两套不同的 API4。\n在用户层面来看，使用 Neovim 或者 Vim，区别不明显，Neovim 主要改变在软件架构方面，例如 Neovim 增加了 RPC 通信功能，插件可以通过 messagepack 协议与 Neovim 进行通信，控制 Neovim 的行为。这种方式的好处是插件不必使用原生的 Vim script 编写，大部分的功能都可以通过更加强大的编程语言来实现，例如 Python，或者 JavaScript，利用这个特性的最典型的插件如 deoplete 和 coc.nvim，特别是 coc.nvim 插件，利用 JavaScript 实现了非常强大的代码自动补全功能，可以媲美 VS code 提供的代码补全功能。\n由于 Neovim 支持 RPC，在此基础上可以有很多 GUI 的实现，GUI 通过 RPC 与 Neovim 进行通信。一些优秀的 GUI 客户端有 nvim-qt，vimR，fvim (19 年刚出来的客户端，还不错)。同时，Neovim 可以充当一个 server，被嵌入到其他编辑器或者程序中，因此你不必使用蹩脚的 Vim 按键模拟插件，可以使用真正的 Vim，例如 vscode-neovim 把 Neovim 嵌入到了 VS code 中，firenvim 把 Neovim 嵌入到了网页的 textarea 中，非常酷的插件，firenvim 的使用可以参考我之前的 博文。\nNeovim 对 Lua 语言有很好的支持，可以使用 Lua 语言编写插件，设置 Neovim，调用 Neovim 的函数等，例如后面要提到的 Neovim 的 LSP 功能就是用 Lua 语言开发的，更多信息，可以参考 :h lua。\nVim 与 Neovim 最新进展 # Vim 新进展 # Bram 在 2018 年做了一个调查，希望了解 Vim 插件开发者目前最需要 Vim 实现哪些功能，其中呼声比较高的是 floating windows，也就是在当前窗口的任意位置再建立一个悬浮窗口，用来显示额外的信息。2019 年 12 月，在 Vim 8.2 版本中，正式加入了 floating window 功能。\n同时 Bram 已经在考虑 Vim 9.0 的开发事宜，目前主要考虑的是加快 vim script 执行的速度，逐渐去掉 vim 的 Python，perl 等 interface，以及新的定义函数的方式等。Bram 已经在 GitHub 上创建了 vim9 仓库，开始 Vim 9 的开发工作。\nNeovim 新进展 # Neovim 团队在 19 年 9 月份，先于 Vim ，在 Neovim 0.4 版本中正式推出了 floating window 特性，马上就有一批插件利用 floating windows 做了一些功能，例如 leaderf 利用 floating window 显示文件模糊查找的窗口，coc.nvim 利用 floating window 显示函数方法的签名等，整体感觉炫酷而实用，给人一种 IDE 的既视感。\n另外，Neovim 已经合并了 Language Server Protocol 的客户端实现，并且专门开了一个仓库帮助用户配置 LSP，对于不喜欢使用第三方 LSP 插件的用户，多了一种选择。\nNeovim 开发者正在开发的一个功能是 tree-sitter 集成，目前 Neovim 和 Vim 的语法高亮都是通过正则表达式实现的，效率不高，复杂的正则表达式可能会造成卡顿。Tree-sitter 是一个用 C 语言实现的源代码解析工具，等该功能合并进 Neovim 以后，能够进一步提高 Neovim 的速度，解决基于正则表达式的语法高亮的卡顿问题。对 Neovim treesitter 感兴趣的用户可以关注 这个仓库。\n参考 # Hacker New 对 Vim 迁移到 GitHub 的讨论. The history of Vim. Vim, an open-source editor. Vim 各个版本发布信息. Vim 8 version release. Hacker News 上对 Vim 8.2 的讨论. Tarruda What happened to tarruda. What exactly does tarruda do? Reddit 上对 Neovim LSP 和 tree-sitter 功能的讨论. Neovim 0.4 版本的讨论. /r/vim 关于 Vim 9.0 的讨论. /r/neovim 上关于 Vim 9.0 的讨论. Why Neovim is better than Vim. Bram 对 Neovim 的看法. https://www.hostingadvice.com/blog/vim-creator-champions-charityware/ VimConf 是由日本的 Vim 使用与爱好者举办的一年一度的会议，迄今为止已举办了七届。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n所以查看 Vim 项目的贡献者，就会发现很奇葩的现象：贡献者只有两人，并且几乎所有的 commit 作者都是 Bram。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nTarruda 目前已经不再担任 Neovim 的维护者，目前 Neovim 项目的负责人是 Justin M. Keyes.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n有开发者专门开发了一个插件，用来抹平 Neovim 和 Vim 异步特性的差异。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"12 January 2020","externalUrl":null,"permalink":"/2020/01/12/vim_nvim_history_development/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/202202021242998.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\n\n\u003ch1 class=\"relative group\"\u003e引子 \n    \u003cdiv id=\"%E5%BC%95%E5%AD%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%BC%95%E5%AD%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e从完全使用 \u003ca href=\"https://neovim.io/\" target=\"_blank\"\u003eNeovim\u003c/a\u003e 进行日常\u003ca href=\"https://jdhao.github.io/2018/12/24/centos_nvim_install_use_guide_en/\" target=\"_blank\"\u003e项目开发\u003c/a\u003e与\u003ca href=\"https://jdhao.github.io/2019/01/15/markdown_edit_preview_nvim/\" target=\"_blank\"\u003e文档写作\u003c/a\u003e到现在，已经过去大约一年半的时间。一年半以前，我对 Vim 的了解还处在非常初级的阶段，甚至还不知道 Neovim，经过长时间的\u003ca href=\"https://jdhao.github.io/categories/Nvim/\" target=\"_blank\"\u003e使用与学习\u003c/a\u003e，目前已经达到了熟练使用的程度。当然，Vim 的知识过于庞大，即便我已经使用了一年半的时间，还有很多 Vim/Neovim 的特性或者知识仍然有待了解与发掘。\u003c/p\u003e\n\u003cp\u003e在使用 Neovim 的过程中，我对 Neovim 和 Vim 的历史以及它们之间的\u003cem\u003e恩怨情仇\u003c/em\u003e也产生了兴趣，散布在互联网上各处的博客、视频以及论坛讨论让我对过去的历史有了一定了解。\u003c/p\u003e\n\u003cp\u003eP.S., 我建立了一个 \u003ca href=\"https://t.me/nvim_zh\" target=\"_blank\"\u003envim 中文用户 tg 群\u003c/a\u003e，有兴趣可以加入。\u003c/p\u003e","title":"Vim 和 Neovim 的前世今生","type":"posts"},{"content":"Recently, when I was trying to generate my blog site using Hugo, I found that all my posts were successfully rendered, except for one new post. This was rather strange.\n最近在使用 Hugo 生成博客文章的时候，发现有一篇新写的文章无法生成，而其他博文都可以成功渲染，非常奇怪。\nAfter some debugging, I found the culprit is the date format I use in the post front matter. I did not add the timezone info when I wrote the date info (only year, month, date, hour, minute, second were used). The date field info was like 2020-01-10 23:48:25. I added the timezone info to the date info: 2020-01-10 23:48:25+0800 and regenerated the blog site using Hugo. After that, the missing post was shown in the blog site. So we can conclude that the culprit is the incomplete date info.\n经过比较和查找，觉得问题可能出在文章 front matter 的 date 书写格式上：当时 date 没有写时区信息，只写了年月日和时分秒信息，具体写的是 2020-01-10 23:48:25。后面再加上了时区信息， date 变成了 2020-01-10 23:48:25+0800。然后使用 hugo 重新生成博客，果然新写的文章可以显示在博客里面了，由此确定是博文的日期格式问题。\nThe cause（原因） # After pinpointing the issue, I searched the web and found the root cause. Whether a post will be rendered by Hugo depends on when this post will be published. If the publish time of a post is later than the time when we build the blog site, i.e., Hugo thinks that we want to publish this post in future time, then Hugo will not render this post by default. The post mentioned earlier is not rendered, because Hugo thinks we have not reached its publish date, so it skips rendering that post.\n确定了问题以后，在网上经过一番搜索，我发现了问题的根源，原来 Hugo 是否会渲染一篇博文依赖该文章的发布时间。如果一个博文的发布时间比 Hugo 构建当前站点的时间还要晚，也就是 Hugo 认为博文的发布时间在未来，就不会渲染该篇博文。前面没有写时区的博文，就是被 Hugo 认为发布时间还未到，所以没有渲染出来。\nSolution（解决方法） # To solve this problem, we need to force Hugo to render posts that have publish time in the future. We can fix this in two ways. First, add the following setting to config.toml:\n要解决这个问题，可以强制 Hugo 渲染发布时间在未来的博文，有两个办法。第一个是在 config.toml 中加入以下设置\nbuildFuture = true The second way is to add option --buildFuture when we are using Hugo to build the blog site.\n第二个方法是在 hugo build 博客的时候，加上 --buildFuture 选项。\nReference（参考） # https://www.jvt.me/posts/2019/03/24/datetime-hugo/ https://discourse.gohugo.io/t/issue-with-generating-site-missing-posts/12149/3 https://github.com/bppwrite/bppwrite.github.io/issues/44 https://github.com/gohugoio/hugo/issues/3977 ","date":"11 January 2020","externalUrl":null,"permalink":"/2020/01/11/hugo_post_missing/","section":"Posts","summary":"\u003cp\u003eRecently, when I was trying to generate my blog site using \u003ca href=\"https://gohugo.io/\" target=\"_blank\"\u003eHugo\u003c/a\u003e,\nI found that all my posts were successfully rendered, except for one new post.\nThis was rather strange.\u003c/p\u003e\n\u003cp\u003e\u003cfont color=\"red\"\u003e最近在使用 \u003ca href=\"https://gohugo.io/\" target=\"_blank\"\u003eHugo\u003c/a\u003e 生成博客文章的时候，发现有一篇新写的文章无法生成，而其他博文都可以成功渲染，非常奇怪。\u003c/font\u003e\u003c/p\u003e","title":"Hugo Post Missing (Hugo 博客文章缺失问题)","type":"posts"},{"content":"2019 年年末的这三个月过得很快，最近一个月都在紧张忙碌中度过，以至于错过了年末的时间，没有写一篇 2019 年的阅读总结。\n今年看书数量不多，年初追了《古董局中局》电视剧，顺便把马亲王的同名书也看了，这个电视剧为了增加集数，比较拖沓，看了几集就放弃了。后面搜了一下马亲王的书，又看了一部《风起陇西》，主要讲的是三国时期蜀国和魏国的谍战故事，根据历史事实，合理想象，情节还算比较精彩，亲王说是受某个国外小说家的启发。\n后面随便翻了翻《剑桥中国史-隋唐篇》，这个系列的书偏学术色彩，从经济，制度，文化等社会生活的各个方面讲述，不是按照时间顺序，略枯燥，看完了以后也没记住太多信息。接着开始看秦朝，不过没看完，后面也断了，这种类型的书不吸引人。\n六七月份，《长安十二时辰》电视剧大火，就顺便把书看了一下，看完书，就不想看电视剧了，电视剧剧情也是进展比较慢，没有心思跟了。\n七月多，开始看《The making of atomic bomb》，这本书是之前看《And the band played on》 的时候顺便下载的，一直没看，当时没有特别想看的东西，就开始看了。全书全景呈现了人类爆炸第一颗原子弹的完整历程，对于20世纪原子物理学的发展也有详细叙述，可以说是了解第一颗原子弹爆炸的权威书籍。\n紧接着开始看《光荣与梦想》，这本书很多人都很熟悉，在国内知名度比较高，由于担心中文版翻译不行，我看的是英文版。看了一些，发现这本书真的不容易读懂，书里面涉及太多美国近代历史人物和事件，以及本土人士才知道的文化背景，作者默认读者对这些历史人物和事件有了解，也可能是受篇幅限制，所以没有详细阐释，给我的阅读造成了很大障碍，往往看完一个段落，虽然认识单词，但是还是无法理解作者想要说什么。至今还没有看完，希望可以坚持看完。\n","date":"11 January 2020","externalUrl":null,"permalink":"/2020/01/11/my_reading_list_2019/","section":"Posts","summary":"\u003cp\u003e2019 年年末的这三个月过得很快，最近一个月都在紧张忙碌中度过，以至于错过了年末的时间，没有写一篇 2019 年的阅读总结。\u003c/p\u003e","title":"我的 2019 阅读清单","type":"posts"},{"content":"In this post, I want to share how to do number arithmetic quickly and get what you want in specified format. More specifically, the topic is:\nHow do we add, subtract, multiply or divide a value to each number in a range?\nExample 1 # Suppose that we have the following numbers at the end of each line:\nline 1: 10 line 2: 20 line 3: 30 line 4: 40 line 5: 50 How to we do arithmetic operation to those numbers at the end of each line quickly?\nWe can use expression in substitution command to do this task, for details, see :h sub-replace-expression inside Vim. The idea is that instead of substitute what you search with a string, we will evaluate an expression and use the evaluated result as the replace string. The general syntax for substitution is:\n:s/PATTERN/REPLACE/[flag] To use an expression in REPLACE string, you can start the replacement string with \\=, and the following string will be interpreted as an expression by Vim. If you have used capture groups in PATTERN, you can retrieve the captured text in the corresponding capture group with submatch() function. For example, submatch(1) will return the text in the 1st capture group, submatch(2) returns the 2nd group, submatch(0) will return the whole matching pattern.\nWith all this knowledge, we can easily solve the above problem. For example, to add 2 to the number at the end of each line, do:\n:1,5s/\\v(\\d+)$/\\=str2float(submatch(1))+2 Note that in the above command, the return value of submatch() are strings. In order to convert string to float type, we need to use function str2float() explicitly. Although you can directly add strings with numbers, the result may not be what you want. For example, echo '0.2' + 2 shows 2 instead of 2.2. After looking at the documentation on variables (:h variables), I find the the reason:\nThe Number and String types are converted automatically, depending on how they are used.\nIt means that strings will by default be converted to an integer where necessary. So string 0.2 becomes 0 when we add it with 2.\nSimilarly, to minus or multiply by 2:\n:1,5s/\\v(\\d+)$/\\=str2float(submatch(1))-2 :1,5s/\\v(\\d+)$/\\=str2float(submatch(1))*2 For division, things are a little different here, because the division symbol / is the same as the substitute delimiter. In order to use division character in substitute expression, we can change the delimiter to other characters, for example, to #:\n:1,5s#\\v(\\d+)$#\\=str2float(submatch(1))/2.0 Note that for division, we need to divide those numbers by 2.0, not by 2. If you use two integers, Vim will use integer division, not float division1.\nOne minor issue with the division result is that the result may have many decimal digits. You may want to round it to fixed digit, e.g., 3 digits. This can be easily accomplished with the printf() function, and the whole command looks like:\n:1,5s#\\v(\\d+)$#\\=printf(\u0026#39;%.3f\u0026#39;, str2float(submatch(1))/2.3) Example 2 # I have the following 4 columns of text (separated by more than one spaces):\ndata1 data2 data3 data4 12 1.0 0.1667 in 0.2150 in 16 1.0 0.2222 in 0.2825 in 20 1.0 0.2778 in 0.3488 in 24 1.0 0.3333 in 0.4163 in 28 1.0 0.3889 in 0.4838 in 32 1.0 0.4444 in 0.5513 in I want to insert the result of division from 4th and 3rd column in the end of each line. For example, after insertion, first line will become:\n12 1.0 0.1667 in 0.2150 in 1.2897 My initial implementation is like:\ns#\\v\\d{2,}\\s+\\d\\.\\d\\s+(\\d\\.\\d+) in\\s+(\\d\\.+\\d+) in#\\=printf(\u0026#39;%s %.4f\u0026#39;, submatch(0), submatch(2)/submatch(1)) However, I am getting the following result:\n12 1.0 0.1667 in 0.2150 in -9223372036854775808.0000 It seems that the number division goes wrong for string types.\nAs discussed earlier, submatch() returns a string and string will be converted to integer implicitly when doing arithematics. So these two strings are converted to integer instead of float type, and they all become 0, as can be verifed by the command: echo 0/0.\nWe need to convert these strings into float first. The correct command is:\ns#\\v\\d{2,}\\s+\\d\\.\\d\\s+(\\d\\.\\d+) in\\s+(\\d\\.+\\d+) in#\\=printf(\u0026#39;%s %.4f\u0026#39;, submatch(0), str2float(submatch(2))/str2float(submatch(1))) We can also use \\zs to simplify the above command a bit:\ns#\\v\\d{2,}\\s+\\d\\.\\d\\s+(\\d\\.\\d+) in\\s+(\\d\\.+\\d+) in\\zs.*#\\=printf(\u0026#39; %.4f\u0026#39;, str2float(submatch(2))/str2float(submatch(1))) References # Number manipulation within Vim. Change delimiter in search and replace command. Increment a specific number in csv file. Rounding number in Vim. Round floats to one decimal. vim substitution with mathematical expression How can I convert px units to em units programmatically in vim? Search and replace: float arithmetic https://learnvimscriptthehardway.stevelosh.com/chapters/25.html For example, if we do :echo 5/2, we will get 2 instead of 2.5.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 January 2020","externalUrl":null,"permalink":"/2020/01/10/nvim_number_arithmetic_in_substitute/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how to do number arithmetic quickly and get what\nyou want in specified format. More specifically, the topic is:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHow do we add, subtract, multiply or divide a value to each number in a\nrange?\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Doing Number Arithmetics in Vim/Neovim Substitutions","type":"posts"},{"content":"Vim-snippet provides a lot of useful Ultisnips snippets for various filetypes. For example, for Markdown, to insert level 1 header, the snippet trigger is sec, and for level 2 and 3 header, the triggers are ssec and sssec respectively. These triggers are non-intuitive and hard to remember and type.\nToday, I want to share how to create just one Markdown header snippet using regex keyword and Python interpolation1 with Ultisnips. The final effect of the snippet is that you can type h{NUM} (where NUM is a header level) and press Tab will create the corresponding headers.\nCreating a header snippet # The regex keyword # In order to create a single snippet with chaning trigger keyword, we need to use regex in the trigger word. So the first line of the snippet looks like this:\nsnippet \u0026#34;h([1-6])\u0026#34; \u0026#34;Markdown header\u0026#34; br Note the br flag at the end of the line:\nb: This snippet only triggers at the beginning of a line. r: This snippet contains regex and is not a normal snippet. The idea is that we will capture the number after h in the begining of a line. This number must be in the range [1-6] to trigger the snippet since there are only six header levels in Markdown.\nAlso note that, unlike other snippet trigger, the regex trigger word needed to be quoted with double quotes.\nA simple snippet # Combining regex keyword and Python interpolation, we can create a simple header snippet like the following one:\nsnippet \u0026#34;h([1-6])\u0026#34; \u0026#34;Markdown header\u0026#34; br `!p snip.rv = int(match.group(1))*\u0026#39;#\u0026#39;` ${1: Section Title} `!p snip.rv = int(match.group(1))*\u0026#39;#\u0026#39;` $0 endsnippet In the above snippet, we use two same Python interopolation blocks to create the left and right header level marker, and a regular snippet text is between them.\nInside Python interpolation block, Ultisnips provides the match object, which is the captured result from regex keyword. match.group(1) will be the content of the first capture group, and in this case, it will be the number in string format. The rest of the code is self-explaining so I will not elaborate.\nA complex one using post_jump # A more advanced way is to use post_jump actions, which can perform various complicated logics inside a Python function.\nWith post_jump, the header snippet now looks like this:\nglobal !p def gen_header(snip): placeholders_string = snip.buffer[snip.line].strip() level = int(placeholders_string[0]) # erase current line snip.buffer[snip.line] = \u0026#34;\u0026#34; line_content = \u0026#34;#\u0026#34;*level + \u0026#34; ${1:Section Name} \u0026#34; + \u0026#34;#\u0026#34;*level line_content += \u0026#39;\\n\\n$0\u0026#39; snip.expand_anon(line_content) endglobal post_jump \u0026#34;gen_header(snip)\u0026#34; snippet \u0026#34;h([1-6])\u0026#34; \u0026#34;Markdown header\u0026#34; br `!p snip.rv = match.group(1)` endsnippet In the post jump code, snip.buffer is the object representing the current buffer and is indexable. snip.line is the line in which the snippet expand.\nsnip.expand_anon() will accept the snippet content and expand it, just like you have typed it in the snippet body.\nReferences # https://github.com/honza/vim-snippets/blob/master/UltiSnips/markdown.snippets http://vimcasts.org/episodes/ultisnips-python-interpolation/ If you are not familiar with Python interpolation, check tutorial here and post here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"5 January 2020","externalUrl":null,"permalink":"/2020/01/05/ultisnips_python_interpolation/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"\"\u003eVim-snippet\u003c/a\u003e provides a lot of useful Ultisnips snippets for various\nfiletypes. For example, for Markdown, to insert level 1 header, the snippet\ntrigger is \u003ccode\u003esec\u003c/code\u003e, and for level 2 and 3 header, the triggers are \u003ccode\u003essec\u003c/code\u003e and\n\u003ccode\u003esssec\u003c/code\u003e respectively. These triggers are non-intuitive and hard to remember and\ntype.\u003c/p\u003e","title":"Regex Keyword and Python Interpolation in Ultisnips","type":"posts"},{"content":" Update log 2022-08-15: update firenvim conf; add install setting for packer.nvim Introduction # Last year, I have written a post on how to edit texts inside the browser using Vim/Nvim or browser extensions that have Vim emulations. However, none of them is good enough, since they are either not convenient to use or lacking features compared to real Neovim empowered by various plugins.\nFirenvim is another project that aims to solve the problem and has done a great job. Thanks to Neovim\u0026rsquo;s remote UI architecture1, firenvim activate a Neovim instance in the background and acts as a remote UI client for Neovim. Thus, you can use the full power of Neovim and its plugins inside your browser without any compromises.\nInstall # To use firenvim, first we need to install it as a Neovim plugin using a plugin manager, for example, with vim-plug:\nPlug \u0026#39;glacambre/firenvim\u0026#39;, { \u0026#39;do\u0026#39;: { _ -\u0026gt; firenvim#install(0) } } If you use packer.nvim, the following works:\nuse({ \u0026#34;glacambre/firenvim\u0026#34;, run = function() fn[\u0026#34;firenvim#install\u0026#34;](0) end, opt = true, setup = [[vim.cmd(\u0026#39;packadd firenvim\u0026#39;)]], }) The above setting works for Windows and Linux. For macOS, due to the reason that $PATH variable is changed inside browser, we need to run the following command on the command line:\nnvim --headless -c \u0026#34;call firenvim#install(0, \u0026#39;export PATH=\\\u0026#34;$PATH\\\u0026#34;\u0026#39;)\u0026#34; -c quit After that, we need to install firenvim extension for Firefox or Chrome.\nNow, restart your browser. Click a text area and firenvim should be able to automatically take over the text area and start a neovim instance.\nCustom settings # Firenvim provides the variable g:started_by_firenvim when it starts a neovim instance. So you can use this variable to set conditional options and settings for firenvim. For example, set laststatus to zero, and do not show ruler, since the text area is already very small.\nYou can also customize the filetype created for each website, as per the doc here.\nMy custom settings for firenvim are as follows:\nif exists(\u0026#39;g:started_by_firenvim\u0026#39;) \u0026amp;\u0026amp; g:started_by_firenvim \u0026#34; general config for firenvim let g:firenvim_config = { \\ \u0026#39;globalSettings\u0026#39;: { \\ \u0026#39;alt\u0026#39;: \u0026#39;all\u0026#39;, \\ }, \\ \u0026#39;localSettings\u0026#39;: { \\ \u0026#39;.*\u0026#39;: { \\ \u0026#39;cmdline\u0026#39;: \u0026#39;neovim\u0026#39;, \\ \u0026#39;priority\u0026#39;: 0, \\ \u0026#39;selector\u0026#39;: \u0026#39;textarea\u0026#39;, \\ \u0026#39;takeover\u0026#39;: \u0026#39;never\u0026#39;, \\ }, \\ } \\ } function! s:setup_firenvim() abort set filetype=markdown set noruler noshowcmd set laststatus=0 showtabline=0 endfunction augroup firenvim autocmd! autocmd FileType text call s:setup_firenvim() augroup END endif For more configurations, check the doc on project page.\nReferences # https://www.reddit.com/r/neovim/comments/bmguyj/embed_neovim_in_your_browser/ https://www.reddit.com/r/neovim/comments/d9gk5y/firenvim_has_been_released_on_the_chrome_web_store/ Firenvim does not work properly on macOS? https://github.com/glacambre/firenvim/issues/122 Trouble shooting on macOS. Due to this, it only works with Neovim, not vanilla Vim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"1 January 2020","externalUrl":null,"permalink":"/2020/01/01/firenvim_nvim_inside_browser/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg\nsrc=\"https://blog-resource-1257868508.file.myqcloud.com/firenvim.gif\"\u003e\n\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cp\u003e\u003cfont color=\"blue\"\u003e2022-08-15: update firenvim conf; add install setting for packer.nvim \u003c/font\u003e\u003c/p\u003e\n\u003c/details\u003e\n\n\n\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eLast year, I have written \u003ca href=\"https://jdhao.github.io/2019/05/11/nvim_text_input_browser/\" target=\"_blank\"\u003ea post\u003c/a\u003e on how to edit texts inside the browser\nusing Vim/Nvim or browser extensions that have Vim emulations.\nHowever, none of them is good enough, since they are either not convenient to use\nor lacking features compared to real Neovim empowered by various plugins.\u003c/p\u003e","title":"Firenvim: Neovim inside Your Browser","type":"posts"},{"content":"Due to Markdown\u0026rsquo;s inability to center and resize image properly, I use the raw HTML tags inside markdown file to include images:\n由于 Markdown 格式无法很好居中和设定图像尺寸，我使用 HTML tags 来添加图像(图像可以很好居中以及设定显示大小):\n\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;xxx.xx.xx/test.jpg\u0026#34;\u0026gt; \u0026lt;/p\u0026gt; Recently, after updating to Hugo version 0.62, I found that all the images using HTML tags are missing in the generated HTML files.\n最近，升级了 Hugo 0.62 版本以后，我发现所有使用 HTML tag 引入的图像在生成的最终 HTML 文件中都消失了。\nI checked the generated HTML source file for my post, and found that the raw HTML tag for image is rendered as the following comment tag:\n我查看了某个博文渲染而成的 HTML 源文件，发现 Markdown 中的 HTML 图像 tag 被渲染成了 HTML 中的注释：\n\u0026lt;!-- raw HTML omitted --\u0026gt; After a little dig, I find out the cause. Previously, Hugo was using Blackfriday to render Markdown files. Since Hugo version 0.60, the default Markdown renderer has been changed to goldmark. In goldmark, the default behaviour is not to render raw HTML tags.\n经过一番查找，我找了问题的原因。在之前的版本中(0.60 版本之前)，Hugo 使用 Blackfriday 来渲染 Markdown 文件。从 0.60 版本开始，默认的 Markdown 渲染器已经改成了 goldmark。Goldmark 渲染器默认不回渲染 HTML tags。\nTo fix this issue, we have two options. First option, set blackfriday as the default Markdown engine. Open config.toml and add the following setting:\n为了修复这个问题，我们有两种不同的解决方法。第一种选择，重新把 blackfriday 设定为默认的 Markdown 引擎。打开 config.toml，加入以下设定：\n[markup] defaultMarkdownHandler = \u0026#34;blackfriday\u0026#34; Second option, use goldmark and set the unsafe option of markup.goldmark.renderer to true:\n第二种方式，使用 goldmark 引擎，加入以下设定，更改 goldmark 默认行为：\n[markup] defaultMarkdownHandler = \u0026#34;goldmark\u0026#34; [markup.goldmark] [markup.goldmark.renderer] unsafe = true References # Hugo 0.60 release note. https://gohugo.io/getting-started/configuration-markup/ https://discourse.gohugo.io/t/raw-html-getting-omitted-in-0-60-0/22032/18 https://discourse.gohugo.io/t/hugo-0-60-0-raw-html-omitted-issue/22010/9 https://github.com/gohugoio/hugo/issues/5963 ","date":"29 December 2019","externalUrl":null,"permalink":"/2019/12/29/hugo_html_not_shown/","section":"Posts","summary":"\u003cp\u003eDue to Markdown\u0026rsquo;s inability to center and resize image properly,\nI use the raw HTML tags inside markdown file to include images:\u003c/p\u003e\n\u003cp\u003e\u003cfont color=\"red\"\u003e由于 Markdown 格式无法很好居中和设定图像尺寸，我使用 HTML tags 来添加图像(图像可以很好居中以及设定显示大小):\u003c/font\u003e\u003c/p\u003e","title":"Content inside HTML tags missing in Latest Hugo?","type":"posts"},{"content":"Introduction # Currently, I write my blog posts in Markdown and build the blog using Hugo. Hugo supports front matter for Markdown so that you can attach metadata for a post, such as title, date, tags, categories, etc.\nThe front matter for a post looks like the following:\n--- title: \u0026#34;Creating Markdown Front Matter with Ultisnips\u0026#34; date: 2019-12-22 13:45:25+0800 tags: [Vim, Markdown] categories: [Nvim] --- The date field should be in ISO date format.\nInitial snippet # It would be tedious to write the boilerplate text in front matter for every post I create. Ultisnips is good at automating such tasks. If you are not familiar with Ultisnips, you can check my previous post on setting up Ultisnips.\nSo the initial snippet I wrote looks like this:\n--- snippet meta \u0026#34;Markdown front matter in YAML format\u0026#34; b title: \u0026#34;${1:TITLE TEXT}\u0026#34; date: $2 tags: [$3] categories: [$4] --- When we type the trigger word meta at the beginning of a line1 and press Tab, it will be expanded. We can jump forward and backward among the tabstops to fill the text.\nThis snippet works great. However, for the date field, we still need to fill the current date manually, which is not ideal enough.\nUltisnips command interpolation # Ultisnips also provides a powerful feature called interpolation, which means that you can run shell, Vim or Python command inside a snippet and use the output in snippet. The interpolation code are placed inside two backticks (`CODE`) and opens up many possibilities. For shell command interpolation, you just write the shell command inside the backticks. For Vim and Python code interpolation, you should follow the opening backtick with !v and !p respectively.\nFor example, to get the current date in ISO format, i.e., 2019-12-22 14:43:43+0800, using the above three interpolations, the code is like:\nshell interpolation: `date \u0026quot;+%Y-%m-%d %H:%M:%S%z\u0026quot;` Vim interpolation: `!v strftime(\u0026quot;%Y-%m-%d %H:%M:%S%z\u0026quot;)` Python interpolation: `!p from datetime import datetime snip.rv=datetime.now().strftime(\u0026#34;%Y-%m-%d %H:%M:%S%z\u0026#34;)` Back to the above snippet, if we want the interpolation code to be cross-platform, we should only consider Vim or Python interpolation since most Linux shell commands are not available on Windows.\nVim interpolation # With Vim interpolation, the original meta snippet becomes:\nsnippet \u0026#34;meta(data)?\u0026#34; \u0026#34;Markdown metadata front matter\u0026#34; br --- title: \u0026#34;$1\u0026#34; date: `!v strftime(\u0026#34;%Y-%m-%d %H:%M:%S%z\u0026#34;)` tags: [$2] categories: [$3] --- One minor issue with this snippet is that the date value keeps changing while we are inside the snippet region2, which is a little annoying. According to tutorial here, we can use Python interpolation to deal with this issue.\nPython interpolation # Inside the Python interpolation code, Ultisnips provides the snip object. The attribute snip.c will be empty once the interpolation has finished. snip.rv is the result for the snip interpolation.\nWe can check if snip.c is empty to fix the date once the interpolation code is run.\nThe new meta snippet now becomes:\nsnippet \u0026#34;meta\u0026#34; \u0026#34;Markdown metadata front matter\u0026#34; b --- title: \u0026#34;$1\u0026#34; date: `!p from datetime import datetime if not snip.c: snip.rv=datetime.now().strftime(\u0026#34;%Y-%m-%d %H:%M:%S%z\u0026#34;)` tags: [$2] categories: [$3] --- Now the date field will be fixed while we are editing other parts of the snippet.\nReferences # Ultisnips official tutorial. Vimcast on Ultisnips Python interpolation. The b flag says that this snippet can only be triggered at the beginning of a line.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nBecause inside the snippet region, the interpolation code is run in real time and the result is updated to reflect the change.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 December 2019","externalUrl":null,"permalink":"/2019/12/22/ultisnips_avoid_content_update/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eCurrently, I write my blog posts in Markdown and build the blog using\n\u003ca href=\"https://gohugo.io/\" target=\"_blank\"\u003eHugo\u003c/a\u003e. Hugo supports \u003ca href=\"https://gohugo.io/content-management/front-matter/\" target=\"_blank\"\u003efront matter\u003c/a\u003e for Markdown so that you can\nattach metadata for a post, such as title, date, tags, categories, etc.\u003c/p\u003e","title":"Creating Markdown Front Matter with Ultisnips","type":"posts"},{"content":"Labelme 是一款常用的计算机视觉任务标注工具，可以用来标注分类，检测，分割等任务的数据。对于检测任务，labelme 生成的标注文件是 json 格式，每个图像对应一个相应的 json 文件。但是很多任务都使用 PASCAL VOC 的 xml 格式标注，例如 maskrcnn-benchmark 任务中的 voc 数据集。\n转换方法 # Labelme 含有将 json 格式标注数据转为 voc 格式的脚本，具体地址见 这里。使用方法：\npython labelme2voc.py original_data data_dataset_voc --labels labels.txt 第一个参数是原始标注目录，包含 json 文件以及对应的图像，第二个参数为生成的 voc 格式数据库，下面有多个文件夹，第三个参数是 label 文件，每行一个 label，第一行为 __ignore__，第二行为 _background_，其余行为实际的各个 label。\n值得注意的是，这个脚本生成的 xml 格式文件，用 maskrcnn 提供的 voc 数据集的接口进行数据训练时，会报错，因为 maskrcnn 中的 voc 数据类会检查每个标注框的 difficult 信息，所以 difficult 这个 flag 必须赋值。labelme2voc.py 当前的代码没有给 difficult 赋值，必须把\n# https://github.com/wkentaro/labelme/blob/master/examples/bbox_detection/labelme2voc.py#L116 maker.difficult(), 变为\nmaker.difficult(0), 然后代码才能顺利运行。\n参考 # https://github.com/wkentaro/labelme/pull/241 ","date":"21 December 2019","externalUrl":null,"permalink":"/2019/12/21/labelme_json_to_voc_xml/","section":"Posts","summary":"\u003cp\u003eLabelme 是一款常用的计算机视觉任务标注工具，可以用来标注分类，检测，分割等任务的数据。对于检测任务，labelme 生成的标注文件是 json 格式，每个图像对应一个相应的 json 文件。但是很多任务都使用 PASCAL VOC 的 xml 格式标注，例如 \u003ca href=\"https://github.com/facebookresearch/maskrcnn-benchmark\" target=\"_blank\"\u003emaskrcnn-benchmark\u003c/a\u003e 任务中的 \u003ca href=\"https://github.com/facebookresearch/maskrcnn-benchmark/blob/master/maskrcnn_benchmark/data/datasets/voc.py\" target=\"_blank\"\u003evoc 数据集\u003c/a\u003e。\u003c/p\u003e","title":"Labelme JSON 标注格式转 voc XML 格式","type":"posts"},{"content":"","date":"21 December 2019","externalUrl":null,"permalink":"/tags/object-detection/","section":"Tags","summary":"","title":"Object-Detection","type":"tags"},{"content":"This is the 6th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ How do we get the script names when we get the \u0026lt;SNR\u0026gt; number? # When we use a script local function (see :h script-local) in mapping with the following form\nnnoremap \u0026lt;leader\u0026gt;\u0026lt;space\u0026gt; :call \u0026lt;SID\u0026gt;some_function()\u0026lt;cr\u0026gt; Vim will replace with followed by a number and an Underscore, like this: \u0026lt;SNR\u0026gt;12_some_function(). The number is the order the script containing the function is sourced by Vim. To find the script, use the command :scriptnames, which will print the path of different scripts in the order of being sourced by Vim.\nThe Vim plugin scriptease provides a command :Scriptnames which will show all the sourced script and their index in a quickfix window for better inspection.\nReferences # Get a script\u0026rsquo;s SNR. Open a file and go to specific line # When you run a source file, if something goes wrong, you may see a stack trace of error lines. You may want to jump to the specific lines in that file. If you are in command line, you can use nvim +{NUM} test.py to open file test.py and go the line NUM, for example:\n# open test.py and go to 10th line nvim +10 test.py If you are already in Neovim and want to open a file and go to a particular line, you can use :e or :edit command:\n:e +10 some_file.py References # Nvim doc: :h :edit and :h +cmd. Repeat previous command line command # If you have used a command, how do you repeat that command without typing it again in the command line? You can just press @: (see :h @:).\nReferences # http://tilvim.com/2014/01/29/repeat-cmdline.html How do I repeat any command in Vim, like “C-x z” in emacs? The dot “.” isn\u0026rsquo;t repeating last command Show character count for selected region # When we select some characters in visual mode, we want to know exactly how many characters are selected. This can be achieved by pressing g followed by Ctrl-G. The info about selected texts will be print on the command line:\nSelected 1 of 42 lines: 1 of 306 Words; 6 of 2015 characters; 18 of 2027 bytes\nReferences # https://superuser.com/questions/289264/count-highlighted-string-length-in-vim Open a file from pipe output in nvim # When the output of a terminal pipe is a file name and you follow it with nvim command, nvim will interpret the filename as text and put the texts in an unnamed buffer.\nIf you want to open the corresponding file instead, you may use xargs:\nfind ~ -type f -name \u0026#34;init.vim\u0026#34; -print |xargs nvim Or you can use the bash $ expansion like the following:\nnvim $(find ~ -type f -name \u0026#34;init.vim\u0026#34; -print) References # To open files in Grep\u0026rsquo;s output to Vim\u0026rsquo;s -o -mode How to a open a file in vim using pipe How to confirm a wildmenu completion and go to next level? # When we set the option wildmenu (set wildmenu), we can cycle between the completion items in the command line using Tab. For example, when we use :edit command to open files, we can use Tab to select which file to edit. But how do we confirm what we want to go to a subdirectory to do further completions?\nAccording to the documentation of wildmenu, we can press the ↓ key to confirm a selection or go to the subdirectory if current selection is a directory. BTW, you can press ↑ key to go to parent directory. Pressing ← and → will cycle backward and forward the completion items, just like what Ctrl-P and Ctrl-N does.\nReferences # Vim command line mode - how to confirm selection? Confirm selection among options ","date":"21 December 2019","externalUrl":null,"permalink":"/2019/12/21/nifty_nvim_techniques_s6/","section":"Posts","summary":"\u003cp\u003eThis is the 6th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim Techniques That Make My Life Easier -- Series 6","type":"posts"},{"content":"几周之前，在 YouTube 上看到了 Vim 创始人 Bram Moolenaar 在 Vim Conf 2018 上的主题报告，介绍了 Vim 的历史以及可能要添加的一些新特性，萌生了给这个视频配字幕的想法。\n要制作字幕，需要字幕制作软件的协助，在网上查了一圈，发现arctime 是一款不错的字幕制作软件，经过比较，最后选择arctime 来制作字幕。\n由于之前没有制作过字幕，对如何制作字幕没有任何概念，也走了一些弯路。做完了 Bram的这个演讲视频以后，对字幕制作过程有了一定了解。字幕制作大致分为两个过程：\n制作字幕稿 匹配字幕稿和视频的时间轴 制作字幕稿 # 这一步其实和 arctime 没有任何关系，简单来说，制作字幕稿，就是把视频中人物的讲话，按照一行一句或者一行一个分句的格式转变为文字。值得注意的是，每一行的文字不宜过长，因为字幕是要显示在视频上的，一方面视频画面放不下太长的字幕，需要转行，另外太长的字幕，读者可能来不及看完，视频就跳到了下一句了。根据我的经验，如果讲话者一句话比较短，可以作为一行文本，如果一句话较长，最好分为两行或者三行来书写，在合适的地方断开即可。\n字幕稿制作这一步是最耗时的，Bram 的演讲大约有 59 分钟，我转写为字幕稿的时间大约是周末两天再加平时下班以后的好几天时间，总时长估计有 10 小时。\n字幕稿制作完成以后，保存为文本文件即可，最好使用 UTF-8 编码。\n匹配字幕稿和视频时间轴 # 这一步就是把字幕稿的每一行文本和视频中的每一小段时间对应起来。打开 arctime，先导入视频，然后再导入字幕稿(可以直接拖拽视频和字幕稿导入)，视频会显示在左边，字幕稿内容会显示在右边。\n点击视频左下方工具栏的 \u0026ldquo;视频快速拖拽创建工具\u0026rdquo;，即可开始匹配字幕稿和时间轴，点击播放以后，时间轴会快速移动，等时间轴移动到字幕稿当前行文字的结尾，暂停播放，然后拖动鼠标，可以在时间轴上形成一个字幕块，对应于当前字幕稿行。把鼠标移动到字幕块的开头或者结尾，还可以微调字幕块的开始和结束时间，便于校准字幕块。制作字幕块的时候，可以用工具栏的“标记点”标记文本的起点和终点，方便拉取字幕块的时候确定当前文本对应时间轴的起始位置。\n重复以上过程，就可以制作其他的字幕块，直到所有字幕块制作完成。\n收尾与完成 # 字幕块完成制作以后，可以把时间轴的光标移动到视频开头，开始播放，查看制作的字幕的效果，对字幕块进行精调。\n字幕换行 # 如果播放中，发现某一个字幕太长，可以暂停播放，双击该字幕块，然后在合适的地方插入换行符 \\n 即可把字幕分为两行。另外，如果发现字幕中有文字错误，也可以直接点击字幕块对文字进行修改。修改字幕块以后，别忘了点击右边的对号确定修改。 修改字幕块以后，可以按 F5 刷新字幕，查看新的字幕样式。\n字幕字体编辑 # 点击 “样式管理“ \u0026mdash;\u0026gt; “编辑选定样式“ 可以对字幕的字体进行设置，包括字体的颜色，大小，位置等等。\n字幕导出与视频生成 # 如果只需要生成外挂字幕，可以选择 “导出” \u0026mdash;\u0026gt; “字幕稿”，设置导出的字幕格式。\n如果需要把字幕固化到视频中，需要压制视频，选择“导出”菜单中的 “快速压制视频” 选项，根据自己的需要压制视频即可。\n导出的字幕稿或者压制的视频和原视频都位于同一根目录下面。\n最后，压制的视频已经上传到了 bilibili 上，点击 这里 可以查看。\n参考 # Mac 下字幕制作软件推荐 arctime 官方教程 ","date":"15 December 2019","externalUrl":null,"permalink":"/2019/12/15/mac_video_subtitle_make/","section":"Posts","summary":"\u003cp\u003e几周之前，在 YouTube 上看到了 Vim 创始人 Bram Moolenaar 在 \u003ca href=\"https://vimconf.org/2018/\" target=\"_blank\"\u003eVim Conf 2018\u003c/a\u003e 上的\u003ca href=\"https://www.youtube.com/watch?v=ES1L2SPgIDI\" target=\"_blank\"\u003e主题报告\u003c/a\u003e，介绍了 Vim 的历史以及可能要添加的一些新特性，萌生了给这个视频配字幕的想法。\u003c/p\u003e","title":"macOS 下如何为视频制作字幕","type":"posts"},{"content":"Introduction # When I am writing some prototyping code inside Neovim, I want to run the script without going to the terminal and typing python toy_script.py. Of course, we can use :!python % in the command line to run the script (see :h :!). The problem is that running external command will block Nvim/Vim, and we can not move the cursor until the script finishes running.\nOf course, on Linux and Mac, you can use !python % \u0026amp; to run the script in the background, but you can not get the output of the script.\nAsynchronous command in Nvim/Vim # Fortunately, both Neovim and Vim provides the job feature to run external command asynchronously. However, to use those features, you have to write non-trivial amount of code. Thanks to plugins like vim-dispatch and asyncrun.vim, we can use this feature easily.\nAsyncrun.vim # In this post, I would like to share how to set up asyncrun.vim and use it. First, you can install it with vim-plug:\nPlug \u0026#39;skywind3000/asyncrun.vim\u0026#39; It provides the AsyncRun command to run external shell commands asynchronously. For example, to run the current Python script, you can use the following command:\n\u0026#34; use quote to avoid spaces in file names :AsyncRun python \u0026#34;%\u0026#34; The above command will run current script in the background without blocking Neovim. You can still edit the source code as you will when the program is running..\nAsyncrun.vim will put the output of the command in the quickfix list. To see the command output, use :copen to open the quickfix window. You can also set up a config to open the quickfix window automatically when you use AsyncRun. Just add the following setting to your init.vim or vimrc:\nlet g:asyncrun_open = 6 Then a quickfix window of 6 line tall will be opened automatically after asyncrun starts.\nPython related issues # Command output encoding # When you use asyncrun.vim on Windows, you may find that Chinese characters may not be displayed properly in the quickfix window. That is because the command output encoding on Windows may not be the same with the encoding you use (suppose you are using utf-8 encoding). You can set up the variable g:asyncrun_encs to gbk encoding to solve this issue:\nif has(\u0026#39;win32\u0026#39;) \u0026#34; Command output encoding for Windows let g:asyncrun_encs = \u0026#39;gbk\u0026#39; endif Then Chinese characters should display properly.\nDisplay command output in real time # When python script is running in background, the output is buffered, i.e., you can not see the script output immediately after a print() statement is executed. You will only see the output after cache buffer is full or when the script finishes execution. There are two easy ways to fix this issue.\nThe first is to add PYTHONUNBUFFERED variable in your init.vim or vimrc:\nlet PYTHONUNBUFFERED=1 Or you need to run python command with -u option:\n:AsyncRun python -u \u0026#34;%\u0026#34; We can also create a shortcut to execute script quickly:\naugroup python_file autocmd! autocmd FileType python nnoremap \u0026lt;F9\u0026gt; :AsyncRun python -u \u0026#34;%\u0026#34;\u0026lt;CR\u0026gt; augroup END References # Execute shell command silently in Vim. Disable output buffering for Python. Can not see python script output in real time. ","date":"9 December 2019","externalUrl":null,"permalink":"/2019/12/09/vim_asynchronous_command_run/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eWhen I am writing some prototyping code inside Neovim, I want to run the script\nwithout going to the terminal and typing \u003ccode\u003epython toy_script.py\u003c/code\u003e. Of course, we\ncan use \u003ccode\u003e:!python %\u003c/code\u003e in the command line to run the script (see \u003ccode\u003e:h :!\u003c/code\u003e). The\nproblem is that running external command will block Nvim/Vim, and we can not\nmove the cursor until the script finishes running.\u003c/p\u003e","title":"Running Command Asynchronously inside Neovim","type":"posts"},{"content":"Sometimes, when we are working with our local changes in a Git repo, we may want to pull the latest updates from the remote repository. To avoid code conflict between remote files and local files. We can use git stash to store the unfinished local work temporarily.\nGit-stash gives you a clean repo and revert the repo state to last commit. Then we can use git pull to pull the updates.\nGit stash basic knowledge # Stashed changes are per repository, not per branch. # If you are in a certain branch and do a git stash, you may think that the stashed changes only belong to that branch. However, that is not the case. Since you have not committed the changes, they do not belong to any branch, even if you are currently working on a specific branch (see here).\nShow stashed changes # To show stashed changes, use git stash list. It will show a list of stash you have made.\nShow the detailed info of a particular stash # Each stash in the stash list can be referenced by its number. To show changes in a particular stash, we can use the following command:\n# show changes in the first stash git stash show stash@{0} The above command only shows summary changes to files in a stash. To show detailed changes of a stash, add the -p option:\ngit stash show -p stash@{0} Applying git stash # After the git-pull, we may want to continue our unfinished work. We can use git stash pop to restore unfinished work. You can also use git stash apply instead. The difference between git stash pop and git stash apply is that the former will drop the stash if there is no merge conflict, while the later will never drop the stash even if the stashed changes merge successfully with the pulled code.\nAnyway, if everything goes well, our unfinished changes can merge with the remote updates without any conflict. However, if we and other collaborator both have changed the same file at the same place, we will encounter merge errors after git-stash. The error message is like the following:\nAuto-merging test.txt CONFLICT (content): Merge conflict in test.txt The stash entry is kept in case you need it again. Conflict markers # When we open the conflict file, we will see some markers like the following:\nabc \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Updated upstream qwe ======= lmn \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; Stashed changes These markers are called conflict markers, which are used to indicate the conflicting changes made to a file.\nIn the git-stash case, code between \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; and ======= are the changes made upstream, and code between ======= and \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; are your stashed changes.\nMerge conflict # To merge the conflict, you have basically two methods:\nResolve the conflict manually: decide if you want your change or the upstream change or you want to combine the local and remote change. Then edit the file accordingly and remove those conflict markers. Resolve the conflict with mergetools. See here for an introduction. Mark conflict as resolved # After resolving the conflict, you can use git add to mark the conflict as resolved. But in the git-stash scenario, you may not want to do this since your changes are not finished yet.\nOr you can use git reset to mark that the conflict has been solved. You can continue working on your project until your changes are completed, and then commit your changes.\nAfter the conflict has been resolved, do not forget to use git stash drop to drop the stash because the stash will not be dropped automatically in case of a merge conflict.\nReferences # Preview changes for a git stash. Difference between git stash pop and git stash apply. Git merge left HEAD marks in my files. Resolve Git stash conflict.. https://stackoverflow.com/q/55366930/6064933 Resolve git stash conflict without commiting. Resolve conflict after stash pop. ","date":"3 December 2019","externalUrl":null,"permalink":"/2019/12/03/git_stash_merge_conflict_handling/","section":"Posts","summary":"\u003cp\u003eSometimes, when we are working with our local changes in a Git repo, we may\nwant to pull the latest updates from the remote repository. To avoid code\nconflict between remote files and local files. We can use \u003ccode\u003egit stash\u003c/code\u003e to store\nthe unfinished local work temporarily.\u003c/p\u003e","title":"Resolving Merge Conflict after Git Stash Pop","type":"posts"},{"content":"","date":"28 November 2019","externalUrl":null,"permalink":"/tags/pylint/","section":"Tags","summary":"","title":"Pylint","type":"tags"},{"content":"The system I am currently using has Anaconda pre-installed by root under system locations.\nTo install user packages, we need to install them to a user location. For example, to install pylint, we need to add --user option for pip install:\npip install --user pylint However, when I use pylint command, I get the following error:\n-bash: pylint command not found\nSince there is no error when installing pylint, I think there is no problem with installation. I use the find command and find that pylint executable is placed under ~/.local/bin, which is not part of the PATH variable. So the reason is that pylint executable is installed into a directory that isn\u0026rsquo;t in your PATH.\nA more reliable way to find where the pylint executable is installed is to list the files which are installed in pylint with the pip show command:\npip show -f pylint You will see part of the output like the following:\nLocation: /home/xxxx/.local/lib/python3.6/site-packages Requires: astroid, mccabe, isort Required-by: Files: ../../../bin/epylint ../../../bin/pylint ../../../bin/pyreverse ../../../bin/symilar So the location of pylint executable is $HOME/.local/bin/. You should add the directory to system PATH to use pylint:\nexport PATH=$HOME/.local/bin:$PATH For flake8, the same issue exists and the solution is the same, which I will not elaborate on.\nReferences # Pip show which files are installed with a package. https://stackoverflow.com/q/51358987/6064933 https://stackoverflow.com/q/48015106/6064933 flake8 not found. ","date":"28 November 2019","externalUrl":null,"permalink":"/2019/11/28/pylint_command_not_found/","section":"Posts","summary":"\u003cp\u003eThe system I am currently using has Anaconda pre-installed by root under system\nlocations.\u003c/p\u003e","title":"Pylint: command not found?","type":"posts"},{"content":" update log 2021-07-15: use pylsp instead of pyls since pyls is obsolete. 2021-04-08: update post based on latest version of Neovim-lsp. 2020-09-14: update lsp config to reflect the latest changes and add more plugins. Just a few days ago, the built-in Language Server Protocol support has been merged into Neovim master.\nThis post is a hands-on experience of setting up LSP support for Python with the python-lsp-server.\nNote that settings here may be obsolete due to rapid evolving of the built-in lsp.\nInstall Neovim # To try the built-in LSP, we have to install Neovim master build release or build Neovim from source. The easiest way is to install Neovim nightly release.\nInstall nvim-lspconfig # To ease configuration, the contributor to LSP has created the nvim-lspconfig plugin. We can use vim-plug to install this plugin:\nPlug \u0026#39;neovim/nvim-lspconfig\u0026#39; Configuration for Python # First, we need to install python-lsp-server. We can install python-lsp-server and all its dependencies with the following command:\npip install \u0026#39;python-lsp-server[all]\u0026#39; Open init.vim and add the following settings:\nlua \u0026lt;\u0026lt; EOF require(\u0026#34;lspconfig\u0026#34;).pylsp.setup{} EOF set completeopt-=preview \u0026#34; use omni completion provided by lsp autocmd Filetype python setlocal omnifunc=v:lua.vim.lsp.omnifunc Then open a Python source file. Note that the built-in LSP does not support auto-completion like what is provided by deoplete. To invoke completion, we need to press \u0026lt;C-X\u0026gt;\u0026lt;C-O\u0026gt;1. If all goes well, you should be able to see a completion menu with all the completion items.\nThe auto-completion experience # Neovim may hang or lag behind when you start completion since all the compeltion items will be shown in the completion menu and the number of items may be huge. There is also no auto-completion like what is provided by other more mature completion engines. It may take a while before you can really use this for your daily work. Right now, I suggest you stick to your current completion engines.\nUseful mappings # There are other functions provided by LSP which you may find useful. You can add the following mappings for those functions:\nnnoremap \u0026lt;silent\u0026gt; gd \u0026lt;cmd\u0026gt;lua vim.lsp.buf.declaration()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; \u0026lt;c-]\u0026gt; \u0026lt;cmd\u0026gt;lua vim.lsp.buf.definition()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; K \u0026lt;cmd\u0026gt;lua vim.lsp.buf.hover()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gD \u0026lt;cmd\u0026gt;lua vim.lsp.buf.implementation()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; \u0026lt;c-k\u0026gt; \u0026lt;cmd\u0026gt;lua vim.lsp.buf.signature_help()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; 1gD \u0026lt;cmd\u0026gt;lua vim.lsp.buf.type_definition()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gr \u0026lt;cmd\u0026gt;lua vim.lsp.buf.references()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; g0 \u0026lt;cmd\u0026gt;lua vim.lsp.buf.document_symbol()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gW \u0026lt;cmd\u0026gt;lua vim.lsp.buf.workspace_symbol()\u0026lt;CR\u0026gt; Because some of the methods are not supported by a particular lanuage server. So not all these mappings will work as expected. You may encounter errors when you use these mappings if the language server does not implement such features.\nhelper plugins # Although we can use the LSP feature with the above minimum configuration. The user experience is not great, at least worse than Deoplete. There are plugins made around LSP to make your life easier and more comfortable.\nThe plugin completion-nvim and diagnostic-nvim are two such plugins. completion-nvim provides auto-completion for LSP, and diagnostic-nvim provides better disgnostic experience.\nThe minimal and complete config is list below:\nClick to show the code. \u0026#34; Note we need to install these plugins using PlugInstall command before using them. call plug#begin(\u0026#39;~/.local/share/nvim/plugged\u0026#39;) Plug \u0026#39;neovim/nvim-lsp\u0026#39; Plug \u0026#39;nvim-lua/completion-nvim\u0026#39; Plug \u0026#39;nvim-lua/diagnostic-nvim\u0026#39; Plug \u0026#39;lifepillar/vim-gruvbox8\u0026#39; call plug#end() lua \u0026lt;\u0026lt; EOF require\u0026#39;nvim_lsp\u0026#39;.pyls.setup{} EOF set completeopt-=preview \u0026#34; use omni completion provided by lsp autocmd Filetype python setlocal omnifunc=v:lua.vim.lsp.omnifunc \u0026#34; some shortcuts nnoremap \u0026lt;silent\u0026gt; gd \u0026lt;cmd\u0026gt;lua vim.lsp.buf.declaration()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; \u0026lt;c-]\u0026gt; \u0026lt;cmd\u0026gt;lua vim.lsp.buf.definition()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; K \u0026lt;cmd\u0026gt;lua vim.lsp.buf.hover()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gD \u0026lt;cmd\u0026gt;lua vim.lsp.buf.implementation()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; \u0026lt;c-k\u0026gt; \u0026lt;cmd\u0026gt;lua vim.lsp.buf.signature_help()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; 1gD \u0026lt;cmd\u0026gt;lua vim.lsp.buf.type_definition()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gr \u0026lt;cmd\u0026gt;lua vim.lsp.buf.references()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; g0 \u0026lt;cmd\u0026gt;lua vim.lsp.buf.document_symbol()\u0026lt;CR\u0026gt; nnoremap \u0026lt;silent\u0026gt; gW \u0026lt;cmd\u0026gt;lua vim.lsp.buf.workspace_symbol()\u0026lt;CR\u0026gt; set completeopt=menuone,noinsert,noselect lua \u0026lt;\u0026lt; EOF local on_attach_vim = function(client) require\u0026#39;completion\u0026#39;.on_attach(client) require\u0026#39;diagnostic\u0026#39;.on_attach(client) end require\u0026#39;nvim_lsp\u0026#39;.pyls.setup{on_attach=on_attach_vim} EOF let g:diagnostic_enable_virtual_text = 1 let g:diagnostic_enable_underline = 0 let g:diagnostic_auto_popup_while_jump = 1 let g:diagnostic_insert_delay = 1 colorscheme gruvbox8_hard A good plugin to install is nvim-compe which provides auto-completion for the built-in lsp.\nReferences # https://github.com/neovim/nvim-lspconfig#nvim-lspconfig https://www.reddit.com/r/neovim/comments/dx098o/github_neovimnvimlsp_common_configurations_for/ https://www.reddit.com/r/neovim/comments/dvd8sz/builtin_language_server_with_my_preferred_style/ For more info, see :h 'omnifunc' and :h i_CTRL-X_CTRL-O.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 November 2019","externalUrl":null,"permalink":"/2019/11/20/neovim_builtin_lsp_hands_on/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-07-15: use pylsp instead of pyls since pyls is obsolete.\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-04-08: update post based on latest version of Neovim-lsp.\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2020-09-14: update lsp config to reflect the latest changes and add more plugins.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eJust a few days ago, the built-in \u003ca href=\"https://microsoft.github.io/language-server-protocol/\" target=\"_blank\"\u003eLanguage Server Protocol\u003c/a\u003e\nsupport \u003ca href=\"https://github.com/neovim/neovim/pull/11336\" target=\"_blank\"\u003ehas been merged\u003c/a\u003e into Neovim master.\u003c/p\u003e\n\u003cp\u003eThis post is a hands-on experience of setting up LSP support for Python with\nthe \u003ca href=\"https://github.com/python-lsp/python-lsp-server\" target=\"_blank\"\u003epython-lsp-server\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eNote that settings here may be obsolete due to rapid evolving of the built-in lsp.\u003c/p\u003e","title":"A Hands-on Experience with Neovim's Built-in LSP Support","type":"posts"},{"content":"Previously, I have talked about how to convert PDF to images using pdftoppm here. In this post, I want to share how to accomplish this task with Imagemagick.\nImagemagick provides the convert tool that can be used to do various complicated image processing tasks.\nConvert All Pages of PDF File to Images # Use convert to convert PDF pages to images with the following command:\nconvert -density 150 presentation.pdf -quality 90 output-%3d.jpg In the above command, we convert all the pages of the PDF files to images. -density is used to specify the DPI of the output images. For PDF files, it must be the first option since PDF files has no notion of DPI. This option must be used first so that convert know how to sample the PDF pages. -quality specify the quality for the generated images. %3d is used to specify the format for generated image names. The generated images will be named output-001.jpg, output-002.jpg \u0026hellip;\u0026hellip;\nConvert Single Page of PDF File to Image # To convert a single page of PDF to image, use the following command:\nconvert -density 150 presentation.pdf[0] -quality 90 test.jpg The number inside the bracket is used to select a page. Note that the page index starts at 0 instead of 1.\nTo resize the converted image, you can supply the -resize option:\nconvert -density 150 presentation.pdf[0] -quality 90 -resize 50% test.jpg Convert A Range of PDF Pages to Images # You can also specify a range of pages with the following command:\n# convert from page 0 to page 5 convert -density 150 presentation.pdf[0-5] -quality 90 test.jpg References # https://aleksandarjakovljevic.com/convert-pdf-images-using-imagemagick/ https://askubuntu.com/questions/50170/how-to-convert-pdf-to-image https://stackoverflow.com/questions/6605006/convert-pdf-to-image-with-high-resolution Convert multi-page PDFs to multiple images. Imagemagick: command line options. Imagemagick: command line processing. ","date":"20 November 2019","externalUrl":null,"permalink":"/2019/11/20/convert_pdf_to_image_imagemagick/","section":"Posts","summary":"\u003cp\u003ePreviously, I have talked about how to convert PDF to images using pdftoppm\n\u003ca href=\"https://jdhao.github.io/2019/11/14/convert_pdf_to_images_pdftoppm/\" target=\"_blank\"\u003ehere\u003c/a\u003e.\nIn this post, I want to share how to accomplish this task with\n\u003ca href=\"https://imagemagick.org/index.php\" target=\"_blank\"\u003eImagemagick\u003c/a\u003e.\u003c/p\u003e","title":"How to Convert PDF to Images with Imagemagick","type":"posts"},{"content":"","date":"18 November 2019","externalUrl":null,"permalink":"/tags/language/","section":"Tags","summary":"","title":"Language","type":"tags"},{"content":"上 Reddit 或 GitHub 时，在讨论中，经常会碰到一些缩略词，作为一名非 native speaker，我经常有点摸不着头脑，不知道这些缩略语啥意思。这篇文章总结一些常用缩略语以及中文含义。\n缩略词列表 # AFAIK: As Far As I Know, 据我所知。 ATM: At The Moment, 在此刻，现在。 AWOL: Absent Without Official Leave, 没有得到批准，私自离开。 BAU: Business As Usual, 和往常一样正常。 DM: Direct Message, 指的是用社交软件工具发私信。 DWIM: Do What I Mean, 指的是计算机能够根据人的意图，做出符合的反应。 ELI5: Explain Like I\u0026rsquo;m 5，指的是用通俗易懂的话解释某个概念。 FOMO: Fear Of Missing Out, 害怕错过某个东西/某事(一般是比较火的东西) FOSS: Free And Open-Source Software, 自由与开源软件。 FWIW: For What Is Worth, 给别人一些信息，但不确定是否有用。 FYI: For Your Information, 仅供参考。 GIYF: Google Is Your Friend, 请自己去谷歌。 GTFO: Get the Fuck Out，滚出去。 IANAL: I Am Not A Lawyer, 我不是律师（个人观点，仅供参考）。 IIRC: If I Recall Correctly, 如果我记得没错的话。 IMHO: In My Humble Opinion, 依我愚见。 IMO: In My Opinion, 依我之见。 IOW: In other words, 换一种说法。 IRL: In Real Life, 在实际生活中。 LGTM: Looks Good To Me, 在我看起来还不错。 LMAO: Laugh My Ass Off，笑死我了。 LMGTFY: Let Me Google That For You, 让我为你谷歌一下（意思是问题太简单，一搜就能搜到）。 LOL: Laughing Out Loud, 和 LMAO 意思差不多，表示笑死我了😆。 N.B.: nota bene, 英语 note well, 一般用于句首，用来吸引读者对接下来句子的注意力。 NIH: Not Invented Here syndrome, 指在软件开发中重复造轮子，不使用外部的实现。 OT: Off Topic，指的是在论坛/群组上的讨论偏离了论坛或者群组的主题。 OTOH: On The Other Hand, 另外一方面，用于说明其他情况。 PITA: Pain In The Ass，非常令人烦恼的事情。 PR: Pull Request, Git 合并分支请求。 PSA: Public Service Announcement, 开源项目或者服务发布公告。 PTAL: Please Take Another Look，请再检查一下（指已经有所更新或变化）。 PoC: Proof of Concept, 原型设计（通常用来证明某种想法的可行性） RFC: Request For Comment, 征求意见。 RTFM: Read The Fucking/Fine Manual, 请读程序文档 SLA: Service Level Agreement，常用来形容互联网服务的稳定性，例如 SLA 0.9999 STFW: Search The Fucking Web, 自己去网上搜索 TBH: To Be Honest, 实话跟你说吧。 TBQH: To Be Quite Honest, 实话跟你说吧（语气诚恳）。 TIL: Today I Learned, 今天又学到了新知识。 TL;DR: Too Long, Don\u0026rsquo;t Read，总结起来，就是（一般放在长文章的开头，用于总结要点）。 TYSM: Thank You So Much，非常感谢。 WDYT: What Do You Think, 你认为如何。 WFH: Work from Home，居家办公。 WIP: Work In Progress，未完成，还在进行中。 WLB: Work-Life Balance, 工作和生活平衡。 WYSIWYG: What You See Is What You Get, 所见即所得。 YMMV: Your Mileage May Vary, 你的感受或者体验可能会有所不同。 参考 # https://en.wikipedia.org/wiki/RTFM https://github.com/jquery/2015-developer-summit/issues/24 https://www.freecodecamp.org/news/what-do-cryptic-github-comments-mean-9c1912bcc0a4/ https://www.urbandictionary.com/ ","date":"18 November 2019","externalUrl":null,"permalink":"/2019/11/18/acronym_on_internet_and_forum/","section":"Posts","summary":"\u003cp\u003e上 \u003ca href=\"https://www.reddit.com/\" target=\"_blank\"\u003eReddit\u003c/a\u003e 或 GitHub 时，在讨论中，经常会碰到一些缩略词，作为一名非 native speaker，我经常有点摸不着头脑，不知道这些缩略语啥意思。这篇文章总结一些常用缩略语以及中文含义。\u003c/p\u003e","title":"互联网上常用缩略语集锦","type":"posts"},{"content":"There are several options related to file backup behavior in Vim/Nvim.\nbackup writebackup backupdir backupcopy backupext In this post, I will explain how these options are related to each other.\nOption backup controls whether to make a physical backup when writing a file.\nOption writebackup makes sure that a file backup be made before overwriting a file. The backup will be removed when the file is successfully written, unless backup option is also on. It reduces the risk that your file is destroyed if something goes wrong when you are writing the file to disk. For more info about using backup and writebackup together, see :h backup-table.\nThe option backext controls the extension used for backup files. backupext will be appended to the backup file names (default is ~). For example, if your file is test.txt and backupext is .bak, the backup file name will be test.txt.bak.\nThe option backupdir controls where the backup file will be placed. It is a list of directories (comma separated) to put the backup files. The first item in this option will be used. You must make sure that the backup directory exists, or you will see the following error when writing a file:\nE510: Can\u0026rsquo;t make backup file (add ! to override)\nUse the following setting to deal with this error:\nlet g:backupdir=expand(stdpath(\u0026#39;data\u0026#39;) . \u0026#39;/backup\u0026#39;) if !isdirectory(g:backupdir) mkdir(g:backupdir, \u0026#34;p\u0026#34;) endif let \u0026amp;backupdir=g:backupdir There is also an option backupcopy, which needs special attention. The value of backupcopy can be yes, no or auto:\nyes: it will copy the original file to the backup location and overwrite the original file. no: it will rename the original file (i.e., move it to the backup directory) and write a new file with the same name. auto: Nvim will choose whatever works best for you. Note that for some applications, you may want to set backupcopy to yes to avoid issues.\nReferences # Why does vim save files with a ~ extension? E510 error. E510: can not make backup file. What does backupcopy do? What does nowritebackup do? ","date":"16 November 2019","externalUrl":null,"permalink":"/2019/11/16/nvim_file_backup/","section":"Posts","summary":"\u003cp\u003eThere are several options related to file backup behavior in Vim/Nvim.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebackup\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewritebackup\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackupdir\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackupcopy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackupext\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn this post, I will explain how these options are related to each other.\u003c/p\u003e","title":"File Backup in Neovim","type":"posts"},{"content":"In this post, I want to share how to convert PDF to images using the command line tool pdftoppm.\nInstall Poppler # pdftoppm is provided by the poppler project.\nInstall on Windows # For Windows, in order to install the latest version of poppler, we can install it via conda:\nconda install -c conda-forge poppler On Windows, the pdftoppm tool will be installed in ANACONDA_ROOT/Library/bin. We should add this directory to the Windows PATH.\nWe need to install newer version of pdftoppm to use some of its features, for example, exporting to JPEG format1. Note that the poppler provided by this page is too old to be useful.\nInstall on Ubuntu # To install popper on Ubuntu, use apt-get:\napt-get update \u0026amp;\u0026amp; apt-get install -y poppler-utils This package installs the poppler command line utilities, such as pdftoppm, which we are going to use.\nInstall on macOS # On macOS, poppler can be easily installed via homebrew:\nbrew install poppler How to use # To convert a single page of PDF to image, we can run the following command:\npdftoppm -singlefile -f 4 -r 72 -jpeg -jpegopt quality=90 presentation.pdf test_poppler The PDF file we want to convert to images is presentation.pdf. The generated image name prefix is test_poppler. The image extension is decided by the exported image format. An explanation of the options used:\n-singlefile: only convert one page of PDF. It is used together with the -f option to convert a single PDF page. -f: index of the PDF page you want to convert. The page index starts at 1. -r: image DPI in both x and y direction. If you want to set DPI in x and y direction separately, use -rx and -ry instead. -jpeg: convert PDF page to JPEG format. -jpegopt: option used when convert PDF pages to JPEG images. For options and their meanings, see here. According to my test, pdftoppm works great and can produce the needed images quickly.\nUsing pdf2image # If you want to use Python, there is also a package named pdf2image, which is a thin wrapper around pdftoppm. Make sure you have installed pdftoppm and set its PATH correctly.\nIn the following script, I show an example on how to use the package.\nfrom pdf2image import convert_from_path def main(): pages = convert_from_path(\u0026#34;presentation.pdf\u0026#34;, first_page=2, single_file=True) pages[0].save(\u0026#34;test_pdf2image.jpg\u0026#34;, quality=85) if __name__ == \u0026#34;__main__\u0026#34;: main() The function convert_from_path() will convert the PDF to a list of PIL Image object. You can then manipulate the images with the powerful functionality provided by the Pillow package.\nThere also a few important parameters to note:\ndpi: this change the size and quality of the generated images. If you want to generate high quality images, use a large dpi, e.g., 300. thread_count: Use multi-threading to accelerate image generation. The author suggests no more than 4 threads, however, I found more threads lead to lightly faster speed. You may tweak it to fit your need. I have also written a more detailed script to directly generate images from PPT file on the command. You can find the script here.\nReferences # Install poppler on Windows. Install poppler on Ubuntu. Parsing PDF using Python. pdftoppm man page. Note that older version of pdftoppm only support PPM and PNG format. Newer versions support exporting to JPEG and TIFF format image. You should check whether exporting to JPEG is supported by using pdftoppm --help in the command line.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 November 2019","externalUrl":null,"permalink":"/2019/11/14/convert_pdf_to_images_pdftoppm/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how to convert PDF to images using the command\nline tool \u003ca href=\"https://www.xpdfreader.com/pdftoppm-man.html\" target=\"_blank\"\u003epdftoppm\u003c/a\u003e.\u003c/p\u003e","title":"Converting PDF Pages to Images with Poppler","type":"posts"},{"content":"This is the 5th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ How do I source other files in the same directory as my config? # As my config becomes longer and longer, I decided to split it into several Vim scripts. I can then source those files in my init.vim. Initially, I wrote something like source xxxx.vim. To my surprise, Nvim complained that it could not find those Vim script. After searching on the internet, I find that source command works relatively to your current work directory. In order to source certain Vim script in the same directory as init.vim, we have to use their absolute paths. Here is what I come up with:\nlet g:nvim_config_root = stdpath(\u0026#39;config\u0026#39;) let g:config_file_list = [\u0026#39;variables.vim\u0026#39;, \\ \u0026#39;options.vim\u0026#39;, \\ \u0026#39;autocommands.vim\u0026#39;, \\ \u0026#39;mappings.vim\u0026#39;, \\ \u0026#39;plugins.vim\u0026#39;, \\ \u0026#39;ui.vim\u0026#39; \\ ] for f in g:config_file_list execute \u0026#39;source \u0026#39; . g:nvim_config_root . \u0026#39;/\u0026#39; . f endfor In the above settings, we use the stdpath() function to get the directory of nvim config directory, which is rather convenient and works across platforms. Then we loop the files we want to source and source them one by one.\nReferences # Source all vim files in a directory. How to source relative to a file? How to search a pattern only in a line range # Sometimes, we only want to search in a range of lines, i.e., search from line n to line m. The syntax can be best explained by giving a concrete example. Suppose we want to search for the word search from line 10 to line 20, we can use the following search pattern:\n/\\%\u0026gt;10l\\%\u0026lt;20lsearch The start line is given by \\%\u0026gt;10l and the end line is given by \\%\u0026lt;20l. For more info, see :h search-range and :h /\\%l.\nReferences # Search in a range. Add highlight to a pattern # To highlight some patterns, we can use the :match command. For example, in order to highlight trailing white spaces, we may use the following command:\n:match WarningMsg /\\s\\+$/ The 1st argument to :match is a valid highlight group1. In the 2nd argument, the highlight pattern is inside //. For more info, see :h match-highlight.\nThe problem is that we can only highlight one pattern using this command. This means that if we want to highlight another pattern with :match command, only one pattern get highlighted. Vim provides additional :2match and :3match command to some avail. So in total, you can highlight three different patterns using this command.\nFortunately, Vim also provides the matchadd() function which works similarly to :match, except that there is no limit on the number of patterns to match. For example, to match both trailing white spaces and leading tab characters, use the following setting:\ncall matchadd(\u0026#39;Warnings\u0026#39;, \u0026#39;\\s\\+$\u0026#39;) call matchadd(\u0026#39;Warnings\u0026#39;, \u0026#39;^\\t\\+\u0026#39;) In the above settings, it is important that you quote the pattern to match with single quote. If you use double quotes, those backslashes will get translated so that the regex pattern will not right.\nReferences # Why does the pattern in matchadd() is not matched? Difference between single quote and double quote in Vim. How to get the path of currently sourced file? # When Vim is sourcing a file, you can use \u0026lt;sfile\u0026gt; inside function expand() to get the path of the script. To get other info about the sourced file, use filename-modifiers (see :h filename-modifiers).\n\u0026#34; absolute path of currently sourced file echo expand(\u0026#39;\u0026lt;sfile\u0026gt;:p\u0026#39;) \u0026#34; directory containing currently sourced file echo expand(\u0026#39;\u0026lt;sfile\u0026gt;:p:h\u0026#39;) References # Get the path to the current vimscript being executed. Turn tabs to spaces in a buffer quickly # I do not like tabs in my source file so I have set up the following settings in my config:\nset tabstop=4 set softtabstop=4 set expandtabs set shiftwidth=4 This setting works great when I am editing source code. However, for existing code using tabs, Vim/Nvim will not convert tabs into spaces automatically. Usually, I just replace tabs with four spaces manually: :s/\\t/ /g. But it is tedious to type all this.\nThere is a quicker way to turn tabs into spaces using the :retab command. It will turn tabs into 4 spaces if you use the above settings.\nReferences # Replace tabs with spaces in vim You can show all the available highlight groups with :highlight command.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 November 2019","externalUrl":null,"permalink":"/2019/11/11/nifty_nvim_techniques_s5/","section":"Posts","summary":"\u003cp\u003eThis is the 5th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim Techniques That Make My Life Easier -- Series 5","type":"posts"},{"content":"I have been using Neovim for personal projects for over a year. Recently, I want to set up Neovim system wide so that other users in the server can also use my config if they want. In this post, I will summarize the necessary configurations.\nInstallation # First, you need to install Neovim in a system location, for example, under /opt. Then edit the system profile /etc/profile and add the path of Neovim:\nexport PATH=/etc/nvim-linux64/bin:PATH Configuration # Global configuration # According to the documentation of Neovim, Neovim will look for nvim/sysinit.vim under $XDG_CONFIG_DIRS (the default is /etc/xdg)1.\nSo for global configuration, we need to put all configuration under /etc/xdg/nvim. Take my configuration for an example:\nmkdir /etc/xdg/nvim \u0026amp;\u0026amp; cd /etc/xdg/nvim \u0026amp;\u0026amp; git clone --depth 1 https://github.com/jdhao/nvim-config.git . We also need to create a symlink sysinit.vim and link it to init.vim:\nln -s init.vim sysinit.vim Change the value of g:nvim_system_wide in init.vim to 1 to install the plugins system-wide.\nSince I use vim-plug to manage plugins, I have set up vim-plug to install the system wide plugin under /usr/local/share/nvim/site (see code here). Now, as root user, open neovim and use :PlugInstall to install plugins.\nThe system configuration is finished.\nPersonal configuration # Usually, each user may want to change the default configuration set by the root. The user\u0026rsquo;s personal config should be put in $HOME/.config/nvim/init.vim. It will override the global configurations.\nThere is currently one gotcha: the users can not install local plugins using vim-plug easily. If the user want to install a custom plugin, they should first clone the plugin repo to a location and add the plugin path to runtimepath. For example, if we install ayu-vim under /home/jdhao/.local/share/nvim/plugged/ayu-vim, we should add the following setting to $HOME/.config/nvim/init.vim:\nset runtimepath+=/home/jdhao/.local/share/nvim/plugged/ayu-vim Another way of adding your personal plugins to runtimepath is by using vim-plug:\nPlug \u0026#39;~/.local/share/nvim/plugged/ayu-vim\u0026#39; You have to manually update the plugin though.\nReferences # Neovim doc, :h 'runtimepath'. Neovim doc, :h startup. https://wiki.archlinux.org/index.php/XDG_Base_Directory https://github.com/neovim/neovim/issues/8871 system wide nvim config. See neovim documentation :h sysinit.vim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 November 2019","externalUrl":null,"permalink":"/2019/11/10/install_config_neovim_system_wide/","section":"Posts","summary":"\u003cp\u003eI have been using Neovim for personal projects for over a year.\nRecently, I want to set up Neovim system wide so that other users in the server can also use my config if they want.\nIn this post, I will summarize the necessary configurations.\u003c/p\u003e","title":"Neovim Configuration for System-wide Use","type":"posts"},{"content":"In Python, when we want to sort a list of tuples or lists, we may want to sort it based on certain element in each sub-list, for example, sort the list based on the first element in each sub-list.\nThere are two different ways to achieve this, one is using lambda and the other is using itemgetter.\n# using lambda my_list.sort(key=lambda x:x[0]) # using itemgetter from operator import itemgetter my_list.sort(key=itemgetter(0)) According to my benchmark on a list of 1000 tuples, using itemgetter is almost twice as quick as the plain lambda method. The following is my code:\nIn [1]: a = list(range(1000)) In [2]: b = list(range(1000)) In [3]: import random In [4]: random.shuffle(a) In [5]: random.shuffle(b) In [6]: c = list(zip(a, b)) In [7]: %timeit c.sort(key=lambda x: x[1]) 81.4 µs ± 433 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each) In [8]: random.shuffle(c) In [9]: from operator import itemgetter In [10]: %timeit c.sort(key=itemgetter(1)) 47 µs ± 202 ns per loop (mean ± std. dev. of 7 runs, 10000 loops each) I have also tested the performance (run time in $µs$) of this two method for various list size. See the table below for a comparison:\n+-----------+--------+------------+ | List size | lambda | itemgetter | +-----------+--------+------------+ | 100 | 8.19 | 5.09 | +-----------+--------+------------+ | 1000 | 81.4 | 47 | +-----------+--------+------------+ | 10000 | 855 | 498 | +-----------+--------+------------+ | 100000 | 14600 | 10100 | +-----------+--------+------------+ | 1000000 | 172000 | 131000 | +-----------+--------+------------+ (The code producing the above image can be found here)\nFrom the above image, we can see that itemgetter is consistently faster than lambda regardless of the list size. Combined with its conciseness to select multiple elements from a list, itemgetter is clearly the winner to use in sort method.\nNote: this post is based on my answer on StackOverflow.\n","date":"6 November 2019","externalUrl":null,"permalink":"/2019/11/06/python_sort_list_of_list/","section":"Posts","summary":"\u003cp\u003eIn Python, when we want to sort a list of tuples or lists, we may want to sort\nit based on certain element in each sub-list, for example, sort the list based\non the first element in each sub-list.\u003c/p\u003e","title":"How to sort a list of tuple or list in Python -- lambda or itemgetter?","type":"posts"},{"content":" I have been using vim-airline to customize my statusline ever since I started using Neovim. It works great. Recently, I started a repo named minimal_vim to create a minimal configuration without external plugins for both Vim and Neovim. During the process, I learned how to build a custom statusline from scratch.\nThe primary source of my reference is the Vim help on statusline (see : h 'statusline'). It is well written and should give you enough knowledge on building a simple statusline.\nThe Vim statusline consists of a number of items with special format to indicate what we want to show and how they should be styled, e.g., width, color, alignment, padding etc.\nStatusline item format # Usually, the statusline consists of multiple printf style % items for showing various info about current file, e.g., %F is used to show the full path of current file. The complete format for items are as follows:\n%-0{minWidth}.{maxWidth}{item} - means to align the item to the left instead of right (the default). 0 is the leading zeros for items that return numeric numbers and is overridden by -. minWidth and maxWidth decide the min and max length of the item to be shown. All fields are optional except {item} itself.\nGood conventions: build statusline bit by bit # Since we will use several items to build our statusline, the best practice is to concatenate the various components to build a statusline (also see :h set+=) instead of using a single long strings to set up the statusline. Building the statusline incrementally make it easier to understand and edit.\nFor example, we use the following\nset statusline= \u0026#34; show full file path set statusline+=%F \u0026#34; show current line number set statusline+=%l Show the result of functions or an expression # Vim provides some default items to show info about current file, but that may not be enough. We may want to show the result of a function or show strings based on some conditions. Vim use %{} to evaluate functions or expressions and show the returned strings in statusline.\nTo show the current mode in statusline, we can use the following setting:\nlet g:currentmode={ \\ \u0026#39;n\u0026#39; : \u0026#39;NORMAL \u0026#39;, \\ \u0026#39;v\u0026#39; : \u0026#39;VISUAL \u0026#39;, \\ \u0026#39;V\u0026#39; : \u0026#39;V·Line \u0026#39;, \\ \u0026#34;\\\u0026lt;C-V\u0026gt;\u0026#34; : \u0026#39;V·Block \u0026#39;, \\ \u0026#39;i\u0026#39; : \u0026#39;INSERT \u0026#39;, \\ \u0026#39;R\u0026#39; : \u0026#39;R \u0026#39;, \\ \u0026#39;Rv\u0026#39; : \u0026#39;V·Replace \u0026#39;, \\ \u0026#39;c\u0026#39; : \u0026#39;Command \u0026#39;, \\} set statusline= set statusline+=\\ %{toupper(g:currentmode[mode()])} Based on which mode we are in, the statusline will change automatically.\nTo show a modified sign [+] based on whether current file has been modified, we can use the following setting:\nset statusline+=%{\u0026amp;modified?\u0026#39;[+]\u0026#39;:\u0026#39;\u0026#39;} Using group # Group is used to set width and alignment for several elements as a whole. We start a group with ( and end it with %), i.e., (group_element%). For example, to show file format, we may use the following setting:\nset statusline+=%-7([%{\u0026amp;fileformat}]%) The above group has min width 7 and is left-aligned.\nUsing highlight groups # Ever wondering how to show different colors for different parts of the statusline? It is simple: use highlight groups.\nThere are two slightly different ways to use highlight.\nUse a highlight group name # The first way is to use the name of a highlight group. We can check what highlight groups are available using :highlight command. For example, to use highlight group Warnings, we can use the following setting:\nset statusline+=%#Warnings# set statusline+=%{\u0026amp;bomb?\u0026#39;[BOM]\u0026#39;:\u0026#39;\u0026#39;} The highlight group will take effect from the point it is used in statusline. To switch a highlight, we just need to provide another highlight group at the desired position (which means that if you do not switch it, any later element in statusline use that highlight group).\nUse special user defined highlight groups # Vim also allows us to define 9 special highlight groups named from User1 to User9 and refer to them in statusline with a special syntax like the following:\n\u0026#34; use highlight group User2 set statusline+=%2* First, we need to define the needed user highlight group:\nhi User1 ctermfg=0 ctermbg=114 hi User2 ctermfg=114 ctermbg=0 Then we can use them in statusline settings. To return to the default Statusline colors, we can use:\nset statusline+=%* Common caveat to avoid # The most common error is failing to escape some special characters. Since space and | have special meanings (see also :h option-backslash), we need to use backslash to escape them to include a literal one. For example:\nset statusline+=%{\u0026amp;filetype!=#\u0026#39;\u0026#39;?\u0026amp;filetype.\u0026#39;\\ \u0026#39;:\u0026#39;none\\ \u0026#39;} The above setting will show the current filetype followed by a space or none followed by space if filetype is empty.\n% is also a special character. To include a literal % char, we need to use %%. For example, to show the percentage of current cursor position in the buffer, use:\nset statusline+=%2p%% References # https://gist.github.com/suderman/1243665 https://gist.github.com/autrimpo/f40e4eda233977dd3a619c6083d9bebd Building your own statusline. Scrooloose\u0026rsquo;s vimrc. A better vim statusline? http://got-ravings.blogspot.com/search/label/statuslines ","date":"3 November 2019","externalUrl":null,"permalink":"/2019/11/03/vim_custom_statusline/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20191103144006.png\"\u003e\n\u003c/p\u003e\n\u003cp\u003eI have been using \u003ca href=\"https://github.com/vim-airline/vim-airline\" target=\"_blank\"\u003evim-airline\u003c/a\u003e to\ncustomize my statusline ever since I started using Neovim. It works great.\nRecently, I started \u003ca href=\"https://github.com/jdhao/minimal_vim\" target=\"_blank\"\u003ea repo\u003c/a\u003e named\n\u003ccode\u003eminimal_vim\u003c/code\u003e to create a minimal configuration without external plugins for\nboth Vim and Neovim. During the process, I learned how to build a custom\nstatusline from scratch.\u003c/p\u003e","title":"Building A Vim Statusline from Scratch","type":"posts"},{"content":"花了差不多两个月时间，于上周看完了《The making of the atomic bomb》(中文名叫《原子弹秘史》)，这本书是 1988 年美国普利策非虚构类最佳图书奖获奖作品。整本书很长，上百万字，作者在书中全景式展现了人类第一颗原子弹爆炸的完整历史，把原子物理学、核物理发现，犹太人的历史，原子弹的制造，还有科学家的成长历程，融为一体讲述，考证详实，虽然有大量的历史细节，读起来却很过瘾，一点也不枯燥。\n整体内容 # 开始读之前，我以为它讲的只是原子弹具体是怎么造出来的，读了一大半，发现作者并不是按照这种狭窄的思路去写的：实际上，与原子弹制造直接相关的曼哈顿计划，在书中的篇幅不超过三分之一。\n作者在全书第一部分主要回顾了二十世纪前半叶人类对原子结构认识的历史，重点讲了卢瑟福的原子电子轨道模型以及用传统物理学无法解释电子绕原子核的辐射问题1，这部分知识其实高中物理已经涉及到了。后来，玻尔为了解释卢瑟福的电子轨道理论，创建了玻尔模型。作者对量子物理的兴起和发展历史也有涉及，例如海森堡的测不准原理以及薛定谔方程。顺便说一句，玻尔提出电子的量子理论的时候，才 28 岁 (玻尔出生于 1885 年)，真乃天才，一举奠定了自己作为量子物理开山大师的地位。\n第二部分主要讲了中子的发现(由剑桥大学卡文迪许实验室的查德威克证实中子的存在)，中子的发现为人类后续进一步研究微观原子结构提供了绝好的工具2，直接为原子核裂变(neuclear fission)现象的发现铺平了道路。原子核裂变的发现，是物理学的大发现，期间充满了曲折。在核裂变被确认之前，主流的物理学家都不相信原子核可以被分成两个质量更小的元素，聪明如费米也没能正确认识核裂变。为什么核裂变发现如此重要？因为质量大的原子核裂变为两个质量较小的原子核过程中，质量减少，根据爱因斯坦质能公式，此过程会释放出大量能量，因此核裂变的发现是原子弹制造的理论基础。\n第三部分主要介绍了曼哈顿计划始末，美国的原子弹计划在 1939 即起步，刚开始进展缓慢，美国人并没有对此足够重视，后来在英国人的敦促下，原子弹计划才慢慢进入正轨，获得重视。随着洛斯阿拉莫斯实验室的建立，U235和钚(plutonium）浓缩工厂的建立，原子弹才从科学理论变成现实。另外，爱因斯坦并没有直接参与到原子弹的研制过程中，但是他也起到了作用，因为 Leo Szilard 上书罗斯福总统要求开展美国的原子弹研制计划的信，经过了爱因斯坦的签名，借助了爱因斯坦的巨大声望。\n科学团体的作用 # 科学家是一个群体，所谓 scientific community，看了这本书，发现很多著名的物理学家之间都有师承关系，玻尔曾经在卢瑟福的实验室做过博士后，奥本海默也曾在欧洲留学，师从马克思·波恩，另外，欧洲的科学团体之间交流频繁，这也是欧洲科学发展迅速的一个重要因素。\n实验室的环境也非常重要，最明显的例子莫过于卢瑟福领导下的卡文迪许实验室，该实验室先后诞生了 11名诺贝尔奖获得者。玻尔在成名以后，也在丹麦建立了理论物理研究所，吸引了大量仰慕玻尔声望的青年物理学家，组成了量子物理所谓“哥本哈根学派”，其中就包括海森堡，玻尔和海森堡一起建立了矩阵力学。\n犹太人的苦难 # 说起犹太人，人们总会想起银行家，科学家，很多人并不了解犹太民族的苦难历史。犹太人从中世纪开始就受到欧洲各国的迫害，尤其是基督教的迫害，在各个国家颠沛流离。20世纪 30 年代，随着希特勒纳粹德国的兴起，德国犹太裔逐渐被各种迫害，超过 500 万犹太人死于纳粹建立的集中营，大批犹太科学家逃离德国和其他欧洲国家，其中很多人选择了美国，这也是美国在二战后科技迅速崛起的重要原因。\n美国原子弹的制造 # 美国原子弹研制的曼哈顿计划其实早就在 1939 年提上了日程，然而初期进展缓慢，一直到了 1943 年才进入了正轨。\n原子弹的制造主要分为两条线索，一方面是由奥本海默3领导，在洛斯阿拉莫斯这个荒凉的地方，建立了实验室，主要用于解决原子弹研制过程中的种种理论难题(例如炸药如何放置，使得炸药能够产生球形冲击波，挤压钚核心)。\n在这中间，作者着重介绍了内爆型原子弹的研制，不了解原子弹的人可能以为原子弹只有一种类型，其实并不是。科学家发现两种元素可以裂变，一种是 U235，另外一种是钚，U235 裂变比较简单，采用 枪式结构(也称为 “gun-type”)，也就是把两块低于临界质量的高纯度 U235 利用炸药高速射在一起，使两块铀的质量超过临界质量，产生核爆；另外一种使用 plutonium 的原子弹，不能采用枪式结构，这会导致原子弹提前爆炸，达不到预想的效果，当时发现这个问题的时候，奥本海默非常痛苦绝望，甚至想辞去洛斯阿拉莫斯的职务。所幸当时的美国人才济济，Neddermeyer 提出内爆式(implosion)设计，也就是从外部引爆多个炸药，产生球形冲击波，挤压钚核心，使其达到临界质量，从而引爆原子弹4。\n顺便说一下，数学家冯诺伊曼为内爆型设计中炸药的流体动力学计算提供了帮助，哈佛大学的 George Kistiakowsky领导了炸药方案(也就是 implosion lens)的设计。为了原子弹的设计，科学家夜以继日工作，每周工作六天时间，周末只休息一天，周六晚上通常会举行聚会，是难得的放松的时间。\n闲话不提，原子弹研制的另外一方面，则是核原料的提纯，由于自然界中 U235 含量只有 0.7%，而原子弹爆炸需要高纯度浓缩铀，当时的提纯方案有多种，electromagnetic，gaseous diffusion 以及 thermal diffusion。为了防止某一个方案的失败，三个方案同时进行研发，在华盛顿的 Hanford 以及田纳西州的 oak ridge 建立了提纯工厂。原子弹的研制，得益于美国强大的工业实力和国家资本，为了原子弹制造成功，可谓是不惜血本，例如，洛伦兹的回旋加速器用到的磁场，需要使用大量白银线圈，最后从美国财政部借了大约 14000 吨白银来制造线圈。整个曼哈顿项目的耗资在 20 亿美元以上，相当于今天的二百多亿美元，项目的参与人数上万人。\n关于曼哈顿计划，有一部美剧 《曼哈顿》可以一看，个人认为很精彩。\n原子弹爆炸 # 看过《太平洋战争》这部电视剧的人，应该对日本死不投降，奋战到底的民族气质有了解。在太平洋战争后期，不同于之前的自杀式袭击，日本的策略就是保存性命，尽可能多伤亡盟军。特别是在硫磺岛(Iwo Jima)战役中，美军伤亡两万多人，日军死亡 17000 多人，仅有 200 多人允许自己被俘虏，这是太平洋战争中唯一一场美军伤亡大于日本的战役。巨大的伤亡，让美国人认识到了日本的顽固与进攻日本本土可能存在的巨大代价，军方经过估算，认为进攻日本本土可能造成美军一百万左右的伤亡，这对于美国人来说是不可接受的代价。因此军方倾向于投放原子弹，彻底摧毁日本人的抵抗斗志，迅速结束战斗。\n使用枪式设计的原子弹由于比较瘦长，被称为小男孩 (Little boy)，使用内爆式设计的原子弹外形比较胖，被称为胖子 (Fat man)，也有人戏称这正好对应美国总统杜鲁门和英国首相丘吉尔的身材。\n由于小男孩 (Little boy) 原子弹制造相对简单，美国人选择先爆炸小男孩，值得说明，原子弹并不是从美国本土出发的，因为那时候美国的轰炸机并不能飞行那么远的距离，原子弹先被运送到太平洋的马里亚纳 (Mariana island)群岛的 Tinian 岛，在那里组装完成，再使用 B-29 轰炸机携带，投放到广岛市。胖子 (Fat man) 在几天之后，组装准备就绪，本来预定的目标是日本的小仓 (Kokura)，由于爆炸当天小仓的天气状况不好，才选择在备用爆炸地点长崎丢下胖子。\n原子弹的投放，给广岛和长崎带来了毁灭性打击，整个城市几乎被摧毁，上万平民在原子弹带来的瞬时高温或者冲击波作用下瞬间死亡，很多靠近原子弹爆心的人直接被烧成了焦炭，爆炸还带来了大火，将城市的大量木制建筑烧毁，许多平民死于大火之中，许多幸存者将当时的场景描述为人间末日、地狱。由于军国主义，无辜平民成了灾难的对象，不能不说是一种悲哀，可是这些人真的是完全无辜吗，也很难说，不投放原子弹，美日双方如果继续战争，不知道又要死伤多少生命。作者在最后花了大量篇幅引用原子弹爆炸幸存者的回忆，也正是为了说明战争的残酷，热爱和平，因为在战争中，受伤最多的还是普通民众。\n绕原子核转动的电子，按照宏观的运动学，将会以电磁波形式释放能量，那么电子运动轨道势必越来越小，最后坍塌到原子核，但是实际上电子绕核运动很稳定。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n由于中子不带电荷，不受原子核内的质子排斥，所以很容易用来轰击原子核，研究原子核的性质。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n对奥本海默生平感兴趣的，可以看《奥本海默传》.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n可以参考回形针做的 这期视频 帮助理解原子弹原理。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 November 2019","externalUrl":null,"permalink":"/2019/11/02/thought_on_making_of_atomic_bomb/","section":"Posts","summary":"\u003cp\u003e花了差不多两个月时间，于上周看完了《The making of the atomic bomb》(中文名叫\u003ca href=\"https://book.douban.com/subject/3449736//\" target=\"_blank\"\u003e《原子弹秘史》\u003c/a\u003e)，这本书是 1988 年美国普利策非虚构类最佳图书奖获奖作品。整本书很长，上百万字，作者在书中全景式展现了人类第一颗原子弹爆炸的完整历史，把原子物理学、核物理发现，犹太人的历史，原子弹的制造，还有科学家的成长历程，融为一体讲述，考证详实，虽然有大量的历史细节，读起来却很过瘾，一点也不枯燥。\u003c/p\u003e","title":"人类第一颗原子弹爆炸始末","type":"posts"},{"content":"Horovod is the distributed training framework developed by Uber. It support training distributed programs with little modification for both TensorFlow, PyTorch, MXNet and keras.\nBasic concepts of MPI # For distributed training, horovod relies on MPI or Gloo, both of which are libraries developed for parallel computing. The underlying concepts may be similar.\nCommunicator: this is a common world for a group of processes. Each process inside the communicator has its rank, which is a unique id used by MPI to identify a particular process.\nPoint-to-point communication: it means that a process interacts with another process directly in the communicator.\nCollective operation: A MPI collective operation involves all the processes in a communicator. These operations include broadcast, gather, scatter, reduce, etc.\nThe meaning of some collective operations # Broadcast means to copy the same data from the root process to the other processes. Gather means to take data from other processes and put them in the root process. Scatter means to slice the dataset in root process to several parts and distribute one part to each process. Reduce means to perform some sort of action (sum, max, min, etc.) on the data from all processes and put the result in the root process. Allreduce is based on reduce operation and it copies the result to other processes. References # Introduction to MPI programming. Parallel computing with MPI. Wiki page on MPI concepts. What are world size, rank, local rank? # First, the meaning of world in distributed scenario:\nBy default, collectives are executed on all the processes, also known as world.\nIn PyTorch, distributed training using torch.dist.DistributedParallel, the number of spawned processed equals to the number of GPUs you want to use. Rank is the unique id given to each process, and local rank is the local id for GPUs in the same node.\nFor example, if you want to use 2 nodes and 4 GPUs per node, then 2*4 =8 processes will be spawned. World size is 8. In node 1, the process rank is 0, 1, 2, 3, and in node 2, the process rank is 4, 5, 6, 7. In both the two nodes, local rank would be 0, 1, 2, 3.\nIn horovod, the concept is similar. Usually, each GPU corresponds to one process. Size is equal to the number of processes.\nHow does batch size and multi-GPU training work together? # In PyTorch, for single node, multi-GPU training (i.e., using torch.nn.DataParallel), the data batch is split in the first dimension, which means that you should multiply your original batch size (for single node single GPU training) by the number of GPUs you want to use if you want to the original batch size for one GPU.\nFor multi-node, multi-GPU training using horovod, the situation is different. In this case, we first need to use a DistributedSampler() like the following command:\ntrain_sampler = torch.utils.data.distributed.DistributedSampler( train_dataset, num_replicas=hvd.size(), rank=hvd.rank()) In the above statement, the parameter num_replicas is the world size, and parameter rank is the global rank (in contrast to the local rank) of current process. But how does a DistributedSampler work?\nYou can find the source code of DistributedSampler here. According to the code, roughly speaking, it splits the dataset into num_replicas parts, and according to its rank, each process get a part of the original indexes of the dataset:\nindices = indices[self.rank:self.total_size:self.num_replicas] In the end, this sampler gets len(dataset)/num_replicas samples.\nIn the dataloader part, we need to use this distributed sampler instead of the plain simple sampler:\nkwargs = {\u0026#39;num_workers\u0026#39;: 4, \u0026#39;pin_memory\u0026#39;: True} if args.cuda else {} train_loader = torch.utils.data.DataLoader( train_dataset, batch_size=batch_size, sampler=train_sampler, **kwargs) The size of this train_loader, i.e., the number of iterations for a single process, is len(dataset)/(num_replicas*batch_size). In a one node one GPU scenario, the dataloader size is usually len(dataset)/batch_size. So in a distributed scenario, the number of iterations for a single process is the number of the iterations in one node one GPU case divided by num_replica. By iterating over their respective data part, all the processes have finished one epoch in the whole dataset.\nLet\u0026rsquo;s take a concrete example to illustrate the idea. Suppose the dataset size is 1024 and batch size is 32. In one node one GPU case, the number of iterations in one epoch is 1024/32=32.\nIf we instead use two nodes with 4 GPUs for each node. In total, 2*4=8 processes are started for distributed training. In this case, each process get 1024/8=128 samples in the dataset. The number of iterations for each process in an epoch is 128/32=4.\nNow you can see why distributed training is faster because each GPU only needs to do a fraction of the jobs when only one GPU is used. Theoretically, the acceleration you will get is N, where N is the number of GPUs used in the distributed training. In reality, you won\u0026rsquo;t get that much acceleration for your program due to communication costs and other factors.\nReferences # https://discuss.pytorch.org/t/a-question-concerning-batchsize-and-multiple-gpus-in-pytorch/33767/2 https://stackoverflow.com/questions/54216920/how-to-use-multiple-gpus-in-pytorch Horovod distributed training for imagenet classification. ","date":"1 November 2019","externalUrl":null,"permalink":"/2019/11/01/pytorch_distributed_training/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/horovod/horovod\" target=\"_blank\"\u003eHorovod\u003c/a\u003e is the distributed training\nframework developed by Uber. It support training distributed programs with\nlittle modification for both TensorFlow, PyTorch, MXNet and keras.\u003c/p\u003e","title":"Distributed Training in PyTorch with Horovod","type":"posts"},{"content":"","date":"29 October 2019","externalUrl":null,"permalink":"/tags/expect/","section":"Tags","summary":"","title":"Expect","type":"tags"},{"content":"In my previous post, I talked about how to automate the server login process with the help of Expect programming language. This post continues my learning process.\nDifference between send and send_user command? # There are two similar commands in Expect, send and send_user. send and send_user have different purposes. send is used to provide input for the spawned processes, while send_user is used to send some message to via terminal to the users.\nDifference between \\n and \\r in Expect? # According to my test, when you use send to send characters to the spawned process, it makes no difference to use either \\r (carriage return) or \\n (line feed). They both works as if the user has press the Enter key.\nHowever, they work differently when you want use send_user to display something to the user. \\n will give a new line while \\r will just move the cursor to the beginning of the line (i.e., your message will be erased). To verify, execute the following command\nexpect { \u0026#34;prompt1\u0026#34; {send_user \u0026#34;answer1\\n\u0026#34;} \u0026#34;prompt2\u0026#34; {send_user \u0026#34;answer2\\r\u0026#34;} } If you execute the above script with expect, when you input prompt1, you will get the output answer1 and a new line is started; when you input prompt2, you get nothing in the screen. Actually, answer2 is shown and is then erased by \\r.\nCheck if a file exists # Sometimes, we may want to check if a file exists and take some actions based on the condition. We use file exists \u0026lt;name\u0026gt; to check that:\nif {[file exists .ssh/known_hosts]} { spawn rm .ssh/known_hosts } Match optional prompts # Sometimes, there are optional prompts which may occur depending on some conditions. For example, when we first log into a new server, we are warned that the authenticity of the server can not be established and if we want to continue connecting. After that, we may not see this prompt anymore. We can use the exp_continue command to achieve that.\nexpect { \u0026#34;Are you sure*\u0026#34; { send \u0026#34;yes\\r\u0026#34; exp_continue } \u0026#34;*password: \u0026#34; { send \u0026#34;pass\\r\u0026#34; } } The exp_continue command will continue the expect block until it matches another pattern or timeouts.\nPattern matching # Double quotes and curly braces in pattern matching # In expect script, both double quotes and curly braces can be used to group argument. They are quite different.\nInside double quotes, variable substitution and command substitution and backslash substitution take place:\nvariable substitution: $var will be replaced with actual value of variable var. command substitution: [some_char] is considered as command invoking, and he result of executing command some_char replaces [some_char]. Also see this guide page. backslash substitution: characters after \\ is replaced with the character verbatim. There are several exceptions to this rule. For example, \\n, \\t, \\uHHHH etc. have special meanings. For a complete list, see this page (the part about backslash substitution). Inside double braces, command substitution, variable expansion and backslash substitution does not take place. For example:\nexpect { # match $var literally {$var} {send_user \u0026#34;yes\\n\u0026#34;} # match character \\ and $ {\\$} {send_user \u0026#34;yes\\n\u0026#34;} # match character \\ and n {\\n} {send_user \u0026#34;yes\\n\u0026#34;} } Glob match patterns # For simple matching, glob patterns can be used, and it works similarly to the bash glob functionality. * is used to represent any number of characters, and ? is used to represent a single character. For more info about glob patterns, see doc here.\nSome patterns and their meanings are listed below:\nexpect{ # match strings containing abc expect *abc* # match literal [a] {\\[a]} {send_user \u0026#34;yes\\n\u0026#34;} # match literal [a] {\\[a\\]} {send_user \u0026#34;yes\\n\u0026#34;} # match strings containing ab followed by another character {ab?} {send_user \u0026#34;yes\\n\u0026#34;} # match `abc` or `abd` {ab[cd]} {send_user \u0026#34;yes\\n\u0026#34;} } Regex matching # If you want to match more complex patterns, you can also use the regex provided by the Tcl language1. To use regex, you will use the -re option for expect command. For example, to match either ab or cd, you can use the following command:\nexpect -re ab|cd {send_user \u0026#34;hello\\n\u0026#34;} As discussed before, since patterns inside the double quotes undergo several substitutions, you should take extra care when you want to match patterns using regex. For example, to match consecutive digits, you should use expect -re \u0026quot;\\\\d+\u0026quot; or expect -re {\\d+}. If you use expect -re \u0026quot;\\d+\u0026quot;, you will match consecutive characterd since backslash will translate \\d inside double quotes.\nexpect { # the following two patterns both match two consecutive alphabet chars. -re \u0026#34;\\[a-z\\]{2}\u0026#34; {send_user \u0026#34;yes\\n\u0026#34;} -re {[a-z]{2}} {send_user \u0026#34;yes\\n\u0026#34;} # match a lenth 2 string which contains only alpha-numerical chars. -re {^[a-z0-9]{2}\\n$} {send_user \u0026#34;yes\\n\u0026#34;} timeout {send_user \u0026#34;time out\\n\u0026#34;} } Matching bracket literally # One extremely complex and bewildering pattern is to match square bracket literally. It is difficult because square bracket have special meanings in both command substitution and in regex or glob pattern.\nIf you use double quotes, in order to match [a] literally, you have to use triple backslash to escape it:\nexpect -re \u0026#34;\\\\\\[a\\\\\\]\u0026#34; {send_user \u0026#34;yes\\n\u0026#34;} # or you can use expect \u0026#34;\\\\\\[a\\\\\\]\u0026#34; {send_user \u0026#34;yes\\n\u0026#34;} First backslash is to prevent command substitution. Second backslash and third backslash is to prevent backslash substitution so that regex engine can see one backslash. So the final pattern regex engine sees is actually \\[a\\], which prevents a from being interpreted as a regex range. Thus, it is matched literally. This page also explains why three backslashes are needed in order to match literal square bracket if we use double quotes.\nTo prevent such complex patterns, it is highly encouraged to use double braces to simplify the pattern. The above pattern can be simplified as the following:\nexpect { {\\[a\\]} {send_user \u0026#34;yes\\n\u0026#34;} } References # Expect check if file exists. Expect: match optional prompt. Difference between \\r and \\n in expect. Expect regex Expect glob and other patterns Tcl regex syntax references. Grouping with double quotes. expect language is an extension to the Tcl programming language.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"29 October 2019","externalUrl":null,"permalink":"/2019/10/29/expect_script_learning/","section":"Posts","summary":"\u003cp\u003eIn \u003ca href=\"https://jdhao.github.io/2018/10/08/server_autologin_with_expect/\" target=\"_blank\"\u003emy previous post\u003c/a\u003e,\nI talked about how to automate the server login process with the help of Expect\nprogramming language. This post continues my learning process.\u003c/p\u003e","title":"Learning Expect Programming","type":"posts"},{"content":"Although I use SSH (secure shell) every day, I seem to know little about it except the fact that I can use ssh command to log into my remote servers. Recently, I found myself some time to learn how does it work.\nPreliminary knowledge # Fingerprint # In computing, a fingerprint is a shorter sequence representation of a longer message which can be used to identified the original message. For example, in SSH, when you connect to the server, you will get the server public key fingerprint. Then you can compare the fingerprint you have received with the real server fingerprint (e.g., you may have obtained the server public key fingerprint by contacting the administrator) to make sure that you are not being attacked by hackers and connecting the wrong server.\nCryptographic hash function # To produce such a fingerprint and ensure security, we need to use cryptographic hash functions. A cryptographic hash functions has good properties. It makes sure that same message always produce the same output and different messages produce different output. It also makes sure that you can not deduce the original message from the output. These good properties make it suitable for authentification purposes. You may have probably used it before when you check the integrity of files using md5sum or similar tools.\nMD5 and SHA1 are different hash function algorithms to generate a fingerprint. The complete list of hash functions can be found here.\nSSH to a server # Two ways to log in a server when using SSH:\nuse your user name and password use ssh public key authentification Server public key verification # When we first log in a server, we will be prompted that the authenticity of the server can not established, and we are shown the fingerprint of the server\u0026rsquo;s public key. The typical message is like the following:\nThe authenticity of host \u0026#39;xxx.xx.xx.xx (xx.xx.xx.xx)\u0026#39; can\u0026#39;t be established. ECDSA key fingerprint is SHA256:zJsEufeAsutfxsZH990Sq7asIBnJvz6B9N63g0/Rx5w. Are you sure you want to continue connecting (yes/no/[fingerprint])? In the above message, ECDSA is a type of signature algorithm used to verify the identity of the two sides of a communication. Other signature algorithms include DSA, RSA and ED25519.\nTo make sure that the public key of the server is true, you have to check via other methods. For example, if you have access to the server in other more secure ways, you can check the fingerprint of the server\u0026rsquo;s ECDSA public key2 with SHA hash function using the following command:\nssh-keygen -lf -E sha256 /etc/ssh/ssh_host_ecdsa_key.pub If you want to check the fingerprint of the server in MD5 format, use the following command instead:\n# MD5 ssh-keygen -E md5 -lf \u0026lt;fileName\u0026gt; Then you can compare the fingerprint of the server public key against the fingerprint you have received. If the two fingerprints match, you are actually logging to the right server. Otherwise, you may be under attack by hacker (see man-in-the-middle-attack ).\nIf you have verified the identity of the new server and choose to connect, the server\u0026rsquo;s IP and public key will be stored in the file .ssh/known_hosts3 under your HOME directory. The next time you connect to the server, the server\u0026rsquo;s public key will be compared with the public key stored in known_hosts to make sure that your connection to the server is secure.\nUsually you will encounter the unauthorized warning the first time you log in a server. If you encounter the warning the second time, it may be that the server has changed its public key or you are under attack.\nSet up public key login # As stated earlier, we can also set up public key login. First, we need to generate a private and public key pair using ssh-keygen. We can use -t to specify the type of key to create, e.g., dsa, ecdsa, rsa. We can use the following command to generate a ecdsa key pair:\nssh-keygen -t ecdsa It will prompt you to enter a key file name and the passphrase for the private key. You can press Enter to use the default values. The key pair will be created under $HOME/.ssh. The private key file is id_ecdsa and the public key file is id_ecdsa.pub. You must keep your private key safe. The public key can be safely shown to others.\nTransfer your public key to server # To enable host public key login, you must put your public key under the $HOME/.ssh directory in the remote server. There are two ways.\nCopy public key manually: Copy the content of the public key. Log in to your server and paste the public key to the file $HOME/.ssh/authorized_keys (if this file does not exist, create the file first.).\nUse ssh-copy-id: In some systems, there is tool called ssh-copy-id which an copy the content of the public key to $HOME/.ssh/authorized_keys in the host server. You can use the following command to copy the public key to the server:\nssh-copy-id user@host_ip login to the server # After setting up public key login, you can log in to the server without using password:\nssh -p xxx user@host_ip The server will verify if the public key under user\u0026rsquo;s directory corresponds your private key. If they match, you will log in to the server automatically.\nReferences # Generate key fingerprint in different format. What is ssh key fingerprint? Difference between authorized_keys and known_hosts.. What does it mean that a host\u0026rsquo;s authenticity can not be established?? How to use public key authentification for ssh.. What is known_hosts file?. Difference between DSA, ECDSA, RSA?. SHA has three algorithms in series, SHA-1, SHA-2 and SHA-3. SHA-1 is old, and the other two are newer.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe public keys of the host server are stored in /etc/ssh directory, for example: ssh_host_dsa_key.pub, ssh_host_rsa_key.pub, ssh_host_ecdsa_key.pub.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nTo check the format of known_hosts file, see man 7 sshd.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"27 October 2019","externalUrl":null,"permalink":"/2019/10/27/ssh_essential_knowledge/","section":"Posts","summary":"\u003cp\u003eAlthough I use SSH (secure shell) every day, I seem to know little about it\nexcept the fact that I can use \u003ccode\u003essh\u003c/code\u003e command to log into my remote servers.\nRecently, I found myself some time to learn how does it work.\u003c/p\u003e","title":"Essential Knowledge about SSH","type":"posts"},{"content":"","date":"27 October 2019","externalUrl":null,"permalink":"/tags/ssh/","section":"Tags","summary":"","title":"Ssh","type":"tags"},{"content":"Change font size # By default, LaTeX provides several command to change the font size to predefined size. Those command include \\scriptsize, \\large, \\Huge etc. However, even the font size provided by the \\Huge command may not be large enough.\nIn this case, we can use the \\fontsize command to change the font size to what we want. The signature of \\fontsize command is:\n\\fontsize{\u0026lt;font_size\u0026gt;}{\u0026lt;baseline_skip\u0026gt;} The first parameter is the font size and the second parameter is baseline skip. The default font used by LaTeX does not support arbitrary font size, and we have to use another font such as Latin Modern. A minimal example is the follows:\n\\documentclass{article} % use the Latin Modern font \\usepackage{lmodern} \\begin{document} % turn off page numbering \\pagenumbering{gobble} {\\flushleft \\fontsize{50}{10}\\selectfont 50pt} {\\flushleft \\fontsize{100}{10}\\selectfont 100pt} {\\flushleft \\fontsize{150}{10}\\selectfont 150pt} {\\flushleft \\fontsize{200}{10}\\selectfont 200pt} \\end{document} In the above code, \\selectfont is used to make the font change take effect.\nReferences # Font size not available in LaTex? Change font size to arbitrary size in LaTeX. Change font size in LaTeX. Artitrary font size. Font larger than Huge in LaTeX? Parameters of \\fontsize command. Produce vertical text # Sometimes, we want to produce a vertical text line. This can be achieved by using the \\rotatebox box command provided by the graphicx package. A small runnable script is provided below:\n% !TEX TS-program = xelatex \\documentclass{article} \\usepackage{graphicx} \\begin{document} % turn off page numbering \\pagenumbering{gobble} \\rotatebox[origin=c]{90}{\\fontsize{50}{5}\\selectfont \\textbf{Test text.}} \\end{document} Another way to rotate texts is to use the rotating package, which provides a turn environment to rotate texts to certain angles:\n% !TEX TS-program = xelatex \\documentclass{article} \\usepackage{lmodern} \\usepackage{rotating} \\begin{document} % turn off page numbering \\pagenumbering{gobble} % rotate the text to 90 degrees counterclockwise \\begin{turn}{90} \\fontsize{50}{5}\\selectfont \\textbf{Test text.} \\end{turn} \\end{document} References # Rotate text in LaTeX. Rotate text with rotating package. ","date":"22 October 2019","externalUrl":null,"permalink":"/2019/10/22/latex_techniques_s1/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eChange font size \n    \u003cdiv id=\"change-font-size\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#change-font-size\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eBy default, LaTeX provides several command to change the font size to\npredefined size. Those command include \u003ccode\u003e\\scriptsize\u003c/code\u003e, \u003ccode\u003e\\large\u003c/code\u003e, \u003ccode\u003e\\Huge\u003c/code\u003e etc.\nHowever, even the font size provided by the \u003ccode\u003e\\Huge\u003c/code\u003e command may not be large\nenough.\u003c/p\u003e","title":"Nifty LaTeX Techniques -- Series 1","type":"posts"},{"content":"","date":"22 October 2019","externalUrl":null,"permalink":"/tags/%E5%AD%97%E4%BD%93/","section":"Tags","summary":"","title":"字体","type":"tags"},{"content":"之前的文章提到过，当 Adsense 帐号的收入达到 10 美元阈值的时候，谷歌会向你注册 Adsense 登记的地址发送一封邮件，里面有验证的 PIN 码，只有验证了 PIN 码，后续才能收到谷歌的付款。\n注意，从第一次收到谷歌提醒需要验证 PIN 开始，如果在 4 个月内没有验证 PIN，那么博客上的 Adsense 广告将会停止显示，直到你成功验证了 PIN 码。因此 PIN 码是非常重要的。如果你搬家了，或者邮件在邮寄途中出现问题，那么很可能会收不到谷歌的邮件。本文介绍如何更改 Adsense 的登记地址，重新让谷歌寄送新的 PIN 码邮件。\n更改 Adsense 登记地址 # 登录到 Adsense。\n点击 Payment 菜单，然后点击 Setting 部分的 Manage settings.\n找到 Name and address 项目，修改为新地址，然后点击 Save 即可。\n重新寄送 PIN 邮件 # 登录 Adsense，找到 PIN 验证的卡片，然后点击 Verify:\n点击 Resend PIN 按钮即可。\n如果谷歌寄送的上一封邮件被你拿到，那么用上一封邮件里面的 PIN 也是可以的，两封邮件里面的 PIN 是相同的。\n填写 PIN 码 # 前几次申请 PIN，每次都没有收到。 2019 年 12 月底，又申请了一次，谷歌 Adsense 上显示的是需要 2-4 周才能收到邮件，实际上等待的时间超过 4 周，大约经过了 6 周的时间，终于在 2020 年 2 月 6 日收到了谷歌寄来的 PIN 邮件。邮件外观如下\n如果没有理解错，这封邮件是从马来西亚邮寄过来的。打开以后里面就是 PIN 码，并且附有如何注册 PIN 码的步骤。\n参考 # Adsense 的一些问答 更改 Adsense 地址 如何要求重新寄送 PIN 码 如何注册 PIN ","date":"22 October 2019","externalUrl":null,"permalink":"/2019/10/22/adsense_change_address_resend_pin/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://jdhao.github.io/2019/09/22/google_adsense_hugo_config/#%E5%85%B6%E4%BB%96\" target=\"_blank\"\u003e之前的文章\u003c/a\u003e提到过，当 Adsense 帐号的收入达到 10 美元阈值的时候，谷歌会向你注册 Adsense 登记的地址发送一封邮件，里面有验证的 PIN 码，只有验证了 PIN 码，后续才能收到谷歌的付款。\u003c/p\u003e","title":"更改 Adsense 邮寄地址，重新寄送 PIN","type":"posts"},{"content":"","date":"16 October 2019","externalUrl":null,"permalink":"/tags/cygwin/","section":"Tags","summary":"","title":"Cygwin","type":"tags"},{"content":"In this post, I want to share some useful tips and configurations about mintty.\nShare mintty config between Cygwin and wsltty # Since both Cygwin and wsltty use mintty as its terminal emulator, it would be great if we could use a unified config file for mintty instead of having to configure separately on two locations. According to doc here, mintty provides such a feature: you need to put configuration in %APPDATA%\\mintty\\config so that mintty for Cygwin and wsltty can use the same config.\nQuickly switch to other mintty windows # Unlike iterm2 or other terminal emulator, mintty does not have a Tabbed window. However, mintty does provide a virtual tab feature. If you are using mintty 3.0.3 or above, you can switch between different mintty windows with several shortcuts:\nctrl + right-click ctrl + right-click in the window title bar ctrl + menu References # Virtual tabs. Virtual tab discussions. Open file, directory or links # Use ctrl+left-click to open a file, directory or URL (beginning with www).\nChange cursor when IME is on # The option IMECursorColour can be used to set the cursor color when IME is on. For example:\nIMECursorColour=255,0,0 this will set cursor color to red when IME is on.\nShow selection text size # The option SelectionShowSize can be used to show the size of selection. 0 disable this feature. A value of 1-12 shows the size of selected text in a position corresponding to the clock hours.\n","date":"16 October 2019","externalUrl":null,"permalink":"/2019/10/16/useful_mintty_tips_configs/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share some useful tips and configurations about \u003ca href=\"https://github.com/mintty/mintty\" target=\"_blank\"\u003emintty\u003c/a\u003e.\u003c/p\u003e","title":"Mintty Tips and Configurations","type":"posts"},{"content":" I have been using Vim plugin Tagbar for viewing and navigating tags inside my source file. However, for Markdown files, there is no support out of the box. In this post, I would like to share how to set up tagbar to show tags for Markdown.\nMarkdown set up # The tagbar wiki has instructions on setting up Markdown support. Using markdown2ctags is the best way among the three methods given. Unfortunately, it is not detailed enough and only works for Linux-like systems.\nThe original script has some issues when running it in Python 3 and with Markdown files containing Unicode characters. I have modified the original script and make it work in Python 3. You can find it here.\nLinux # For Linux, put the script to folder tools under Neovim config directory1. You have to give it execution right (this is very crucial but the author fails to say so):\nchmod u+x markdown2ctags.py Inside Nvim config, add the following settings:\n\u0026#34; Add support for markdown files in tagbar. if has(\u0026#39;win32\u0026#39;) let g:md_ctags_bin=fnamemodify(stdpath(\u0026#39;config\u0026#39;).\u0026#34;\\\\tools\\\\markdown2ctags.exe\u0026#34;, \u0026#34;:p\u0026#34;) else let g:md_ctags_bin=fnamemodify(stdpath(\u0026#39;config\u0026#39;).\u0026#34;/tools/markdown2ctags.py\u0026#34;, \u0026#34;:p\u0026#34;) endif let g:tagbar_type_markdown = { \\ \u0026#39;ctagstype\u0026#39;: \u0026#39;markdown.pandoc\u0026#39;, \\ \u0026#39;ctagsbin\u0026#39; : g:md_ctags_bin, \\ \u0026#39;ctagsargs\u0026#39; : \u0026#39;-f - --sort=yes\u0026#39;, \\ \u0026#39;kinds\u0026#39; : [ \\ \u0026#39;s:sections\u0026#39;, \\ \u0026#39;i:images\u0026#39; \\ ], \\ \u0026#39;sro\u0026#39; : \u0026#39;|\u0026#39;, \\ \u0026#39;kind2scope\u0026#39; : { \\ \u0026#39;s\u0026#39; : \u0026#39;section\u0026#39;, \\ }, \\ \u0026#39;sort\u0026#39;: 0, \\ } Windows # For Windows, you can not directly run a script without using python. We have to convert the Python script to a standalone executable, i.e., markdown2ctags.exe. We can use pyinstaller to convert the script to executable files:\npyinstaller --onefile --console markdown2ctags.py The above command will create the executable under the dist folder in the current working directory2. Then you should copy it to the tools folder under the Neovim config directory.\nAfter all these set up, you should be able to see the table of contents in tagbar windows after using TagbarOpen command.\nReferences # Tagbar doc. Markdown support for tagbar. Markdown2ctags repo. Use echo stdpath('config') command inside Nvim to show the config path.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor details on how to generate exe file from python script, see this post\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 October 2019","externalUrl":null,"permalink":"/2019/10/15/tagbar_markdown_setup/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20191015001602.png\"\u003e\n\u003c/p\u003e\n\u003cp\u003eI have been using Vim plugin Tagbar for viewing and navigating tags inside my\nsource file. However, for Markdown files, there is no support out of the box.\nIn this post, I would like to share how to set up tagbar to show tags for\nMarkdown.\u003c/p\u003e","title":"Generating Table of Contents for Markdown with Tagbar","type":"posts"},{"content":"","date":"15 October 2019","externalUrl":null,"permalink":"/tags/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"Introduction # I have a use case where I want to convert my Python script to standalone executable so that I do not need to type python before it to run the script. On Linux, it is easy to achieve with the help of shebang. However, on Windows, it does not work. Then I thought I might convert the script to Windows executable.\nWe can use pyinstaller to convert python script to Windows executable files. You can install it with pip:\npip install pyinstaller How to use pyinstaller # The most simple way to run pyinstaller is to invoke it without options:\npyinstaller my_script.py It will create a dist/my_script directory where the generated executable resides with other DLL files. This executable file can not run alone: it must rely on other DLL files.\nTo create a standalone executable, we can use --onefile option.\nTo build an executable which runs on command line and does not need a GUI windows, we can use the --console option.\nWe can then generate the executable with the following command:\npyinstaller --onefile --console my_script.py The generated executable will be dist/my_script.exe.\nReduce the size of executable # One problem is that the generated executable file is huge even if the script only contains a few lines of code.\nCreate a virtual environment # According to post here, to reduce the size of the produced executable, we can create a clean virtual environment where only packages required for our script are installed.\nIn my case, after building the executable inside a virtual env, I have reduced the executable size from more than 200Mb to only 6Mb!\nUsing UPX # An additional way to reduce executable size is to use UPX to compress files. You can download the UPX windows release file and extract it to a folder. When running the pyinstaller, you can use --upx-dir to include UPX support:\npyinstall --onefile --console --upx-dir=/path/to/upx-folder my_script.py In the above command, you only need to specify the path of the directory containing upx.exe.\nHowever, certain DLL files which is need by the executable should not be compressed by UPX. If they are compressed, you may encounter errors when you run the produced executable:\nError loading Python DLL \u0026#39;C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\_MEI45442\\python36.dll\u0026#39;. LoadLibrary: The parameter is incorrect. Those DLLs failing to load should not be compressed by UPX. You can add --upx-exclude option to pyinstaller when building the executable, and this options can be used multiple times to exclude several files. For example:\npyinstaller.exe --onefile --console --upx-dir=upx-3.95-win64\\upx-3.95-win64\\ --upx-exclude=python36.dll --upx-exclude=vcruntime140.dll my_script.py After that, the executable file can run without errors.\nReferences # Reduce executable size. How to use upx with pyinstaller. Error loading pythonxx.dll. ","date":"14 October 2019","externalUrl":null,"permalink":"/2019/10/14/python_script_to_exe/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eI have a use case where I want to convert my Python script to standalone\nexecutable so that I do not need to type \u003ccode\u003epython\u003c/code\u003e before it to run the script.\nOn Linux, it is easy to achieve with the help of\n\u003ca href=\"https://stackoverflow.com/questions/6908143/should-i-put-shebang-in-python-scripts-and-what-form-should-it-take\" target=\"_blank\"\u003eshebang\u003c/a\u003e.\nHowever, on Windows, it does not work. Then I thought I might convert the\nscript to Windows executable.\u003c/p\u003e","title":"Convert Python Script to Exe on Windows with Pyinstaller","type":"posts"},{"content":"I have been using Ubuntu on Windows via WSL for about a year and it works quite well.\nThe terminal I use for Ubuntu on Windows is wsltty, which is a thin wrapper around mintty and other tools for starting WSL sessions. Recently, when I start clicking the WSL Terminal icon, it start a Window and then quit silently.\nBy looking at the property of \u0026ldquo;WSL Terminal\u0026rdquo; icon, I find that the default command that wsltty uses to start the Ubuntu terminal is:\n%LOCALAPPDATA%\\wsltty\\bin\\mintty.exe --WSL= --configdir=\u0026#34;%APPDATA%\\wsltty\u0026#34; -~ In order to find possible error message, I did a little search. I find that we can add the -h always option to force the terminal window to stay open even if there are some error in the process. The whole command is:\n%LOCALAPPDATA%\\wsltty\\bin\\mintty.exe --WSL= --configdir=\u0026#34;%APPDATA%\\wsltty\u0026#34; -~ -h always The error message I saw is like the following:\nwslbridge error: failed to start backend process note: bash.exe output: Windows Subsystem for Linux has no installed distributions. Distributions can be installed by visiting the Microsoft Store: https://aka.ms/wslstore What?? I have apparently installed a WSL distribution. In order to confirm that, I find from here that the location for a WSL distribution is something like the following:\nC:\\Users\\%USERNAME%\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\ This is the directory where the root of the Ubuntu for Windows resides. I opened the similar folder on my Windows and found that the rootfs folder is indeed gone!\nFurther dig reveals that the culprit is the Windows update, which has wiped out my WSL distribution somehow.\nAfter knowing the causes, the solution is simple: just re-install a WSL distribution or just dump WSL and use Cygwin!\nReferences # Keep the wsltty window open even if there are erros. ","date":"11 October 2019","externalUrl":null,"permalink":"/2019/10/11/wsl_distro_deleted_after_windows_update/","section":"Posts","summary":"\u003cp\u003eI have been using Ubuntu on Windows via WSL for about a year and it works quite\nwell.\u003c/p\u003e\n\u003cp\u003eThe terminal I use for Ubuntu on Windows is\n\u003ca href=\"https://github.com/mintty/wsltty\" target=\"_blank\"\u003ewsltty\u003c/a\u003e, which is a thin wrapper around\n\u003ca href=\"https://github.com/mintty/mintty\" target=\"_blank\"\u003emintty\u003c/a\u003e and other tools for starting WSL\nsessions. Recently, when I start clicking the WSL Terminal icon, it start a\nWindow and then quit silently.\u003c/p\u003e","title":"Ubuntu on Windows Missing after Windows Update","type":"posts"},{"content":"","date":"11 October 2019","externalUrl":null,"permalink":"/tags/wsl/","section":"Tags","summary":"","title":"WSL","type":"tags"},{"content":"在 Mac 的终端 (terminal) 下载文件或者 clone git 仓库的时候，明显感觉速度特别慢，即使把梯子的全局模式打开也无济于事，需要在终端设置代理才能加快下载速度，本文简要总结需要的配置。\n在 Unix 终端，有三个和代理相关的环境变量，分别为 http_proxy, https_proxy 和all_proxy。粗略来说，http_proxy 和 https_proxy 分别用来设置 http 和 https连接的代理，all_proxy 设置所有连接的代理。\n对于 git clone，由于连接一般是 https 连接，可以设置 https_proxy 或者all_proxy 变量，设置 http_proxy 没有作用。\n一般来说代理可以是 http 代理，也可以是 socks5 代理，格式如下:\nexport https_proxy=127.0.0.1:1087 # http 代理 export https_proxy=\u0026#34;socks5://127.0.0.1:1087\u0026#34; # socks5 代理 我目前使用的 梯子，支持 socks5 协议，也支持 http 协议，打开 偏好设置 --\u0026gt; 高级 选项，可以看到socks5 协议的 ip 以及端口，在 http 选项卡，可以看到 http 代理的信息。\n设置好代理以后，可以使用 curl cip.cc 查看当前自己的 ip 信息，确认代理是否设置成功。\nReferences # https://askubuntu.com/questions/583797/how-to-set-a-proxy-for-terminal https://askubuntu.com/questions/24116/what-is-the-all-proxy-environment-variable-used-for 让终端走代理的几种方法 确定自己的 public ip mac 终端 proxy 设置 set up proxy in mac terminal ","date":"10 October 2019","externalUrl":null,"permalink":"/2019/10/10/mac_proxy_in_terminal/","section":"Posts","summary":"\u003cp\u003e在 Mac 的终端 (terminal) 下载文件或者 clone git 仓库的时候，明显感觉速度特别慢，即使把梯子的全局模式打开也无济于事，需要在终端设置代理才能加快下载速度，本文简要总结需要的配置。\u003c/p\u003e","title":"使用代理加速 Mac 终端下载速度","type":"posts"},{"content":"In this post, I share my experience and opinions on several popular Zsh plugin managers.\nzplug # I have written about zplug in this post. According to this gist, zplug is slow in loading plugins due to its poor design.\nMy feeling # It has a lot of features. The speed of installing plugins is acceptable but not so fast. Other than that, it is enough for daily usage.\nAntibody # Antibody is proposed to solve the performance issues with antigen. First, we need to install antibody:\ncurl -sfL git.io/antibody | sh -s - -b $HOME/local/bin The -b option specify where you want to install antibody. Antibody will be installed under $HOME/local/bin.\nHow to use # After installing antibody, a typical way to install plugins is like the following:\n# initialize antibody source \u0026lt; (antibody init) antibody bundle zsh-users/zsh-completions antibody bundle caarlos0/zsh-open-github-pr # use the oh-my-zsh plugins antibody bundle robbyrussell/oh-my-zsh path:plugins/aws antibody bundle zsh-users/zsh-syntax-highlighting Antibody can use plugins from the oh-my-zsh repo with the path annotations shown above.\nMy feeling # Antibody is fast in installing the plugins, but it seems that there is no hint or progress bar informing the user of the progress. It also has less feature compared to other plugin managers.\nRef:\nSupercharge your Terminal with Zsh zinit # Update-2020-07-28: Previously zinit is known as zplugin, but the author has decided to rename it to zinit. For more details, see here, here and here. zinit is also an advanced plugin manager with rich features. In fact, I was overwhelmed when I started using it. It is simple to install, just run the below command:\nsh -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)\u0026#34; How to use # To install normal plugins, zinit works like other plugin managers:\nzinit load softmoth/zsh-vim-mode zinit load zsh-users/zsh-autosuggestions zinit load zdharma/fast-syntax-highlighting zinit also has the so-called ice modifiers, which are used to modify the behaviour of the plugin installation command below. For example, to install the pure theme, we can use the following command:\nzinit ice pick\u0026#34;async.zsh\u0026#34; src\u0026#34;pure.zsh\u0026#34; zinit light sindresorhus/pure It means that we will first source async.zsh under the repo and then source pure.zsh.\nInstall oh-my-zsh plugins # To install oh-my-zsh plugins, we need to use zinit snippet command. Oh-my-zsh plugins start with the OMZ:: prefix. Below I show how to install single-files OMZ plugin and multiple-file OMZ plugins.\n# Install a OMZ plugin with multiple files zinit ice svn lucid zinit snippet OMZ::plugins/pip # Install a OMZ plugin with single file zinit ice wait lucid zinit snippet OMZ::plugins/fzf/fzf.plugin.zsh My feeling # zinit has so many ice modifiers and so many features that new users may find it hard to understand all of this. It also has a lot of commands that I do not understand. In summary, it has steeper learning curves compared to other plugin managers.\nReferences # zinit wiki. Load oh-my-zsh plugin from a folder. Comparison of different zsh plugin managers. ","date":"8 October 2019","externalUrl":null,"permalink":"/2019/10/08/zsh_plugin_managers_compare/","section":"Posts","summary":"\u003cp\u003eIn this post, I share my experience and opinions on several popular Zsh plugin\nmanagers.\u003c/p\u003e","title":"My Experience with Several Zsh Plugin Managers","type":"posts"},{"content":"作为深漂，大概每个人都要为租房费一番功夫。\n18 年来深圳之前，其实已经事先查了租房的事情，大致了解了深圳租房的行情。可以租到的房子，主要有小区房和农民房：小区房租金通常比农民房贵，但是卫生状况，采光，通风以及安静程度都比农民房要好;农民房的主要优点则是价格便宜，缺点是其它条件比小区房要差，而且有的房东不讲信用，随意涨价，还有各种租房的坑。为了省心，也为了节省时间，最后就决定租小区里面的房子了。\n租房的途径，粗略来分，就两种，一种是通过中介，例如链家，贝壳找房，自如，蛋壳公寓等等；另外一种途径就是直接找房东，可以去自己意向地点附近的小区，找小区的保安或者在小区附近公告栏看有没有房东贴的招租信息，或者直接在豆瓣或者 58 同城，论坛等地方找房东留下的信息。通过中介找房的优点是省心，可以很快定位到哪里有可以租的房间，中介也会带你去看房，中介在成交之后会收取中介费1，但是收了中介费以后也没服务，中介费类似于介绍费。自如和蛋壳比较类似，都是从房东手里收到房源，经过装修改造，把房子配置成标准的风格，配备上家具、家电(包括但不限于冰箱，洗衣机，微波炉，燃气灶，桌子)。除了租金之外，他们都会额外收取每月房租的一定比例作为服务费，每家比例不同，服务费包含了保洁，物业，维修等费用，按照一年来算，比链家的中介费高不少，不过可以接受，每个月两千多的租金，算下来一年服务费大概也是两千多。\n18 年的时候，由于公司培训最后的几周都在东莞，只有周末可以找房，时间紧张，就在贝壳找房上面，约了链家的中介，和培训时候住一个房间的舍友在景田附近租了小区的房子。小区在城中村附近，楼下就有四五个超市，买菜，买水果都很方便。不过租的房子没有保洁，公共区域的卫生没有人维护，特别是卫生间和厨房，到了后面变得很脏，卫生间我偶尔会打扫一次，厨房到了后面由于不常打扫，滋生了很多蟑螂，我就不再做饭了。景田的房子面积很小，大概只有十平米，除了一张床，一个衣柜，剩下的面积就小的可怜。当时房间里也没有配置电脑桌，我从网上买了一个电脑桌。房子租金 2300，再加上每月的水电、燃气、物业等费用，差不多每个月 2500。景田的房子离公司很近，走路加坐地铁大约 20 分钟就可以到公司。\n过了一年，到了换房的时候，我们的房子 8 月 24 号到期。平时上班没有时间去看房，只能周末去看，所以八月初就开始找房子，八月初的第一周跟着自如的一个管家看了半天的房子，觉得好像可选的房源还挺多的，第二周就没去看了，到了第三周，也就是景田的房子快要到期的前一周，才觉得时间有点紧张，那一周了解了一下蛋壳公寓的房子，觉得也不错。周日我又去看了一些房间，看中了罗湖怡景地铁站附近的一个房间。本来想再等几天2，不过好的房间出手的速度很快，我也担心满意的房间过几天被预定，最后还是在第二天就预定了。然后 23 号周五晚上下班以后，联系了货拉拉，紧张地完成了搬家。新地方在四楼，没有电梯，我没有找搬家公司，搬东西也费了一些功夫，没有电梯的房间楼层最好不要选太高，要不然东西多的话，搬家是个问题。\n现在住的地方离公司距离比较远，从出发到到达公司差不多要 50 分钟，期间需要坐三条地铁，转两次线，比较麻烦，另外 7 号线早上人总是很多，需要排队等车。距离远的唯一好处是我开始有时间在地铁上看书了，这一两个月在看《The Making of the Atomic Bomb》，每天在上下班地铁上看一点，现在已看了不少的章节，希望能在这个月看完它吧。\n例如链家，收取房租的一半作为中介费\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n蛋壳是从你交定金就开始计算房租的，多租一周就会多差不多 500 的费用\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 October 2019","externalUrl":null,"permalink":"/2019/10/02/shenzhen_house_rent/","section":"Posts","summary":"\u003cp\u003e作为深漂，大概每个人都要为租房费一番功夫。\u003c/p\u003e","title":"深圳租房小记","type":"posts"},{"content":"In the past few days, I tried to dockerize my development environment and put my daily programming tools inside container. I tried to install zplug inside docker container and met some issues. In this post, I want to share how to install zplug and other plugins inside the Docker container.\nFollowing the recommended way in the zplug git repo, I use the instruction below to install zplug:\nRUN curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh Unfortunately, the build fails and gives the following error message:\nThe command \u0026lsquo;/bin/sh -c curl -sL \u0026ndash;proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh\u0026rsquo; returned a non-zero code: 1\nAfter some searching, I find that this issue is caused by the Unicode characters that zplug uses in its message. In order to deal with this, we need to set up a locale in UTF-8 format (see here for details):\nRUN apt-get install -y locales \u0026amp;\u0026amp; locale-gen en_US.UTF-8 ENV LC_ALL en_US.UTF-8 Another issue is that I get an error when I use the following instruction to install plugins:\nRUN zplug install The error message is that:\nzplug: command not found The command zplug install works in a normal terminal, but fails to work when we are building a docker image. I change the instruction to\nRUN [\u0026#34;zsh\u0026#34;, \u0026#34;-ic\u0026#34;, \u0026#34;zplug install\u0026#34;] based on discussions here and I can run the command without errors.\nUnfortunately, another error occurs when zplug tries to install plugins. The errors look like this:\n✘ Unknown error lukechilds/zsh-nvm ✘ Unknown error zsh-users/zsh-completions ✘ Unknown error junegunn/fzf-bin According to discussions here, it is caused by the missing package gawk. We need to install the gawk package before running the zplug install command:\nRUN apt-get install gawk RUN [\u0026#34;zsh\u0026#34;, \u0026#34;-ic\u0026#34;, \u0026#34;zplug install\u0026#34;] After solving all these issues, I can install zplug and other plugins successfully inside the docker container.\n","date":"1 October 2019","externalUrl":null,"permalink":"/2019/10/01/zplug_install_docker_container/","section":"Posts","summary":"\u003cp\u003eIn the past few days, I tried to dockerize my development environment and put\nmy daily programming tools inside\n\u003ca href=\"https://www.docker.com/resources/what-container\" target=\"_blank\"\u003econtainer\u003c/a\u003e. I tried to\ninstall zplug inside docker container and met some issues. In this post, I want\nto share how to install \u003ca href=\"https://github.com/zplug/zplug\" target=\"_blank\"\u003ezplug\u003c/a\u003e and other\nplugins inside the Docker container.\u003c/p\u003e","title":"How to Install zplug inside Docker Container","type":"posts"},{"content":"In this post, I would like to share causes and solutions to a few issues related to login shell.\nHow to change default shell to Bash # When I logged into a new server, I found that somehow my default shell (echo $SHELL) is /bin/sh instead of /bin/bash. We can change the default shell with chsh command like this:\nchsh -s /bin/bash Make sure that the shell you want to switch are set in /etc/shells. Otherwise you will fail.\nSettings in bashrc or bash_profile do not take effect after login # Another issue is that when I sshed to the server, I found that only settings inside .bash_profile is sourced. Settings inside .bashrc didn\u0026rsquo;t take effect. Before we delve into this problem, we first need to understand the basic concept of a login shell and an interactive shell.\nLogin and interactive shell # login shell # A login shell is usually the shell when the user first log in to the system. If the user start another shell or use bash inside the current shell, then the user will probably start a non-login shell1. To check whether the bash shell is a login shell, use the following command:\n# only works for bash shopt -q login_shell \u0026amp;\u0026amp; echo \u0026#39;Login shell\u0026#39; || echo \u0026#39;Not login shell\u0026#39; Interactive shell # Roughly speaking, an interactive shell is a shell that the user can interact with via the terminal, i.e., typing a command, sending it to the shell and getting output. If you run a script test.sh inside the shell by using bash test.sh, what actually happens is that a non-interactive bash shell is started to execute the commands inside test.sh. Now, you get a sense of what interactive means. To check if a bash shell is interactive, you can see if i is present in the variable $-:\necho $- # output may be: himBHs Different types of shell # According to the above statements, we now have four different types of a shell:\ninteractive login shell interactive non-login shell non-interactive login shell non-interactive non-login shell In the following table, I show how you can get these shells:\ninteractive non-interactive login when you log into a server normally ssh xxx@ip \u0026lt; test.sh non-login start a new bash shell inside the login shell when you execute script inside the login shell Non-interactive login shell is extremely rare. You can start one when you run a local script via ssh on remote.:\nssh xxx@ip \u0026lt; test.sh To verify that we have started a non-interactive login shell, put the following the command inside test.sh:\necho $- shopt -q login_shell \u0026amp;\u0026amp; echo \u0026#39;Login shell\u0026#39; || echo \u0026#39;Not login shell\u0026#39; The output of remote server will be:\nhBs Login shell Why isn\u0026rsquo;t .bashrc sourced? # After looking up the bash manual, the section on startup file explains this behaviour:\nWhen Bash is invoked as an interactive login shell, or as a non-interactive shell with the –login option, it first reads and executes commands from the file /etc/profile, if that file exists. After reading that file, it looks for ~/.bash_profile, ~/.bash_login, and ~/.profile, in that order, and reads and executes commands from the first one that exists and is readable. The –noprofile option may be used when the shell is started to inhibit this behavior.\nAccording to the above description, when you log into the server (bash is interactive login shell), bash will first source /etc/profile, then it will source ~/.bash_profile, ~/.bash_login and ~/.profile in the order given. The first one that exists and is readable is sourced. So ~/.bashrc is not sourced during the login process.\nIf you need to source .bashrc during login process, you can add the following setting to .bash_profile:\nif [[ -f \u0026#34;$HOME/.bashrc\u0026#34; ]]; then source $HOME/.bashrc fi Why isn\u0026rsquo;t .bash_profile sourced? # Another strange case I met with a new server is that ~/.bash_profile is not executed during login. A little background here: for this destination server, I need to log into a jump server, and choose the destination server. All users are initially logged in to the destination server with the same user name. Then each user will have to switch to his/her own account via su command: su REAL_USERNAME.\nThat is cause of the problem. The shell started by mere su REAL_USERNAME is an interactive non-login shell. The bash manual also says that:\nWhen an interactive shell that is not a login shell is started, Bash reads and executes commands from ~/.bashrc, if that file exists. This may be inhibited by using the –norc option. The –rcfile file option will force Bash to read and execute commands from file instead of ~/.bashrc.\nIt means that only settings inside $HOME/.bashrc is sourced. The solution to this issue is simple: invoke su command with - or -l option to tell Bash that we want a login shell instead of a non-login shell.\nWhat gets sourced when we run a non-interactive non-login shell? # The Bash manual says that for a non-interactive shell, it has the following behavior:\nWhen bash is started non-interactively, to run a shell script, for example, it looks for the variable BASH_ENV in the environment, expands its value if it appears there, and uses the expanded value as the name of a file to read and execute. Bash behaves as if the following command were executed: if [ -n \u0026#34;$BASH_ENV\u0026#34; ]; then . \u0026#34;$BASH_ENV\u0026#34;; fi but the value of the PATH variable is not used to search for the filename. So only the file represented by BASH_ENV is sourced when a non-interactive shell is started.\nReferences # This post has good graph on what is sourced during bash startup. Bashrc isn’t always run when I log in. Change shell in Ubuntu. How to get non-interactive login shell. How to check if a shell’s type: login or interactive. Difference between login, non-login, interactive and non-interactive shells. Zsh doc on login and interactive shells. Difference between bashrc and bash_profile. That is not always true. For example, for macOS, new terminal started by Terminal.app is actually a login shell, see here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"29 September 2019","externalUrl":null,"permalink":"/2019/09/29/linux_login_setup/","section":"Posts","summary":"\u003cp\u003eIn this post, I would like to share causes and solutions to a few issues\nrelated to login shell.\u003c/p\u003e","title":"Why don't settings inside bashrc or bash_profile take effect?","type":"posts"},{"content":"","date":"27 September 2019","externalUrl":null,"permalink":"/tags/centos/","section":"Tags","summary":"","title":"CentOS","type":"tags"},{"content":"","date":"27 September 2019","externalUrl":null,"permalink":"/tags/locale/","section":"Tags","summary":"","title":"Locale","type":"tags"},{"content":"Introduction # When I logged into a Ubuntu server, the system interface and messages are all shown in Chinese. I want them to be displayed in English. After some searching, I found out that we can change the locale settings.\nThe definition of locale is:\nIn computing, a locale is a set of parameters \u0026ldquo;Parameter\u0026rdquo;) that defines the user\u0026rsquo;s language, region and any special variant preferences that the user wants to see in their user interface\nSet up locale for normal Linux system # In Linux systems, there are several environment variables related to the locale settings, such as LANG, LC_COLLATE, LC_TIME, LC_ALL etc. A valid locale is like en_US.UTF-8. You can check this documentation on how locale is formed.\nTo see your default settings, use the locale command without any option. The output looks like:\nLANG=en_US.UTF-8 LANGUAGE=zh_CN:zh LC_CTYPE=\u0026#34;en_US.UTF-8\u0026#34; LC_NUMERIC=\u0026#34;en_US.UTF-8\u0026#34; LC_TIME=\u0026#34;en_US.UTF-8\u0026#34; LC_COLLATE=\u0026#34;en_US.UTF-8\u0026#34; LC_MONETARY=\u0026#34;en_US.UTF-8\u0026#34; LC_MESSAGES=\u0026#34;en_US.UTF-8\u0026#34; LC_PAPER=\u0026#34;en_US.UTF-8\u0026#34; LC_NAME=\u0026#34;en_US.UTF-8\u0026#34; LC_ADDRESS=\u0026#34;en_US.UTF-8\u0026#34; LC_TELEPHONE=\u0026#34;en_US.UTF-8\u0026#34; LC_MEASUREMENT=\u0026#34;en_US.UTF-8\u0026#34; LC_IDENTIFICATION=\u0026#34;en_US.UTF-8\u0026#34; LC_ALL= These settings are often pre-set by the system root. On CentOS, the system-wide default locale settings are stored in /ect/locale.conf. On Ubuntu, the system locale settings are store in /etc/default/locale.\nAmong the locale env variables, LC_xxx variables except LC_ALL are ordinary environment variables that can be set individually.\nSpecial variables are LANG, LANGUAGE and LC_ALL. Their priority are listed here:\nLANGUAGE LC_ALL LC_xxx, according to selected locale category: LC_CTYPE, LC_NUMERIC, LC_TIME, LC_COLLATE, LC_MONETARY, LC_MESSAGES, \u0026hellip; LANG LANG is a special variable that will set the LC_* variable if it is not set. LC_ALL will set all other LC_XXX variables to the same value. Usually, you do not need to set up LC_ALL in your bash_profile. LANGUAGE is a variable used for message handling, which has a higher priority than LC_ALL, LC_xxx and LANG for messages (see the link [here](https: //www.gnu.org/software/gettext/manual/html_node/The-LANGUAGE-variable.html#The-LANGUAGE-variable)) . To verify this, suppose that we have the following settings inside .bash_profile:\nexport LANG=en_US.utf8 export LANGUAGE=zh_CN.utf8 After sourcing the file, you will find that the messages given for command output will be in Chinese (i.e., LANG is overridden.)\nSet up locale for docker container # Ubuntu docker # I try to build a Ubuntu docker image. I want to set my locale to en_US.UTF-8 inside the container by simply adding the following ENV instruction:\nENV LC_ALL=en_US.UTF-8 When I run the built image, I get the following warning:\nbash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8)\nThe locale command inside container gives the following message:\nInfo locale: Cannot set LC_CTYPE to default locale: No such file or directory locale: Cannot set LC_MESSAGES to default locale: No such file or directory locale: Cannot set LC_ALL to default locale: No such file or directory LANG= LANGUAGE= LC_CTYPE=\u0026quot;en_US.UTF-8\u0026quot; LC_NUMERIC=\u0026quot;en_US.UTF-8\u0026quot; LC_TIME=\u0026quot;en_US.UTF-8\u0026quot; LC_COLLATE=\u0026quot;en_US.UTF-8\u0026quot; LC_MONETARY=\u0026quot;en_US.UTF-8\u0026quot; LC_MESSAGES=\u0026quot;en_US.UTF-8\u0026quot; LC_PAPER=\u0026quot;en_US.UTF-8\u0026quot; LC_NAME=\u0026quot;en_US.UTF-8\u0026quot; LC_ADDRESS=\u0026quot;en_US.UTF-8\u0026quot; LC_TELEPHONE=\u0026quot;en_US.UTF-8\u0026quot; LC_MEASUREMENT=\u0026quot;en_US.UTF-8\u0026quot; LC_IDENTIFICATION=\u0026quot;en_US.UTF-8\u0026quot; LC_ALL=en_US.UTF-8 It seems that the locale file en_US.UTF-8 does not exist inside container. After some searching, I found the correct way to set up locales inside the Ubuntu container. First, we need to install the locales package, which provides the locale-gen command:\nRUN apt-get update \u0026amp;\u0026amp; apt-get install -y locales After installing the locales packages, a file named local.gen will be created under /etc. According to the documentation of locale-gen:\nlocale-gen is a program that reads the file /etc/locale.gen and invokes localedef for the chosen localisation profiles. Run locale-gen after you have modified the /etc/locale.gen file.\nWe should uncomment the line # en_US.UTF-8 UTF-8 in locale.gen and run locale-gen command to generate the needed locale file. After that we can set related settings to en_US.UTF-8:\nRUN sed -i -e \u0026#39;s/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/\u0026#39; /etc/locale.gen \u0026amp;\u0026amp; \\ locale-gen ENV LC_ALL en_US.UTF-8 We can also directly generate the locale file by appending the locale as the argument to locale-gen:\nRUN locale-gen en_US.UTF-8 Putting this all together, we may use the following instructions inside Dockerfile:\nRUN apt-get update \u0026amp;\u0026amp; apt-get install -y locales \u0026amp;\u0026amp; locale-gen en_US.UTF-8 CentOS docker # If you tried to build an image based on a CentOS image. You need to use localedef to generate locale files instead of locale-gen:\n# -i: specify the locale definition file # -f: specify the character set RUN localedef -i en_US -f UTF-8 en_US.UTF-8 Other settings are similar to that of Ubuntu.\nReferences # Change locale in CentOS 7 https://help.ubuntu.com/community/Locale The meaning of LANGUAGE variable Set up locale inside Ubuntu docker. Set up locale in Debian and Ubuntu. CentOS: set up locale. ","date":"27 September 2019","externalUrl":null,"permalink":"/2019/09/27/linux_locale_settings/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eWhen I logged into a Ubuntu server, the system interface and messages are all\nshown in Chinese. I want them to be displayed in English. After some searching,\nI found out that we can change the \u003ca href=\"https://en.wikipedia.org/wiki/Locale_%28computer_software%29\" target=\"_blank\"\u003elocale\u003c/a\u003e settings.\u003c/p\u003e","title":"Setting Up Locale in Linux","type":"posts"},{"content":" 我的博客目前利用 GitHub pages 服务托管，不需要付费，但是博客的图床选用了腾讯云的对象存储，每个月还需要付一笔流量费用。为了保持收支平衡，也为了好玩，决定申请谷歌的 Adsense 一试。本文记录申请 Adsense 以及在 Hugo 博客中配置 Adsense 的过程。\nAdsense 申请 # Adsense 对申请者的网站有一定要求，并不是所有网站申请都能通过，谷歌内部有一套算法来确定网站是否满足条件。所以，要申请 Adsense，博客的文章数量以及博客的访问量要达到一定的标准，如果刚建立的博客，基本上不可能通过。\n我在 2017 年的时候申请过一次 Adsense，不过那时候博客的博文太少了，申请没多久，就收到了谷歌的通知：博客不符合 Adsense 开通条件。今年 (2019 年)，博客的文章已经超过 100 篇，我又申请了一次。Adsense 的网站说审核一般会花费 3 天左右的时间，但是我的申请审核显然长了很多，每次登录上去查看进展，都是正在审核，至少过了一周的时间，才成功审核通过。\n在 Hugo 中配置 Adsense # Hugo 有很多主题，每个主题配置 Adsense 的方式可能不太一样，我的博客目前使用的是Even 主题。下面介绍如何在 Even 主题中加入 Adsense 配置。\nAdsense 申请成功以后，会有一段广告代码，类似下面这种：\n\u0026lt;script async src=\u0026#34;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; (adsbygoogle = window.adsbygoogle || []).push({ google_ad_client: \u0026#34;ca-pub-6058871559165202\u0026#34;, enable_page_level_ads: true }); \u0026lt;/script\u0026gt; 上述代码中的一串数字谷歌分配的 publisher ID，需要改成自己的 ID。把这段代码放到 Even 主题目录下的 layouts/partials/head.html 文件里面，然后重新部署。\n另外，我们需要创建 ads.txt 文件，文件的内容如下：\ngoogle.com, pub-6058871559165202, DIRECT, f08c47fec0942fa0 注意 pub- 后面要改成自己的 publisher ID。这个文件需要放在博客的根域名下面，如果使用的 Hugo，那么放到 Hugo 博客根目录下的 public 目录里即可。\n目前谷歌 Adsense 支持设置自动广告：用户不需要自己设定在哪里放广告，Adsense 可以感知你的页面结构，然后自动在合适位置放置广告。刚使用 Adsense 的时候，广告展示可能会没有，或者比较少，到后面逐渐会多起来，可能是Adsense 的策略原因。\n其他 # Adsense 收入达到 10 美元的时候，谷歌会向你邮寄一个verification PIN，你需要在 Adsense 上验证 verification PIN。Adsense 收入达到 100 美元才可以提现。\n参考 # https://www.qikqiak.com/post/add-adsense-in-hugo-article/ https://blog.xu42.com/2018/09/01/google-adsense/ Ads.txt 介绍. 如何找到自己的 Adsense publisher ID. ","date":"22 September 2019","externalUrl":null,"permalink":"/2019/09/22/google_adsense_hugo_config/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/GA-L.jpg\", width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003e我的博客目前利用 GitHub pages 服务托管，不需要付费，但是博客的图床选用了腾讯云的对象存储，每个月还需要付一笔流量费用。为了保持收支平衡，也为了好玩，决定申请谷歌的 Adsense 一试。本文记录申请 Adsense 以及在 Hugo 博客中配置 Adsense 的过程。\u003c/p\u003e","title":"谷歌 Adsense 申请及在 Hugo 中的配置","type":"posts"},{"content":"","date":"21 September 2019","externalUrl":null,"permalink":"/tags/algorithms/","section":"Tags","summary":"","title":"Algorithms","type":"tags"},{"content":" In this post, I want to summarize what I have learned about creating algorithmic pseudo code in LaTeX.\nIn LaTeX, there are several packages which can help you to write pseudo code, notably algorithmicx and algorithm2e. It seems that algorithm2e is more actively maintained1. I decided to give algorithm2e a try. The end result is shown in the title image. The code to create the title image is:\nClick to see the code. \\documentclass{article} \\usepackage[ruled, lined, linesnumbered, commentsnumbered, longend]{algorithm2e} \\usepackage{xcolor} \\begin{document} \\newcommand\\mycommfont[1]{\\small\\ttfamily\\textcolor{blue}{#1}} \\SetCommentSty{mycommfont} \\begin{algorithm} \\SetKwFunction{isOddNumber}{isOddNumber} % \\SetKwInput{Input}{Input} % \\SetKwInput{Output}{Output} \\SetKwInOut{KwIn}{Input} \\SetKwInOut{KwOut}{Output} \\KwIn{A list $[a_i]$, $i=1, 2, \\cdots, n$, where each element is an integer.} \\KwOut{Processed list.} $newList = [\\ ]$ \\tcc{For odd elements in the list, we add 1, and for even elements, we add 2. After the loop, all elements are even.} \\For{$i \\leftarrow 0$ \\KwTo $n-1$}{ \\eIf{$\\isOddNumber(a_i)$}{ $newList.append(a_i + 1)$ \\tcp*[f]{Some thought-provoking comment.} }{ \\tcp{Another comment} $newList.append(a_i + 2)$ } } \\KwRet{$newList$} \\caption{A plain algorithm} \\end{algorithm} \\end{document} Now I am going to explain the code in detail.\nControlling the algorithm style # There are certain options for the algorithm2e package which control the algorithm style. They can be specified when you import the package:\n\\usepackage[ruled, lined, linesnumbered, commentsnumbered, longend]{algorithm2e} The meaning of these options are list below:\nruled: display algorithm like three-line table. lined: display indentation line so that you can clearly see the indentation level. linenumbered: number the statement line. commentnumbered: number the comment line. longend: used end for to end for loop and use end if to end if condition. Keyword input, output and function # Define keyword input and output # First we need to specify the input and output of the algorithm. algorithm2e provides \\KwIn and \\KwOut command for input and output respectively:\n\\KwIn{A list $[a_i]$, $i=1, 2, \\cdots, n$, where each element is an integer.} \\KwOut{Processed list.} These keyword parameters are not aligned in its : symbol. If you prefer an aligned keyword, you need to define the input and output keyword yourself like the following code:\n\\SetKwInOut{KwIn}{Input} \\SetKwInOut{KwOut}{Output} \\KwIn{A list $[a_i]$, $i=1, 2, \\cdots, n$, where each element is an integer.} \\KwOut{Processed list.} In the above code, we redefine the \\KwIn and \\KwOut command with \\SetKwInOut. \\SetKwInOut will make sure that the defined keyword command will algin at the : character.\nDefine keyword function # You can define a keyword function via \\SetKwFunction{COMMAND}{TEXT} command.\nCOMMAND is used to define the keyword function command, and TEXT is the text that will be shown when you invoke the command, for example:\n\\SetKwFunction{isOddNumber}{isOddNumber} Then you can invoke the command via \\isOddNumber.\nComment # By default, the comment used by algorithm2e has its default style (font size, character color, etc.). If you are not satisfied with comment style, you can change it via \\SetCommentSty{} command. For example, the following code, we change the comment font size, font style and color:\n\\usepackage{xcolor} \\newcommand\\mycommfont[1]{\\small\\ttfamily\\textcolor{blue}{#1}} \\SetCommentSty{mycommfont} Algorithm2e provides \\tcc and \\tcp command to create multi-line and single line C-style comments respectively.\nFor example, you can use \\tcc to create a multi-line comment:\n\\tcc{For odd elments in the list, we add 1, and for even elments, we add 2. After the loop, all elements are even.} The created comment looks like:\nYou can use \\tcp to create single line comment. You can put \\tcp{} command on a separate line to the statement you want to comment:\n\\tcp{Another comment} $newList.append(a_i + 2)$ The produced comment is like:\nWhen you want to put \\tcp in the same line with the statement, there is also a stared version \\tcp*[OPTION] {} with options. The options is used to change the comment style slightly. For example, the following code:\n$newList.append(a_i + 1)$ \\tcp*[f]{Some thought-provoking comment.} will create inline comment shown below.\nReferences # Create pseudo code in LaTeX. How to un-align keyword commands. Remove end in if block. More discussions about different packages to produce pseudo in LaTeX can be found here and here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 September 2019","externalUrl":null,"permalink":"/2019/09/21/latex_algorithm_pseudo_code/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190921212617.png\"\u003e\n\u003c/p\u003e\n\u003cp\u003eIn this post, I want to summarize what I have learned about creating\nalgorithmic pseudo code in LaTeX.\u003c/p\u003e","title":"How to Write Algorithm Pseudo Code in LaTeX","type":"posts"},{"content":"This is the 4th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ Check if a string contains a pattern? # There are two simple ways:\nUse match(str, pattern) Use =~# or =~? For match() function, Vim assumes that magic (see :h /magic) option is set for patterns. If pattern is found in str, it will return the index where the pattern starts. Otherwise, it will return -1.\nYou can also use regex match via =~# and =~? (see :h expr4). =~# matches cases during matching, while =~? ignores cases. During matching, it is always assumed that magic option is set.\nReferences # How to check if a string matches a pattern in vim When should I capitalize the function names? # For custom global functions, i.e., functions without the s: (see local-function), the function name must start with an uppercase letter. But for script local functions and auto-loaded functions (see :h autoload), you do not need to start the actual function name with uppercase letter.\nReferences # Do VimScript functions have to start with a capital letter and if so, why? vim functions with script scope How to represent ALT key in mapping? M or A ？ # According to documentation (:h key-notation), \u0026lt;M-...\u0026gt; and \u0026lt;A-...\u0026gt; are the same. Both can be used to refer to Alt key.\nHow to check the actual key press that Nvim receives when I press a key? # Sometimes, due to various reasons, when you press some key, what Nvim receives is not that key press. To check the key that Nvim actually receives, press Ctrl-V in insert mode and then press the key you want to check.\nReferences # https://superuser.com/a/235520/736190 How to repeat some character N times？ # If you are in normal mode, use \u0026lt;NUM\u0026gt;a\u0026lt;Chars\u0026gt;\u0026lt;ESC\u0026gt; to input \u0026lt;NUM\u0026gt; repeated \u0026lt;Chars\u0026gt;.\nReferences # Repeating characters in VIM insert mode How do I execute a normal mode command in insert mode? # Ctrl-O is used to leave insert mode, execute one normal mode command and go back to insert mode. For example, if you want to see your runtimepath value, you can first press ctrl-o and then use :echo \u0026amp;runtimepath to see the option\u0026rsquo;s value.\nWrap selection with quotes or other characters # Install vim-surround. Go to visual block mode (press v in normal mode), select text you want to wrap, press S, and press the wrapping characters such ' or \u0026quot; or {.\nIf you want to indent the code and as well as wrap it, then you need to go to visual line mode (press V in normal mode)\nReferences # https://superuser.com/questions/875095/adding-parenthesis-around-highlighted-text-in-vim https://github.com/tpope/vim-surround/blob/master/doc/surround.txt Rename multiple occurrences of a variable # First, search the variable you want to rename. Then press cgn to change it. Go back to normal mode, press . (dot), the next match will be replaced with the new name. If you want to skip some match, press n.\nIt is not as powerful as the Sublime Text multiple cursor feature, but should suffice for refactoring your code most of the time.\nReference # How to selectively change a hightlighted string? Search Unicode characters using its code point # For example, if we would like to search a (Unicode code point is u+0041) in Neovim, the correct format is /\\%u0041, see :h /character-classes for more info.\nReferences # regex unicode character in vim ","date":"17 September 2019","externalUrl":null,"permalink":"/2019/09/17/nifty_nvim_techniques_s4/","section":"Posts","summary":"\u003cp\u003eThis is the 4th post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim Techniques That Make My Life Easier -- Series 4","type":"posts"},{"content":"A few grammar-related questions in writing scientific papers.\n\u0026ldquo;As shown\u0026rdquo; or \u0026ldquo;As is shown\u0026rdquo;? # When we refer to figures in a paper, we should use as shown instead of as is shown. Is in this case is superfluous. Similar usages include as discussed..., as pointed out... etc.\nReferences # https://ell.stackexchange.com/questions/102045/may-i-drop-is-in-constructions-like-as-is-shown-by-the-example-of \u0026ldquo;unless otherwise stated\u0026rdquo; or \u0026ldquo;unless stated otherwise\u0026rdquo;? # Both the two forms are correct and mean the same thing. From the Goolge ngram website, it seems that unless otherwise stated is much more popular than unless stated otherwise.\nReferences # https://english.stackexchange.com/questions/37033/unless-stated-otherwise-or-unless-otherwise-stated When to use comma before a conjunction (\u0026ldquo;and\u0026rdquo;, \u0026ldquo;or\u0026rdquo;, \u0026ldquo;but\u0026rdquo;)? # There are three typical uses of conjunctions:\nTo connect two independent clause. A comma should always be used before conjunctions. The rain stopped, and the sun came out. I like to watch movies, but he likes to read novels. To connect two dependent clause. A comma should not be used. He is a healthy and happy boy. To connect three or more items or clauses. A comma is optional. I have travelled to China, Japan, and Thailand in Asia. Should I go to swimming, play basketball, or watch TV? References # https://english.stackexchange.com/questions/30516/should-i-use-a-comma-before-and-or-or \u0026ldquo;if\u0026rdquo; or \u0026ldquo;whether\u0026rdquo;? # If is used to express a condition, while whether is used to give two choices. For example:\nI do not know if the exam will take place in Saturday or Sundary. I do not know whether the exam will take place in Saturday or Sunday. The two sentences above have subtle differences. The first sentence means that the exam may take place in Saturday or Sunday, but it may also take place in other date. The second sentence means that the exam will take place either in Saturday or Sunday. There is only two choices.\nYou should also note that whether should be used after a preposition. For example:\nWe should depend our decision on whether he will come or not. References # https://www.youtube.com/watch?v=Klnroe1UBRs \u0026ldquo;cannot\u0026rdquo; or \u0026ldquo;can not\u0026rdquo; # According to discussion here, cannot is a modern way of writing can not. Technically, there is no difference between them. In practice, cannot is used far more frequently than can not.\n","date":"17 September 2019","externalUrl":null,"permalink":"/2019/09/17/writing_grammar_s1/","section":"Posts","summary":"\u003cp\u003eA few grammar-related questions in writing scientific papers.\u003c/p\u003e","title":"A Few Grammar Questions in Writing","type":"posts"},{"content":"The other day, when I was using OpenCV to read some images and print the image shape, I got an error:\n\u0026lsquo;NoneType\u0026rsquo; object has no attribute \u0026lsquo;shape\u0026rsquo;.\nI was confused and do not know why since the image path is valid. It tooks me a while to understand the cause.\nThe reason is that OpenCV only accepts ASCII characters for image paths when reading and writing images. There is an open PR to add Unicode path support, but it has not been merged. However, there are ways to work around this issue.\nRead images with unicode paths # First, we can read the image with the help of Numpy fromfile() method, and then use cv2.imdecode() to read the image. Here is a sample code:\nimport numpy as np import cv2 # img with unicode path im_path = \u0026#34;测试目录/test.jpg\u0026#34; # img is in BGR format if the underlying image is a color image img = cv2.imdecode(np.fromfile(im_path, dtype=np.uint8), cv2.IMREAD_UNCHANGED) In the above script, the image is read with numpy and converted to a one-dimensional numpy ndarray of type np.uint8. Then we use imdecode() to decode the ndarray to OpenCV image format. cv2.IMREAD_UNCHANGED is a flag for imdecode1.\nWrite images with unicode paths # To write images with unicode paths, we can first encode the image in OpenCV format to one dimension numpy ndarray format. Then we convert this numpy ndarray to image on disk with the tofile() method.\nimport cv2 import numpy as np img = cv2.imread(\u0026#34;test.jpg\u0026#34;, 1) h, w = img.shape[:2] im_resize = cv2.resize(img, (w//2, h//2)) im_save_path = \u0026#34;测试目录/small_img.jpg\u0026#34; # encode the im_resize into the im_buf_arr, which is a one-dimensional ndarray is_success, im_buf_arr = cv2.imencode(\u0026#34;.jpg\u0026#34;, im_resize) im_buf_arr.tofile(im_save_path) In the above code, cv2.imencode() will encode the image as a one-dimension numpy array and tofile() will save this array into disk.\nReferences # How to read image with unicode path in OpenCV. https://github.com/opencv/opencv/issues/4292 Encode image using OpenCV. OpenCV: none type has attribute shape. The complete list of flags available and their description can be found here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 September 2019","externalUrl":null,"permalink":"/2019/09/11/opencv_unicode_image_path/","section":"Posts","summary":"\u003cp\u003eThe other day, when I was using OpenCV to read some images and print the image\nshape, I got an error:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026lsquo;NoneType\u0026rsquo; object has no attribute \u0026lsquo;shape\u0026rsquo;.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI was confused and do not know why since the image path is valid. It tooks me a\nwhile to understand the cause.\u003c/p\u003e","title":"How to Read and Write Images with Unicode Paths in OpenCV","type":"posts"},{"content":"In this post, I want to share some tips on writing papers using $\\LaTeX$.\nUse non-breaking space before references # In certain cases, two piece of texts must be close to each other and not appear in different lines, e.g., when you refer to an image or a table. This is when non-breakable space comes to help. In LaTeX, you can insert a non-breakable space with ~. For example, to refer to some figure you have defined, you can use the following:\nThe figure~\\ref{fig:some_fig} shows an interesting result. This will make sure that figure will always be followed by the index number in the same line.\nPeriod (or dot) and sentence spacing # LaTeX use different width of space between words in a sentence and between two sentences. Typically, a lower case letter followed by a dot ends a sentence. An upper case letter followed by a dot is some kind of an acronym and is not considered end of sentence. When these rules are broken, you need to tell LaTeX whether there is an inter-word space or a inter-sentence space.\nIf a dot follows a lower case letter and it is not the end of a sentence, you should follow the dot with an inter-word space (\\ ):\nThe book is first published in the Combin.\\ Journal. For phrases such as Prof. Adam, a non-breakable space is more appropriate:\nProf.~Adam If a dot follows an upper case letter and it is indeed the end of a sentence, you should precede the dot with \\@:\nWHO is a world orgnization, just like WTO\\@. Do not use \\textit for emphasizing text # Some people like to use \\textit for emphasizing text. Although this works most of the time, it is not encouraged. For example, what if you want to emphasize text inside \\textit command? To emphasize text, you should use \\emph{} which is dedicated to do this job and does it well.\nTerminate command with curly braces # If you use chktex, you may see warnings like the following:\ncommand terminated with space\nThat is because if a command does not terminate with a space, the space after it may be ignored by LaTeX.\nGood: \\LaTeX{} is great. Bad: \\LaTeX is great. Space and parentheses # In short, spaces before the opening parentheses is necessary. If you do not need comma or dot, space after closing parentheses is also necessary. In the enclosed text, there is no need to add spaces in the two ends.\nnational basketball association (NBA): ✔️ national basketball association(NBA): ❌ national basketball association ( NBA ): ❌ Quotation marks # If you use two \u0026quot; for double quotation and two ' for single quotation, you will find the opening quotation is apparently wrong. The correct way to represent double quotation is ``some text''. The correct way to use single quotation is `some text'.\nReferences # When should we use non-breakable space Inter-sentence spacing in LaTeX Sentence spacing Command terminated with space warning https://tug.org/pipermail/texhax/2017-April/022640.html When to use space around parentheses Quotation marks in LaTeX ","date":"28 August 2019","externalUrl":null,"permalink":"/2019/08/28/latex_writing_tips_s1/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share some tips on writing papers using $\\LaTeX$.\u003c/p\u003e","title":"Tips on Writing Papers in LaTeX","type":"posts"},{"content":" The default table style provided by LaTeX is not good-looking and professional. In this post, I would like to talk about how to create professional table with the help of booktabs package. We will create the table shown in the title image.\nFor how to create a normal table without booktabs, see this tutorial. To use booktabs, we need first to import it since it is not loaded by LaTeX by default:\n\\usepackage{booktabs} To create multi-row cells in a table, we need also to include the multirow package:\n\\usepackage{multirow} Professional tables often appear as a three-line table, i.e., top line, middle line and bottom line. The three lines are usually thicker than other lines that appear in the table. Booktabs package provides the \\toprule, \\midrule and \\bottomrule command to represent the three lines. To draw a line which only spans a few columns, you can use \\cmidrule command.\nI show an example to create a table using the booktabs below:\n\\begin{table}[h] \\centering \\begin{tabular}{lllll} \\toprule \\multirow{2}{*}{Models} \u0026amp; \\multicolumn{3}{c}{Metric 1} \u0026amp; Metric 2\\\\ \\cmidrule{2-4} \\cmidrule{5-5} \\\\ {} \u0026amp; precision \u0026amp; recall \u0026amp; F-score \u0026amp; R@10 \\\\ \\midrule model 1 \u0026amp; 0.67 \u0026amp; 0.8 \u0026amp; 0.729 \u0026amp; 0.75 \\\\ model 2 \u0026amp; 0.8 \u0026amp; 0.9 \u0026amp; 0.847 \u0026amp; 0.85 \\\\ \\bottomrule \\end{tabular} \\end{table} The produced table is like:\nThere are several issues with the table:\nThe text in the multi-row cell is not properly aligned. Row 1 and row 2 are not in the same height. The two \\cmidrule are connected to each other in one end. To align the text in multi-row cell vertically, an easy way is to provide a vertical space parameter before the cell text:\n\\multirow{column_num}{cell_width}[vspace]{Text} We can use the vspace parameter to adjust the vertical position of Text. A positive value will move the text up while a negative value will move the text down.\nThe two \\cmidrule line are too close to the text in the first row. We can manually add some space using the \\addlinespace[] command from the booktabs package. This command can be put after the table line separator \\\\ to add extra space.\nTo prevent the two cmidrule from connecting each other in one end, we need to provide the trim parameter to \\cmidurle command. The trim parameter is provide in () after the command, for example, \\cmidrule(lr){2-4}, which means to trim in both left and right side of the rule.\nCombining these improvements together, we have the following code:\n\\begin{table}[h] \\centering \\begin{tabular}{lllll} \\toprule \\multirow{2}{*}[-1em]{Models} \u0026amp; \\multicolumn{3}{c}{Metric 1} \u0026amp; Metric 2\\\\ \\addlinespace[10pt] \\cmidrule(lr){2-4} \\cmidrule(lr){5-5} \\\\ {} \u0026amp; precision \u0026amp; recall \u0026amp; F-score \u0026amp; R@10 \\\\ \\midrule model 1 \u0026amp; 0.67 \u0026amp; 0.8 \u0026amp; 0.729 \u0026amp; 0.75 \\\\ model 2 \u0026amp; 0.8 \u0026amp; 0.9 \u0026amp; 0.847 \u0026amp; 0.85 \\\\ \\bottomrule \\end{tabular} \\end{table} One last issue is that the edge of table is not tight enough: there are apparent space in the left and right side of the table. You can add @{} in the tabular column setup to trim the extra space like the following:\n\\begin{tabular}{@{}lllll@{}} References # Vertical alignment for multirow cell Increase row height Guide to create tables ","date":"27 August 2019","externalUrl":null,"permalink":"/2019/08/27/latex_table_with_booktabs/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190827223626.png\"\u003e\n\u003c/p\u003e\n\u003cp\u003eThe default table style provided by LaTeX is not good-looking and professional.\nIn this post, I would like to talk about how to create professional table with\nthe help of \u003ca href=\"https://ctan.org/pkg/booktabs?lang=en\" target=\"_blank\"\u003ebooktabs\u003c/a\u003e package. We will\ncreate the table shown in the title image.\u003c/p\u003e","title":"Creating A Professional Table in LaTeX with booktabs","type":"posts"},{"content":"","date":"16 August 2019","externalUrl":null,"permalink":"/tags/folding/","section":"Tags","summary":"","title":"Folding","type":"tags"},{"content":" Introduction # I started using Neovim about a year ago. During the process, I have been constantly evolving my configuration (the init.vim file): adding some settings and plugins and dropping others. At its peak, my init.vim has over 1600 lines of settings and comments. Managing a configuration of this size requires grouping the relevant settings into different sections or even subsections. This is when I started thinking about folding my configuration properly. The end result is shown in the title image.\nNvim offers several methods to fold a file:\nfold-manual fold-indent fold-expr fold-marker fold-syntax fold-diff I found that fold-expr and fold-marker is easy to use and understand. In this article, I only introduce these two methods.\nFolding with Marker # When we fold with a marker, Nvim will create a fold where the fold marker appears. The default fold marker is {{{ (for opening a fold) and }}} (for closing a fold). To fold the Nvim config with marker, you have to use marker as the folding method:\nset foldmethod=marker To indicate the fold level, you can append a number after the fold marker. I show an example config using fold markers below:\n\u0026#34;{{{ Some settings \u0026#34;{{{2 Plugin install call plug#begin(expand(\u0026#39;~/.local/share/nvim/plugged\u0026#39;)) Plug \u0026#39;neoclide/coc.nvim\u0026#39;, {\u0026#39;do\u0026#39;: \u0026#39;./install.sh\u0026#39;} Plug \u0026#39;Shougo/neco-vim\u0026#39; Plug \u0026#39;neoclide/coc-neco\u0026#39; call plug#end() \u0026#34;}}}2 \u0026#34;{{{2 Built-in options set number set relativenumber set pyxversion=3 set foldmethod=marker set wildoptions=pum \u0026#34;}}}2 \u0026#34;}}}1 \u0026#34;{{{ Color schemes set background=dark color desert \u0026#34;}}} In the above sample configuration, I define two level 1 sections. Inside the first level 1 section, there are two level 2 sub-sections.\nIf you open Nvim with the above configuration:\nnvim -u init.vim init.vim the folding is like the following:\n+-- 17 lines: Some settings ·········································· +-- 4 lines: Color schemes··········································· Two level 1 folds will be shown. Go to the first level 1 fold and use zo to open the fold. Now the buffer will be shown as the following:\n\u0026#34;{{{ Some settings +--- 7 lines: Plugin install········································· +--- 7 lines: Built-in options········································ \u0026#34;}}}1 +-- 4 lines: Color schemes··········································· In the closed fold line, there are some texts shown to indicate the meaning of this fold and how many lines have been folded1. It is called foldtext in Nvim. By default, the foldtext option will use the function foldtext() to evaluate the opening fold line and return a reasonable string as the fold text. See the foldtext() doc for details. If you are not satisfied with the style of the default fold text, you may define your fold text function to replace the foldtext(). We will cover that later in this post.\nFolding with Expression # Folding with marker is not flexible enough since you have to use the marker and indicate the folding level by appending a number behind the marker. Folding with expression is more flexible and powerful.\nTo fold Nvim config with an expression, you have to use expr for the foldmethod option and define your custom folding function:\nset foldmethod=expr set foldexpr=VimFolds(v:lnum) In the above settings, we define the folding function VimFolds(), which will evaluate each line of the config and return its folding level. The variable v:lnum is a special variable which indicates the current line the folding function is evaluating. That is where the power of fold-expr resides: you can structure your configuration the way you want and use the folding function to parse the config and returns the correct folding level for each line.\nWith custom folding expression, we can define our own fold indicator. For example, I am currently using the number of { to indicate the level of a folding:\n\u0026quot;{: level 1 \u0026quot;{{: level 2 \u0026quot;{{{: level 3 \u0026hellip;\u0026hellip; I use the following folding function to parse the configuration:\nfunction! VimFolds(lnum) \u0026#34; get content of current line and the line below let l:cur_line = getline(a:lnum) let l:next_line = getline(a:lnum+1) if l:cur_line =~# \u0026#39;^\u0026#34;{\u0026#39; return \u0026#39;\u0026gt;\u0026#39; . (matchend(l:cur_line, \u0026#39;\u0026#34;{*\u0026#39;) - 1) else if l:cur_line ==# \u0026#39;\u0026#39; \u0026amp;\u0026amp; (matchend(l:next_line, \u0026#39;\u0026#34;{*\u0026#39;) - 1) == 1 return 0 else return \u0026#39;=\u0026#39; endif endif endfunction For lines starting with \u0026quot;{, the above function will extract the number of curly braces and return its folding level. For empty lines which are followed by a level 1 fold, its folding level is 0, which means that this line is not in a fold and will not be folded. For other lines, its folding level is the same as the previous line.\nThe format for the folding level can be found in :h fold-expr.\nCustom Folding Text # Now that we can define the folding level by the folding expression. We need to customize the folding text as well. Or the fold text produced by the default foldtext() function will look ugly:\n+-- 21 lines: { Some settings·················································· +-- 27 lines: { Custom functions··············································· +-- 4 lines: { Color schemes·················································· To customize the fold text, as I have mentioned earlier, we need to create a custom fold text function to produce the folding text we want.\nBelow I show a custom folding text function:\nfunction! MyFoldText() let line = getline(v:foldstart) let folded_line_num = v:foldend - v:foldstart let line_text = substitute(line, \u0026#39;^\u0026#34;{\\+\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;g\u0026#39;) let fillcharcount = \u0026amp;textwidth - len(line_text) - len(folded_line_num) return \u0026#39;+\u0026#39;. repeat(\u0026#39;-\u0026#39;, 4) . line_text . repeat(\u0026#39;.\u0026#39;, fillcharcount) . \u0026#39; (\u0026#39; . folded_line_num . \u0026#39; L)\u0026#39; endfunction In the above function, v:foldstart and v:foldend are the special variable provided by Vim for a particular folding level. We need to set the foldtext option to use the custom function:\nset foldtext=MyFoldText() Reopen Nvim and now the fold text becomes:\nSome settings -------------------------------------------------------- (20 L)··········· Custom functions ----------------------------------------------------- (26 L)··········· Color schemes --------------------------------------------------------- (3 L)··········· The trailing · characters at the end of each folding line is added by Nvim if there are spaces after the fold text in the current window. If you do not want these trailing characters, you can add the following setting to Nvim config:\n\u0026#34; note that there is a space character behind backslash set fillchars=fold:\\ Conclusion # In this post, I introduced how to create folding for the Nvim configuration file and use custom folding text for a fold. With this knowledge, you can create fancy foldings and folding text as you want.\nReferences # Is there a best practice to fold a vimrc file: https://vi.stackexchange.com/q/3814/15292 See :h fold-foldtext for detailed explanations on fold text.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 August 2019","externalUrl":null,"permalink":"/2019/08/16/nvim_config_folding/","section":"Posts","summary":"\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://blog-resource-1257868508.file.myqcloud.com/20190817223054.png\" alt=\"Folded config\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e","title":"How to Create Proper Folding for Vim/Nvim Configuration","type":"posts"},{"content":"In this post, I list some of the often-used Linux command in my daily life.\nFind all files under current folder with extension jpg or txt? # find . -type f \\( -iname \u0026#34;*.jpg\u0026#34; -o -iname \u0026#34;*.txt\u0026#34; \\) -print Ref:\nHow to use find command to search for multiple extensions Unix find: multiple file types Got \u0026ldquo;argument list too long error\u0026rdquo; while deleting files # When I delete files directly using rm some_dir/*, I get the error that argument list is too long. We can use find to delete files instead:\nfind . -type f -name \u0026#34;*.jpg\u0026#34; -delete Ref:\nArgument list too long error for rm, cp, mv commands Add a prefix to each line of a file # It is trival to do this via sed:\nsed -i.bak -e \u0026#39;s/^/\u0026lt;Pattern\u0026gt;/\u0026#39; test.txt i.bak means to back up original file and create a new file.\nRef:\nAdd a prefix string to beginning of each line How to use scp to transfer files between local and remote # Transfer remote file to local # scp -P \u0026lt;PORT\u0026gt; USER@remote_IP:/path/to/remote/file /local/directory Transfer local file to remote # scp -P \u0026lt;PORT\u0026gt; /path/to/local/file USER@remote_IP:/path/to/remote_dir You can rename the transfered file if you give a complete path to the file instead of just a remote directory.\nTransfer remote folder to local # scp -P \u0026lt;PORT\u0026gt; -r USER@remote_IP:/path/to/remote/dir /path/to/local/dir Transfer local folder to remote # scp -P \u0026lt;PORT\u0026gt; -r /path/to/local/folder USER@remote_IP:/path/to/remote/folder When transferring folder from local to remote/from remote local, if the remote/local folder exists, the folder will be put as a child directory, otherwise, a new folder will be created with the name you give.\nDownload file using curl and rename # curl -o new_name -L file_link -L tells curl to redirect.\nHow to show system reboot time? # Use last reboot to show system reboot time. who -b can also show the system last reboot time.\nRef:\nHow long has my Linux system been running? Compress (using tar) files from text file? # The files we want to compress are written in a text file, e.g, img_list.txt. Each line in img_list.txt represents a file path. How to compress all these files to a single tar ball?\nWe can use the -T option for tar:\n-T, --files-from=FILE get names to extract or create from FILE The command is:\ntar zcvf images.tgz -T img_List.txt Ref:\nTar archiving that takes input from a list of files Only search a pattern in certain filetypes? # Suppose we want to search PATTERN in certain filetypes, for example, *.py files.\nUse grep # grep -r -i PATTERN --include \\*.py Use ripgrep # Ripgrep is a fast searching tool, commonly referred to as rg. Using rg, it is easier to do this:\nrg PATTERN -g \u0026#34;*.py\u0026#34; Ref:\ngrep, but only certain file extensions https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#manual-filtering-globs Randomly select N files from a folder? # First use find to find the certain files you want to select from, then use shuf to randomly select the files.\nfind . -type f -name \u0026#34;*.jpg\u0026#34; -print | shuf -n 100 Ref:\nHow can I select random files from a directory in bash? ","date":"9 August 2019","externalUrl":null,"permalink":"/2019/08/09/linux_command_cheat_sheet_s1/","section":"Posts","summary":"\u003cp\u003eIn this post, I list some of the often-used Linux command in my daily life.\u003c/p\u003e","title":"Linux Tips and Tricks -- s1","type":"posts"},{"content":"","date":"31 July 2019","externalUrl":null,"permalink":"/tags/exif/","section":"Tags","summary":"","title":"EXIF","type":"tags"},{"content":"The other day I came across a strange bug during work. My colleagues gave me some photographs taken with a smartphone. On their machines (Windows 7), all the photos were shown correctly in landscape mode. However, when I checked those photos, I found that some of those photos were shown in portrait mode (rotated 90 or 270 degrees) or upside-down (rotated 180 degrees).\nI was curious what happened and learned about Exif and all its related stuff.\nHow Does Exif Orientation Work # What is Exif # Exif (Exchangeable image file format) is a protocol to store various meta-information about the images taken by digital cameras. Exif are stored along with the actual image data. Some of the meta info in Exif includes camera maker, shutter speed, focal length, orientation, shooting time etc. These meta info is called tags and each tag has a specific tag number decided by the Exif format standard. A comprehensive list of tags and their related informations can be found here.\nExif Orientation Flag # Here, we are interested in the orientation meta info. When we are taking photos with a camera, we may not always hold the camera in such a position that the camera top corresponds to top of the scene. Image below from this blog illustrates this idea clearly:\nBut no matter how you are holding the camera, if you check the image on your computer, the image is shown in correct orientation. This has something to do with Exif orientation flag. When you are holding the camera with non-upright position, the raw photo you take is stored as a rotated image. The digital device (be a smartphone or digital camera) has a sensor to record the orientation of the camera and writes that information into orientation flag in Exif.\nThe Exif orientation flag can have nine different values from 1 to 91. The image2 below shows eight of them:\nTypically, you will only get flag 1, 8, 3, 6 for digital photos. Flag 2, 7, 4, 5 represent mirrored and rotated version of images.\nWhy Are My Images Wrongly Displayed? # When you use a photo viewer to check the image on your computer, if the photo viewer can read the Exif info and respects that info, it will automatically rotate the raw image based on the orientation info. The end result is that you can see the correctly-oriented photo no matter how it is actually stored.\nNow come to the issue in the beginning of this post. According to this article, Windows systems before Windows 8 does not take into account the Exif orientation flag and show the images as is, i.e., the raw, un-rotated images are shown instead of the properly rotated images. Since the images my colleagues gave me are shown correctly on their Windows 7 machine, we can draw a conclusion that the raw images are in correct orientation. Somehow, the smartphone is reporting the wrong orientation flags for some of the photos. When I show these photos on my Windows 10 machine, since Windows 10 respects the orientation flag, some of the images will be shown as rotated due to the false orientation flag.\nOn the other hand, if you see correct photo on Windows 10 but rotated one on a Windows 7 machine, that is because the raw image is in rotated position and Windows 7 does not respect the orientation info in Exif.\nRead and Write Exif Info # IrfanView # IrfanView is a great image viewer on Windows, which respects the image Exif info. To view the image Exif info, open an image and click Image -\u0026gt; Information. If the image contains Exif info, you can then click the EXIF info button at the bottom left of the popup window to check the image Exif info.\nDisable Auto-rotate for IrfanView # By default, IrfanView respects the Exif info and will auto-rotate the image based on its orientation flag. To disable this behavior, go to Options -\u0026gt; Properties/Settings, click JPG/PCD/GIF and uncheck the box Auto-rotate image according to EXIF info (if available).\nPillow and Exif Info # If you read an image with Pillow and show it or save it again, Pillow will not respect the Exif orientation tag. You may see such issues here and here. There is a pull request to address this issue, which has been merged now.\nPillow is able to read the image Exif info, but it is not able to edit the Exif info. A sample script to show the image Exif info is shown below:\nfrom PIL import Image from PIL. from PIL.ExifTags import TAGS img = Image.open(\u0026#39;test.jpg\u0026#39;) exif = img.getexif() for k, v in exif.items(): print(\u0026#39;{}: {}\u0026#39;.format(TAGS[k], v)) In the above script, We use the Image.getexif()3 to retrieve the image Exif info. TAGS is a dictionary mapping the tag number to a descriptive name.\nPiexif # The Python package piexif can be used to both read and write the image Exif info.\nBased on the example on its documentation site, I show an example of change the image Exif orientation flag and save a new image using the new Exif info.\nfrom PIL import Image import piexif img = Image.open(\u0026#39;test.jpg\u0026#39;) if \u0026#34;exif\u0026#34; in img.info: exif_dict = piexif.load(img.info[\u0026#39;exif\u0026#39;]) if piexif.ImageIFD.Orientation in exif_dict[\u0026#39;0th\u0026#39;]: exif_dict[\u0026#39;0th\u0026#39;][pixeif.ImageIFD.Orientation] = 3 # quick and dirty work around to avoid type error exif_dict[\u0026#39;Exif\u0026#39;][41729] = b\u0026#39;1\u0026#39; exif_bytes = piexif.dump(exif_dict) img.save(\u0026#39;new_img.jpg\u0026#39;, exif=exif_bytes) The primary info of Exif are stored in the 0th key of exif_dict, which is also a Python dictionary. It seems that piexif did not check the value type of the Exif dict so that we may encounter ValueError when we try to dump the exif_dict. After reading the source code of piexif, I use the following line of code to work around this issue just for now.\nexif_dict[\u0026#39;Exif\u0026#39;][41729] = b\u0026#39;1\u0026#39; After that, you should be able to dump the exif_dict without errors.\nReferences # An online service which reads and writes Exif info Windows 10 auto-rotate images Why images do not always appear correctly rotated Disable auto-rotate in IrfanView Derotate image with exiftool JPEG rotation and EXIF orientation How does smartphone decide orientation JPEG Orientation Rotate image based on Exif orientation in Pillow Can not dump exif dict as bytes Read image exif with Pillow Exif orientation tag Flag 9 means undefined.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nImage source: https://www.daveperrett.com/articles/2012/07/28/exif-orientation-handling-is-a-ghetto/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThis method is added in Pillow 6.0.0.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"31 July 2019","externalUrl":null,"permalink":"/2019/07/31/image_rotation_exif_info/","section":"Posts","summary":"\u003cp\u003eThe other day I came across a strange bug during work. My colleagues gave me\nsome photographs taken with a smartphone. On their machines (Windows 7), all\nthe photos were shown correctly in landscape mode. However, when I checked\nthose photos, I found that some of those photos were shown in portrait mode\n(rotated 90 or 270 degrees) or upside-down (rotated 180 degrees).\u003c/p\u003e\n\u003cp\u003eI was curious what happened and learned about\n\u003ca href=\"https://en.wikipedia.org/wiki/Exif\" target=\"_blank\"\u003eExif\u003c/a\u003e and all its related stuff.\u003c/p\u003e","title":"JPEG Image Orientation and Exif","type":"posts"},{"content":"I saw on StackExchange that someone asked about how to see the full path of current file in Vim. I think it would be helpful to write about how I do it.\nTemporary solution # To show the full path of current file, you can press {count}Ctrl-G, that is, a count bigger or equaling to 1, followed by Ctrl-G. If you press 1\u0026lt;C-G\u0026gt;, only the full path of the file will be shown. If you press a number bigger than 1, the buffer index of current file will also be shown. For more info, see :h Ctrl-G.\nYou can also use expand() function to see the full path of current file:\n:echo expand(\u0026#39;%:p\u0026#39;) In the above command, % is special character which represents the name of current file. :p is a path modifier which is used to show the full path of the file. Please see the expand() doc on other types of path modifiers.\nPermanent solution # If you want to show the current file path permanently so that you can see its path whenever you like. A good place to put the file path is the title bar. In order to do that, you need to set the title and titlestring. Currently, I am using the following settings:\nset title set titlestring=%{hostname()}\\ \\ %F\\ \\ %{strftime(\u0026#39;%Y-%m-%d\\ %H:%M\u0026#39;,getftime(expand(\u0026#39;%\u0026#39;)))} It will show the hostname of Vim, then the complete path of the file and followed by last modified time of the file.\nThe titlestring is just a string. You can use pre-defined modifier to show the content of various variables and the results of various functions. It seems a bit complicated. But in fact, it is not so scary. It uses the same syntax as the statusline (see :h statusline).\nIn the above setting for titlestring, we first show the hostname of the Nvim using the hostname() function. %{} is a special modifier, which will evaluate the expression inside and subsititute the returned result as a string. %F is a modifier used to show the full path of the file. The getftime() function is used to show the last modified time of the current file. strftime() function is used to convert the time to pre-defined format, that is YYYY-mm-dd HH:MM.\nThe end result is something like the following\n","date":"31 July 2019","externalUrl":null,"permalink":"/2019/07/31/nvim_show_file_path/","section":"Posts","summary":"\u003cp\u003eI saw on \u003ca href=\"https://vi.stackexchange.com/questions/104/how-can-i-see-the-full-path-of-the-current-file/20768#20768\" target=\"_blank\"\u003eStackExchange\u003c/a\u003e\nthat someone asked about how to see the full path of current file in Vim. I\nthink it would be helpful to write about how I do it.\u003c/p\u003e","title":"How Do I Show the Current File Path In Neovim?","type":"posts"},{"content":"Introduction # The other day, I was haunted by a bug and found that it was an issue with the image quality saved by Pillow after spending a few hours debugging the code.\nInitially, the workflow of my code was like loading the JPEG image with PIL and after some operation, saving the image again. But I didn\u0026rsquo;t give any other parameters except the file name when using Image.save() method.\nThe quality parameter # After looking up the documentation, I find that PIL will save the image with quality factor 75 by default so that the image quality is decreased. The documentation for quality says:\nThe image quality, on a scale from 1 (worst) to 95 (best). The default is 75. Values above 95 should be avoided; 100 disables portions of the JPEG compression algorithm, and results in large files with hardly any gain in image quality.\nUsing a quality factor of 95 should be enough to preserve the image quality:\nimg.save(\u0026#39;test.jpg\u0026#39;, quality=95) Subsampling # According to this post, even if you use quality=100, the saved image will still be slightly different from the original image. This is because PIL will also use subsampling technique to reduce the image size. You can use subsampling=0 to turn off this feature. Overall, to retain the content of original image, you may use:\nimg.save(\u0026#39;test.jpg\u0026#39;, quality=100, subsampling=0) Other options for quality # For JPEG files, there are also a list of preset options you can use for the quality parameter, such web_high, high. The complete list of options can be found here. These preset options will set the subsampling factor and quantization table which is used in image quantization process.\nReferences # Why is the quality of JPEG images produced by PIL so poor? PIL jpeg, how to preserve the pixel color ","date":"20 July 2019","externalUrl":null,"permalink":"/2019/07/20/pil_jpeg_image_quality/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eThe other day, I was haunted by a bug and found that it was an issue with the\nimage quality saved by \u003ca href=\"https://pillow.readthedocs.io/en/stable/\" target=\"_blank\"\u003ePillow\u003c/a\u003e after\nspending a few hours debugging the code.\u003c/p\u003e","title":"JPEG Image Quality in PIL","type":"posts"},{"content":"PyTorch provides a lot of methods for the Tensor type. Some of these methods may be confusing for new users. Here, I would like to talk about view() vs reshape(), transpose() vs permute().\nview() vs reshape() and transpose() # view() vs transpose() # Both view() and reshape() can be used to change the size or shape of tensors. But they are slightly different.\nThe view() has existed for a long time. It will return a tensor with the new shape. The returned tensor shares the underling data with the original tensor. If you change the tensor value in the returned tensor, the corresponding value in the viewed tensor also changes.\nOn the other hand, it seems that reshape() has been introduced in version 0.4. According to the document, this method will\nReturns a tensor with the same data and number of elements as input, but with the specified shape. When possible, the returned tensor will be a view of input. Otherwise, it will be a copy. Contiguous inputs and inputs with compatible strides can be reshaped without copying, but you should not depend on the copying vs. viewing behavior.\nIt means that torch.reshape may return a copy or a view of the original tensor. You can not count on that to return a view or a copy. According to the developer:\nif you need a copy use clone() if you need the same storage use view(). The semantics of reshape() are that it may or may not share the storage and you don\u0026rsquo;t know beforehand.\nAs a side note, I found that torch version 0.4.1 and 1.0.1 behaves differently when you print the id of original tensor and viewing tensor:\nIn [1]: import torch In [2]: a = torch.rand(3, 4) In [3]: id(a), id(a.storage()) Out[3]: (2236511690472, 2236511611848) In [4]: b = a.view(2, 6) In [5]: id(b), id(b.storage()) Out[5]: (2236523527984, 2236470501128) You see that id of a.storage() and b.storage() is not the same. Isn\u0026rsquo;t that their underlying data the same? Why this difference?\nI filed an issue in the PyTorch repo and got answers from the developer. It turns out that to find the data pointer, we have to use the data_ptr() method. You will find that their data pointers are the same.\nview() vs transpose() # transpose(), like view() can also be used to change the shape of a tensor and it also returns a new tensor sharing the data with the original tensor:\nReturns a tensor that is a transposed version of input. The given dimensions dim0 and dim1 are swapped.\nThe resulting out tensor shares it’s underlying storage with the input tensor, so changing the content of one would change the content of the other.\nOne difference is that view() can only operate on contiguous tensor and the returned tensor is still contiguous. transpose() can operate both on contiguous and non-contiguous tensor. Unlike view(), the returned tensor may be not contiguous any more.\nBut what does contiguous mean? # There is a good answer on SO which discusses the meaning of contiguous in Numpy. It also applies to PyTorch.\nAs I understand, contiguous in PyTorch means if the neighboring elements in the tensor are actually next to each other in memory. Let\u0026rsquo;s take a simple example:\nx = torch.tensor([[1, 2, 3], [4, 5, 6]]) # x is contiguous y = torch.transpose(0, 1) # y is non-contiguous Tensor x and y in the above example share the same memory space1.\nprint(x.data_ptr()) # 94018404758288 print(y.data_ptr()) # 94018404758288 If you check their contiguity with is_contiguous(), you will find that x is contiguous but y is not.\nprint(x.is_contiguous()) # True print(y.is_contiguous()) # False Since x is contiguous, x[0][0] and x[0][1] are next to each other in memory. But y[0][0] and y[0][1] is not.\nA lot of tensor operations requires that the tensor should be contiguous, otherwise, an error will be thrown. To make a non-contiguous tensor become contiguous, use call the contiguous(), which will return a new contiguous tensor. In plain words, it will create a new memory space for the new tensor and copy the value from the non-contiguous tensor to the new tensor.\ntranspose() and permute() # permute() and tranpose() are similar. transpose() can only swap two dimension. But permute() can swap all the dimensions. For example:\nx = torch.rand(16, 32, 3) y = x.tranpose(0, 2) z = x.permute(2, 1, 0) Note that, in permute(), you must provide the new order of all the dimensions. In transpose(), you can only provide two dimensions. tranpose() can be thought as a special case of permute() method in for 2D tensors.\nReferences # https://discuss.pytorch.org/t/in-pytorch-0-4-is-it-recommended-to-use-reshape-than-view-when-it-is-possible/17034 tensor data pointers. view after transpose raises non-contiguous error. When to use which, permute, view, transpose. Difference between reshape() and view(). To show a tensor\u0026rsquo;s memory address, use tensor.data_ptr().\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 July 2019","externalUrl":null,"permalink":"/2019/07/10/pytorch_view_reshape_transpose_permute/","section":"Posts","summary":"\u003cp\u003ePyTorch provides a lot of methods for the Tensor type. Some of these methods\nmay be confusing for new users. Here, I would like to talk about\n\u003ca href=\"https://pytorch.org/docs/stable/tensors.html#torch.Tensor.view\" target=\"_blank\"\u003e\u003ccode\u003eview()\u003c/code\u003e\u003c/a\u003e  vs\n\u003ca href=\"https://pytorch.org/docs/stable/torch.html#torch.reshape\" target=\"_blank\"\u003e\u003ccode\u003ereshape()\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://pytorch.org/docs/stable/torch.html#torch.transpose\" target=\"_blank\"\u003e\u003ccode\u003etranspose()\u003c/code\u003e\u003c/a\u003e vs\n\u003ca href=\"https://pytorch.org/docs/stable/tensors.html#torch.Tensor.permute\" target=\"_blank\"\u003e\u003ccode\u003epermute()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e","title":"Difference between view, reshape, transpose and permute in PyTorch","type":"posts"},{"content":"Introduction # Sometimes, we may want an in-memory jpg or png image that is represented as binary data. But often, what we have got is image in OpenCV (Numpy ndarray) or PIL Image format. In this post, I will share how to convert Numpy image or PIL Image object to binary data without saving the underlying image to disk.\nIf the image file is saved on disk, we can read it directly in binary format with open() method by using the b flag:\nwith open(\u0026#39;test.jpg\u0026#39;, \u0026#39;rb\u0026#39;) as f: byte_im = f.read() Now the image will be read from disk to memory and is still in binary format.\nWhat if we want to resize the original image and convert it to binary data, without saving the resized image and re-read it from the hard disk? How should we do it?\nConvert image to bytes # We can do it with the help of OpenCV or PIL.\nOpenCV # This is how to achieve that in OpenCV:\nimport cv2 im = cv2.imread(\u0026#39;test.jpg\u0026#39;) im_resize = cv2.resize(im, (500, 500)) is_success, im_buf_arr = cv2.imencode(\u0026#34;.jpg\u0026#34;, im_resize) byte_im = im_buf_arr.tobytes() # or using BytesIO # io_buf = io.BytesIO(im_buf_arr) # byte_im = io_buf.getvalue() A little explanation here. imencode() will encode the Numpy ndarray in the specified format. This method will return two values, the first is whether the operation is successful, and the second is the encoded image in a one-dimension Numpy array.\nThen you can convert the returned array to real bytes either with the tobytes() method or io.BytesIO(). We can finally get the byte_im. It is the same with saving the resized image in hard disk and then reading it in binary format, but the saving step is removed and all the operation is done in memory.\nPIL # If you like to use PIL for image processing. You can use the following code:\nimport io from PIL import Image im = Image.open(\u0026#39;test.jpg\u0026#39;) im_resize = im.resize((500, 500)) buf = io.BytesIO() im_resize.save(buf, format=\u0026#39;JPEG\u0026#39;) byte_im = buf.getvalue() In the above code, we save the im_resize Image object into BytesIO object buf. Note that in this case, you have to specify the saving image format because PIL does not know the image format in this case. The bytes string can be retrieved using getvalue() method of buf variable.\nReferences # Python OpenCV convert image to byte string?. Write OpenCV image in memory to BytesIO or Tempfile. python Image PIL to binary Hex. Convert PIL Image to byte array?. ","date":"6 July 2019","externalUrl":null,"permalink":"/2019/07/06/python_opencv_pil_image_to_bytes/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eSometimes, we may want an in-memory jpg or png image that is represented as\nbinary data. But often, what we have got is image in OpenCV (Numpy ndarray) or\nPIL Image format. In this post, I will share how to convert Numpy image or PIL\nImage object to binary data without saving the underlying image to disk.\u003c/p\u003e","title":"Convert PIL or OpenCV Image to Bytes without Saving to Disk","type":"posts"},{"content":"Introduction # One key spirit of Vim is to accomplish something in as fewer key strokes as possible. When we repeat a command several times to perform an action, we need to ask ourselves if there is a better way to do it. Only in this way, can we make progress in mastering Vim. For example, to delete five lines of texts, if we press dd five times, we are certainly doing it the wrong way. After looking up the Vim manual, we know that we can use 5dd or d4j: only three keystrokes are needed instead of ten!\nThe other day, I saw a post in a forum asking for help on how to quickly move the cursor inside a buffer. After using Neovim for nearly a year, I would like to share what I have learnt about fast movement and navigation inside Neovim/Vim.\nThere are hundreds or thousands of articles about basic Vim command to move the cursor. You can check this cheatsheet to quickly get an overview.\nHere I want to to talk something more advanced, at least in my opinion. Unless otherwise notified, all the commands below are performed in normal mode.\nQuickly go to a line # I have observed that one common and inefficient behaviour of Vim novices is that they often do not know that most Vim commands can be prefixed with a number to avoid manual repeat.\nIn this part, I will talk about how to quickly go to line. Beginners often press j or k non-stop in order to navigate to a specific line below or above the current cursor line. This is a terrible and highly inefficient way to go to where you want.\nTo go to a line, first press the line number, then press gg or G. For example, to go to line 87, press either 87gg or 87G.\nRelative number # We can also move the cursor relatively based on the distance between the destination line and current line. To go to ten lines below or above, we can press 10j or 10k.\nThis requires less key strokes once a file reaches hundreds of lines. The only inconvenience is that we have to manually calculate the distance between the destination line and cursor line. In order to be more efficient, I strongly suggest you turning on both the number and relativenumber options:\nset number set relativenumber After setting these two options, the cursor line will show its absolute line number, while the other lines will show the relative distance to the current line. No more manual calculation needed!\nFor more settings about line number in Neovim, see my other post.\nPrecise cursor movement # Vim provides the f, t or F, T command to jump forward or backward to a character in current line, and you can repeat the action by pressing , or ; (see :h , or :h ;). While these commands are useful, they are not powerful enough to be of real value:\nThe movement is restricted to current line. There are possibly many repetitions since you can only provide one character. As a result, you may need to press ; several times to go to where you want. vim-sneak1 solves these two issues neatly. With vim-sneak, you can go anywhere your eyes can see in just four key strokes in most cases. It is one of the most amazing plugins I have ever seen.\nAfter installing this plugin, add the following minimal settings to your configuration:\nlet g:sneak#label = 1 nmap f \u0026lt;Plug\u0026gt;Sneak_s nmap F \u0026lt;Plug\u0026gt;Sneak_S The above settings will map f and F to search forward and backward respectively and use the sneak label mode.\nFor example, if you want to go to the character i that is followed by m, first press f, then press im. All occurrences of im will be highlighted and given a label (see image below).\nPress the character in a label, the cursor will jump to that location, which is really amazing.\nQuickly go to a previous edit position # When I am writing Python source files, a pattern I notice is that I often forget to import a package or module when I need to use it. My usual work flow will be like:\nChange to normal mode with ESC. Go to the top of the source file and add the import statement I need. Make other necessary adjusts. Scroll down the source file and find the line I have been editing previously. Go to the precise location where I am editing. The annoyance is that it will take some time to go to the exact position we are editing before. This is when marks come to help2. A mark denotes a particular position in the buffer. The following is a simple overview to use marks:\nma: create a mark named a (can be a character in a-z) `a: go the exact position denoted by mark a 'a: go to the line denoted by mark a With marks, we can simplify our workflow. If we want to move to other places but want to go back later, we can simply create a mark in this position. After finishing work in other locations, we can directly go to the previous location with its mark label.\nThe native functionality provided by marks are powerful but not very convenient:\nIf you create several marks, you may not remember the correspondence between buffer positions and mark labels. You have to manually select an unused label for newly created marks. It is also cumbersome to delete a mark. I recommend using plugin vim-signature to manage your marks. This plugin will show the mark labels in the sign column3 so that we can easily go to a marked position. It also provides other commands to manage marks.\nSwitching buffers quickly # When we are working on a large projects, we may open several files at the same time. We can go to a buffer quickly if we know its buffer index. To show the buffer index of opened files, use :ls. An example output is:\n2 %a \u0026#34;movement_navigation_inside_nvim.md\u0026#34; line 153 5 # \u0026#34;~/.config/nvim/init.vim\u0026#34; line 758 The number in the first column is the buffer index. To go to a buffer, first press the buffer index, then press Ctrl + 6.\nIt works but are still not convenient enough, because we have to first find the buffer index using :ls command. My solution is to use vim-airline, which can be configured to show the buffer index on the tabline along with the file names. After installing Vim-airline, add the following settings to your configuration:\nlet g:airline#extensions#tabline#enabled = 1 let g:airline#extensions#tabline#buffer_nr_show = 1 Restart Nvim and you will find that each buffer has a number on the left of the file name (see image below).\nConclusion # In this post, I shared several ways for faster movement and navigation inside Neovim/Vim. I hope that you can apply the techniques here to improve your efficiency and save your time. Hopefully, you may share your own ideas on how to further improve efficiency in the comment below.\nThere is another similar plugin called vim-easymotion.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nsee :h mark-motions for the documentation on marks.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSee :h signs for the documentation on signs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"26 June 2019","externalUrl":null,"permalink":"/2019/06/26/movement_navigation_inside_nvim/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eOne key spirit of Vim is to accomplish something in as fewer key strokes as\npossible. When we repeat a command several times to perform an action, we need\nto ask ourselves if there is a better way to do it. Only in this way, can we\nmake progress in mastering Vim. For example, to delete five lines of texts, if\nwe press \u003ccode\u003edd\u003c/code\u003e five times, we are certainly doing it the wrong way. After\nlooking up the Vim manual, we know that we can use \u003ccode\u003e5dd\u003c/code\u003e or \u003ccode\u003ed4j\u003c/code\u003e: only three\nkeystrokes are needed instead of ten!\u003c/p\u003e","title":"Fast Movement and Navigation Inside Vim or Neovim","type":"posts"},{"content":"tl;dr: glob.glob() is case sensitive in Linux, but case insensitive in Windows.\nRecently, I was bitten by the unintuitive behaviour of glob.glob(). I think it would be beneficial to write down what I have found.\nA little background. I wanted to find all the images under directory test_img with extensions .jpg or *.JPG on my Windows 10 machine. My initial code was like:\nimport glob ext = \u0026#39;.jpg\u0026#39; im_paths1 = glob.glob(\u0026#39;test_img/\u0026#39; + \u0026#39;*\u0026#39; + ext) im_paths2 = glob.glob(\u0026#39;test_img/\u0026#39; + \u0026#39;*\u0026#39; + ext.upper()) I expect that im_paths1 and im_paths2 contain the paths of all the images ending in .jpg and .JPG respectively. But the truth is that im_paths1 and im_paths2 are exactly the same: all images whose names end with either .jpg or .JPG have been matched, i.e., glob.glob() is case insensitive on Windows!\nI run the same code on Linux and find that glob.glob() is case sensitive.\nThis inconsistent behaviour on different platforms drives me to read the source code of glob module. It seems that the culprit is fnmatch.filter(), which is used by glob to get the matching file paths (relevant code is here). fnmatch.filter() uses os.path.normcase() for the pattern and filenames in non-POSIX systems (relevant code here). That is why glob.glob() can not distinguish between lower and upper case files on the Windows platform.\nThis behaviour is a bad design in my opinion, which should be notified to the users.\nTo keep the behaviour of glob.glob() consistent across different systems, I write the following method to find files in a case sensitive manner on Windows:\nClick to check the code. def find_files(directory, pat): \u0026#34;\u0026#34;\u0026#34; Find files in a case sensitive way on Windows. Parameters ---------- directory: str The directory where you want to find files, can be relative or absolute path. pat: str The pattern of file names you want find, for example,`*.jpg` or `*.JPG`. Returns ------- A list of file paths matching the given pattern. Empty if no files under the directory matches the pattern. \u0026#34;\u0026#34;\u0026#34; path_pattern = os.path.join(directory, pat) pths = glob.glob(path_pattern) match = re.compile(fnmatch.translate(path_pattern)).match valid_pths = [pth for pth in pths if match(pth)] return valid_pths print(find_files(\u0026#39;test_img\u0026#39;, \u0026#39;*.jpg\u0026#39;)) References # Ignore case in glob() on Linux: https://stackoverflow.com/q/8151300/6064933 https://bugs.python.org/issue26655 Finding files case insensitively ","date":"24 June 2019","externalUrl":null,"permalink":"/2019/06/24/python_glob_case_sensitivity/","section":"Posts","summary":"\u003cp\u003etl;dr: \u003ccode\u003eglob.glob()\u003c/code\u003e is case sensitive in Linux, but case insensitive in Windows.\u003c/p\u003e\n\u003cp\u003eRecently, I was bitten by the unintuitive behaviour of \u003ccode\u003eglob.glob()\u003c/code\u003e.\nI think it would be beneficial to write down what I have found.\u003c/p\u003e","title":"Unintuitive Behaviour of Case Sensitivity in Python glob","type":"posts"},{"content":"In this post, I want to share how to use bindkeys command to solve a few issues when using Zsh.\nCan not use HOME and END keys normally # After using Zsh, I found that some terminals can not understand Home and End keys correctly, i.e., I can not go to the beginning or end of a line by pressing Home or End key.\nThis is because the key codes that terminal recognizes when you press certain keys can not be recognized by Zsh. You can manually find which key code is sent when you press a key. You can use showkey -a to print the key codes. Here is what it shows when I press Home and End keys.\nAfter we know the key codes for these two keys, we can bind the codes to the operation we want to perform, that is begin-of-line and end-of-line. Add the following settings to your .zshrc:\nbindkey \u0026#39;^[[H\u0026#39; beginning-of-line bindkey \u0026#39;^[[F\u0026#39; end-of-line Bind key to run a custom command # One reader of this post asked a question on how to use shortcut keys to run the following command:\nnvim $(fzf) I searched the web and found a solution. Suppose that we want to bind Ctrl + O to the above command, we can add the following setting to .zshrc:\nbindkey -s \u0026#39;^o\u0026#39; \u0026#39;nvim $(fzf)^M\u0026#39; # you may also use the following one # bindkey -s \u0026#39;^o\u0026#39; \u0026#39;nvim $(fzf)\\n\u0026#39; In the above setting, -s option is used to translate the input string to output string so that when you press the shortcut, it is replaced with the command you want to run. ^M or \\n is used to represent the Enter key so that the command is run automatically.\nReferences # Home and End not recognized https://stackoverflow.com/questions/8638012/fix-key-settings-home-end-insert-delete-in-zshrc-when-running-zsh-in-terminat https://github.com/robbyrussell/oh-my-zsh/issues/3061 Bind keys to a command http://zsh.sourceforge.net/Guide/zshguide04.html http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Zle-Builtins http://zsh.sourceforge.net/Intro/intro_11.html https://github.com/tomsquest/dotfiles/blob/master/zsh/bindkey.zsh https://unix.stackexchange.com/questions/285208/how-to-remove-a-zsh-keybinding-if-i-dont-know-what-it-does https://unix.stackexchange.com/questions/79897/how-can-i-use-bindkey-to-run-a-script ","date":"13 June 2019","externalUrl":null,"permalink":"/2019/06/13/zsh_bind_keys/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how to use \u003ccode\u003ebindkeys\u003c/code\u003e command to solve a few\nissues when using Zsh.\u003c/p\u003e","title":"Binding Keys in Zsh","type":"posts"},{"content":"","date":"10 June 2019","externalUrl":null,"permalink":"/tags/keyboard/","section":"Tags","summary":"","title":"Keyboard","type":"tags"},{"content":"6.18 快到了，加上在家里使用的 IKBC C87 青轴声音太大，敲击费力，所以动了换一把更加静音，触发力度更小的键盘的心思。在京东和淘宝上入手了多款键盘试用，不得不说，一把好的键盘真的是难选啊。自从去年双十一入手了一把 Leopold 红轴键盘以后，其他的键盘真的很难入我的眼睛了。试用过的几把键盘以及感受如下：\n杜伽 Durgod k320，静音红轴，深灰色 # 这款选的是深灰色的 87 键静音红轴，之前没有用过静音红轴，就选择这个轴体验了一下。杜伽采用键线分离设计，这种设计应该是机械键盘的标配，并且提供了两种不同的连接线，一种是连接电脑的接口是 type C，另外一种是传统的 USB 接口，连接键盘的接口都采用的是 type C 接口。\n遗憾的是键盘的外壳使用的塑料个人感觉材质不好，还不如更偏宜的 IKBC，外壳还有一种略微呛人的塑料味道，令人印象不佳。\n再说说键盘的敲击感受，不知道是静音红轴的原因还是键盘设计原因，敲击键盘的时候有一种肉肉的感觉，不是很脆，比较闷，用了一会，就感觉不喜欢。\n宁芝 # Plum niz micro84 双模 # 这款键盘采用了比较少见的 84 键设计，键盘整体设计紧凑，键帽和外壳用到的塑料质感也不错,颜值还是不错的。键盘灯位于键帽下的面板上，不是很明显。\nPlum 采用的是静电容键盘，也比较软，容易触发，但是感觉敲击的时候也有一点闷，不清脆，另外键帽在打字的时候感觉有些晃动，不稳。键盘手感和薄膜键盘有点类似，个人也不是很喜欢。\n这款键盘一大特点是，提供了非常多的设置以及快捷按钮，设置还可以模拟鼠标操作等，但是个人感觉大部分都没有什么用，可能比较适合对键盘比较挑剔的游戏玩家？\nPlum niz mini84，有线 # 这款键盘和 micro84 比较相似，区别是键盘设计略有不同，采用不同的模具，另外，这款是有线的，没有蓝牙功能，其他比较类似 micro84.\nIKBC C87 红轴 # 为了选择适合自己的键盘，继续入了 IKBC C87 红轴键盘，IKBC 的键盘配色过于单调，都是纯色，这次入的键盘是黑色的。到了以后，发现这款的黑色做的太黑了，颜色比较呆板，外观上是不太好看的。\n之前说机械键盘一般都是键线分离设计，这款 IKBC C87 不是，估计是为了节省成本，毕竟京东入手价格只有三百出头。\n虽然价格偏宜，但是这款键盘的输入体验还是不错的，相对于我 900+ 价格的 Leopold 红轴，输入体验上并没有很大的区别，比 Leopold 的红轴似乎略硬了那么一点点，你需要更大一点力气去敲击，除此之外体验几乎一致。不过空格键似乎做的不好，敲击的时候能够听到键帽下面弹簧的声音。考虑到这款键盘的价格，如果不在意这个颜色，还是非常值得入手的。\n杜伽 K320，红轴，灰白色 # 没有放弃杜伽，又从某宝入了灰白色的红轴键盘(见上图)，白色款外观看上去比深灰色的要舒服，更有质感一些，灰白的搭配也沉静而优雅。和深灰色键盘一样，刚刚打开，依然又一股塑料的味道，经过一天的放置，味道基本上已经散去了。\n上面说静音红轴太肉，声音不脆，用这款红轴体验了一番，果然红轴要好很多，声音脆，但是又不像青轴那样太吵，正是我喜欢的类型。这款的做工要比 IKBC C87 红轴做工好，空格键敲击的时候不会有弹簧的声音。\n","date":"10 June 2019","externalUrl":null,"permalink":"/2019/06/10/mechanical_keyboard_try/","section":"Posts","summary":"\u003cp\u003e6.18 快到了，加上在家里使用的 IKBC C87 青轴声音太大，敲击费力，所以动了换一把更加静音，触发力度更小的键盘的心思。在京东和淘宝上入手了多款键盘试用，不得不说，一把好的键盘真的是难选啊。自从去年双十一入手了一把 Leopold 红轴键盘以后，其他的键盘真的很难入我的眼睛了。试用过的几把键盘以及感受如下：\u003c/p\u003e","title":"几把机械键盘试用体验","type":"posts"},{"content":"Note: this post is deprecated, I use nvim-cmp for auto-completion now.\nDeoplete is a good auto-completion plugin for Neovim. In this post, I introduce how to set up auto-completion for Nvim with the help of deoplete.\nStrictly speaking, it is an auto-completion engine. In order to enable auto-completion for a certain programming language, you need to install the corresponding source.\nInstall Deoplete # To use deoplete, you should make sure that you are using Python3 . You need to install pynvim \u0026ndash; the Python client to Neovim:\npip3 install --user pynvim Deoplete is easy to install. You can install deoplete with vim-plug:\nPlug \u0026#39;Shougo/deoplete.nvim\u0026#39;, { \u0026#39;do\u0026#39;: \u0026#39;:UpdateRemotePlugins\u0026#39; } Since deoplete is a completion engine, in order to use auto-completion for a specific language, you need to install the corresponding source for it. The complete list of sources supporting deoplete can be found here.\nFollow the guide of the specific completion source to install it and enable completion for that language. For example, you can check here on how to set up deoplete and deoplete-jedi for Python auto-completion.\nThe minimum settings on deoplete\u0026rsquo;s side is to enalbe it at the start of Nvim:\nlet g:deoplete#enable_at_startup = 1 Other settings # Disable buffer and around source # The buffer and around source for deoplete is of little use for auto-completion. I would rather ignore them. To ignore these two sources, use the following settings:\ncall deoplete#custom#option(\u0026#39;ignore_sources\u0026#39;, {\u0026#39;_\u0026#39;: [\u0026#39;around\u0026#39;, \u0026#39;buffer\u0026#39;]}) References # https://github.com/Shougo/deoplete.nvim/issues/545 change the max width of the completion window # Sometimes, the completion term has long strings which are cut down due to limited completion window width. So change the max width allowed for completion window, use the following settings:\n\u0026#34; maximum candidate window length call deoplete#custom#source(\u0026#39;_\u0026#39;, \u0026#39;max_menu_width\u0026#39;, 80) References # https://github.com/Shougo/deoplete.nvim/issues/752 ","date":"6 June 2019","externalUrl":null,"permalink":"/2019/06/06/nvim_deoplete_settings/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eNote: this post is deprecated, I use \u003ca href=\"https://github.com/hrsh7th/nvim-cmp\" target=\"_blank\"\u003envim-cmp\u003c/a\u003e for auto-completion now.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/Shougo/deoplete.nvim\" target=\"_blank\"\u003eDeoplete\u003c/a\u003e is a good auto-completion plugin for Neovim.\nIn this post, I introduce how to set up auto-completion for Nvim with the help of deoplete.\u003c/p\u003e","title":"Nvim Autocompletion with Deoplete","type":"posts"},{"content":" update log 2022-07-19: Add build method via neovim 本文的中文版本参见 这里。\nOver the past few years, I have been using some dedicated note-taking software to manage my notes. However, all these tools I have tried are unsatisfactory: they are either slow or cumbersome in terms of note searching. Finally, I decided to take my notes in Markdown and convert them to PDF using Pandoc for reading. In this post, I will summarize how I do it.\nTaking our notes in Markdown format has several benefits:\nWe can edit the Markdown files with our favorite editor, for example, neovim, Sublime Text, which means more efficient editing and pleasant writing experience. Since a Markdown file is a textual file, we can search it using powerful tool such as grep or ripgrep. We can covert the Markdown files to various formats such as PDF, HTML, epub, mobi etc., for better reading experience, with the help of Pandoc. The notes are all text files and are small in size, which means easier and faster syncing or backup between your native PC and the cloud service. In this post, I would like to share how to generate beautiful PDF files from Markdown. I will also give solutions to the issues I have encountered during the process.\nPrerequisite # Before we begin, we need to make sure that the following tools are installed:\nFirst, Pandoc. After installation, you should add the path of the Pandoc executable to the system PATH. TeX distribution. Please make sure that TeX has been installed on your system. You can use either TeX Live or MiKTeX or MacTeX base on your platform. You may need to set up the PATH variable1. A powerful text editor. One of my favorite is Neovim. You can also choose to use VS Code or Sublime Text. Generating PDF from Markdown with Pandoc # Background # For those who are not familiar with Pandoc, Pandoc is a powerful tool for converting document between different formats. It is called the Swiss knife of document converter. There are actually two steps involved in converting a Markdown file to a PDF file:\nThe Markdown source file is converted to a LaTeX source file. Pandoc invokes the pdflatex or xelatex or other TeX command and converts the .tex source file to a PDF file. When converting Markdown to LaTeX, pandoc uses a template file. We can run command pandoc -D latex |less to check the template file used.\nBecause I often use non-ASCII characters, quotations, tables, and other complex elements in my Markdown files, I have met a few problems during the conversion process. In the following sections of this post, I will share how to solve these issues.\nHow to Handle Languages other than English # By default, Pandoc uses pdflatex to generate PDF files, which can not handle Unicode characters well. We will encounter errors when we convert Markdown files containing Unicode characters to PDF files.\nIn order to handle Unicode characters, we need to use xelatex instead. For the CJK languages, we need to use CJKmainfont option to specify the proper font that supports the language we are using2. In this post, I will use the Chinese language as an example.\nOn Windows systems, for Pandoc 2.0 and above, we can use the following command to generate the PDF file:\npandoc --pdf-engine=xelatex -V CJKmainfont=\u0026#34;KaiTi\u0026#34; test.md -o test.pdf In the above command, KaiTi is the name of a font that supports the Chinese. How do we find a font supporting a particular language? First, we need to know the language code for the language in use. For example, the language code for Chinese is zh. Then, use fc-list command to look up the fonts that support this language3:\nfc-list :lang=zh The output of this command is like the following:\nThe font name is the string after the font location. Since a font name may contain spaces, we need to quote it when we want to use a particular font, e.g., -V CJKmainfont=\u0026quot;Source Han Serif CN\u0026quot;.\nIn Pandoc version 2.0, --pdf-engine option replaces the old --latex-engine option. On Linux systems where the Pandoc version is old, the above command will not work. We need to use the following command instead4:\npandoc --latex-engine=xelatex -V mainfont=\u0026#39;WenQuanYi Micro Hei\u0026#39; test.md -o test.pdf On Linux, the way to find the font supporting your language is the same as Windows.\nIssues and techniques # Debug issues effectively # As discussed in the previous section, markdown to PDF is a two-step process. The key to get what we want is to directly check the intermediate LaTeX file that pandoc generates. Then we can patch or update the command that pandoc uses.\nTo check the generated LaTeX file, we can add the -s (means standalone) and output LaTeX instead:\npandoc --pdf-engine=xelatex \\ --highlight-style kate \\ --table-of-contents \\ --number-sections \\ -s \\ test.md -o test.tex Add title, author and date info # Pandoc supports adding these info via its YAML header extension. We can easily add the document title, author and date info like this:\n--- title: \u0026#34;My demo title\u0026#34; author: \u0026#34;jdhao\u0026#34; date: 2021-06-27 --- Block quote, table and list are not correctly rendered # The reason is that Pandoc requires that you leave an empty line before block quote, list and table environment.\nIf the lines in the block quote are not correctly broken, i.e., all the lines are merged as one paragraph, we can add a space after each line to solve this issue.\nAdd highlight to block code # Pandoc supports block code syntax highlighting for many languages and offers several highlight themes. To list the highlight themes that Pandoc provides, run the following command:\npandoc --list-highlight-styles To list all the languages that Pandoc supports, run the following command:\npandoc --list-highlight-languages To use syntax highlighting for different languages, we need to specify the language in the block quote and use --highlight-style, e.g.,:\npandoc --pdf-engine=xelatex --highlight-style zenburn test.md -o test.pdf In the above command, we use the zenburn theme, I also recommend using the tango or breezedark theme.\nAdd numbered sections and TOC # By default, there is no table of contents (TOC) in the generated PDF and no numbers in the headers5. To add TOC, use the --toc option; to add section numbers, use the -N option. A complete example is as follows:\npandoc --pdf-engine=xelatex --toc -N -o test.pdf test.md Add colors to links # According to the Pandoc user guide, we can add colors to different links via the colorlinks option:\ncolorlinks add color to link text; automatically enabled if any of linkcolor, filecolor, citecolor, urlcolor, or toccolor are set\nTo customize the color of different types of links, Pandoc offers different options:\nlinkcolor, filecolor, citecolor, urlcolor, toccolor color for internal links, external links, citation links, linked URLs, and links in table of contents, respectively: uses options allowed by xcolor, including the dvipsnames, svgnames, and x11names lists\nFor example, to set the URL color to NavyBlue and set the TOC color to red, we can use the following command:\npandoc --pdf-engine=xelatex -V colorlinks -V urlcolor=NavyBlue -V toccolor=red test.md -o test.pdf Note that the urlcolor option will not color the raw URL links in the text. To color those raw links, you can enclose those links with \u0026lt;\u0026gt;, e.g., \u0026lt;www.google.com\u0026gt;.\nChange the PDF margin # The default margin for the generated PDF is too large. According to the Pandoc FAQ, you can use the following option to change the margin:\n-V geometry:\u0026#34;top=2cm, bottom=1.5cm, left=2cm, right=2cm\u0026#34; The complete command is:\npandoc --pdf-engine=xelatex -V geometry:\u0026#34;top=2cm, bottom=1.5cm, left=2cm, right=2cm\u0026#34; -o test.pdf test.md Error when using backslash inside Markdown # In ordinary Markdown format, it is fine to use backslash characters inside the files. However, Pandoc interpret the backslash and string after it as LaTeX command by default. As a result, you may encounter weird errors when trying to compile Markdown files containing backslash characters. Based on discussions here and here, the solution is to make Pandoc treat the Markdown file as normal Markdown files and not interpret the LaTeX command. You need to add the following flag:\npandoc -f markdown-raw_tex Or you can use two backslash to represent a literal backslash, e.g., \\\\sometxt. If you want to express a LaTeX command, enclose the command with inline code block, like this: \\textt{}.\nAdd background color to inline code # In translating Markdown source file to TeX files, Pandoc use the \\texttt{} command to represent the inline code. So inline code has no background color in the generated PDF files. To increase the readability of inline code, we can modify the \\texttt command to add background color to text.\nFirst, we need to create a file named head.tex and add the following settings to it:\n% change background color for inline code in % markdown files. The following code does not work well for % long text as the text will exceed the page boundary \\definecolor{bgcolor}{HTML}{E0E0E0} \\let\\oldtexttt\\texttt \\renewcommand{\\texttt}[1]{ \\colorbox{bgcolor}{\\oldtexttt{#1}} } When converting Markdown files, use the -H option to refer the head.tex file, e.g.,:\npandoc --pdf-engine=xelatex -H head.tex test.md -o test.pdf In the generated PDF, the inline code will have grey background color.\nChange the default style of block quote # By default, when converting Markdown to PDF, Pandoc use the quote environment for Markdown block quotes. The texts inside quotation are only indented, making it hard to recognize the environment.\nWe can create a custom environment to add background color and indentation to the quotation environment. Add the following setting to head.tex:\n% change style of quote, see also https://tex.stackexchange.com/a/436253/114857 \\usepackage[most]{tcolorbox} \\definecolor{linequote}{RGB}{224,215,188} \\definecolor{backquote}{RGB}{249,245,233} \\definecolor{bordercolor}{RGB}{221,221,221} % change left border: https://tex.stackexchange.com/a/475716/114857 % change left margin: https://tex.stackexchange.com/a/457936/114857 \\newtcolorbox{myquote}[1][]{% enhanced, breakable, size=minimal, left=10pt, top=5pt, frame hidden, boxrule=0pt, sharp corners=all, colback=backquote, borderline west={2pt}{0pt}{bordercolor}, #1 } % redefine quote environment to use the myquote environment, see https://tex.stackexchange.com/a/337587/114857 \\renewenvironment{quote}{\\begin{myquote}}{\\end{myquote}} When you want to convert Markdown file to PDF, you can use the following command:\npandoc -H head.tex test.md -o test.pdf The produced PDF is like the following:\nReferences # Change background color of quotation. Redefining existing environment in LaTeX. Tricks: put the settings to head.tex # You may have noticed the clumsiness if you try to customize a lot of settings. When converting Markdown to PDF, we often need to use several settings. If we specify all these options on the command line, it would be time consuming and cumbersome to edit. A good way to ease the issue is to put some settings to head.tex and refer to this file during Markdown file conversion.\nFor example, we can put the settings related to margin, inline code highlighting to head.tex:\nClick to see the code. \\usepackage{fancyvrb,newverbs} \\usepackage[top=2cm, bottom=1.5cm, left=2cm, right=2cm]{geometry} % change background color for inline code in % markdown files. The following code does not work well for % long text as the text will exceed the page boundary \\definecolor{bgcolor}{HTML}{E0E0E0} \\let\\oldtexttt\\texttt \\renewcommand{\\texttt}[1]{ \\colorbox{bgcolor}{\\oldtexttt{#1}} } Nested list level exceed the limit # One reader Karl Liu mentioned that if the nested list level exceeds 6, you will encounter the following error when trying to generate PDF file:\n! LaTeX Error: Too deeply nested.\nMore detailed discussions can be found here. The solution proposed is to add the following settings in head.tex:\nClick to see the code. \\usepackage{enumitem} \\setlistdepth{9} \\setlist[itemize,1]{label=$\\bullet$} \\setlist[itemize,2]{label=$\\bullet$} \\setlist[itemize,3]{label=$\\bullet$} \\setlist[itemize,4]{label=$\\bullet$} \\setlist[itemize,5]{label=$\\bullet$} \\setlist[itemize,6]{label=$\\bullet$} \\setlist[itemize,7]{label=$\\bullet$} \\setlist[itemize,8]{label=$\\bullet$} \\setlist[itemize,9]{label=$\\bullet$} \\renewlist{itemize}{itemize}{9} \\setlist[enumerate,1]{label=$\\arabic*.$} \\setlist[enumerate,2]{label=$\\alph*.$} \\setlist[enumerate,3]{label=$\\roman*.$} \\setlist[enumerate,4]{label=$\\arabic*.$} \\setlist[enumerate,5]{label=$\\alpha*$} \\setlist[enumerate,6]{label=$\\roman*.$} \\setlist[enumerate,7]{label=$\\arabic*.$} \\setlist[enumerate,8]{label=$\\alph*.$} \\setlist[enumerate,9]{label=$\\roman*.$} \\renewlist{enumerate}{enumerate}{9} Add anchors in Markdown # I try to use anchors in Markdown following the discussion here. Unfortunately, in the generated PDF, the anchor does not work: when I click the linking text, there is no jump to the destination page.\nInstead, we should use the attribute to give an id to the location we want to jump to, and refer to it in other places using the id. Here is an example:\n## head 2 {#my_head2} Please click [here](#my_head2) to go to head 2. How to resize image # We can also resize images using the attribute. We can specify width or height in absolute pixel values or as percentage relative to the page or column width. For example:\nyou can use absolute pixel values ![test image](test.jpg){width=128px} or you can use relative value to the page or column width ![test image](test.jpg){width=90%} How to start a new page for each section # By default, when we generate PDF from Markdown files, each section started by the level 1 header does not start from a new page. It will continue from where the last section ends. If we want to start a new page when a new section starts, we need to add the following settings to head.tex according to this:\n\\usepackage{titlesec} \\newcommand{\\sectionbreak}{\\clearpage} But when I tried to produce PDF with the updated head.tex files, I got an error:\n! Argument of \\paragraph has an extra }. \u0026lt;inserted text\u0026gt; \\par l.1290 \\ttl@extract\\paragraph pandoc: Error producing PDF According to discussions here, it is because Pandoc\u0026rsquo;s default LaTeX redefines the \\pragraph command. We have to disable this behaviour. We need to use -V subparagraph when invoking the pandoc command:\npandoc -V subparagraph -o file.pdf file.md Start a new page only after TOC # What if we only want to add a new page after the table of contents page? An easy way is to hack the \\tableofcontents command. Add the following command to head.tex to redefine \\tableofcontents command:\n\\let\\oldtoc\\tableofcontents \\renewcommand{\\tableofcontents}{\\oldtoc\\newpage} In the above command, we first save the old command and then redefine it to avoid recursive calls.\nLine breaks # In Markdown, you can create a hard linebreak by appending two spaces after a line:\nhello\u0026lt;space\u0026gt;\u0026lt;space\u0026gt; world Using space at the line end for formatting is annoying since it causes the trailing whitespace warning. The space characters are also not visible.\nPandoc also provides an escaped_line_breaks extension. You can use \\ in the end of a line followed by newline character to represent a hard line break:\nhello\\ world Images references # Pandoc supports LaTeX command inside Markdown, to refer to an image, we can use the LaTeX syntax:\n![my great image\\label{fig-my-great-img}](image_great.jpg) In Fig.\\ref{fig-my-great-img}, I show a great image. Generate PDF using Sublime Text build system # It is cumbersome to switch to the terminal and use Pandoc to generate the PDF files and preview it after finishing writing the Markdown files. To simply the process, I use the Sublime Text build system for building PDF file and previewing. I use the light-weight Sumatra PDF reader for PDF previewing.\nAn example build system is shown below:\nClick to see the code. { \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=KaiTi \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;text.html.markdown\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Convert to PDF and Preview\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=KaiTi \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026amp;\u0026amp;SumatraPDF \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; } ] } You can download the build system and head.tex file here. An updated version of head.tex can be found here.\nPandoc is not recognized on Windows systems # For some reasons unknown to me, when using the above build systems to compile Markdown files, I encountered the following errors:\n‘pandoc’ is not recognized as an internal or external command, operable program or batch file.\nAfter looking up the Sublime Text documentation, I find that we can add path in the build system. So I adjust the above build system:\nClick to see the code. { \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=\\\u0026#34;Source Han Serif SC\\\u0026#34; \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;C:/Users/east/AppData/Local/Pandoc/;%PATH%\u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;text.html.markdown\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Convert to PDF and Preview\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=\\\u0026#34;Source Han Serif SC\\\u0026#34; \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026amp;\u0026amp;SumatraPDF \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;C:/Users/east/AppData/Local/Pandoc/;%PATH%\u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; } ] } After that, everything goes well.\nGenerate PDF via Neovim # We can also define a command to generate and preview the PDF via Neovim. For the details, see this commit.\nConclusion # In this post, I give a complete summary on how to generate beautiful PDF files from Markdown. I also share several solutions to the issues I have encountered. I hope that you can now generate beautiful PDF from Markdown files.\nReferences # pandoc variables for LaTeX: https://pandoc.org/MANUAL.html#variables-for-latex change hyperref color: https://stackoverflow.com/a/58885711/6064933 colors provided by dvipsnames pandoc LaTeX template: https://github.com/Wandmalfarbe/pandoc-latex-template Dealing with Chinese in Pandoc Pandoc\u0026rsquo;s handling of block quote Pandoc syntax highlighting Pandoc section number Pandoc command not found Anchors in Pandoc https://github.com/jgm/pandoc/issues/1299 https://github.com/jgm/pandoc/issues/684 Resize image start a new page after toc Pandoc hard line break https://stackoverflow.com/a/48330289/6064933 https://stackoverflow.com/a/28283340/6064933 Image reference in Pandoc Make sure that you can use latex command on the command line.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor other languages, you need to use --mainfont option.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor Windows system, you can use fc-list command after installing the TeX Live full edition. For Linux systems, this command is usually pre-installed.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nTested on Pandoc version 1.12.3.1.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nOnly the font size varies for different header levels.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"30 May 2019","externalUrl":null,"permalink":"/2019/05/30/markdown2pdf_pandoc/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-07-19: Add build method via neovim\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003e本文的中文版本参见 \u003ca href=\"https://jdhao.github.io/2017/12/10/pandoc-markdown-with-chinese/\" target=\"_blank\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003eOver the past few years, I have been using some dedicated note-taking software to manage my notes.\nHowever, all these tools I have tried are unsatisfactory: they are either slow or cumbersome in terms of note searching.\nFinally, I decided to take my notes in Markdown and convert them to PDF using Pandoc for reading.\nIn this post, I will summarize how I do it.\u003c/p\u003e","title":"Converting Markdown to Beautiful PDF with Pandoc","type":"posts"},{"content":"","date":"30 May 2019","externalUrl":null,"permalink":"/tags/pandoc/","section":"Tags","summary":"","title":"Pandoc","type":"tags"},{"content":"","date":"30 May 2019","externalUrl":null,"permalink":"/tags/sublime-text/","section":"Tags","summary":"","title":"Sublime-Text","type":"tags"},{"content":"Introduction # Suppose that we have the following text in normal mode (cursor is indicated by ^):\nhello world ^ If we use dw, we delete hello\u0026lt;Space\u0026gt;1 and only world is left; if we use de, hello is deleted and \u0026lt;Space\u0026gt;world is left. Have you ever wondered about why dw do not delete w while de will delete the o in hello? It seems that motion e and w are somewhat inconsistent in their behaviours. It turns out that it has something to do with the exclusivity of motions in Vim.\nExclusive and inclusive motion explained # Most Vim motions are either exclusive or inclusive. This nature of a motion is best revealed when you perform an operation (these operations include, but are not limited to c, d, y) followed by these motions. Inclusive means that the texts between the start and end position of the cursor is used for that operation, while exclusive means that the last character near the end of current buffer2 is not included in the operation.\nIf you had known the above difference between the exclusive and inclusive motion, you would not be surprised about the so called inconsistency between dw and de. The reason is that w is an exclusive motion and e is an inclusive motion. Someone has asked on the Stack Exchange site on why backward delete such db can not delete the character in the cursor position. That is also because b is an exclusive motion so that the last character toward the end of the buffer is not included.\nChange the exclusivity of a motion # To force an exclusive motion to be inclusive or vice versa, you can prepend the motion by v (from Vim doc):\nv When used after an operator, before the motion command: Force the operator to work characterwise, also when the motion is linewise. If the motion was linewise, it will become |exclusive|. If the motion already was characterwise, toggle inclusive/exclusive. This can be used to make an exclusive motion inclusive and an inclusive motion exclusive. Take the case in the first paragraph for an example, dvw will delete hello\u0026lt;Space\u0026gt;w (w becomes inclusive) and dve will delete only hell (e becomes exclusive). To find more detailed doc on this behaviour, read :h exclusive carefully.\nReferences # https://stackoverflow.com/questions/21686886/making-backwards-motions-always-inclusive https://stackoverflow.com/questions/16815627/in-vim-why-is-the-behavior-of-w-word-selector-inconsistent-when-preceded-by-d https://stackoverflow.com/questions/23041326/why-dmotion-command-is-not-consistent-with-motion-command-in-vim/56179473#56179473 \u0026lt;Space\u0026gt; indicates a space character.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nYou need to interpret this carefully. When you do forward motions, the last character is where the motion lands. If you do backward motions, the last character in this context means the character your motion starts at.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 May 2019","externalUrl":null,"permalink":"/2019/05/18/nvim_exclusive_inclusive_motion/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eSuppose that we have the following text in normal mode (cursor is indicated by\n\u003ccode\u003e^\u003c/code\u003e):\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehello world\n^\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf we use \u003ccode\u003edw\u003c/code\u003e, we delete \u003ccode\u003ehello\u0026lt;Space\u0026gt;\u003c/code\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e and only \u003ccode\u003eworld\u003c/code\u003e is left; if we\nuse \u003ccode\u003ede\u003c/code\u003e, \u003ccode\u003ehello\u003c/code\u003e is deleted and \u003ccode\u003e\u0026lt;Space\u0026gt;world\u003c/code\u003e is left. Have you ever wondered\nabout why \u003ccode\u003edw\u003c/code\u003e do not delete \u003ccode\u003ew\u003c/code\u003e while \u003ccode\u003ede\u003c/code\u003e will delete the \u003ccode\u003eo\u003c/code\u003e in \u003ccode\u003ehello\u003c/code\u003e? It\nseems that motion \u003ccode\u003ee\u003c/code\u003e and \u003ccode\u003ew\u003c/code\u003e are somewhat inconsistent in their behaviours. It\nturns out that it has something to do with the exclusivity of motions in Vim.\u003c/p\u003e","title":"Exclusive and Inclusive Motion in Neovim/Vim","type":"posts"},{"content":"This is the 3rd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ How do I use last search pattern in substitute command? # As is often the case, when we want to replace some patterns, we may not be able to write the correct regular expression in one pass and have to refine it many times. I often search first to make sure that the search pattern is correct. Then I manually type the search pattern again in substitute command to replace it with the text I want. This is acceptable when the pattern is simple to type. It becomes unacceptable once the search patterns are complicated.\nTo use the last search pattern, you can keep the search part empty in substitute command, e.g., %s//REPLACE/g, which will replace all occurrences of last search pattern with REPLACE. Alternatively, you could use \u0026lt;C-R\u0026gt;/ to input your last search pattern, that is, first press Ctrl+ R and then press /1.\nReferences # Substitue last search How do I write the output of a command or built-in function to a buffer? # A least three ways are possible (take function strftime() and command :scriptnames (:h :scriptnames) for an example).\nUse \u0026lt;C-R\u0026gt;= in insert mode. In insert mode, press Ctrl+R followed by =, then type the function (e.g., strftime('%c')) or use execute() to run a command (e.g., execute('scriptnames')). The output will inserted right after the current cursor.\nUse :put= in command mode. In command mode, first input put=, then input the function or execute() command. The output will be put below the current cursor line.\nUse redir. We first use redir to redirect the output to a Vim register and then paste the content of the register to current buffer. For functions, use the following\n:redir @a | echo strftime(\u0026#39;%c\u0026#39;) | redir END\u0026lt;CR\u0026gt; For commands, use:\n:redir @a | silent scriptnames |redir END\u0026lt;CR\u0026gt; This will redirect the output of function strftime() or command scriptnames to register a. To paste the content of register a, use \u0026quot;ap in normal mode.\nYou can also directly redirect the output to current file:\n:redir \u0026gt;\u0026gt; % | silent scriptnames|redir END|edit , which may be more convenient sometimes.\nUse let with a register. This is similar to using redir, but more concise. For function outputs, use:\n:let @a = strftime(\u0026#34;%c\u0026#34;)\u0026lt;CR\u0026gt; For command outpus, use:\n:let @a = execute(\u0026#34;silent scriptnames\u0026#34;)\u0026lt;CR\u0026gt; Then you can paste the register content to current buffer with \u0026quot;ap\nUsing \u0026lt;C-R\u0026gt;= in insert mode is not good. It will write the output line by line, thus are very slow if your output has hundreds or thousands of the lines. The line indentation may also break if you use this method.\nReferences # How to insert the result of a command into the text in vim? Dump the output of internal vim command into buffer How to redirect ex command output into current buffer or file? Why can\u0026rsquo;t I search some Unicode characters? # For example, given the following text:\n免费\t免费 🆓️️ if you place the cursor on the emoji and use ga, the output is:\n\u0026lt;🆓\u0026gt; 127379, Hex 0001f193, Octal 370623 \u0026lt; ️\u0026gt; 65039, Hex fe0f, Octal 177017 \u0026lt; ️\u0026gt; 65039, Hex fe0f, Octal 177017 It shows that this character is actually made up of three Unicode characters! This is called variant form and the Unicode character U+FE0F is called a variant selector . There are other forms of multi-Unicode-char characters, for example, combining characters, where the character is made up of a base character and one or more decoration characters. In Vim, the main character is called base character and the other character that follows is called composing character.\nIf you use search the base character or the composing character using their Unicode code points, you will find disappointedly that no pattern are found.\nIt turns out the way we search the characters are wrong. To search the base character, you should follow it by \\%C (in no-magic mode) or %C (in magic mode). For example, to search the above base character in the emoji, use\nMagic mode: \\v%U1f193%C No-Magic Mode: \\%U1f193\\%C To search the composing character, it is more complicated. You should type /\u0026lt;Ctrl-V\u0026gt;ufe0f:\n\u0026lt;Ctrl-v\u0026gt;u: start Unicode input fe0f: the code point of the composing character Then press Enter to search.\nReferences # Some emojis (e.g. ☁) have two unicode, u\u0026rsquo;\\u2601\u0026rsquo; and u\u0026rsquo;\\u2601\\ufe0f\u0026rsquo;. What does u\u0026rsquo;\\ufe0f\u0026rsquo; mean? Is it the same if I delete it? Can I search for a Unicode combining character in Vim? regex unicode character in vim How do I clear the message on the status line? # If you set the option laststatus to 2, after searching a word using *, you will find that the text is not cleared automatically. To clear the text , you can press Ctrl+L .\nReferences # How to clear output of function call in VIM? How to make vi redraw screen? How do I use a variable when calling shell command inside Neovim? # You can use :execute, which will evaluate the expression followed before executing it. Suppose that you have defined a download URL variable URL, in order to download it using wget inside Neovim, you can use the following command:\n:execute \u0026#39;!wget \u0026#39; . URL Note the space inside '!wget ' because we use . to concatenate the arguments behind execute to form an expression. Without the space, the command you are going to run is !wget{the_content_of_URL}, which is apparently wrong.\nReferences # function to call shell script with arguments Using variables in a vim shell command How to remove the trailing newline when using the system() function? # When I wanted to assign the output of an external shell command to a Vim variable using system() function, I found that a trailing newline character was present in the returned string, which breaks a lot of things. For example,\nlet python_path = system(\u0026#39;which python\u0026#39;) the variable python_path will contain an annoying newline. To remove this newline character, you can use various methods:\nsubstitute(): you can replace the trailing newline with an empty string to remove it:\nsubstitute(python_path, \u0026#39;\\n$\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;g\u0026#39;) string indexing: you can also utilize string indexing (see :h expr-[:]) if you are sure that there is only one newline at the end of the string:\n\u0026#34; remove last byte from the string let new_path=python_path[:-2] References # Get rid of null character in vim variable? http://vim.1045645.n5.nabble.com/Trimming-newlines-from-calls-to-system-td5720467.html How to remove ^@ character returned by system()? How do you “chomp” a string in Vim? see :h c_CTRL-R for more information.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"14 May 2019","externalUrl":null,"permalink":"/2019/05/14/nifty_nvim_techniques_s3/","section":"Posts","summary":"\u003cp\u003eThis is the 3rd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Nvim Techniques Which Make My Life Easier -- Series 3","type":"posts"},{"content":"Currently I am writing all my Python code using Neovim and a couple of plugins to provide auto-completion, linting, etc.\nFor code auto-completion, I use deoplete as my completion engine and deoplete-jedi as the completion source for Python. They work great most of the time. However, occasionally I can not get any auto-completion for some object instances. For example, auto-completion for object instances returned by the Image.open() method in the package Pillow does not work. I decide to take a look.\nAt first, I think it is an issue with deoplete or deoplete-jedi. However, I find that auto-completion for Image instances returned by other methods, e.g., Image.new(), works as expected. If this is an issue with deoplete or deoplete-jedi, then auto-completion should not work anymore. Maybe it is due to the static type checker Jedi that deoplete-jedi relies on?\nTo find out the real reason, I use the following script to check if Jedi can provide completion for Image instances returned by Image.open() and Image.new() method1:\nimport jedi source1 = \u0026#39;\u0026#39;\u0026#39; from PIL import Image im = Image.new(\u0026#39;test.jpg\u0026#39;, (128, 128)) im. \u0026#39;\u0026#39;\u0026#39; script1 = jedi.Script(source1, 4, len(\u0026#39;im.\u0026#39;), \u0026#39;example1.py\u0026#39;) print(script1.completions()) source2 = \u0026#39;\u0026#39;\u0026#39; from PIL import Image im = Image.open(\u0026#39;test.jpg\u0026#39;) im. \u0026#39;\u0026#39;\u0026#39; script2 = jedi.Script(source2, 4, len(\u0026#39;im.\u0026#39;), \u0026#39;example2.py\u0026#39;) print(script2.completions()) As expected, the first print() shows a list of completion results, while the second print() shows an empty list.\nSo this is actually an issue with Jedi. I filed an issue on the Jedi GitHub repo. After a while, I got a reply from the maintainer of this project. The root cause is that Jedi can not infer the type returned by Image.open() method since it is too dynamic to infer. The author suggested that I may use type hints to help Jedi infer the types of the return objects. I tried two ways based on the type hinting documentation of Jedi.\nThe first way is to use function annotations. I find the source file of Image.open() on my system and change the its definition from\ndef open(fp, mode=\u0026#34;r\u0026#34;) : to\ndef open(fp, mode=\u0026#34;r\u0026#34;) -\u0026gt; Image: Now the auto-completion works for instance returned by Image.open() method. While this method works, it is cumbersome to use since it requires changing the source files of various packages.\nThe second way is to use type hints in inline comments. But the auto-completion does not work anymore. My test script is:\nimport jedi source = \u0026#39;\u0026#39;\u0026#39; from PIL import Image im = Image.open(\u0026#39;test.png\u0026#39;) # type: Image im. \u0026#39;\u0026#39;\u0026#39; script = jedi.Script(source, 4, len(\u0026#39;im.\u0026#39;), \u0026#39;example.py\u0026#39;) print(script.completions()) The print function shows an empty list.\nSo for now, you may stick to function annotations if you really want type hints to work for Jedi.\nReferences # Type hints cheat sheet Type hinting in Pycharm 5 The script is adapted from the tutorial code of Jedi from here\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"13 May 2019","externalUrl":null,"permalink":"/2019/05/13/jedi_autocomplete_type_hints/","section":"Posts","summary":"\u003cp\u003eCurrently I am writing all my Python code using Neovim and \u003ca href=\"https://jdhao.github.io/2018/12/24/centos_nvim_install_use_guide_en/#plugin-install-and-settings\" target=\"_blank\"\u003ea couple of\nplugins\u003c/a\u003e\nto provide auto-completion, linting, etc.\u003c/p\u003e","title":"Why Doesn't Jedi Autocompletion Work for Some Methods","type":"posts"},{"content":"Vim/Nvim has powerful ability in editing texts. But if you are in a browser and want to input some text, can we somehow utilize the editing power of Vim? In this post, I would like to share several ways to use Vim or Vim-like editing when you are working inside a browser.\nGhostText (★★★) # There is also a browser plugin called GhostText which lets you write in the text area using your favorite editor. It supports several popular editors such as Atom, VS Code and Neovim.\nFor Neovim, you need to install vim-ghost.\nHow to use # Open nvim-qt and run :GhostStart to start the server Put your cursor in text area in the browser and click the GhostText plugin. A temp file will be opened in nvim-qt. Start editing the file and the text will be synced to the text ares in your browser in real time. :bd! will stop the server and delete the buffer. Shortcomings # Current vim-ghost has no way to customize the extensions of the temp file created, thus limiting its usefulness. The biggest disadvantage is that you need to perform two steps in order to actually start typing texts.\nText Editor Anywhere (★★★☆) # Text Editor Anywhere is a tool to invoke the editors on your system to edit the text areas in your browser. You can add custom file extensions. When you activate this tool, it lets you select the file extension to use and create a temp file of that extension so you can utilize the full power of the various plugins you have installed.\nCurrently, it is only available on the Windows platform.\nSurfingkeys (★★★★) # Surfingkeys is a Chrome plugin which serves the same purpose as Vimium, if you know what that is. Basically, it lets you use your browser mouseless by providing Vim-like key bindings for various operations you may perform inside the browser.\nSurfingkeys can open up a Vim editor for various text areas inside the browser. You can activate the editor using Ctrl+ i. After you have finished writing, use Ctrl + Enter (in insert mode) or Enter (in normal mode) to write the text.\nwasavi (★★★★) # From the doc of wasavi:\nwasavi is an extension for Chrome, Opera and Firefox. wasavi transforms TEXTAREA element of any page into a VI editor, so you can edit the text in VI. wasavi supports almost all VI commands and some ex commands.\nSo you can see that wasavi is pretty powerful.\nYou can press Ctrl + Enter to activate wasavi when the cursor is focused in a text area. Then you can use almost all your familiar Vim command inside it. To write the text into the text area, use ZZ or :wq as you would probably do in normal Vim.\nFirenvim (★★★★★) # Since Neovim support external UIs. This year (2019), another project named firenvim starts to build an external UI in the textarea of web browsers, which is really amazing. So what does that really mean? It means that you can use your favorite Nvim plugins inside the browser without any compromise. It is a true neovim running inside the browser!\nCheck the firenvim homepage on how to install it for FireFox or Chrome. You can also check here on how to install firenvim on different platforms.\nConclusion # In this post, I introduced several tools to help you input text using Vim-like command or actually using Vim/Nvim. If you work mostly on the Windows platform, Text Editor Anywhere is also a good choice since it can directly invoke the editor installed on your computer. If you work cross platform and want powerful editing ability of Nvim without compromise, then firenvim will definitely be your choice.\nUpdate # 2020-01-01: Add description about firenvim. References # https://news.ycombinator.com/item?id=11023428 ","date":"11 May 2019","externalUrl":null,"permalink":"/2019/05/11/nvim_text_input_browser/","section":"Posts","summary":"\u003cp\u003eVim/Nvim has powerful ability in editing texts. But if you are in a browser and\nwant to input some text, can we somehow utilize the editing power of Vim? In\nthis post, I would like to share several ways to use Vim or Vim-like editing\nwhen you are working inside a browser.\u003c/p\u003e","title":"Vim-like Editing inside Browser","type":"posts"},{"content":"在过去很长一段时间，我都在使用 Sublime Text 来编辑 Markdown 文件，Sublime Text有一个非常实用的功能，可以设定 wrap_width 和 word_wrap 选项，自动在设定的 80个字符长度处 softwrap 文本。所以即使一个段落写成一行，编辑起来或者看起来都不违和。\n最近将 Markdown 编辑器从 Sublime Text 换成 Neovim 以后，由于 Neovim 当前并没有将文本 softwrap 到特定字符宽度的功能，于是我转而使用textwidth选项，强制所有文本在达到 textwidth 以后自动换行。对于英文，这倒没有什么影像，但是对于中文，两行首尾相接位置的字符之间就会莫名其妙地多出一个空格。例如下面的句子\n你好吗 我很好 渲染成 HTML 以后，会变成 你好吗 我很好，汉字吗和我之间多了一个空格。\n这个问题的原因是当初 HTML 的设计者都是以英语为主要语言，英语中单词之间使用空格来分隔，因此不同行之间的英文单词中间的换行符被转换成了空格，具体参见这里。但是中文字符之间并不需要空格来分隔，所以就出现了上述的问题。改 HTML 标准是不可能的了，因此只能通过其他方法来处理。\nHugo 解决办法 # 通过查找，我发现 Hugo 使用的 blackfriday 引擎是支持处理中文字符之间的空格问题的，使用方法很简单，在 Hugo 的配置文件 config.toml 中加入以下配置：\n[blackfriday] extensions = [\u0026#34;joinLines\u0026#34;] 经过观察发现，该选项不仅对中文有效，对英文也有效，因此上下两行之间的英文单词本来应该有的空格也会被取消，所以以上的方法并不好，谨慎使用，除非你主要使用的是中文。\nPandoc 解决办法 # 如果你使用 Pandoc 将 Markdown 转为 HTML，那么可以加入 Extension east_asian_line_breaks，这个 Extension 就是专门针对上述的情况设计的。\n权宜之计 # 如果中文和英文的博客都写，并且使用 Hugo，目前似乎没有完美的解决方案。只好把一个段落的问题都写成一行，为了达到 softwrap 的效果，我们可以使用Goyo，近似实现像 Sublime Text 中那样的结果。\n参考资料 # Hugo 对中文字符之间空格的处理 https://lizyn.com/zh/post/2018/md-space-between-cjk/ https://github.com/gohugoio/hugo/pull/3574 Pandoc 中这种情况的处理 https://talk.commonmark.org/t/soft-line-breaks-should-not-introduce-spaces/285/8 https://github.com/jgm/pandoc/pull/534 对于 Vim softwrap width 的讨论 https://stackoverflow.com/questions/989093/soft-wrap-at-80-characters-in-vim-in-window-of-arbitrary-width https://vi.stackexchange.com/questions/8961/soft-linewrap-width https://github.com/neovim/neovim/issues/4386 https://www.reddit.com/r/vim/comments/8ov6l6/soft_wrap_at_a_certain_number_of_characters/ ","date":"4 May 2019","externalUrl":null,"permalink":"/2019/05/04/markdown_extra_space/","section":"Posts","summary":"\u003cp\u003e在过去很长一段时间，我都在\u003ca href=\"https://jdhao.github.io/2017/03/04/Sublime-Windows-Markdown/\" target=\"_blank\"\u003e使用 Sublime Text 来编辑 Markdown 文件\u003c/a\u003e，Sublime Text有一个非常实用的功能，\u003ca href=\"https://stackoverflow.com/q/25900954/6064933\" target=\"_blank\"\u003e可以设定 \u003ccode\u003ewrap_width\u003c/code\u003e  和 \u003ccode\u003eword_wrap\u003c/code\u003e 选项\u003c/a\u003e，自动在设定的 80个字符长度处 softwrap 文本。所以即使一个段落写成一行，编辑起来或者看起来都不违和。\u003c/p\u003e","title":"Markdown 生成 HTML 时汉字之间出现多余空格问题","type":"posts"},{"content":"五一假期入手了小米9，在安装谷歌 Play 商店以及启用过程中遇到了一些问题，特此记录解决方法。\n谷歌服务启用以及 Play store 安装 # 由于之前使用的手机是一加 3T，当时安装谷歌框架以及谷歌服务使用的是一个叫 Go 谷歌安装器 的应用，安装这个应用之后，它可以帮助我们自动安装所需要的所有谷歌套件。这次小米 9 到了以后，我也下载安装了这个应用，但是打开应用以后，它检测的结果是谷歌服务已经安装了，甚至谷歌 Play 商店也安装了，这让我感到奇怪。我在手机上找了一圈，的确找到了谷歌服务的开启开关，但是并没有找到谷歌 play 商店。\n网上的各种教程满天飞，但是很多都是语焉不详，其实小米 9 的 MIUI 10.2.15.0 版本已经自带了谷歌服务，不需要安装谷歌服务了。谷歌服务具体打开方法为: 打开手机设置，搜素「谷歌」, 会看到「谷歌服务」, 点击进入，然后打开开关即可。\n接下来就需要安装谷歌 Play 商店了，可以从 APKMIRROR 下载最新版的 Google play APK，点击 这里 进入下载页面。下载以后安装即可。\nPlay 商店卡在核对信息环节 # 装好 Play 商店，打开梯子，然后打开 Play 商店应用，一直卡在「正在核对信息」这个画面。\n从网上找了各种帖子，有一个帖子提到，可以从应用商店搜索「谷歌安装器」,然后到豌豆荚下载安装该应用，会自动安装所有需要的程序。经过测试，该应用在安装谷歌服务时，会出错，系统会提示「安装失败（-25）」，失败原因：「无法降级安装」，如下图所示：\n反复尝试均无效，说明该方法是有问题的，可能并不适用于最新的 MIUI 系统。另外有人说是梯子不行，其实并不是，因为挂上梯子以后，在浏览器里面，是可以正常访问 Google 以及 YouTube 等网站的，说明并不是梯子本身的问题。\n验证成功的方法 # 首先安装最新的谷歌 Play 服务，从 这里 下载，下载的程序是可以顺利安装的。\n接着确保系统中的谷歌服务是开启状态（参考上面的小米 9 谷歌服务启动方法）。\n然后，安装 OurPlay 这个应用，从 官网 可以下载，下载安装以后，点击进入底部的「启动」页面，OurPlay 会自动下载一些必要的组件。然后，在该页面的上部，选择「不加速」。\n最后，重启手机，挂上梯子，打开 Play 商店，应该就不会卡在核对信息界面了。\n未经验证的方法 # 也有人说并不需要这么麻烦，一直卡在核对信息界面，可能是因为没有清除 Play 商店的缓存等数据信息。\n解决方法：进入系统设置，找到 应用管理 -\u0026gt; 更多应用 -\u0026gt; Google Play 商店，点击进入，然后点击「存储占用」, 进入新窗口，点击 清除数据 -\u0026gt; 清除全部数据。重启手机，挂好梯子，再登录 Play 商店，可以正常登录。\n参考 # 某乎上的方案 清除缓存和数据似乎可以参考 这里 以及 这里. 全部重装谷歌套件，不清楚是否可行，可以一试. v2ex 上的类似话题. ","date":"4 May 2019","externalUrl":null,"permalink":"/2019/05/04/mi9_google_play_configure/","section":"Posts","summary":"\u003cp\u003e五一假期入手了\u003ca href=\"https://zh.wikipedia.org/wiki/%E5%B0%8F%E7%B1%B39\" target=\"_blank\"\u003e小米9\u003c/a\u003e，在安装谷歌 Play 商店以及启用过程中遇到了一些问题，特此记录解决方法。\u003c/p\u003e","title":"小米 9 安装谷歌商店（Google Play Store）与相关配置","type":"posts"},{"content":" Many normal mode commands accept a count, which means to repeat the motion count times. For example, 3j moves the cursor 3 lines below the current line and 4w will move the cursor four words forward. Usually, the user-defined mappings can not take a count. Even if they can, they will most probably not work the way you expect them to. In this post, I will describe what I have learned to make a fairly complex mapping repeatable with a count.\nThe Problem # I find myself often doing something like adding one or two blank lines below the current line to separate the structure of the code or text. So I created a mapping for this operation after some search:\nnnoremap oo :execute \u0026#34;normal! m`o\\\u0026lt;Esc\u0026gt;``\u0026#34;\u0026lt;cr\u0026gt; Unfortunately, the above mapping does not work1, it will print an error:\nE114: Missing quote: \u0026ldquo;normal! m`a\\\nThe above mapping does not work because the way we escape Esc is not correct. When you press oo, it is like we have typed :execute \u0026quot;normal! m`o in the command line and then press the Esc key.\nYou have to use either one of the following mappings to indicate that you want to press the \u0026lt;Esc\u0026gt; key, not type \u0026lt;, E, s, c, \u0026gt; literally:\nnnoremap oo :execute \u0026#34;normal! m`o\\\u0026lt;lt\u0026gt;Esc\u0026gt;``\u0026#34;\u0026lt;cr\u0026gt; nnoremap oo :execute \u0026#34;normal! m`o\u0026lt;c-v\u0026gt;\u0026lt;Esc\u0026gt;``\u0026#34;\u0026lt;cr\u0026gt; nnoremap oo :execute \u0026#34;normal! m`o\\e``\u0026#34;\u0026lt;cr\u0026gt; This is becoming too complicated. nnoremap is actually equivalent to normal!. So we can simply the above mappings to avoid complications:\nnnoremap oo m`o\u0026lt;Esc\u0026gt;`` In the above mapping, we first create a mark ` for the initial cursor position, the insert a newline, go back to normal mode and restore the cursor position2. Then end result is that we insert a newline and maintain the cursor position.\nBut this mapping only works once, i.e., it can not take a count. In order to add two lines below, we have to press oo two times, which is not ideal for me.\nAfter searching the Internet, I found this vim cast, which address this issue specifically. It introduced two ways to create a mapping that accepts a count.\nTwo Solutions # The imperfect one \u0026ndash; using :normal command # The first way is to use :normal command on the right-hand side of the mapping. The :normal {expr} command will execute {expr} as normal mode command just as you have typed them in normal mode. For example, if you execute :normal G in Vim command line, the cursor will be put at the last line of current buffer.\nThe :normal command will take into account the mappings you have defined. If you have defined G to other command, you may not get what you want. To remedy this, Vim also provides a bang version: :normal!, which will use Vim\u0026rsquo;s default mapping for the key.\nThe :normal! command can take an optional {range}, which means to execute the {expr} for current cursor line as well as lines indicated by {range}3.\nCombining the above knowledge, we can create the following mapping:\nnnoremap oo :normal! m`o\u0026lt;Esc\u0026gt;`` This mapping can take a count. If you press 2oo in normal mode, two lines will be insert below current line. But you will notice that the position of the cursor is changed because the :normal! command with range will move the cursors:\nBefore executing the {commands}, the cursor is positioned in the first column of the range, for each line.\nThere is also a pitfall when using this mapping in the last line of current buffer. If you use a count bigger than one, you will get an error:\nE16: Invalid range\nsince there is no lines below the current line.\nThe better \u0026ndash; using the expression register @= # Another method is to use expression register4. The expression register can store a command string or store the result of some functions. The mapping we will use is:\nnnoremap oo @=\u0026#39;m`o\u0026lt;C-V\u0026gt;\u0026lt;Esc\u0026gt;``\u0026#39;\u0026lt;CR\u0026gt; Here, we define the command we will use in the expression register. Note that to represent Esc, we have to precede it with \u0026lt;C-v\u0026gt;. This mapping can take a count and work as expected (the cursor is moved).\nAlso note that the below mappings do not work:\nnnoremap oo @=\u0026#39;m`o\\\u0026lt;lt\u0026gt;Esc\u0026gt;``\u0026#39;\u0026lt;cr\u0026gt; nnoremap oo @=\u0026#39;m`o\\e``\u0026#39;\u0026lt;cr\u0026gt; I do not know why. But they just do not work any more. If anyone knows the reason, do not hesitate to tell me, please.\nUpdate: 2019-05-12\nNote if we change the single quote to double quote, the following mappings using the expression register will work as expected.\nnnoremap oo @=\u0026#34;m`o\\\u0026lt;lt\u0026gt;Esc\u0026gt;``\u0026#34;\u0026lt;cr\u0026gt; nnoremap oo @=\u0026#34;m`o\\e``\u0026#34;\u0026lt;cr\u0026gt; It seems like an issue with single quote, where every character inside is interpreted literally.\nThe best # Although using the expression register mapping solves the problem, it is error prone when writing such expressions without considerable familiarity with the various oddities of Vim.\nI posted my question on Reddit and received a few replies. A new solution based on \u0026lt;expr\u0026gt; (see :h map-\u0026lt;expr\u0026gt;) emerged and it seems the best solution ever:\nnnoremap \u0026lt;expr\u0026gt; oo \u0026#39;m`\u0026#39; . v:count1 . \u0026#39;o\u0026lt;Esc\u0026gt;``\u0026#39; nnoremap \u0026lt;expr\u0026gt; OO \u0026#39;m`\u0026#39; . v:count1 . \u0026#39;O\u0026lt;Esc\u0026gt;``\u0026#39; The expression mapping will evaluate the RHS string before executing it. v: count1 is a special Vim variable. It is the count you supplied to this mapping. If no count is given, it has the default value of 1 (see :h v:count1).\nThis mapping has two benefits. One is that it is clearer. The second is that it executes faster than expression register mappings where the mapping is repeated count times and you can see obvious lags between each mapping.\nA special note about backslash in command line and Vim script # During the process, I have also learned that the meaning of \\ may change depending on the B flag in cpoptions.\nSuppose that we have defined the following insert mode mapping in command line or in Vim script.\nimap \u0026lt;c-a\u0026gt; \\\u0026lt;Home\u0026gt; When you press \u0026lt;C-a\u0026gt; in insert mode, the output will depend on if B flag is in cpoptions.\nwith B flag in cpoptions # Backslash is take literally as is. A backslash is inserted and the cursor is moved to the beginning of cursor line.\nwithout B flag in cpotions # Backlash will escape \u0026lt; the character. When you press \u0026lt;c-a\u0026gt; in insert mode, the 6 characters (i.e., \u0026lt;, H, o, m, e, \u0026gt;) is inserted.\nWhen define mappings, the \u0026lt; should be handled carefully, or you will not get what you want.\nConclusion # In this post, I have summarized how to define a map that can accept a count. Overall, defining the map via expression register is preferred and works great. Extra care must be paid when you include special keys such as Esc inside the expression register.\nReferences # Create a mapping to insert a new line below. :normal command explained and why should we use :normal! combine :execute and :normal command (also about how to represent ). For using \u0026lt;Esc\u0026gt; inside :execute string in script mappings, see here and here. Supply a count to a map. Note that in command line, :execute \u0026quot;normal! m`o\\\u0026lt;Esc\u0026gt;``\u0026quot; will work, also see :h expr-quote. But it does not work in mappings inside a Vim script. It is f**king complicated!\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n`M will move the cursor to the position marked by marker M, see :h mark-motions.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSee :h :normal-range for more information.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nsee also :h quote_=\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"29 April 2019","externalUrl":null,"permalink":"/2019/04/29/nvim_map_with_a_count/","section":"Posts","summary":"\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://blog-resource-1257868508.file.myqcloud.com/20190503204410.png\" alt=\"Mappings\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003eMany normal mode commands accept a \u003ccode\u003ecount\u003c/code\u003e, which means to repeat the motion\n\u003ccode\u003ecount\u003c/code\u003e times. For example, \u003ccode\u003e3j\u003c/code\u003e moves the cursor 3 lines below the current\nline and \u003ccode\u003e4w\u003c/code\u003e will move the cursor four words forward. Usually, the\nuser-defined mappings can not take a count. Even if they can, they will most\nprobably not work the way you expect them to. In this post, I will describe\nwhat I have learned to make a fairly complex mapping repeatable with a count.\u003c/p\u003e","title":"Create Mappings That Take A Count in Neovim","type":"posts"},{"content":" Update log 2021-10-17: add spellsuggest option. In this post, I want to talk about how to enable the built-in spell checking feature in Nvim.\nEnable spell check # First we need to add spell checking languages:\n\u0026#34; spell languages set spelllang=en,cjk In the above config, we set spell languages to en and cjk. Item cjk is used to prevent CJK characters from being marked as spell errors. This is also documented in the Nvim doc:\nIf the name \u0026ldquo;cjk\u0026rdquo; is included, East Asian characters are excluded from spell checking. This is useful when editing text that also has Asian words.\nAnother option to tweak is spellsuggest, I use the following settings:\n\u0026#34; Show nine spell checking candidates at most set spellsuggest=best,9 To enable spell checking, run command :set spell. I have set up two mappings to toggle spell checking:\nnnoremap \u0026lt;silent\u0026gt; \u0026lt;F11\u0026gt; :set spell!\u0026lt;cr\u0026gt; inoremap \u0026lt;silent\u0026gt; \u0026lt;F11\u0026gt; \u0026lt;C-O\u0026gt;:set spell!\u0026lt;cr\u0026gt; We can then press F11 to toggle spell checking.\nCorrect spell errors # In insert mode, if you have typed a word which Vim thinks is miss-spelled, an underline is shown below. To correct this error, press \u0026lt;C-x\u0026gt; followed by s. A completion menu will show a list of suggestions. You can then choose the correct one.\nIn normal mode, to navigate between possible spell errors, use the following shortcut:\n[s: go to previous spell error ]s: go to next spell error The built-in spell checker is not perfect and can create false positives easily. If you think a word is not a spell error, you can use zg to add it to your spell file. To correct an error, press z=. A list of candidate words will be shown. You are prompted to enter a number to select the correct one. Or you may use 1z= to choose the first candidate directly.\nReferences # https://stackoverflow.com/q/640351/6064933 An auto-correctly plugin: https://github.com/sedm0784/vim-you-autocorrect ","date":"29 April 2019","externalUrl":null,"permalink":"/2019/04/29/nvim_spell_check/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-10-17: add \u003ccode\u003espellsuggest\u003c/code\u003e option.\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I want to talk about how to enable the built-in spell checking\nfeature in Nvim.\u003c/p\u003e","title":"Spell Checking in Nvim","type":"posts"},{"content":" Some words are hard to type, it is handy if Neovim can provide auto-completion for the words we are typing. We can achieve word completion in Neovim in two ways.\nNative method # The first method is to use a dictionary file. The dictionary file is a text file which contains plain English words, usually one word a line. In the Neovim config file, add the following settings for dictionary option:\nif has(\u0026#39;unix\u0026#39;) set dictionary+=/usr/share/dict/words else set dictionary+=~/AppData/Local/nvim/words endif For Linux systems, the dictionary file is usually /usr/share/dict/words. For Windows, there is no dictionary file. But you can copy the Linux dict file and place it under ~/AppData/Local/nvim/.\nThen start editing a file, type the first several characters of a word, then press , the completion items will be shown on a completion menu. Typing \u0026lt;CTRL-X\u0026gt;\u0026lt;CTRL-K\u0026gt; is cumbersome. You can add the following setting to complete option:\nset complete+=k Now, in insert mode, you can press \u0026lt;CTRL-N\u0026gt; to start auto-completion and move selection to next word in the completion menu, while pressing \u0026lt;CTRL-P\u0026gt; will move the selection to the previous word.\nUse deoplete for completion # The second method is to install deoplete-spell. If you have installed deoplete, the only setting you need is :set spell. Then you should be able to see the autocompletion menu when you start typing characters.\nThere is also a plugin called neco-look which uses the look command on Linux system to provide auto-completion. But it does not work natively on Windows.\nReferences # https://vim.fandom.com/wiki/Dictionary_completions ","date":"26 April 2019","externalUrl":null,"permalink":"/2019/04/26/words_completion_nvim/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n   \u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190430093054.png\" alt=\"\"\u003e\n\u003c/p\u003e\n\u003cp\u003eSome words are hard to type, it is handy if Neovim can provide auto-completion\nfor the words we are typing. We can achieve word completion in Neovim in two\nways.\u003c/p\u003e","title":"English Words Completion inside Neovim/Vim","type":"posts"},{"content":"Introduction # I have been using Vim-airline for a while to customize my statusline. We can change the theme used for statusline with the many themes available in vim-airline-themes. Not all these themes looks good since it depends on the background color you use for Neovim and certainly your aesthetics.\nI only use a handful of themes myself and I change my themes when I feel bored with one theme. It occurs to me that I can write a simple script to randomly pick a theme from my favorite list1. It turns out writing such a script is not easy for Neovim newbies like me.\nIn this post, I would like to share how I end up achieving what I want by mixing Vim script and Python script.\nPrerequisite # This post is specifically targeted at Neovim users so that some of the settings may not apply if you use Vim.\nFirst, you need to install Python and Python 3 is preferable since Python 2 support will stop in 2020. Make sure that you can call python from the command line. When you start Neovim and :echo has('python3') will print 1 in the command line.\nYou should also install pynvim, which is the Python client and plugin host for Neovim. You can install it with pip:\npip install pynvim Finally, you should set the variable g:python3_host_prog to the location of Python executable. If your Python executable path is ~/anaconda3/bin/python, you should add the following setting in your init.vim:\nlet g:python3_host_prog=expand(\u0026#39;~/anaconda3/bin/python\u0026#39;) After that, open Neovim and run :checkhealth provider and make sure there is no error in the part about Python 3. A sample output is shown below:\n## Python 3 provider (optional) - INFO: Using: g:python3_host_prog = \u0026#34;D:/Anaconda/python\u0026#34; - INFO: Executable: D:\\Anaconda\\python - INFO: Python version: 3.6.5 - INFO: pynvim version: 0.3.2 - OK: Latest pynvim is installed. Pick a random airline theme # Generate a random number in the given range # To pick a random theme from my favorite themes, I need to create a function which return a random index of the theme given the lowest and highest index. First, I will show my final function and then I will explain it bit by bit.\nClick to see the function. \u0026#34; generate a random integer from range [Low, High] using Python function! RandInt(Low, High) abort \u0026#34; if you use Python 3, the python block should start with `python3` instead of \u0026#34; `python`, see https://github.com/neovim/neovim/issues/9927 python3 \u0026lt;\u0026lt; EOF import vim import random # using vim.eval to import variable outside Python script to python idx = random.randint(int(vim.eval(\u0026#39;a:Low\u0026#39;)), int(vim.eval(\u0026#39;a:High\u0026#39;))) # using vim.command to export variable inside Python script to vim script so # we can return its value in vim script vim.command(\u0026#34;let index = {}\u0026#34;.format(idx)) EOF return index endfunction In the above function RandInt(), we define a function which accept two parameter Low and High. We generate a random integer between in the range $[Low, High]$ using the Python package random and return the index.\nThe format for Python script is as follows:\npython[3] \u0026lt;\u0026lt; MARKER # python code here MARKER If you use Python 2, you should use python keyword, otherwise use python3, which is explained here. To manipulate Neovim inside Python script, we need to import package vim.\nTo get the value of Vim variable Low and High inside Python script, we need to import them. vim.eval()2 is used to get their value, which is used to evaluate the expression using built-in expression evaluator. According to documentation, the return value is:\na string if the Vim expression evaluates to a string or number So we need to use int() to convert the return value to integer.\nAfter we get the value of idx, how do we use it outside the Python script? We can use vim.command() to achieve that:\nvim.command(\u0026#34;let index = {}\u0026#34;.format(idx)) vim.command(str) will execute str as Vim command, thus assigning the value of idx to Vim variable index.\nPick a airline theme # Now we can define a list of themes to pick and generate a random index and set the airline theme using the theme at the index. An example code is shown below:\nlet s:candidate_airlinetheme = [\u0026#39;alduin\u0026#39;, \u0026#39;ayu_mirage\u0026#39;, \u0026#39;base16_flat\u0026#39;, \\ \u0026#39;monochrome\u0026#39;, \u0026#39;base16_grayscale\u0026#39;, \u0026#39;lucius\u0026#39;, \u0026#39;base16_tomorrow\u0026#39;, \\ \u0026#39;base16color\u0026#39;, \u0026#39;biogoo\u0026#39;, \u0026#39;distinguished\u0026#39;, \u0026#39;gruvbox\u0026#39;, \u0026#39;jellybeans\u0026#39;, \\ \u0026#39;luna\u0026#39;, \u0026#39;raven\u0026#39;, \u0026#39;seagull\u0026#39;, \u0026#39;solarized_flood\u0026#39;, \u0026#39;term\u0026#39;, \u0026#39;vice\u0026#39;, \u0026#39;zenburn\u0026#39;] let s:idx = RandInt(0, len(s:candidate_airlinetheme)-1) let s:theme = s:candidate_airlinetheme[s:idx] let g:airline_theme=s:theme In the above script, len() is used to get the length of a list.\nConclusion # In this post, I introduced how to mix Python script with Vim script. Specifically, I write a simple function to generate a random index and then pick a airline theme based on the index. I have just scratched the surface of the powerful ability of Python programming inside Vim. For more information, see :h python.\nReferences # Hack vim with Python. python or python3 in script. Export value from Python to Vim. Can I script vim using Python. Import vim variable to Python script. Note that vim-airline provides a command AirlineTheme random to pick a random theme, but you cannot set the list of color themes you want to use.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSee :h python-eval for detailed documentation.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 April 2019","externalUrl":null,"permalink":"/2019/04/22/mix_python_and_vim_script/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#introduction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003eI have been using \u003ca href=\"https://github.com/vim-airline/vim-airline\" target=\"_blank\"\u003eVim-airline\u003c/a\u003e for\na while to customize my statusline. We can change the theme used for statusline\nwith the many themes available in\n\u003ca href=\"https://github.com/vim-airline/vim-airline-themes\" target=\"_blank\"\u003evim-airline-themes\u003c/a\u003e. Not\nall these themes looks good since it depends on the background color you use\nfor Neovim and certainly your aesthetics.\u003c/p\u003e","title":"How to Use Python Inside Vim Script with Neovim","type":"posts"},{"content":"This is the 2nd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 1: https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/ How to add a newline after some pattern? # In other styles of regular expressions, \\n is used to denote a newline character. In nvim, it is a bit complicated. In search, you can use \\n to search a newline. But in replace, you need to use \\r to insert a newline. \\n in replace mode will insert NULL character (shown as \\@) in nvim.\nReferences\nHow to replace a character by a newline in Vim Vim - how to replace one new line \\n with two \\n\u0026rsquo;s :h sub-replace-special How to output the value of a nvim option or variable to current buffer? # For a variable, to output its value to the buffer. You have two options:\nUse :put= followed by variable name in NORMAL mode. For example, if you want to put the value of airline_theme to current buffer, use :put=airline_theme. Use \u0026lt;C-R\u0026gt;= in INSERT mode. In INSERT mode, first press Ctrl+R, then press =, input a variable name, e.g., airline_theme. For a Nvim option, the operation is similar except that you need to add a \u0026amp; before option. For example, to put the value timeoutlen into current buffer, you can either use :put=\u0026amp;timeoutlen\u0026lt;CR\u0026gt; or use \u0026lt;C-R\u0026gt;=\u0026amp;timeoutlen\u0026lt;CR\u0026gt;.\nReferences\nhow to write value of variable into current edit file in vim script How to copy the value of a vim option to a register How do I set multiple options in one autocmd? # Based on some event or the filetypes, we may want to set up several options at once. How do we do it in Vim?\nFor example, when we open a terminal inside Nvim, reset the number and relativenumber settings, we can use the following command:\nautocmd TermOpen * setlocal nonumber norelativenumber References\nMultiple autocommands in vim How do I open a terminal window inside neovim? # For neovim, to open a vertical terminal window, the following works:\n:vnew term://bash :vsplit term://bash :vnew term://zsh :vsplit term://zsh\nTo open a horizontal window, remote v in the above command. More documentation can be found by using :h :terminal inside neovim.\nReferences\nOpening a vertical terminal in Vim 8.1 How do I use all kinds of shortcut in vim command mode? # When we enter the vim command mode by using :, we can not use the many shortcut provided by vim (we are in INSERT MODE in some sense), which makes command editing inefficient. Vim also provides a more powerful command window, which you can open by either press \u0026lt;C-F\u0026gt; in command mode or press q: in NORMAL mode window.\nIn the command mode, a list of history command is shown. To execute a specific command, move the cursor to that line and press \u0026lt;CR\u0026gt; in NORMAL mode. The command will be executed as if from the window where the command window is started. To edit a command, move to the line and start editing using all the shortcut provided by Vim.\nBy default, you will be in NORMAL mode when you open the command window. To open the command window and start inserting command automatically, we will employ the CmdwinEnter event provided by Vim:\nautocmd CmdwinEnter [:] startinsert How to quit command window # :quit Press \u0026lt;C-c\u0026gt; References\nHow can I move around in the Vim command line? How do I create folds in vim configuration? # For long Vim configuration files, it is hard to grasp the structure of the whole file and to navigate the file. Thus it is desirable to create fold for each section of the vim configuration.\nTo achieve this, we can employ the modeline to set the fold-related options for Vim config file only.\nFirst, add the following line to the first or last line of your Vim configuration:\n\u0026#34; Vim: set fdm=marker fmr={{{,}}} fdl=0 fdls=-1: In the above setting, we set the foldmethod (fdm) to marker and set foldmarker (fmr) to {{{,}}}. The start and end fold markers are separated by a comma. So in this example, the start and end fold marker are respective {{{ and }}}. Then Nvim will try to close the fold automatically based on the fold marker. If you use modeline, you must turn on the modeline options if it is off.\ncreate a fold # In your vim configuration, in order to create a section Nvim built-in options and settings, you can use the following boilerplate code:\n\u0026#34; Nvim built-in options and settings {{{ \u0026#34; put all your settings inside here set number set relative number \u0026#34; etc...... \u0026#34; }}} When you save the file and open it again, you will find that the fold takes effect.\nReferences\nIs there a best practice to fold a vimrc file How do I fold my .vimrc non-temporarily using vim code-folding? (sp13-vim) How to find the doc of some settings if we do not know its exact key-words? # I saw some vimrc which have the following settings:\nsyntax spell toplevel Since I donot know the keyword for this setting, I can not go to it directly with :h KEYWORD. We can use helpgrep instead, which will put a list of related results in a quickfix window. In this case, we can use :helpgrep toplevel and it returns 7 results. You can open the quickfix window with :cwindow command and then navigate a window using :cprevious and :cnext command.\nReferences\nvim doc: :h helpgrep How do I set the working directory to where the currently opened file is? # If you are editting a file, how to set vim\u0026rsquo;s working directory to the folder the file reside? In Vim, we can use :cd %:h. % represents the current file and :h is a modifier which gets the path to the current file. For more info about file modifiers, see :h cmdline-special.\nReferences\nchange working directory to current opened file Change working directory to currently opened file ","date":"17 April 2019","externalUrl":null,"permalink":"/2019/04/17/nifty_nvim_techniques_s2/","section":"Posts","summary":"\u003cp\u003eThis is the 2nd post of my post series on nifty Nvim/Vim techniques that will make my editing experience easier.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 1: \u003ca href=\"https://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/03/28/nifty_nvim_techniques_s1/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Little Nvim Techniques to Make My Life Easier -- Series 2","type":"posts"},{"content":"If you have used Sublime Text before, you may be familiar with its snippet feature. Snippets let us type a trigger word and expand it to some boilerplate code or texts that we do not want to repeat typing. We will increase our efficiency dramatically with the help of snippets.\nSeveral snippet plugins are available for Vim/Neovim: snipmate, neosnippet and ultisnips etc. All these plugins are good enough for simple use cases. If you don\u0026rsquo;t know which one to use, just try ultisnips. In this post, I would like to share how to configure ultisnips and use your own snippets in Neovim.\nInstall # In fact, ultisnips is just a snippet engine. To use the real snippets, you also need to install vim-snippets, which provides a comprehensive list of snippets for various filetypes. You can install the two plugins with your favorite plugin manager.\nUltisnips integrates automatically with the auto-completion engine deoplete. If you have installed deoplete, you will see the auto-completion menu for your snippet keywords without any settings.\nThe minimum settings for ultisnips are:\n\u0026#34; Trigger configuration. Do not use \u0026lt;tab\u0026gt; if you use \u0026#34; https://github.com/Valloric/YouCompleteMe. let g:UltiSnipsExpandTrigger=\u0026#39;\u0026lt;tab\u0026gt;\u0026#39; \u0026#34; shortcut to go to next position let g:UltiSnipsJumpForwardTrigger=\u0026#39;\u0026lt;c-j\u0026gt;\u0026#39; \u0026#34; shortcut to go to previous position let g:UltiSnipsJumpBackwardTrigger=\u0026#39;\u0026lt;c-k\u0026gt;\u0026#39; In the above setting, we set the trigger key to Tab, i.e., after typing the trigger word for a snippet, we can then press Tab to trigger snippet expansion. We may define several positions (these positions may optionally contains placeholder texts) in a snippet, which are called tabstops by Ultisnips. In the above settings, Ctrl-J and Ctrl-K are used to jump forward and backward in these tabstops.\nHow to use # All the snippets provided by vim-snippets can be found here. The snippet file for filetype FOO has name FOO.snippets, e.g., for python, the snippet file is python.snippets. Filetype snippets are only available for the specific file types. There is also a special snippet file named all.snippets, which means that snippets inside are available for all file types.\nA snippet has the following form:\nsnippet KEYWORD \u0026#34;some description\u0026#34; [FLAG] snippet body... endsnippet , where KEYWORD is the trigger for the snippet. If you type KEYWORD and press the trigger key, it will be expanded to the snippet body.\nFor example, there is a date keyword in all.snippets, if you type date, and then press Tab, it will be expanded to the current date.\nHow to use your own snippets # It is easy to write a simple snippet. For example, to create a kbd tag quickly when writing Markdown files, we can create a snippet for it. Here is how to do it.\nFirst, create a file named markdown.snippets and add the following content:\nsnippet kbd \u0026#34;HTML kbd tag\u0026#34; \u0026lt;kbd\u0026gt;$1\u0026lt;/kbd\u0026gt; endsnippet This will create a snippet named kbd for filetype markdown.\nWhere to store my custom snippets? # After creating the snippet file, we should put it in a directory where ultisnips can find it. This is a little tricky for Neovim.\nThe documentation of UltiSnips has explained how the snippet files are searched (see :h UltiSnips-how-snippets-are-loaded). However, it is still not crystal clear how to configure so that our custom snippets can be found by UltiSnips.\nFrom the documentation of UltiSnips:\nUltiSnips will search each \u0026lsquo;runtimepath\u0026rsquo; directory for the subdirectory names defined in g:UltiSnipsSnippetDirectories in the order they are defined. For example, if you keep your snippets in ~/.vim/mycoolsnippetsand you want to make use of the UltiSnips snippets that come with other plugins, add the following to your vimrc file.\nlet g:UltiSnipsSnippetDirectories=[\u0026ldquo;UltiSnips\u0026rdquo;, \u0026ldquo;mycoolsnippets\u0026rdquo;]\nThe description above is both informative and confusing since it is written for Vim users, not Neovim users. Because the Neovim config file follows the XDG Base Directory specification and is stored under $HOME/.config/nvim, not $HOME/.vim! As a result, if you follow the above example, you will find that your custom snippets are not available.\nIn the following, I will summarize what is working for Neovim.\nFirst, open nvim and use the command :echo \u0026amp;runtimepath. This command will print all the runtime paths that Neovim will search. According to the documentation, your custom snippets directory should be put under one of these runtime paths. On my Windows machine, the output is like (the full output is omitted for brevity):\nC:\\Users\\Administrator\\AppData\\Local\\nvim,C:\\Users\\Administrator\\AppData\\Local\\nvim\\plugged\\deoplete.nvim,C:\\Users\\Administrator\\AppData\\Local\\nvim\\plugged\\deoplete-jedi,C:\\Users\\Administrator\\AppData\\Local\\nvim\\plugged\\neco-vim,\u0026hellip;..\nOn my Linux machine, the output is like (the full output is omitted):\n/home/jdhao/.config/nvim,/home/jdhao/.local/share/nvim/plugged/deoplete.nvim/,/home/jdhao/.local/share/nvim/plugged/deoplete-jedi/,/home/jdhao/.local/share/nvim/plugged/jedi-vim/,\u0026hellip;..\nDifferent runtime paths are separated by a comma. The steps of configuring custom snippets are the same for both Windows and Linux. So in the following part, I will only focus on Linux since it is more popular.\nOne of the runtime paths on Linux is /home/jdhao/.config/nvim. This directory is where the neovim config file init.vim1 is stored. We choose this directory and create a folder named my_snippets under it. Then move the markdown.snippets file into this folder2.\nmkdir -p $HOME/.config/nvim/my_snippets mv markdown.snippets $HOME/.config/nvim/my_snippets In the third step, we add the following setting to init.vim:\n\u0026#34; `my_snippets` is the directory we created before let g:UltiSnipsSnippetDirectories=[\u0026#34;UltiSnips\u0026#34;, \u0026#34;my_snippets\u0026#34;] Now, open a Markdown file and start typing kbd and you should be able to see the kbd auto-complete item:\nThe completion engine I am using is deoplete and US means that this completion item is from UltiSnips.\nA common error to avoid # You may have write your own snippet for a filetype and put it under the custom snippet directory. However, the snippet does not seem to work.\nOne reason for this is that you have used the wrong name for the filetype. For example, for LaTeX, the filetype is actually tex. So you need to create a file named tex.snippets, not latex.snippets under your custom snippet directory.\nReferences # https://castel.dev/post/lecture-notes-1/ https://github.com/SirVer/ultisnips/issues/830 Difference between different snippet plugins. To check the location of this directory for your computer, use command :echo stdpath('config') inside Neovim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nYou can find all my snippets here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 April 2019","externalUrl":null,"permalink":"/2019/04/17/neovim_snippet_s1/","section":"Posts","summary":"\u003cp\u003eIf you have used Sublime Text before, you may be familiar with its\n\u003ca href=\"http://sublimetext.info/docs/en/extensibility/snippets.html\" target=\"_blank\"\u003esnippet\u003c/a\u003e feature.\n\u003ca href=\"https://en.wikipedia.org/wiki/Snippet_%28programming%29\" target=\"_blank\"\u003eSnippets\u003c/a\u003e let us type a\ntrigger word and expand it to some boilerplate code or texts that we do not\nwant to repeat typing. We will increase our efficiency dramatically with the\nhelp of snippets.\u003c/p\u003e","title":"Setting up Ultisnips for Neovim","type":"posts"},{"content":"本文简单总结 Macbook Pro 上罗技 M590 鼠标的设置。\n使用蓝牙连接电脑 # 罗技 M590 采用双模配置，可以使用蓝牙连接 Mac，也可以使用优联接收器连接 Mac。我选择使用蓝牙连接。 M590 鼠标滚轮下方有一个按钮，按钮后面有 1，2 两个数字配有指示灯，这个按钮用来切换鼠标连接电脑的方式。指示灯 1 亮的时候，表示将使用优联接收器与电脑连接，轻按切换按钮，会看到指示灯 2 开始缓慢闪动，表示我们将要使用蓝牙连接电脑。然后长按切换按钮 3 秒钟，指示灯开始快速闪动，此时鼠标进入了配对模式，在 Mac 的蓝牙设置搜索鼠标，然后点击连接即可。\n配置 # Logitech Options # 首先需要安装 Logitech Options 软件，该软件用来配置鼠标各个按键的功能，安装完成以后打开，软件会自动识别当前和电脑连接的鼠标，点击鼠标的各个按键，可以对按键的功能进行设定，设定鼠标滚轮滚动速度，指针速度等。\n罗技鼠标滚轮失灵的处理方法 # 当你把罗技鼠标连接 Mac 以后，可能会发现鼠标的滚轮不起作用。可以进行如下设置：\n打开「系统偏好设置」，进入「安全性与隐私设置」 在「隐私」页面的「辅助功能」选项，勾选「Logitech Options Daemon」 然后，鼠标滚轮应该就可以使用了。\n平滑滚动与反转鼠标滚动方向 # 如果你第一次使用 Mac 上鼠标，你会发现滚轮方向和 Windows 上是相反的，当鼠标滚轮向下滚动，网页或者文档页面是向上走的，反之，当鼠标滚轮向上滚动，网页或文档的页面是向下走的。并且，滚动不是特别平滑。为了改进这种行为，我们可以使用Mos这款小工具调节鼠标的滚动行为。\n安装 Mos 以后，在鼠标设置里面，把「平滑滚动」和「反转方向」选项打开，就可以获得比较舒适的鼠标体验了。\n参考 # http://www.up4dev.com/2018/12/24/logintech-mouse-whele-not-working/ https://www.v2ex.com/t/539054#; https://www.reddit.com/r/MacOS/comments/8ubvlh/mojave_beta_logitech_mx_master_scroll_does_not/ https://community.logitech.com/s/question/0D55A00007eQqkXSAS/scrolling-not-working-on-macos-mojave https://support.logitech.com/en_us/article/Logitech-Options-permission-prompts-on-macOS-Mojave ","date":"2 April 2019","externalUrl":null,"permalink":"/2019/04/02/mac_logitech_mouse_setting/","section":"Posts","summary":"\u003cp\u003e本文简单总结 Macbook Pro 上\u003ca href=\"https://item.jd.com/4462453.html\" target=\"_blank\"\u003e罗技 M590 鼠标\u003c/a\u003e的设置。\u003c/p\u003e","title":"Mac 上罗技 M590 鼠标设置","type":"posts"},{"content":"This is the 1st post of a series posts on nifty techniques that make my editing experience in Neovim smoother.\nClick here to check other posts in this series. Series 11: https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/ Series 10: https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/ Series 9: https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/ Series 8: https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/ Series 7: https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/ Series 6: https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/ Series 5: https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/ Series 4: https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/ Series 3: https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/ Series 2: https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/ How do we select the current line, but not including the newline character? # In Neovim, if we want to select from the current cursor position to the end of the line, we usually use v$. However, the annoyance is that newline character is also selected. We have to press h to move the cursor one character left.\nHow do we select only to the last character of the line? Fortunately, we can use g_ to do that. According to the documentation:\ng_ To the last non-blank character of the line and [count - 1] lines downward |inclusive|. To select from the cursor position to the last character of this line, we can use vg_.\nThere is also a selection option in Neovim that controls how the selection behaves. If we use set selection=exclusive, then the last character will not be included when we use $.\nAnother way is to remap $ in visual mode. Add the following settings to your config:\nxnoremap $ g_ References\nExtend visual selection til the last character on the line (excluding the new line character) Select entire line in VIM, without the new line character Case-changing operators # Neovim provides several shortcuts to change character cases quickly. All the following operations should be followed by motions (e.g., $, w, e etc.) or text objects:\ng~: switch the case of character gu: change characters to lower case gU: change characters to upper case Add character pair to text objects # Sometimes, we want to add a pair of characters to existing text objects. The ys operator provided by vim-surround is used for that purpose. To use it, the format is\nys\u0026lt;TextOjbect\u0026gt;\u0026lt;char\u0026gt; Suppose we have the following texts, and we want to surround the word welcome with a pair of square bracket ([])\n# | indicate cursor position \u0026#34;wel|come to a new world\u0026#34; Our key strokes should be ysiw]1\nThe above text now becomes:\n\u0026#34;[welcome] to a new world\u0026#34; If you want to surround \u0026quot;welcome to a new world\u0026quot; with (), you can use ysi\u0026quot;)2\nHow do I check the help doc for a keyword under the cursor? # When we are browsing the help file, we may want to check the doc for a keyword quickly. For example, when the cursor is in the keyword clipboard (keywords in the help files are colored as opposed to the regular text), how do we check its documentation immediately?\nIt is very simple: just press K, and you will go the documentation of the keyword. You can also press Ctrl+] to go to the documentation.\nIf you have enabled mouse support in nvim (set mouse=a), you can also double click the keyword to open its documentation. If you are using mintty terminal, clicking the keyword while you are pressing Ctrl will also work.\nBy the way, to go back to previous position in the help file, press Ctrl+O or Ctrl+T.\nReferences\nNvim user manual How to navigate in Nvim help file. Search vim help for keyword under cursor https://vimrcfu.com/snippet/19 Setting up textwidth in Nvim # For text files such as Markdown, LaTeX, we may want to restrict the line length to 80 characters at most for better readability. To set line length of the file, we should use textwidth option:\nMaximum width of text that is being inserted. A longer line will be broken after white space to get this width. A zero value disables this\nAdd the following setting to your init.vim should work:\naugroup my_textwidth au! autocmd FileType text,markdown,tex setlocal textwidth=80 augroup END If we open an existing file, we will find that the file content isn\u0026rsquo;t changed automatically. It turns out that we have to manually format the existing texts. We can use gggqG to format the entire document. When you type new text, it will be correctly splitted to next line at textwidth.\nReferences\nhttps://thoughtbot.com/blog/wrap-existing-text-at-80-characters-in-vim Vim textwidth has no effect How to show the full path of current file? # You can use {count}Ctrl-G to show the full path of current buffer:\n{count}CTRL-G Like CTRL-G, but prints the current file name with full path. If the count is higher than 1, the current buffer number is also given. To show only the full path of file, press 1 followed by Ctrl-G. To also show its buffer number, use a count higher than 1, e.g., 2\u0026lt;C-G\u0026gt;.\nReferences\nHow can I see the full path of the current file? iw means inner word text object.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\ni\u0026quot; is a quote object.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"28 March 2019","externalUrl":null,"permalink":"/2019/03/28/nifty_nvim_techniques_s1/","section":"Posts","summary":"\u003cp\u003eThis is the 1st post of a series posts on nifty techniques that make my editing experience in \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e smoother.\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eClick here to check other posts in this series.\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003eSeries 11: \u003ca href=\"https://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/11/22/nifty_nvim_techniques_s11/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 10: \u003ca href=\"https://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/06/17/nifty_nvim_techniques_s10/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 9: \u003ca href=\"https://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2021/01/07/nifty_nvim_techniques_s9/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 8: \u003ca href=\"https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 7: \u003ca href=\"https://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2020/09/22/nifty_nvim_techniques_s7/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 6: \u003ca href=\"https://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/12/21/nifty_nvim_techniques_s6/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 5: \u003ca href=\"https://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/11/11/nifty_nvim_techniques_s5/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 4: \u003ca href=\"https://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/09/17/nifty_nvim_techniques_s4/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 3: \u003ca href=\"https://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/05/14/nifty_nvim_techniques_s3/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSeries 2: \u003ca href=\"https://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\" target=\"_blank\"\u003ehttps://jdhao.github.io/2019/04/17/nifty_nvim_techniques_s2/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e","title":"Nifty Little Nvim Techniques to Make My Life Easier -- Series 1","type":"posts"},{"content":" Update log 2021-02-20: Add inverse search settings on Windows and macOS Previously, I have written a post on how to write and compile LaTeX source code in Sublime Text. Now that I am familiar with Neovim, I want to do everything related to text editing inside Neovim. In this post, I would like to share how to configure Neovim for LaTeX editing and previewing.\nMy complete config for vimtex can be found here (search vimtex) on my nvim-config repo .\nPre-requisite # Before we begin, you should make sure that you have installed the following software and plugins.\nTeX Distribution: TeX Live is preferred since it is bundled with the possible many tools you will ever need for writing LaTeX. Auto-complete plugin: Since I use Neovim, so I recommend using deoplete. Snippet Engine and snippet plugin: I recommend Ultisnips along with the many snippets provided by plugin vim-snippets. Then we need to install the LaTeX plugin for Neovim. Vimtex is a great choice. To install it, we can use vim-plug:\nPlug \u0026#39;lervag/vimtex\u0026#39; Faster LaTeX source file editing # Auto-completion # In writing LaTeX source code, auto-completion is crucial for fast editing and improves our efficiency dramatically. Vimtex supports completion for citations, labels (for figure, equation, table, section, etc.), commands, environments, packages and document classes and more. For more documentation on completion, see :h vimtex-completion.\nVimtex can work with several completion engines such as deoplete, YouCompleteMe, ncm2. Since I use deoplete for completion, I will just introduce how to configure it for deoplete1. To make vimtex work with deoplete, add the following setting to your init.vim:\n\u0026#34; This is new style call deoplete#custom#var(\u0026#39;omni\u0026#39;, \u0026#39;input_patterns\u0026#39;, { \\ \u0026#39;tex\u0026#39;: g:vimtex#re#deoplete \\}) After that, you should be able to use auto-completion.\nHow to quickly insert an environment? # Vimtex supports autocompletion through autocompletion engines such as deoplete. After configuring vimtex to use deoplete, you should be able to use the snippet provided by Ultisnips2.\nUltisnips is a snippet engine, which uses vim-snippets to provide the actual snippet for various file types. To insert an figure environment, type fig in insert mode and press Tab.\nTo insert an enumerate environment, type enum in insert mode and press Tab. The complete list of snippets provided by vim-snippets can be found here.\nHow to close an environment? # After typing \\begin{ENV}, how do we automatically close it with \\end{ENV}? With vimtex, you can press ]] in insert mode to auto-close an environment.\nUseful mappings and shortcuts # Vimtex provides the e text object to facilitate vim-surround like features for manipulating an environment quickly:\ncse: change an environment dse: delete an environment tse：toggle stared environment and no-star environment, e.g., change from equation* to equation and vice versa. You can also use the standard Vim motion with this object. For example, vie will select the inside an environment, and vae will select the entire environment (including the begin and end commands).\nThere are other shortcuts provided:\n]]: close an environment (only work in insert mode, in normal mode, it will bring cursor to next subsection instead). After you have typed begin{ENV}, use ]] to auto-close it with \\end{ENV} For more mappings, see :h vimtex-default-mappings.\nJumping between references and the definition # It would be nice if we can jump to the definition of a label with the native Vim shortcut Ctrl-]. You have to do several things.\nFirst, you need to install a ctags executable. See here on how to install ctags.\nSecond, you need to install a plugin to manage tags file for you. vim-gutentags is a good option. It will update the tags file automatically once the source file has been changed. To make gutentags work, you need to tell it where your project root is. The easiest way is to make your project a git repository.\nOpen the TeX source file again, the tags file should be created automatically. If the cursor is in \\ref{some_label}, you can press Ctrl + ] to go the position where some_label is defined. BTW, to jump back, you can use Ctrl-T.\nUseful command # :VimtexInfo: show all relevant info about current LaTeX project. :VimtexTocOpen: show table of contents window :VimtexTocToggle: toggle table of contents window :VimtexCompile: Compile the current LaTeX source file and opens the viewer after successful compilation. :VimtexStop: Stop compilation for the current project. :VimtexClean: clean auxiliary files generated in compliation process. Other settings # PDF previewing # Vimtex supports several PDF viewer based on the platform. On Windows, SumatraPDF is a good choice. Below is the settings needed for SumatraPDF to work as the default viewer for the compiled PDF files.\n\u0026#34; settings for sumatraPDF let g:vimtex_view_general_viewer = \u0026#39;SumatraPDF\u0026#39; let g:vimtex_view_general_options \\ = \u0026#39;-reuse-instance -forward-search @tex @line @pdf\u0026#39; let g:vimtex_view_general_options_latexmk = \u0026#39;-reuse-instance\u0026#39; After the above settings, if you use :VimtexCompile command, the compiled PDF will be opened in sumatraPDF automatically. If it does not show up, you can also use :VimtexView to open the PDF manually.\nOn Mac, you can install Skim and use it as a PDF viewer. My current settings for previewing PDF on Mac is:\nClick to see the code. \u0026#34; let g:vimtex_view_method = \u0026#34;skim\u0026#34; let g:vimtex_view_general_viewer = \u0026#39;/Applications/Skim.app/Contents/SharedSupport/displayline\u0026#39; let g:vimtex_view_general_options = \u0026#39;-r @line @pdf @tex\u0026#39; augroup vimtex_mac autocmd! autocmd User VimtexEventCompileSuccess call UpdateSkim() augroup END function! UpdateSkim() abort let l:out = b:vimtex.out() let l:src_file_path = expand(\u0026#39;%:p\u0026#39;) let l:cmd = [g:vimtex_view_general_viewer, \u0026#39;-r\u0026#39;] if !empty(system(\u0026#39;pgrep Skim\u0026#39;)) call extend(l:cmd, [\u0026#39;-g\u0026#39;]) endif call jobstart(l:cmd + [line(\u0026#39;.\u0026#39;), l:out, l:src_file_path]) endfunction Inverse search # Note the below settings are not updated anymore, see this post for a better and up-to-date config without much manual labor.\nFirst, we need to install neovim-remote:\npip install -U neovim-remote Second, we start nvim with a listen address so that nvim can listen for RPC calls.\nnvim --listen localhost:12345 test.tex The port number does not matter as long as it is not taken by other applications. If you use nvim-qt, you can use the following command instead:\nnvim-qt -- --listen localhost:12345 test.tex Now the settings will differ for the PDF viewer you use on different platforms.\nInverse search for Sumatra PDF on Windows # Open Sumatra PDF, go to Settings --\u0026gt; Options, in the bottom part, there is a section Set inverse search command-line, put the following command there:\nnvr --servername localhost:12345 +\u0026#34;%l\u0026#34; \u0026#34;%f\u0026#34; %f: it means the tex source file path corresponding to the current pdf. %l: it means the line in the original tex file. Double click somewhere in the PDF file, your cursor in nvim/nvim-qt should go to the corresponding line in the file buffer.\nInverse search for Skim on macOS # Open Skim PDF viewer, open the Preferences menu and go to Sync page. Set the part PDF-Tex Sync support, use the following settings:\nPreset: Custom Command: nvr Arguments: --servername localhost:12345 +\u0026quot;%line\u0026quot; \u0026quot;%file\u0026quot; Based on discussion here, we can also start nvim without the --listen option (nvim test.tex). When we open a tex file in nvim, we can write the nvim server address to a file and read it when running the nvr command in Skim.\nInside the Nvim config, add the following setting:\naugroup vimtex_mac autocmd! autocmd FileType tex call SetServerName() augroup END function! SetServerName() call system(\u0026#39;echo \u0026#39; . v:servername . \u0026#39; \u0026gt; /tmp/curvimserver\u0026#39;) endfunction For skim, we change the Arguments in Sync page to the following:\nArguments: --servername `cat /tmp/curvimserver` +\u0026quot;%line\u0026quot; \u0026quot;%file\u0026quot; To start inverse search, press Shift and Command key, then click the text you want to inv-search.\nLinting and syntax checking # I use neomake for syntax checking. For LaTeX source file, neomake provides several makers:\nlacheck chktex Proselint Among the makers, lacheck and chktex are installed if you have installed Tex Live. Proselint can be installed via pip:\npip install proselint Setting up table of contents # Vimtex can show a nice little table of contents window on the left side if you use command VimtexTocOpen. By default, the lables in each section is also shown, which makes the TOC clutter with texts. We can customize TOC with following settings:\n\u0026#34; TOC settings let g:vimtex_toc_config = { \\ \u0026#39;name\u0026#39; : \u0026#39;TOC\u0026#39;, \\ \u0026#39;layers\u0026#39; : [\u0026#39;content\u0026#39;, \u0026#39;todo\u0026#39;, \u0026#39;include\u0026#39;], \\ \u0026#39;resize\u0026#39; : 1, \\ \u0026#39;split_width\u0026#39; : 50, \\ \u0026#39;todo_sorted\u0026#39; : 0, \\ \u0026#39;show_help\u0026#39; : 1, \\ \u0026#39;show_numbers\u0026#39; : 1, \\ \u0026#39;mode\u0026#39; : 2, \\} For detailed meaning of the keys in the above dictionary, refer to :h g:vimtex_toc_config.\nTeX directives # If you are compiling a LaTeX source file written in non-English character, you may want to use the TeX directive to specify the compiling program. Vimtex supports two TeX directives: TeX root and TeX program. TeX program directive is useful when we want to compile the LaTeX source code with xelatex instead of pdflatex. In order to compile your LaTeX source file with xelatex, add the following directive to the first line of the source code:\n%!TeX program = xelatex References # https://yufanlu.net/2018/09/03/neovim-latex/ vimtex: Create environment with shortcut Auto-close environment in LaTeX Setting up PDF viewer for Mac. Set up inverse search https://www.sumatrapdfreader.org/docs/Use-Sumatra-as-a-pre-viewer-for-LaTeX-editors.html https://forum.sumatrapdfreader.org/t/can-not-use-the-inverse-search-with-sumatrapdf-and-sublime/1786 https://tex.stackexchange.com/q/460971/114857 https://github.com/mhinz/neovim-remote/issues/132 https://github.com/lervag/vimtex/issues/262 https://github.com/lervag/vimtex/issues/877 https://chiyosuke.blogspot.com/2019/04/neovimvimtextexlive2018tex.html How do I jump from line in Skim to the same line in my text editor? Go to label https://github.com/lervag/vimtex/issues/348 https://github.com/lervag/vimtex/issues/853 TeX directives provided by different programs. For configuring vimtex to work with other completion engines, please refer to :h vimtex-complete-auto.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSee this post on how to configure Ultisnips for Neovim.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"26 March 2019","externalUrl":null,"permalink":"/2019/03/26/nvim_latex_write_preview/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-02-20: Add inverse search settings on Windows and macOS\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003ePreviously, I have written \u003ca href=\"https://jdhao.github.io/2018/03/10/sublime-text-latextools-setup/\" target=\"_blank\"\u003ea post\u003c/a\u003e\non how to write and compile LaTeX source code in Sublime Text. Now that I am\nfamiliar with Neovim, I want to do everything related to text editing inside\nNeovim. In this post, I would like to share how to configure Neovim for LaTeX\nediting and previewing.\u003c/p\u003e\n\u003cp\u003eMy complete config for vimtex can be found \u003ca href=\"https://github.com/jdhao/nvim-config/blob/master/core/plugins.vim\" target=\"_blank\"\u003ehere\u003c/a\u003e (search vimtex)\non my nvim-config repo .\u003c/p\u003e","title":"A Complete Guide on Writing LaTeX with Vimtex in Neovim","type":"posts"},{"content":"In image processing, alpha channel is usually used to control the transparency of an image. In itself, the alpha channel is just a gray level image1. In this post, I want to talk about how to add an alpha channel to RGB image and show it using the Pillow package.\nSuppose that we have the following image:\nWe can add an alpha channel to it using the Image.putalpha() method:\nfrom PIL import Image im = Image.open(\u0026#34;owl.jpg\u0026#34;) alpha = Image.new(\u0026#34;L\u0026#34;, im.size, 50) im.putalpha(alpha) im.show() You might expect to see a new image with opaque color, right? But what shows up is nothing different from the original image? Why? Do we use the putalpha() method wrongly?\nIt turns out this has something to do with how image is shown using the show() method on different platforms. From the documentation of Image.show():\nDisplays this image. This method is mainly intended for debugging purposes. On Unix platforms, this method saves the image to a temporary PPM file, and calls either the xv utility or the display utility, depending on which one can be found. On macOS, this method saves the image to a temporary BMP file, and opens it with the native Preview application. On Windows, it saves the image to a temporary BMP file, and uses the standard BMP display utility to show it (usually Paint). So on Windows, the new image is converted to BMP format and shown using the system default image viewer. During the process of format conversion, the alpha transparency is apparently lost2. That is why you see no difference between and new image and original image.\nTo fix this issue, we can patch the Pillow code to use PNG format as default. First, we need to find the root of Pillow package:\nimport PIL print(PIL.__path__) On my system, the output is:\n[\u0026lsquo;D:\\Anaconda\\lib\\site-packages\\PIL\u0026rsquo;]\nGo to this directory and open the file ImageShow.py. I add the following code after the line register(WindowsViewer):\nclass WindowsPNGViewer(Viewer): format = \u0026#34;PNG\u0026#34; def get_command(self, file, **options): return (\u0026#39;start \u0026#34;Pillow\u0026#34; /WAIT \u0026#34;%s\u0026#34; \u0026#39; \u0026#39;\u0026amp;\u0026amp; ping -n 2 127.0.0.1 \u0026gt;NUL \u0026#39; \u0026#39;\u0026amp;\u0026amp; del /f \u0026#34;%s\u0026#34;\u0026#39; % (file, file)) register(WindowsPNGViewer, -1) After that, I can show the image with alpha channel correctly.\nReferences # Image modes in PIL Add alpha channel to image Convert RGBA image to RGB image Image with alpha channel is not displayed correctly on Windows The pixel values are in the range (0, 255), where 0 will black out the image, 255 shows the original image and value between shows opaque image.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe BMP file format seems to support alpha channel, according to this wiki. But that is not guaranteed.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"7 March 2019","externalUrl":null,"permalink":"/2019/03/07/pillow_image_alpha_channel/","section":"Posts","summary":"\u003cp\u003eIn image processing, \u003ca href=\"https://www.makeuseof.com/tag/alpha-channel-images-mean/\" target=\"_blank\"\u003ealpha channel\u003c/a\u003e is usually used to control the transparency of an image.\nIn itself, the alpha channel is just a gray level image\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\nIn this post, I want to talk about how to add an alpha channel to RGB image and show it using the Pillow package.\u003c/p\u003e","title":"Manipulating Images with Alpha Channels in Pillow","type":"posts"},{"content":" A cheat sheet about regular expressions used in Sublime Text.\nSpecial characters # expression Description . Match any character ^ Match line begin $ Match line end * Match previous RE 0 or more times greedily *? Match previous RE 0 or more times non-greedily + Match previous RE 1 or more times greedily +? Match previous RE 1 or more times non-greedily ? Match previous RE 0 or 1 time greedily ?? Match previous RE 0 or 1 time non-greedily A|B Match either RE A or B {m} Match previous RE exactly m times {m,n} Match previous RE m to n times greedily {m, n}? Match previous RE m to n times, non-greedily Character set # expression Description [abc] Match either a, b or c [^abc] Match any character not in this set (i.e., not a, b and c) [a-z] Match the range from a to z [a-f2-8] Match the range from a to f or the range from 2 to 8 [a\\-z] Match a, - or z [a-] Match a, - [-a] Match -, a [{}*|()[]+\\^$.?] Match either one of the chacters in []{}*|()+^$?. Note that you can also use character class inside [], for example, [\\w] matches any character in word character class. Character class # \u0026ldquo;Multiple character\u0026rdquo; character class # An expression of the form [[:name:]] matches the named character class name.\nclass name Description alnum Any alpha-numeric character alpha Any alphabetic character. digit Any decimal digit. xdigit Any hexadecimal digit character. lower Any lower case character. upper Any upper case character. cntrl Any control character1. print Any printable character. punct Any punctuation character. 2 space Any whitespace character. 3 word Any word character (alphanumeric characters plus the underscore). Note: To use upper and lower, you have to enable case sensitve search.\n\u0026ldquo;Single character\u0026rdquo; character class # class name Description \\d Equal to [[:digit:]] \\l Equal to [[:lower:]] \\u Equal to [[:upper:]] \\s Equal to [[:space:]] \\w Equal to [[:word:]] \\D Equal to [^[:digit:]] \\L Equal to [^[:lower:]] \\U Equal to [^[:upper:]] \\W Equal to [^[:word:]] Regex groups # Defining capture groups # expression Description (?\u0026lt;NAME\u0026gt;pattern) Define a regex group named NAME which you can later refer to with \\g{NAME} (?=pattern) Positive lookahead, consumes zero characters, the preceding RE only matches if this matches (?!pattern) Negative lookahead, consumes zero characters, the preceding RE only matches if this does not match (?\u0026lt;=pattern) Positive lookbehind, consumes zero characters, the following RE will only match if preceded with this fixed length RE. (?\u0026lt;!pattern) Negative lookbehind, consumes zero characters, the following RE will only match if not preceded with this fixed length RE. Refering to matching groups (capture groups) # expression Description \\1 Refer to first regex group \\g{1} Refer to first regex group \\g{12} Refer to 12th regex group \\g{-1} Refer to last regex group \\g{-2} Refer to last but one regex group The regex groups are indexed by the order of their opening braces. Note the \\g{NUM} form allows for matching regex group index larger than 9, for example, \\g{12}. Miscellaneous # Escapes # class name Description \\xdd A hexadecimal escape sequence - matches the single character whose code point is 0xdd. \\x{dddd} A hexadecimal escape sequence - matches the single character whose code point is 0xdddd. Word boundaries # The following escape sequences match the boundaries of words:\nclass name Description \\\u0026lt; Matches the start of a word. \\\u0026gt; Matches the end of a word. \\b Matches a word boundary (the start or end of a word). \\B Matches only when not at a word boundary. References # https://www.boost.org/doc/libs/1_44_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html http://docs.sublimetext.info/en/latest/search_and_replace/search_and_replace_overview.html https://github.com/stajahlee/sublime-cheat-sheets/blob/master/cheat-sheets/Regular%20Expressions.cheatsheet Character class The title image is taken from here.\nControl character explanation: https://en.wikipedia.org/wiki/Control_character\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThere are 14 punctuation marks in English: https://grammar.yourdictionary.com/punctuation/what/fourteen-punctuation-marks.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor whitespace characters, see https://en.wikipedia.org/wiki/Whitespace_character\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"28 February 2019","externalUrl":null,"permalink":"/2019/02/28/sublime_text_regex_cheat_sheet/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190304221654.png\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eA cheat sheet about regular expressions used in \u003ca href=\"https://www.sublimetext.com/\" target=\"_blank\"\u003eSublime Text\u003c/a\u003e.\u003c/p\u003e","title":"Sublime Text Regular Expression Cheat Sheet","type":"posts"},{"content":"In computer vision tasks, we need to crop a rotated rectangle from the original image sometimes, for example, to crop a rotated text box. In this post, I would like to introduce how to do this in OpenCV.\nIf you search on the internet about cropping rotated rectangle, there are several answers in the Stack Overflow which suggest using minAreaRect() to find the minimum bounding rectangle, rotating the original image and finally cropping the rectangle from the image. You can find these questions here and here. While some of the answers work, they only work in certain conditions. But if the rotated rectangle is near the edge of the original image, some part of the cropped rectangle is cut out in the output.\nThe imperfect way # Take the following image with rotated text as an example,\nThe corner points1 are (in top left, top right, bottom right, bottom left order):\n[64, 49], [122, 11], [391, 326], [308, 373] If you crop the rectangle using the following script (based on this answer):\nClick to see the code. import cv2 import numpy as np def main(): img = cv2.imread(\u0026#34;big_vertical_text.jpg\u0026#34;) cnt = np.array([ [[64, 49]], [[122, 11]], [[391, 326]], [[308, 373]] ]) # find the exact rectangle enclosing the text area # rect is a tuple consisting of 3 elements: the first element is the center # of the rectangle, the second element is the width, height, and the # third element is the detected rotation angle. # Example output: ((227.5, 187.50003051757812), # (94.57575225830078, 417.98736572265625), -36.982906341552734) rect = cv2.minAreaRect(cnt) print(\u0026#34;rect: {}\u0026#34;.format(rect)) box = cv2.boxPoints(rect) box = np.int0(box) # print(\u0026#34;bounding box: {}\u0026#34;.format(box)) cv2.drawContours(img, [box], 0, (0, 0, 255), 2) # img_crop will the cropped rectangle, img_rot is the rotated image img_crop, img_rot = crop_rect(img, rect) cv2.imwrite(\u0026#34;cropped_img.jpg\u0026#34;, img_crop) cv2.waitKey(0) def crop_rect(img, rect): # get the parameter of the small rectangle center, size, angle = rect[0], rect[1], rect[2] center, size = tuple(map(int, center)), tuple(map(int, size)) # get row and col num in img height, width = img.shape[0], img.shape[1] # calculate the rotation matrix M = cv2.getRotationMatrix2D(center, angle, 1) # rotate the original image img_rot = cv2.warpAffine(img, M, (width, height)) # now rotated rectangle becomes vertical, and we crop it img_crop = cv2.getRectSubPix(img_rot, size, center) return img_crop, img_rot if __name__ == \u0026#34;__main__\u0026#34;: main() In the above code, we first find the rectangle enclosing the text area based on the four points we provide using the cv2.minAreaRect() method. Then in function crop_rect(), we calculate a rotation matrix and rotate the original image around the rectangle center to straighten the rotated rectangle. Finally, the rectangle text area is cropped from the rotated image using cv2.getRectSubPix method.\nThe original, rotated and cropped image are shown below:\nWe can see clearly that some parts of the text are cut out in the final result. Of course, you can pad the image beforehand, and crop the rectangle2 from the padded image, which will prevent the cutting-out effect.\nThe better way # Is there a better way? Yes!\nIn the above code, when we want to draw the rectangle area in the image, we use cv2.boxPoints() method to get the four corner points of the real rectangle. We also know the width and height of rectangle from rect. Then we can directly warp the rectangle from the image using cv2.warpPerspective() function. The following script shows an example:\nClick to see the code. import cv2 import numpy as np def main(): img = cv2.imread(\u0026#34;big_vertical_text.jpg\u0026#34;) # points for test.jpg cnt = np.array([ [[64, 49]], [[122, 11]], [[391, 326]], [[308, 373]] ]) print(\u0026#34;shape of cnt: {}\u0026#34;.format(cnt.shape)) rect = cv2.minAreaRect(cnt) print(\u0026#34;rect: {}\u0026#34;.format(rect)) # the order of the box points: bottom left, top left, top right, # bottom right box = cv2.boxPoints(rect) box = np.int0(box) print(\u0026#34;bounding box: {}\u0026#34;.format(box)) cv2.drawContours(img, [box], 0, (0, 0, 255), 2) # get width and height of the detected rectangle width = int(rect[1][0]) height = int(rect[1][1]) src_pts = box.astype(\u0026#34;float32\u0026#34;) # coordinate of the points in box points after the rectangle has been # straightened dst_pts = np.array([[0, height-1], [0, 0], [width-1, 0], [width-1, height-1]], dtype=\u0026#34;float32\u0026#34;) # the perspective transformation matrix M = cv2.getPerspectiveTransform(src_pts, dst_pts) # directly warp the rotated rectangle to get the straightened rectangle warped = cv2.warpPerspective(img, M, (width, height)) # cv2.imwrite(\u0026#34;crop_img.jpg\u0026#34;, warped) cv2.waitKey(0) if __name__ == \u0026#34;__main__\u0026#34;: main() Now the cropped rectangle becomes\nIf you check carefully, you will notice that there are some black area in the cropped image. That is because a small part of the detected rectangle is out of the bound of the image. To remedy this, you may pad the image a bit and do the crop after that. An example is given here (By me :)).\nAbout the angle of the return rectangle # The last element of the returned rect is the detected angle of the rectangle. But it has confused a lot of people, for example, see here and here.\nThis angle is in the range $[-90, 0)$. After much experiment, I have found that the relationship between the rectangle orientation and output angle of minAreaRect(). It can be summarized in the following image\nThe following description assume that we have a rectangle with unequal height and width length, i.e., it is not square.\nIf the rectangle lies vertically (width \u0026lt; height), then the detected angle is -90. If the rectangle lies horizontally, then the detected angle is also -90 degree.\nIf the top part of the rectangle is in first quadrant, then the detected angle decreases as the rectangle rotate from horizontal to vertical position, until the detected angle becomes -90 degrees. In first quadrant, the width of detected rectangle is longer than its height.\nIf the top part of the detected rectangle is in second quadrant, then the angle decreases as the rectangle rotate from vertical to horizontal position. But there is a difference between second and first quadrant. If the rectangle approaches vertical position but has not been in vertical position, its angle approaches 0. If the rectangle approaches horizontal position but has not been in horizontal position, its angle approaches -90 degrees.\nThis post here is also good at explaining this.\nConclusion # In this post, I compared the two methods to crop the rotated rectangle from the image and also explained the meaning of angle returned by cv2.minAreaRect() method. Overall, I like the second method since it does not require rotating the image and can deal with this problem more elegantly with less code.\nReferences # https://docs.opencv.org/3.1.0/dd/d49/tutorial_py_contour_features.html rotation angle OpenCV\u0026rsquo;s RotatedRect angle does not provide enough information. MinAreaRect angles - Unsure about the angle returned https://namkeenman.wordpress.com/2015/12/18/open-cv-determine-angle-of-rotatedrect-minarearect/ We only need to provide roughly the 4 corner points of the rectangle. Then we can use OpenCV to find the exact the rectangle enclosing the rectangle text area.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nYou need to re-calculate the corner points of the rectangle after padding the original image.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"23 February 2019","externalUrl":null,"permalink":"/2019/02/23/crop_rotated_rectangle_opencv/","section":"Posts","summary":"\u003cp\u003eIn computer vision tasks, we need to crop a rotated rectangle from the original\nimage sometimes, for example, to crop a rotated text box. In this post, I would\nlike to introduce how to do this in OpenCV.\u003c/p\u003e","title":"Cropping Rotated Rectangles from Image with OpenCV","type":"posts"},{"content":"In my previous post, I have introduced how to build Zsh from source and install oh-my-zsh to enhance your terminal experience. In this post, I\u0026rsquo;d like to show you how to manage plugins with zplug and a few more plugins to boost your productivity.\nPlugin management with zplug # Oh-my-zsh has a lot of built-in plugins and works great. But there are also a lot of plugins which are not packaged with oh-my-zsh. You can manually add a plugin foo to the oh-my-zsh custom folder and activate it in .zshrc like the following:\nplugins=( [...other plugins...] foo ) The above method works but becomes tedious once you need to install several external plugins. This is when plugin manager comes to help.\nJust like what you see in Vim, several competing plugin managers are out there for Zsh users, such as antigen, zplug, antibody, zgen1. I decided to use zplug for its boasted speed and its versatility.\nIt is very easy to install:\ncurl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh Then add the following backbone setting for zplug in .zshrc:\n# the backbone of zplug source ~/.zplug/init.zsh # plugins installation goes below zplug load --verbose All the plugin installation settings should be put inside the backbone code. After adding a plugin, do not forget to source .zshrc. To install plugins, use command zplug install on the command line. Please consult the zplug doc for more usage.\nRecommended plugins # Below I will introduce several plugins and themes I find useful.\nAuto suggestions # Plugin zsh-autosuggestions will suggest you the command you want to use based on your command history, making it quicker to execute your frequent command.\nInstall it with zplug:\n# command auto-suggestion based on history zplug \u0026#34;zsh-users/zsh-autosuggestions\u0026#34; Faster directory navigation # z.lua is plugin which makes directory navigation faster. Install it with zplug:\nzplug \u0026#34;skywind3000/z.lua\u0026#34; For its settings and usage, see here.\nVim mode # In zsh, we can use the vi mode for faster command editing. Vi is activated by following command:\nbindkey -v To go to NORMAL mode, press ESC. Basic vi motion and change oprations are provided for you to manipulate the command. Unfortunately, there is no visual indication which mode you are in, making it hard to use the vi mode.\nThe plugin zsh-vim-mode solves this issue by adding the mode indicator in the RPS12. It also adds a few enhanced functions to tweak the vim mode.\nFirst, install it with zplug:\n# enhanced zsh vim mode zplug \u0026#34;softmoth/zsh-vim-mode\u0026#34; You can customize the cursor shape with this plugin, for example:\nMODE_CURSOR_VICMD=\u0026#34;green block\u0026#34; MODE_CURSOR_VIINS=\u0026#34;#20d08a blinking bar\u0026#34; MODE_CURSOR_SEARCH=\u0026#34;#ff00ff blinking underline\u0026#34; To add the current mode indicator on the right prompt, add the following the setting:\nMODE_INDICATOR_VIINS=\u0026#39;%F{15}\u0026lt;%F{8}INSERT\u0026lt;%f\u0026#39; MODE_INDICATOR_VICMD=\u0026#39;%F{10}\u0026lt;%F{2}NORMAL\u0026lt;%f\u0026#39; MODE_INDICATOR_REPLACE=\u0026#39;%F{9}\u0026lt;%F{1}REPLACE\u0026lt;%f\u0026#39; MODE_INDICATOR_SEARCH=\u0026#39;%F{13}\u0026lt;%F{5}SEARCH\u0026lt;%f\u0026#39; MODE_INDICATOR_VISUAL=\u0026#39;%F{12}\u0026lt;%F{4}VISUAL\u0026lt;%f\u0026#39; MODE_INDICATOR_VLINE=\u0026#39;%F{12}\u0026lt;%F{4}V-LINE\u0026lt;%f\u0026#39; The effect is shown below:\nMinor issues # It should be noted that in order to use the surround object provided by this plugin, the value of environment variable KEYTIMEOUT should not be too low.\nAnother issue with this plugin is that it changes the default behaviour of Home and End keys: pressing Home will run help for the current command and pressing End will escape the command line into normal mode. To fix this issue, you need to bindkey Home and End key specifically:\nbindkey \u0026#39;^[[H\u0026#39; beginning-of-line bindkey \u0026#39;^[[F\u0026#39; end-of-line The above settings should be put after the position where this plugin is loaded to take effect.\nSyntax highlight # The plugin fast-syntax-highlighting will highlight your command on the command line, making it easy to distinguish between different parts of the command. To install it, add the following setting:\n# defer means to load this plugin after all the other plugins zplug \u0026#34;zdharma/fast-syntax-highlighting\u0026#34;, defer:2 Conclusions # In this post, I have introduced zplug \u0026mdash; the plugin manager for Zsh and a few useful plugins. For a more comprehensive list of zsh plugins, you may find this awesome zsh list useful. As a concluding remark: you should choose plugins wisely and only install those you truly need.\nReferences # How to indicate vim mode on command line awesome zsh Zsh bindkey and keymaps Zsh parameters. More plugin managers and frameworks can be found here. Choose the one you feel is best.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThis prompt is displayed on the right-hand side of the screen when the primary prompt is being displayed on the left.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"19 February 2019","externalUrl":null,"permalink":"/2019/02/19/zsh_advanced_configuration/","section":"Posts","summary":"\u003cp\u003eIn my \u003ca href=\"https://jdhao.github.io/2018/10/13/centos_zsh_install_use/\" target=\"_blank\"\u003eprevious\npost\u003c/a\u003e, I have\nintroduced how to build Zsh from source and install\n\u003ca href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\"\u003eoh-my-zsh\u003c/a\u003e to enhance your terminal\nexperience. In this post, I\u0026rsquo;d like to show you how to manage plugins with\n\u003ca href=\"https://github.com/zplug/zplug\" target=\"_blank\"\u003ezplug\u003c/a\u003e and a few more plugins to boost your\nproductivity.\u003c/p\u003e","title":"Boosting Your Productivity on Terminal with Zsh and Plugins","type":"posts"},{"content":"","date":"18 February 2019","externalUrl":null,"permalink":"/tags/mac/","section":"Tags","summary":"","title":"Mac","type":"tags"},{"content":" 更新日志 2022-11-06: 更新基本概念，以及一些不清楚的地方。 之前一直听说过 Rime 这个神级输入法的大名，一直迟迟没有试用，一方面现有的各种输入法用着可以，另外，对于 Rime 没有 GUI 界面的配置感觉发怵。之前一直使用的是 QQ 输入法，最近一次升级，造成 Chrome 浏览器频频崩溃，是可忍孰不可忍，正好趁此机会卸载 QQ 输入法，试试 Rime 了。关于 Rime 的配置，网上能够找到的资料实在是过于丰富，为了使文章不过于冗长，一些简单的设置我将不再重复。\n值得注意，Rime 的官方文档并不是很详细，所以网上的很多配置不一定是正确的，注意自己分辨和试验。\n基本概念 # Rime 是一款输入法，你也理解它是输入法内核。同时针对不同的平台它又有不同的前端，这些前端又有自己的名字。\nWindows：weasel，中文也叫“小狼毫”。 macOS：squirrel，中文也叫“鼠须管”。 Linux：ibus-rime，中文也叫“中州韵”。 Android：link，中文也叫“同文输入法”。 这是用户初次接触的时候会感觉困惑的地方。\nRime 的配置方式与配置目录 # Rime 没有 GUI 设置界面，必需通过配置文件进行设置，这点和 Vim/Neovim 类似，它的配置文件使用 YAML 格式。每次更改配置文件以后，都必需要重新部署，新的设置才能生效。\nRime 配置都放在用户配置目录下，具体位置见 Rime wiki。\n用户文件夹下如何配置 # 网上的很多教程教用户直接在用户文件夹的 build 目录下修改 default.yaml ,输入方案.schema.yaml（这里 输入方案 只是某种具体方案的代称）, weasel.yaml 等文件，这是不正确的方式，因为 Rime 升级时，这些文件会被覆盖。 正确的方式是，在用户文件夹下建立 default.custom.yaml 和 {输入方案}.custom.yaml ({输入方案} 代表某种具体输入方案), weasel.custom.yaml 文件，这些文件相当于是补丁，部署以后会更新到默认的配置里面。定制指南里面也有明确提到。\n主题使用以及添加新的颜色主题 # Rime 中，输入法的显示效果称为「颜色主题」(color scheme)，它已经默认带了一些主题，默认的主题在 这里可以找到。要使用默认的主题，例如使用 lost_temple，只要在平台配置文件（例如 mac，就是 squirrle.custom.yaml) 中添加下面的配置：\npatch: \u0026#34;style/color_scheme\u0026#34;: lost_temple 在网上看到一个有趣的主题，如何添加到 Rime 中使用呢？以 Windows 平台为例，假如我们要加入这里提供的「丹青」主题，在系统 custom 设置文件 (即 weasel.custom.yaml) 中加入以下配置即可：\n\u0026#34;preset_color_schemes/tantsing\u0026#34;: # 在配色方案列表裏加入標識爲 tantsing 的新方案 author: Mijiag back_color: 0xE3E3E3 border_color: 0x000000 candidate_text_color: 0x000000 comment_text_color: 0x474747 hilited_back_color: 0x1A0791 hilited_candidate_back_color: 0x6F0B73 hilited_candidate_text_color: 0xE3E3E3 hilited_text_color: 0xE3E3E3 name: \u0026#34;丹青／Tantsing\u0026#34; text_color: 0x000000 引用该主题的时候，使用名字 tantsing，\n\u0026#34;style/color_scheme\u0026#34;: tantsing 效果如下：\n如果要自己制作 Rime 主题，「Rime 西米」是一款网页端工具，可以辅助制作，实时渲染颜色，便于查看最终显示效果。这里有一些预定义的主题可供使用。\n符号自定义 # 首先从 Rime 安装根目录下的 data 子目录拷贝 symbols.yaml 文件到 Rime 用户目录1（安装 Rime 以后，我的用户目录并没有像网上教程所说的包含 symbols.yaml文件），并且把该文件重命名为 symbols.custom.yaml。\n然后仿照里面的例子，我们就可以自定义自己的符号了，例如，下面是我增加的一些符号：\n# 个人常用信息 \u0026#39;/gr\u0026#39;: [jdhao@hotmail.com, 132******68, jdhao] # 快速输入勾和叉 \u0026#39;/gc\u0026#39;: [✓, 🗹, ✗, ☒] 然后，在新建的 luna_pinyin_simp.custom.yaml (luna_pinyin_simp 是沧月简体输入方案的代号)里面，加入下面的设置即可：\npatch: # 引用 `symbols.custom` 文件里面的符号 \u0026#39;punctuator/import_preset\u0026#39;: symbols.custom \u0026#39;recognizer/patterns/punct\u0026#39;: \u0026#34;^/([a-z]+|[0-9])$\u0026#34; 然后在中文模式下，输入 /gc，就会显示出自定义的符号，输入对应的数字，符号就会上屏。\n输入直角引号 # 有的人喜欢在写作的时候使用直角引号：「」和『』，Rime 在 symbols.yaml 里面，已经提供了这个功能，不过是在 [ 和 ] 按键上提供的，中文输入法状态下，按下[ (])，返回的结果中包含 「 (」)，如果按住 Shift 键，按下 [ (])，返回的结果中包含 『 (』)。\n但是因为这毕竟是引号，最好是按下引号的时候，能够输出直角引号，在symbols.custom.yaml 中，找到 punctuator 部分下的 hafl_shape (半角的意思)下面，\n把下面的映射\n\u0026#39;\u0026#39;\u0026#39;\u0026#39; : { pair: [ \u0026#39;‘\u0026#39;, \u0026#39;’\u0026#39; ] } \u0026#39;\u0026#34;\u0026#39; : { pair: [ \u0026#39;“\u0026#39;, \u0026#39;”\u0026#39; ] } 改成\n\u0026#39;\u0026#39;\u0026#39;\u0026#39; : { pair: [ \u0026#39;『\u0026#39;, \u0026#39;』\u0026#39; ] } \u0026#39;\u0026#34;\u0026#39; : { pair: [ \u0026#39;「\u0026#39;, \u0026#39;」\u0026#39; ] } 这样就可以直接输入直角引号了，另外一种方式就是后文将要提到的在词典中添加直角引号映射。\n给沧月简体增加词典 # 在这里可以下载用于沧月拼音方案的词库，只下载下面几个文件即可：\nluna_pinyin.cn_en.dict.yaml luna_pinyin.extended.dict.yaml luna_pinyin.hanyu.dict.yaml luna_pinyin.poetry.dict.yaml 这几个文件都是一些词典文件，然后我们可以仿照这些词典文件建立自己额外的词典，增加自己的词汇。例如，建立名为 jdhao.dict.yaml 的文件，然后添加几个自己常用的词汇，文件内容如下：\n# jdhao.dict.yaml 文件内容 name: jdhao version: \u0026#34;2019-02-16\u0026#34; sort: by_weight use_preset_vocabulary: true import_tables: - luna_pinyin - luna_pinyin.extended - luna_pinyin.hanyu - luna_pinyin.poetry - luna_pinyin.cn_en ... GitHub\tgithub\t100 Stack Overflow\tso\t1000 上述文件中，我们通过 import_tables 把刚才下载的所有词典还有 luna 本身的词典都给包含进来了，然后在下面再加上我们自己建立的词汇。\n词典的格式 # 词典的格式为: 词汇\u0026lt;Tab\u0026gt;编码\u0026lt;Tab\u0026gt;词频，各个项目之间必须用 Tab（也就是制表符）分割，刚开始我不知道，结果使用了空格，自己添加的词汇总是不成功，需要注意。如果使用的是 Sublime Text 来编辑这个 YAML 文件一定要注意不要开启translate_tabs_to_spaces 选项。词频部分可以不要。\n一切添加妥当之后，重新部署。然后试着输入，up，候选列表会出现 U盘，输入 yizhanghong，出现 一丈红，说明词汇已经添加成功了！\n直角引号 # 前面提到了修改自带的引号映射来输入直角引号的方式，但是修改以后，如果想要输入中文的单引号，双引号就不太方便了。利用词典的功能，我们也可以输入直角引号，在jdhao.dict.yaml 中加入下面的映射即可：\n「」\tsyh\t1000 『』\tdyh\t1000 效果如下图所示\n安装并启用小鹤双拼 # 最新版 weasel 并不带有小鹤双拼输入方案，需要自己下载，步骤如下：\n右键任务栏小狼毫的图标，打开菜单，选择「输入法设定」，进入输入法选择界面： 然后点击「获取更多输入方案」，会打开一个 Cmd 窗口,内容如下：\nRime package installer Working directory: d:\\Program Files (x86)\\Rime\\weasel-0.13.0 Package installer directory: d:\\Program Files (x86)\\Rime\\weasel-0.13.0\\ Download cache directory: C:\\Users\\ADMINI~1\\AppData\\Local\\Temp Rime user directory: C:\\Users\\Administrator\\AppData\\Roaming\\Rime Enter package name, URL, user/repo or downloaded ZIP to install: 输入要下载的输入法方案即可，双拼方案在这里可以找到，名称为 double-pinyin，在上面的对话框输入以后就可以下载 Rime 提供的双拼方案。 然后在上图的输入方案选择界面，选择要启用的输入方案。在输入汉字的界面，按 F4 选择小鹤双拼，即可启用。\n安装表情 emoji # Rime 提供了很多表情，地址在 这里，但是对如何安装这些表情却有点语焉不详。\nRime 最新版提供了 东方破 来安装输入方案，这里 也给出了 Windows 系统上使用的方法，但是下载安装以后，在 Cmd 使用如下命令安装 emoji，\nrime-install emoji 或者使用\nrime-install.bat emoji 都会输出下面的错误信息：\nRime package installer Working directory: C:\\Users\\Administrator\\AppData\\Roaming\\plum Package installer directory: C:\\Users\\Administrator\\AppData\\Roaming\\plum\\ Download cache directory: C:\\Users\\ADMINI~1\\AppData\\Local\\Temp Rime user directory: C:\\Users\\Administrator\\AppData\\Roaming\\Rime rime-install: line 2: $\u0026#39;\\r\u0026#39;: command not found rime-install: line 53: syntax error near unexpected token `$\u0026#39;do\\r\u0026#39;\u0026#39; \u0026#39;ime-install: line 53: `for target in \u0026#34;${targets[@]}\u0026#34;; do 这个脚本在 cmd 上运行不了。必须使用 bash 环境才能运行，可以安装 git for Windows。\n安装以后，cd 到刚才安装 plum 所在的目录，首先运行以下命令安装 emoji，\nbash rime-install emoji 然后，使用下面的命令给输入方案打 patch，我使用的输入方案是 luna_pinyin_simp，所以参考 这里 的命令：\nbash rime-install emoji:customize:schema=luna_pinyin_simp 这样才会 patch 成功，这时，位于 %appdata%/rime 目录下的luna_pinyin_simp.custom.yaml 文件中会增加以下配置：\n__patch: # Rx: emoji:customize:schema=luna_pinyin_simp { - patch/+: __include: emoji_suggestion:/patch # } 然后重新部署，emoji 添加成功了！\n沧月简体默认输出英文 # 如果经常和英语打交道，偶尔输入汉字，可以把沧月拼音初始状态设为英语，这样就不用在需要输入英文时切换输入状态了。参考 这里给出的说明，在 luna_pinyin_simp.custom.yaml 文件中加入下面的设置：\npatch: \u0026#34;switches/@0/reset\u0026#34;: 1 # 初始的 ascii mode 设置为「西文」 一些小问题 # 各种配置到底放在哪里啊？ # 有的配置是某个平台独有的，要放在平台相关的，有的配置只想某个输入方案独有，放在方案的配置里面，如果各个方案都想试用某个配置，就放在 default.custom.yaml 里面，参考这里.\n有的配置怎么不生效？ # 很有可能是忘记部署了，任何更改，都必须在部署以后才能生效。当然，也可能是配置填写的时候没有按照格式规范书写，写错了，这时候部署就无法生效，我们可以查看 log 确认，Rime 的 log 文件地址：\n【中州韻】 /tmp/rime.ibus.* 【小狼毫】 %TEMP%\\rime.weasel.* 【鼠鬚管】 $TMPDIR/rime.squirrel.* 通过查看最近的 log 文件，也许能发现具体错误在哪里。\n为什么设置候选词竖排显示无效？ # 很多教程中说到，在 weasel.custom.yaml 里面使用如下的设置，使候选词竖排显示：\npatch: \u0026#34;style/horizontal\u0026#34;: false 但是部署以后，候选词还是横排显示，这是为何？可能是因为某些 color_scheme 本身把候选词设为了横排显示，主题设置的优先级更高，所以仍然横排显示，例如 Rime 鼠须管有多款主题都在主题设置中把候选词设置为横排2，可以查看主题的配置来确定。\n参考 # 这个仓库的配置一直在更新，可以作为参考：https://github.com/ssnhd/rime 教程\u0026amp;指南 Rime 用户指南 (官方文档，需要认真研读) 致第一次安装 Rime 的你 https://mogeko.github.io/2018/031/ https://xinlu.ink/blog/2018/03/13/rime/ 添加表情 https://github.com/rime/rime-emoji/issues/6 https://github.com/rime/rime-emoji/issues/4 词典相关 Rime 额外的词典（针对沧月输入方案） 另外的一些做好的词典 Rime 添加词典 输入法词库转换程序 GitHub 仓库 Rime 词典格式详解 导入词库(写在贴吧里面，格式不好，看着费劲) 排版 中文排版指南(关于直角引号使用) 排版（少数派文章） ** 题图截取自 Rime 官方网站。\n在我的 Windows 系统上，根目录地址为 D:\\Program Files (x86)\\Rime\\weasel-0.13.0，用户配置目录地址为 C:\\Users\\Administrator\\AppData\\Roaming\\Rime。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMac 上鼠须管默认提供的主题可以在这里查看。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 February 2019","externalUrl":null,"permalink":"/2019/02/18/rime_configuration_intro/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190217233344.png\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003e更新日志\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-11-06: 更新基本概念，以及一些不清楚的地方。\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003e之前一直听说过 \u003ca href=\"https://rime.im/\" target=\"_blank\"\u003eRime\u003c/a\u003e 这个神级输入法的大名，一直迟迟没有试用，一方面现有的各种输入法用着可以，另外，对于 Rime 没有 GUI 界面的配置感觉发怵。之前一直使用的是 QQ 输入法，最近一次升级，造成 \u003ca href=\"https://www.v2ex.com/t/535393\" target=\"_blank\"\u003eChrome 浏览器频频崩溃\u003c/a\u003e，是可忍孰不可忍，正好趁此机会卸载 QQ 输入法，试试 Rime 了。关于 Rime 的配置，网上能够找到的资料实在是过于丰富，为了使文章不过于冗长，一些简单的设置我将不再重复。\u003c/p\u003e\n\u003cp\u003e值得注意，Rime 的官方文档并不是很详细，所以网上的很多配置不一定是正确的，注意自己分辨和试验。\u003c/p\u003e","title":"最新版 Rime 输入法使用 (2022 更新)","type":"posts"},{"content":"With the help of Windows Subsystem for Linux (WSL, for short)1, we can use the nearly full Linux environment on Windows system. In this post, I would like to share how to display images inside Ubuntu on Windows, which is one of the popular distrubtions.\nIf you try to show an image with Pillow using the following code inside WSL:\nfrom PIL import Image im = Image.open(\u0026#34;test.jpg\u0026#34;) im.show() you will find that nothing happens if you run the above code. The reason is two-fold:\nThere is no valid image viewer on your Ubuntu on Windows (Pillow will use the system default image viewer, which is Imagemagick on Linux) There is no X server by which you can use GUI applications. After knowing the reasons, the solution is simple. First, we need to install Imagemagick for Ubuntu on Windows (not on Windows 10 itself, this is important!):\nsudo apt install imagemagick Then we need to install a X server on the Windows system, which will serve your GUI applications. A good option for Windows is Vcxsrv. You can install it manually or with the help of Chocolatey:\nchoco install vcxsrv After install, run it on your system. Inside Ubuntu on Windows, you should also set the DISPALY environment variable in your .bashrc:\necho \u0026#34;export DISPLAY=localhost:0.0\u0026#34; \u0026gt;\u0026gt; ~/.bashrc \u0026amp;\u0026amp; source ~/.bashrc Run your Python code again and you should be able to see the image displayed properly on your screen.\nReferences # Image.show() can not display image Install X server and set up for WSL DISPLAY environment variable See here on how to install a Linux distribution with WSL enabled.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 February 2019","externalUrl":null,"permalink":"/2019/02/16/pillow_show_image_on_wls/","section":"Posts","summary":"\u003cp\u003eWith the help of \u003ca href=\"https://docs.microsoft.com/en-us/windows/wsl/about\" target=\"_blank\"\u003eWindows Subsystem for Linux (WSL, for\nshort)\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, we can use the\n\u003cem\u003enearly full\u003c/em\u003e Linux environment on Windows system. In this post, I would like\nto share how to display images inside Ubuntu on Windows, which is one of the\npopular distrubtions.\u003c/p\u003e","title":"Display Image with Pillow inside Ubuntu on Windows","type":"posts"},{"content":"","date":"16 February 2019","externalUrl":null,"permalink":"/tags/x11/","section":"Tags","summary":"","title":"X11","type":"tags"},{"content":"","date":"14 February 2019","externalUrl":null,"permalink":"/tags/cmder/","section":"Tags","summary":"","title":"Cmder","type":"tags"},{"content":"If you work with terminals extensively, you may be tired of typing cd to go to directories, especially when directory names are very long. z.lua is such a tool to make your life easier by jumping to the desired directory smartly.\nInstall # Linux (bash) # If you are using bash shell, you need to download the plugin manually. Down and z.lua file and add the following setting to your .bashrc.\n# change /path/to/z.lua to the actual path of z.lua file eval \u0026#34;$(lua /path/to/z.lua --init bash enhanced once)\u0026#34; Linux (zsh) # If you are using zsh, you can install this plugin with antigen:\nantigen bundle skywind3000/z.lua Windows (Cmder) # z.lua requires that the lua binary is in your PATH. The easiest way to install lua binary is to install LuaDist. Just extract it to somewhere on your system and add the path the lua.exe to your system PATH.\nThen, copy file z.lua and z.cmd to $CMDERROOT/vendor folder and add $CMDERROOT/vendor to your system PATH.\nMake sure to reboot your computer after you have updated the system PATH to make the change take effect.\nHow to use # First, you need to cd to a few directories after installing z.lua to build the cd history. After that, to go a directory containing keyword foo, use the following command:\nz foo Command completion # z.lua supports command completion. To start completion, press \u0026lt;Tab\u0026gt; after the keyword, for example,\nz foo\u0026lt;Tab\u0026gt; Interactive selection # Sometimes, several directories may contain the same keywords. You can use z with -i option to start interactive path selection:\nz -i foo All directories containing foo will be listed with its index, you can then type a index to go to a specific directory.\nJump backward to parent folder # To jump backward to parent directories, use z -b command. Suppose that you are in directory ~/github/foo/bar/util, to go to foo directory, simply use the following command:\nz -b foo other settings # Other useful settings are:\nexport _ZL_MATCH_MODE=1 # enhanced matching mode export _ZL_ECHO=1 # display the path after cd export _ZL_ADD_ONCE=1 # only add path if the $PWD is changed We can also create alias for commonly-used command:\n# alias for z.lua alias zi=\u0026#34;z -i\u0026#34; # interactive selection alias zb=\u0026#34;z -b\u0026#34; # jump backward References # Install z.lua under zsh Discussion on HN ","date":"14 February 2019","externalUrl":null,"permalink":"/2019/02/14/fast_dir_navigation_zlua/","section":"Posts","summary":"\u003cp\u003eIf you work with terminals extensively, you may be tired of typing \u003ccode\u003ecd\u003c/code\u003e to go\nto directories, especially when directory names are very long.\n\u003ca href=\"https://github.com/skywind3000/z.lua\" target=\"_blank\"\u003ez.lua\u003c/a\u003e is such a tool to make your life\neasier by jumping to the desired directory \u003cem\u003esmartly\u003c/em\u003e.\u003c/p\u003e","title":"Faster Directory Navigation with z.lua","type":"posts"},{"content":"In this post, I summarize some of the advanced configurations of Cmder.\nHow to set up the default startup directory for a task? # Open Cmder settings and go to Startup --\u0026gt; Tasks and choose a task (cmd::Cmder or Cmd::Cmder as Admin, etc.). Click Startup dir... on the bottom right of the page and choose the appropriate directory. Restart Cmder and you should be able to see that Cmder start up in the given directory.\nBut, if you have set up startup directory this, cmder here feature will not any more: Cmder will always open the directory you have set up.\nAdd custom color scheme to Cmder # There is a project ConEmu-Color-Themes which provides a few color schemes for ConEmu, on which Cmder is based.\nFirst, we need to clone this project to our local machine:\ngit clone https://github.com/joonro/ConEmu-Color-Themes cd ConEmu-Color-Themes This project provides a powershell script Install-ConEmuTheme.ps1 to simplify the installation of color themes. To run this script, we need to give it execution permission:\nOpen powershell and run it as administrator Run the following command inside powershell: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force Next, in order to avoid any errors, export your current Cmder settings to a custom directory.\nThen, run the following command in Cmder:\npowershell ./Install-ConEmuTheme.ps1 -ConfigPath /path/to/exported/setting/ConEmu.xml -Operation Add -ThemePathOrName themes\\moe-dark.xml It will add the theme moe-dark to the theme list. Be careful with the space in path. If a path has space in it, you will encounter ParameterArgumentValidationError exception. The solution is to enclose the path with single quote.\nFinally, open Cmder setting and import the new setting file from the custom directory. You should be able to see the new color schemes.\nCreating an alias in Cmder # Sometimes, we need to type a command over and over again. It is better to create a shorter alias for it. A great example is changing to directories on other drives on Windows. Due to histortical reasons, the cd command can only go to directories on the current drive by default. To go to directories on other drives, we need the /d parameters. Having to use cd /d each time is cumbersome.\nIf you expect cd to go to another directory no matter whether it is on the current drive or another drive, you can create an alias for it. Here is how to do it in Cmder:\nGo to $CMDER_ROOT/config and open the file user_aliaes.cmd Add the following to the end of the file: cd=cd /d $* Another way is to open cmder settings (Win+ Alt + P), go to Startup --\u0026gt; Environment, and add the following alias for cd:\ncd=cd /d $* Restart Cmder and you should be able to cd to any directory you want! It is a small trick, but it works great and saves your time.\nReferences # Dealing with space in powershell script parameters. Enable the execetuion of powershell script. Microsoft official doc on Set-ExecutionPolicy. doskey documentation. How to go to directory on another drive on Windows. Add custom alias in Cmder. Add custom alias in Cmder. Make alias which accept parameters. Change startup directory https://superuser.com/q/556248/736190 https://conemu.github.io/en/SettingsEnvironment.html#aliases ","date":"3 February 2019","externalUrl":null,"permalink":"/2019/02/03/cmder_advanced_configuration/","section":"Posts","summary":"\u003cp\u003eIn this post, I summarize some of the advanced configurations of\n\u003ca href=\"https://jdhao.github.io/2017/12/29/cmder-usage/\" target=\"_blank\"\u003eCmder\u003c/a\u003e.\u003c/p\u003e","title":"Cmder Advanced Configurations","type":"posts"},{"content":"To run Neovim on Windows, you can either use the terminal Neovim or use a GUI for Neovim. If you use terminal Nvim, you may encounter various annoying issues. Based on my experience, I recommend you using a GUI client for Nvim instead of the terminal one.\nNvim-qt is one of the many GUI front end for Neovim, and it is packaged with Neovim by default on Windows platform. In this post, I will give a summary on how to solve a few issues with Nvim-qt.\nGeneral settings # Where should I put configurations related to nvim-qt? # Nvim-qt will use your Nvim configurations as well as a GUI configuration file1. The GUI config file is named ginit.vim, and you should put it under the same directory as init.vim. The directory is something like C:\\Users\\Administrator\\AppData\\Local\\nvim on Windows. If you are inside Neovim, you can also use the command :echo stdpath('config') to show the exact directory.\nHow do I pass options to neovim when starting nvim-qt on the command line? # Since nvim-qt has its own options, it will get confused if you simply provide it with nvim startup options. You need to specify nvim options after --. For example, to open a file using specific configuration, use the following command:\nnvim-qt some_file.txt -- -u init.vim Shift+Insert does not work in nvim-qt # In Nvim-qt, when we press Shift+Insert in insert mode, it will add a literal \u0026lt;S-Insert\u0026gt;, instead of placing the text on the system clipboard to the cursor position. To fix this issue, we can use the following mapping:\ninoremap \u0026lt;silent\u0026gt; \u0026lt;S-Insert\u0026gt; \u0026lt;C-R\u0026gt;+ GUI settings # Nvim-qt has also provided a list of its own command to configure its behaviors. I list some of the settings in the following sections.\nHow to change the font used? # You can change the font Nvim-qt uses by default. To check the default font used, use GuiFont command without argument inside nvim-qt. On my system, the output is Consolas:h11.\nAccording to nvim-qt documentation, the following attributes for fonts are available:\nhXX - height is XX in points b - bold weight l - light weight i - italic You can chain different attribute with : character. For example, to use font Hack in 10 point and light weight, use the following command:\n:GuiFont Hack:h10:l After issuing the above command, you may see the following warning message:\nWarning: Font \u0026ldquo;Hack\u0026rdquo; reports bad fixed pitch metrics.\nTo suppress this message, use the bang version of GuiFont command instead:\n:GuiFont! Hack:h10:l How to turn off the GUI tabline? # The GUI tabline of nvim-qt is ugly. We can use GuiTabline 0 inside ginit.vim to disable GUI tabline and use the TUI tabline.\nAlthough we have set GuiTabline 0 in ginit.vim, but it seems that it is still not disabled completely. If you open up a file with nvim-qt, the GUI tabline appears and then disappears quickly.\nTo disable it completely, i.e., not showing at all, there are two ways currently. One way is to use the --no-ext-tabline option when invoking nvim-qt:\nnvim-qt --no-ext-tabline The second way is to edit the Windows registry for nvim-qt. Go to Computer\\HKEY_CURRENT_USER\\Software\\nvim-qt\\nvim-qt and add a new String Value. The Name field should be ext_tabline and the Data field should be false. Then the GUI tabline should disappear completely.\nHow to turn off GUI completion menu? # The GUI completion menu is also ugly and too long, since it shows the detailed docstrings of object methods (see image below).\nYou can disable it by adding the following setting in ginit.vim:\nGuiPopupmenu 0 How to reduce line space? # You can use command GuiLinespace to control the line space in nvim-qt, for example, GuiLinespace 1.\nHow to open nvim-qt with maximized window? # Add the following settings to your ginit.vim file:\ncall GuiWindowMaximized(1) How to change cursor color in nvim-qt? # According to this issue, currently, it is not possible to change the cursor position color in nvim-qt. Nvim-qt just sets the cursor to the reverse of background color.\nMy complete configurations for Neovim can be found in my GitHub repo. For How to configure Neovim for Python development, see this post.\nReferences # nvim-qt does not recognize neovim options? nvim-qt and nvim options Disable GUI tabline Suppress font warning in nvim-qt Suppress font warning in nvim-qt Nvim-qt documentation Open nvim-qt with maximized window How to disable GUI tabline completely? See also :h ginit.vim\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 January 2019","externalUrl":null,"permalink":"/2019/01/17/nvim_qt_settings_on_windows/","section":"Posts","summary":"\u003cp\u003eTo run Neovim on Windows, you can either \u003ca href=\"https://jdhao.github.io/2018/11/15/neovim_configuration_windows/\" target=\"_blank\"\u003euse the terminal\nNeovim\u003c/a\u003e or\nuse a GUI for Neovim. If you use terminal Nvim, you may encounter various\nannoying issues. Based on my experience, I recommend you using a GUI client for\nNvim instead of the terminal one.\u003c/p\u003e","title":"Nvim-qt Settings on Windows 10","type":"posts"},{"content":"In this post, I want to share how to manage tmux plugins with Tmux plugin manager (i.e., tpm) and also mention a few useful plugins.\nInstall the plugin manager # Like Vim, to add new tmux plugins, we can either manually install them or employ a plugin manager. Tpm is designed for this purpose, which helps to manage our plugins automatically.\nInstall tpm # First, we need to install tpm itself:\ngit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm Add the following setting to your tmux configuration file .tmux.conf:\n# List of plugins set -g @plugin \u0026#39;tmux-plugins/tpm\u0026#39; set -g @plugin \u0026#39;tmux-plugins/tmux-sensible\u0026#39; # .... maybe more plugins here # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf) run -b \u0026#39;~/.tmux/plugins/tpm/tpm\u0026#39; Then you should refresh the tmux environment to make the change take effect:\ntmux source ~/.tmux.conf Plugin management with tpm # The following operations assume that you are in a tmux session.\nplugin install # Add new plugin to ~/.tmux.conf with set -g @plugin '...'\nPress \u0026lt;prefix\u0026gt; + I1 (capital I) to fetch the plugin.\nplugin update # Press \u0026lt;prefix\u0026gt; + U to update existing plugins\nplugin uninstall # Delete or comment out the plugin line in .tmux.conf\nPress \u0026lt;prefix\u0026gt; + alt + u to remove the plugin\nAutomatic install of tpm on new machines # According to doc here, to automatically install tpm on a new machine, you can add the following setting to your .tmux.conf:\nif \u0026#34;test ! -d ~/.tmux/plugins/tpm\u0026#34; \\ \u0026#34;run \u0026#39;git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm \u0026amp;\u0026amp; ~/.tmux/plugins/tpm/bin/install_plugins\u0026#39;\u0026#34; Plugins to Install # Themes # Themes are great. Here are a few themes you can try.\nTmux theme pack # Tmux theme pack is a collection of themes.\nInstall it with tpm (add the following setting to .tmux.conf):\nset -g @plugin \u0026#39;jimeh/tmux-themepack\u0026#39; Pick a theme:\nset -g @themepack \u0026#39;powerline/block/cyan\u0026#39; tmux-colors-solarized # tmux-colors-solarized is a solarized color theme for tmux.\nInstall it with tpm:\nset -g @plugin \u0026#39;seebi/tmux-colors-solarized\u0026#39; Four themes are provided: 256, dark, light and base16. You can choose one via .tmux.conf option:\nset -g @colors-solarized \u0026#39;256\u0026#39; # set -g @colors-solarized \u0026#39;dark\u0026#39; # set -g @colors-solarized \u0026#39;light\u0026#39; # set -g @colors-solarized \u0026#39;base16\u0026#39; tmux-resurrect # Tmux-resurrect let you easily restore all your tmux session after a system restart so that you do not need to do it manually.\nInstall it with tpm:\nset -g @plugin \u0026#39;tmux-plugins/tmux-resurrect\u0026#39; key bindings # It provides two key bindings for save and restore your tmux environment:\nSave: \u0026lt;prefix\u0026gt; + Ctrl-s Restore: \u0026lt;prefix\u0026gt; + Ctrl-r For more plugins, you can find them here and here.\n\u0026lt;prefix\u0026gt; is your prefix key for tmux\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 January 2019","externalUrl":null,"permalink":"/2019/01/17/tmux_plugin_management/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to share how to manage tmux plugins with \u003ca href=\"%28https://github.com/tmux-plugins/tpm%29\"\u003eTmux plugin\nmanager\u003c/a\u003e (i.e., tpm) and also mention a few useful plugins.\u003c/p\u003e","title":"Tmux Plugin Install and Management","type":"posts"},{"content":"","date":"16 January 2019","externalUrl":null,"permalink":"/tags/debug/","section":"Tags","summary":"","title":"Debug","type":"tags"},{"content":" When I use Pycharm a while ago, I get used to debugging my code with its built-in GUI debugger, which works really well. But when I write code on a server without X11 support, I am forced to use Neovim for Python development. My debugging is reduced to a serize of print statement in the source code. It works well for simple programs. Once my source code becomes long enough or complex enough, it becomes inefficient to add print one by one to just play with an object.\nFinally, I decided to give terminal debuggers a try. In this post, I introduce three debuggers.\nPdb # Python ships with a native debugger called pdb.\nYou can debug your code with intrusive way or non-introsive way. For the intrusive way, you need to modify your source code:\nimport pdb # put the following statement where you want the code to stop and step to pdb pdb.set_trace() Personally, I prefer the non-intrusive way to invode pdb. You can run pdb as module:\npython -m pdb your_script.py It will start debugging your code from the begining of the code.\nCommon commands # Pdb provides a few commands to help you debug your code on its interacitve interface. Here, I list some of the commands and their meanings:\nn: execute the next line p: print the value of an object s: step into a function r: return from a function b [num]: set a breakpoint at line [NUM] c: continue to run the code until a break point is met unt [NUM]: run the code until line [NUM] whatis: print the type of object (similar to p type(some_object)) l: list the context of current line (default 11 lines) h: show help message q: quit the debugger How to enable autocomplete # By default, pdb does not provide auto-completion for variable names and object methods. To enable auto-completion, create a file .pdbrc under your HOME directory with the following settings:\nimport rlcompleter import pdb pdb.Pdb.complete=rlcompleter.Completer(locals()).complete ipdb # Ipdb is like pdb, but with built-in autocompletion, syntax highlighting and more commands. You can install it with pip:\npip install ipdb Its usage is similar to pdb, so I will not waste time here. One thing worth noting is that ipdb adds a sticky command:\nsticky [start end] Toggle sticky mode. When in sticky mode, it clear the screen and longlist the current functions, making the source appearing always in the same position. Useful to follow the flow control of a function when doing step-by-step execution. If ``start`` and ``end`` are given, sticky mode is enabled and only lines within that range (extremes included) will be displayed. It means that in stick mode, the current function will be shown and current line will be highlighted to make your follow the execution of program easier.\npudb # Another terminal debugger worth trying is pudb. First, install it with pip:\npip install pudb To invoke it, you can either use\npython -m pudb my_script.py or simply\npudb3 my_script.py Pudb creates a GUI-like interface for debugging your code. It will show your code, current variable, stack trace, break points and a terminal window in its terminal interface.\nYou can use k and j to move the cursor line up and down and use b to set a break point, which will be highlighted in red. To execute next line of code, use n. To run the code until a break point, use c. For more usage, press h.\nOverall, it is quite powerful, considering that it is implemented in a terminal.\nConclusion # In this post, I introduced three Python debuggers \u0026mdash; pdb, ipdb and pudb. They can both help us to debug the code. Personally, I think pudb is the most beautiful one I want to use.\nReferences # Enable auto-completion for pdb. Python debugger discussions A list of Python debugger. Title image is taken from here\n","date":"16 January 2019","externalUrl":null,"permalink":"/2019/01/16/debug_python_in_terminal/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190116225245.jpg\" width=\"600\"\u003e\n\u003c/p\u003e","title":"How to Debug Python Code in Terminal","type":"posts"},{"content":" Introduction # As a Neovim user who has been using Sublime Text for code editing for some time, I miss the experience I get when dealing with Markdown files with the help plugins such as MarkdownEditing1 and MarkdownPreview2. In this post, I would like to share my settings for Markdown editing inside Neovim to get similar experience, even better!\nMarkdown editing # When we are editing Markdown files, it is nice to have some code snippets to improve efficiency. Fortunately, UltiSnips combined with vim-snippets3 provides a lot of useful snippets for Markdown files.\nThe two plugins can be install via vim-plug:\nPlug \u0026#39;SirVer/ultisnips\u0026#39; Plug \u0026#39;honza/vim-snippets\u0026#39; We need to set up UltiSnips to use it. The following is an example setting:\n\u0026#34; Trigger configuration. Do not use \u0026lt;tab\u0026gt; if you use https://github.com/Valloric/YouCompleteMe. let g:UltiSnipsExpandTrigger=\u0026#34;\u0026lt;tab\u0026gt;\u0026#34; \u0026#34; use \u0026lt;Tab\u0026gt; to trigger autocompletion let g:UltiSnipsJumpForwardTrigger=\u0026#34;\u0026lt;c-j\u0026gt;\u0026#34; let g:UltiSnipsJumpBackwardTrigger=\u0026#34;\u0026lt;c-k\u0026gt;\u0026#34; In the above setting, we use Tab to trigger snippet expansion, which means that after entering the snippet keyword for a particular snippet, using \u0026lt;Tab\u0026gt; will expand the keyword to the full snippet template. If you have used Tab for other mappings, you can set other snippet trigger, e.g., Ctrl + J:\nlet g:UltiSnipsExpandTrigger=\u0026#34;\u0026lt;C-J\u0026gt;\u0026#34; For example, if we type link and then press \u0026lt;Tab\u0026gt;, it will be expanded to the following text:\n[Text](http://www.url.com) Your cursor will be placed at Text, with Text being in selection mode and waiting for you to type the real text. The setting UltiSnipsJumpForwardTrigger and UltiSnipsJumpBackTrigger set up the shortcut key to go to next and previous text area of a snippet, making the snippet editing more convenient. Take the above inline link snippet for an example. Suppose we want to add an inline link to Neovim official website (the address is https://neovim.io/), we can follow the steps below:\nEnter link and press \u0026lt;Tab\u0026gt; to get the link template. Start typing Neovim and Text will be replaced by Neovim. Press \u0026lt;Ctrl-F\u0026gt;. www.url.com will be selected. Start typing https://neovim.io/. There are many more snippets you can use. Some of the commonly used snippet keywords are listed below:\nHeader: Level 1: sec Level 2: ssec Level 3: sssec Level 4: par Level 5: spar Links: Inline link: link Reference link: refl Image link: img Code: Code block: cbl Inline code: ilc Text rendering: Italic text: * Bold text: ** Italic and bold text: *** General: date: date time: time date and exact time: datetime date in ISO format: diso Often times, you will find you want to more snippets to cover your use cases. For example, I have set up a snippet meta which can generate the Markdown front matter fore me, check this post for more details.\nFor how to set up Ultisnips and writing your own snippets, check this post.\nDistraction-free writing # When we are writing Markdown files, we may wish to focus on the task and temporarily disable the distraction elements in Neovim. The plugin goyo is designed specifically for this purpose. We can install it via vim-plug:\nPlug \u0026#39;junegunn/goyo.vim\u0026#39; After installing this plugin, we can use Goyo command to toggle between the normal mode and distraction-free mode.\nThe author also suggests installing limelight, which will dim all lines except the current line when turned on.\nFirst, install it with vim-plug:\nPlug \u0026#39;junegunn/limelight.vim\u0026#39; After install, we can use Limelight to activate it. To deactivate, use Limelight!.\nWe can also integrate goyo and limelight together with the following setting:\nautocmd! User GoyoEnter Limelight autocmd! User GoyoLeave Limelight! when you turn on/off goyo, limelight will also be turn on/off.\nMarkdown syntax highlighting # Code highlighting is also important, which helps us to see the structure of the source code more clearly. The first plugin we should install is vim-markdown. We can install it via vim-plug:\n\u0026#34; tabular plugin is used to format tables Plug \u0026#39;godlygeek/tabular\u0026#39; \u0026#34; JSON front matter highlight plugin Plug \u0026#39;elzr/vim-json\u0026#39; Plug \u0026#39;plasticboy/vim-markdown\u0026#39; Vim-markdown provides a lot of functionalities such as folding, conceal etc. Here, we mainly use its syntax highlighting feature. Below are some settings for vim-markdown:\n\u0026#34; disable header folding let g:vim_markdown_folding_disabled = 1 \u0026#34; do not use conceal feature, the implementation is not so good let g:vim_markdown_conceal = 0 \u0026#34; disable math tex conceal feature let g:tex_conceal = \u0026#34;\u0026#34; let g:vim_markdown_math = 1 \u0026#34; support front matter of various format let g:vim_markdown_frontmatter = 1 \u0026#34; for YAML format let g:vim_markdown_toml_frontmatter = 1 \u0026#34; for TOML format let g:vim_markdown_json_frontmatter = 1 \u0026#34; for JSON format This plugin also provides a few shortcuts and commands:\nShortcut: ]]: go to next header [[: go to previous header Command: Toc: create a vertical window of table of contents TableFormat: format the table under current cursor For more settings about these plugins, please consult their documentations.\nAnother good Markdown syntax plugin I recommend is vim-pandoc-syntax. It provides more syntax highlight and better conceal features. First, install it via vim-plug:\nPlug \u0026#39;vim-pandoc/vim-pandoc-syntax\u0026#39; It is designed to work with vim-pandoc. To use it as a standalone plugin, we should add the following settings in our Neovim configuration file:\naugroup pandoc_syntax au! BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc augroup END After all this settings, your Markdown file will be like what is shown in the following image:\nMarkdown previewing # There are several Markdown previewer for Neovim on GitHub. I have tried previm and markdown-preview.nvim, both of which have cross-platform support for Nvim (Windows, Linux and macOS are supported). After some trail, I think markdown-preview is superior in terms of speed, functionality provided and rendering result. It is easy to install with vim-plug:\n\u0026#34; if you don\u0026#39;t have node and yarn, use pre build Plug \u0026#39;iamcco/markdown-preview.nvim\u0026#39;, { \u0026#39;do\u0026#39;: { -\u0026gt; mkdp#util#install() }} Here is my setting for this plugin:\n\u0026#34; do not close the preview tab when switching to other buffers let g:mkdp_auto_close = 0 To start previewing a markdown file, use MarkdownPreview command. Your default browser will be opened automatically. You can also add a custom key mapping for this command:\nnnoremap \u0026lt;M-m\u0026gt; :MarkdownPreview\u0026lt;CR\u0026gt; For other custom settings, see its documentation.\nSummary # In this post, I introduced the plugins and settings I use for Markdown editing, syntax highlighting and previewing. The end result is the smoothes writing experience I get.\nhttps://github.com/SublimeText-Markdown/MarkdownEditing\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/facelessuser/MarkdownPreview\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nUltiSnips is the snippet engine, while vim-snippets provides the actual snippet.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 January 2019","externalUrl":null,"permalink":"/2019/01/15/markdown_edit_preview_nvim/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20200214144759.png\" width=\"600\"\u003e\n\u003c/p\u003e","title":"Markdown Writing and Previewing in Neovim -- A Complete Guide","type":"posts"},{"content":"In this post, I would like to share line number settings in Neovim to move the cursor more efficiently.\nAbsolute number and relative number in Neovim # Show absolute line number # To know where we are in a file, it is useful to show the line number on the leftmost column of the window. To show line numbers in neovim, we can set the number option:\nset number The absolute line number will be shown at the leftmost column of current window.\nCombine absolute number and relative number # While the number option is useful, it is not convenient for us to move the cursor to other lines. Because cursor movement in Neovim is based on relative distance. For example, to go to 3 lines above or below the current line, we use 3k or 3j. If we want to go to a specific line, we have to manually calculate the distance between current cursor line and the destination line, which is cumbersome and error-prone.\nTo alleviate this issue, Neovim also support showing relative number:\nset relativenumber This option can be combined with the number option. The end result is that only the cursor line shows absolute line number, and all the other lines show relative number( or distance) relative to current line.\nAutomatic toggle of relative line number # In some situations, it is more convenient to see absolute line numbers, e.g., when we want to debug a file and run to specific lines. We can the use plugin vim-numbertoggle to automatically toggle relative number based on several events. e.g., when we enter insert mode or lost focus of a window.\nAutomatic number toggle does not work inside Tmux? # I have found that the number toggle function does not work inside tmux sessions by default1. If I open two tmux panes side by side and open a file in Neovim in one pane and then switch to another tmux pane, the relative line number in Neovim does not change to absolute number.\nI opened an issue on the Neovim GitHub repo and get the right answer from the developer. We need to turn on the focus-events option for tmux. From the Tmux documentaion:\nfocus-events [on | off] When enabled, focus events are requested from the terminal if supported and passed through to applications running in tmux. Attached clients should be detached and attached again after changing this option. We need to edit the tmux config file ~/.tmux.conf and add the following setting:\nset -g focus-events on Refresh the tmux session or start a new tmux session and automatic relative number toggle should work as expected now.\nReferences # Nvim documentation: :h number_relativenumber. Automatic relative number toggle. Issue opened in Neovim GitHub repo. Issue opened in vim-numbertoggle repo. Questions on StackExchange. I am using Tmux 2.8-rc\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"11 January 2019","externalUrl":null,"permalink":"/2019/01/11/line_number_setting_nvim/","section":"Posts","summary":"\u003cp\u003eIn this post, I would like to share line number settings in Neovim to move the\ncursor more efficiently.\u003c/p\u003e","title":"Line Number Settings for More Efficient Movement in Neovim","type":"posts"},{"content":"目前进行的工作需要大规模的语料库来生成中文文本图像，因此查找资料，找了一些中文语料库。本文介绍其中的两个最大的语料库，THUCNews 语料库和中文维基百科语料库，以及如何对原始语料库文件进行简单预处理。\nTHUCNews 语料库 # THUCNews 语料库由清华大学自然语言处理与社会人文计算实验室收集整理发布，语料库是根据新浪新闻 RSS 订阅频道 2005~2011 年间的历史数据筛选过滤生成，包含了 836062篇文本格式的文档1，文档编码使用 UTF-8 编码。这些文档被划分为 14 大类，分别为：财经、彩票、房产、股票、家居、教育、科技、社会、时尚、时政、体育、星座、游戏、娱乐。\n该语料库免费提供给研究者使用，下载地址为THUCNews.zip。\n该语料库文档都是 txt 文件，不需要再进行文本提取的处理。\n中文维基百科语料库 # 维基百科会定期把各种语言的百科网页全部打包存储起来，这里我们选择其中的中文维基百科网页，这个文件可以作为中文语料库来使用。原始维基百科数据是压缩的 xml 文件，为了提取其中词条的纯文本内容，去掉众多 xml 标记，我们必须要对原始的压缩文件进行处理，提取有用信息。\n语料库处理 # 首先下载原始的中文维基百科网页文件，下载地址为https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2，文件大小在 1.5G 以上，在 Windows 系统下，推荐使用 Free Download Manager 下载。\n为了读取其中的文本信息，我们需要借助提取工具，WikiExtractor 是一款不错的开源提取工具，使用该工具，可以方便地处理语料库，输出为想要的存储格式。首先使用以下命令安装该工具：\ngit clone https://github.com/attardi/wikiextractor cd wikiextractor python setup.py install wikiextractor 会把整个语料库分割为指定大小的文件，文件的格式默认为 xml 格式，具体格式如下：\n\u0026lt;doc id=\u0026#34;xxx\u0026#34; url=\u0026#34;xxx\u0026#34; title=\u0026#34;xxxx\u0026#34;\u0026gt; xxxxx \u0026lt;/doc\u0026gt; \u0026lt;doc id=\u0026#34;xxx\u0026#34; url=\u0026#34;xxx\u0026#34; title=\u0026#34;xxxx\u0026#34;\u0026gt; xxxxx \u0026lt;/doc\u0026gt; \u0026lt;doc id=\u0026#34;xxx\u0026#34; url=\u0026#34;xxx\u0026#34; title=\u0026#34;xxxx\u0026#34;\u0026gt; xxxxx \u0026lt;/doc\u0026gt; ... 每个生成的文件包含若干个词条。要生成 xml 格式的语料，可以使用以下命令：\nWikiExtractor -o extracted_xml --process 2 -b 512K zhwiki-latest-pages-articles.xml.bz2 -o 用来指定输出目录，--process 用来指定使用的进程数目（默认为 1），-b 选项用来控制单个生成文件的大小（默认为 1M，文件越大，包含的词条也越多），最后的参数为要处理的原始压缩语料文件名称。程序运行完成以后，在输出目录下面会生成多个子目录，每个目录下面有一些生成的文件。\n如果要生成 json 格式的语料文件，只需要加上 --json 选项：\nWikiExtractor -o extracted_xml --process 2 -b 512K --json zhwiki-latest-pages-articles.xml.bz2 每个生成的文件中，每行对应一个以 JSON 格式存储的词条，格式如下：\n{\u0026#34;id\u0026#34;: \u0026#34;xxx\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;xxx\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;xxx\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;xxxxxx\u0026#34;} 其中 text 对应的是某个词条的真正内容。\n如何提取 JSON 格式字符串中的 text 内容？可以使用json.loads() 方法将符合 JSON 格式的字符串转换为 Python 中的字典。例如\nIn [6]: s = \u0026#39;{\u0026#34;apple\u0026#34;: 1, \u0026#34;bananas\u0026#34;: 2, \u0026#34;pear\u0026#34;: 2.5}\u0026#39; In [7]: json.loads(s) Out[7]: {\u0026#39;apple\u0026#39;: 1, \u0026#39;bananas\u0026#39;: 2, \u0026#39;pear\u0026#39;: 2.5} 下面给出一个简单读取一个文件所有词条 text 并且整合的代码：\ntexts = \u0026#34;\u0026#34; # file is a generated file with open(file, encoding=\u0026#39;utf-8\u0026#39;) as f: # each line in the file is a wiki page for line in f: # read the line as valid json and select text field text = json.loads(line)[\u0026#39;text\u0026#39;] texts += text 根据自己的需要，可以把每一行的 text 存为新的文件，或者把原来文件里面的所有词条的 text 合在一起存为一个新文件。\n另外，中文维基百科的文字很多都是繁体，如果需要简体中文，可以使用OpenCC Python 库把繁体文字统一转换为简体再保存，具体使用方法见 Opencc 的文档，这里不再赘述。\n参考 # https://www.zhihu.com/question/22956189 https://www.zhihu.com/question/21177095 https://blog.csdn.net/wangyangzhizhou/article/details/78348949 https://github.com/Embedding/Chinese-Word-Vectors THUCNews 语料库主页：http://thuctc.thunlp.org/ 中文 wiki dump 主页：https://dumps.wikimedia.org/zhwiki/ 使用 find THUCNews_ROOT -type f -name '*.txt' -print|wc -l 可以查看语料库中文本文件的数目。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 January 2019","externalUrl":null,"permalink":"/2019/01/10/two_chinese_corpus/","section":"Posts","summary":"\u003cp\u003e目前进行的工作需要大规模的语料库来生成中文文本图像，因此查找资料，找了一些中文语料库。本文介绍其中的两个最大的语料库，THUCNews 语料库和中文维基百科语料库，以及如何对原始语料库文件进行简单预处理。\u003c/p\u003e","title":"两个大规模中文语料库介绍以及处理","type":"posts"},{"content":"","date":"7 January 2019","externalUrl":null,"permalink":"/tags/listary/","section":"Tags","summary":"","title":"Listary","type":"tags"},{"content":" 工欲善其事，必先利其器，好的工具能使人效率倍增，这篇博客介绍本人常用的一些提升效率的工具，希望能够帮到读者。\nListary (推荐指数★★★★★) # 打开文件夹，文件和程序的时候，还在使用鼠标各种点点点？如果你经常需要打开程序或者打开某个文件夹，Listary 是你不可错过的工具，Listary 一款 Windows 系统下的程序启动、文件搜索工具，可以快速打开程序或者打开文件(夹)，同时 Listary 可以自动打开默认浏览器，并且使用指定的搜索引擎搜索用户输入的关键词，功能强大。最新版本的 Listary 6 beta，下载地址见这里。\n安装以后，Listary 会在后台运行，双击 Ctrl 会打开 Listary 的运行界面（下载以后需要等待两三分钟，Listary 需要索引电脑上的文件，然后才能正常搜索文件和应用，刚下载就运行，可能搜索不到任何结果），直接输入文件或者目录的名称，或者输入应用的名称，可以快速搜索相关目录、文件和应用。\n博文开头的图片展示了如何使用 Listary 搜索文件或应用，使用的时候，只需要输入文件夹或应用的关键词（如上图所示，genverti, sublime），Listary 即可智能把匹配度最高的结果放在第一位，然后使用 Enter 即可打开。\n通常，在需要使用搜索引擎搜索某个内容的时候，我们会先打开浏览器，点击输入框，输入关键词，回车搜索，整个步骤非常繁琐。Listary 的另外一个强大功能是可以使用不同搜索引擎直接打开浏览器进行网络搜索，例如要使用谷歌搜索 python list，打开Listary，输入 g，然后按下空格，然后输入检索关键词 python list,回车，系统默认的浏览器将会打开谷歌搜索指定关键词的页面，非常方便。Listary 支持多个搜索引擎，例如百度（关键词 b），必应(关键词 bing)\n想要了解更多 Listary 用法，可以参考这篇博文。\nCmder (推荐指数★★★★★) # 还在使用没有自动补全功能，缺少 Linux 下各种常用命令，并且呆板生硬，缺少个性化配置的 Windows Cmd？是时候用一下 Cmder 了， Cmder 是一款终端模拟器(terminal emulator)，类似 Windows CMD，但是功能比 CMD 强大太多，支持丰富的个性化主题。同时，Cmder 完整版包含了 git for windows，支持常用的 Linux命令，例如 ls, cd, pwd, grep, find 等，并且支持 Tab 自动补全。下载地址点这里(免安装，解压即可使用).\n更多关于 Cmder 的使用，参考这篇博客。\nVimium (推荐指数★★★★) # Vimium 是一款 Chrome 浏览器插件，使你能够双手不离开键盘完成大多数网页操作。Vimium 作者对它的介绍是：\nThe Hacker\u0026rsquo;s Browser\nVimium 的快捷键设计模仿 Vim，对 Vim 熟悉的用户上手应该很容易。常用的快捷操作：\ngg: 回到网页顶端 G: 回到网页低端 j: 往下滚动网页 k: 往上滚动网页 d：往下滚动半个网页 u: 往上滚动半个网页 f: 在当前标签页打开当前网页的某个链接，当前网页可用的链接会被高亮显示，并用字母表示，输入对应字母即可在当前标签页打开链接。 F: 和 f 功能类似，但是在新标签页打开链接。 gi: 激活当前网页可输入文件框，准备输入文字，例如打开 https://github.com/，按下 gi，此时光标会移动到左上角输入框，等待用户输入内容。 b: 在当前标签页打开收藏的某个网页，按下 b，会出现输入框，输入收藏网页关键词，选中一个条目，按下 Enter，在当前标签页打开收藏。 B: 类似 b，但是在新标签页打开收藏网页。 o: 在当前标签页，打开网页，收藏或者历史记录某个链接 O: 类似 o，但是在新标签页打开网页，收藏或历史记录某个链接 yy: 复制当前网页链接到剪切板 p: 在当前选项卡打开剪切板上的链接 P: 在新选项卡打开剪切板上的链接 x: 关闭某个选项卡 X: 重新打开上一个关闭的选项卡 更多操作，参考 Vimium 官方文档。\n","date":"7 January 2019","externalUrl":null,"permalink":"/2019/01/07/windows_tools_for_programmers/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/listary_search_file_apps.gif\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003e工欲善其事，必先利其器，好的工具能使人效率倍增，这篇博客介绍本人常用的一些提升效率的工具，希望能够帮到读者。\u003c/p\u003e","title":"Windows 系统下几款程序员不可不用的神器","type":"posts"},{"content":"2018 年对于我来说，是变化很大的一年，我很高兴自己能够下定决心做一些决定。这一年读书的数量并不多，因为有几部比较大部头，读完花费了相当多的时间。年初寒假的时候，买了最新款的 Kindle Oasis2，替换了几年前买的 Kindle Paper White1。最值得高兴的事情是现在可以完全无压力阅读英文原版书籍，没有阅读的障碍。\nSoulstealers: The Chinese Sorcery Scare of 1768 # 这本书中文名叫《叫魂：1768年中国妖术大恐慌》,以小见大，写出了\u0026quot;盛世\u0026quot;下的阴影，为了稳定，在皇帝的关照下，地方性的\u0026quot;叫魂\u0026quot;事件逐步升级为全国性的运动，以闹剧收场。\n小姨多鹤 # 严歌苓的小说，抗战结束后日本人留下的多鹤的别样人生。严歌苓的小说有流水线生产的感觉，虽无大的瑕疵，但是读起来总觉得缺了什么。\nSteve Jobs # 《爱因斯坦传》作者沃特-艾萨克森写的乔布斯传记，最大的感想就是做事需要极致，有自己的哲学，做自己有激情和有兴趣的事情，相信自己的判断，因为大部分人都是庸众，即使是有名望的人，也不一定高瞻远瞩，拥有判断力。\nThe Emperor of All Maladies: A Biography of Cancer # 这本书的作者是一名医生，作者在书中全景式介绍了人类对癌症认识历程，以及对癌症治疗方法的革新，科普性和故事性融合的恰到好处，引人入胜，当时读完还专门写了一篇文章.\nThe Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution # 沃特-艾萨克森的新作，讲述了计算机，互联网的发展历程，有很多有趣的故事，后面有几章写的略微沉闷，总体不错。\nAnd the Band Played On: Politics, People, and the AIDS Epidemic # 主要是从美国人的角度,讲述了艾滋病从出现到不受重视直至蔓延开来，期间医生，学术界，政府官员，同性恋群体，社会普通大众等的众生百态。从中也可以看到美帝并不是那么美好光明，里根总统所代表的政府不作为，给艾滋的扩散起到了推波助澜的作用，政府官员和表现简直和xx如出一辙，但是美帝有那么一群人与那么一种制度文化，确是xx欠缺的，相同的事情就有了不同的结局。\n巨流河 # 齐邦媛以一个国民党高官女儿的视角讲述了她所经历的人生，从北京到重庆，从重庆到乐山、武汉，在战火中辗辗转流离，但弦歌不辍，最后再到台湾教书育人，全书文笔优美流畅。印象最深的是前面描写母亲偷偷为自己早逝的孩子抹眼泪的悲苦情节，看得我喉咙发紧，眼泪直打转。她和张大飞的遗憾的爱情，也让我伤感落泪：\n这一年夏天，我告别了一生最美好的生活，溯长江远赴川西。一九四三春风远矣。\n今生，我未再见他一面。\nThe Tragedy of Liberation: A History of the Chinese Revolution 1945-1957 # 历史书里一句话，你可知道背后发生了多少事？\n事实上，除了屏幕升级，设计上采用不对称造型，屏幕更大，处理速度快，新款的机器也并没有太多值得骄傲的地方。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"25 December 2018","externalUrl":null,"permalink":"/2018/12/25/my_reading_list_2018/","section":"Posts","summary":"\u003cp\u003e2018 年对于我来说，是变化很大的一年，我很高兴自己能够下定决心做一些决定。这一年读书的数量并不多，因为有几部比较大部头，读完花费了相当多的时间。年初寒假的时候，买了最新款的 \u003ca href=\"https://goo.gl/g2rYKZ\" target=\"_blank\"\u003eKindle Oasis2\u003c/a\u003e，替换了几年前买的 Kindle Paper White\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。最值得高兴的事情是现在可以完全无压力阅读英文原版书籍，没有阅读的障碍。\u003c/p\u003e","title":"我的 2018 阅读清单","type":"posts"},{"content":" Change log 2022-01-29: Add deprecation notice 2021-01-17: Install nvim via tar ball instead of appimage 2020-12-01: Add detailed guide on installing Neovim on Linux TL;DR: My complete nvim configuration is here. Follow the guide there on how to use it. Most of the config below also applies to Windows and Mac. For how to configure Neovim on Windows, you may also be interested in this post.\n2022-01-29: Note that this post is written more than three years ago. Some of the plugins mentioned here may not be maintained or may not be the best fit for Neovim, or even not needed, e.g., highlighted yank is builtin in Neovim since May 2020. I have shared some of the plugin changes in this post.\nVim is a popular code editor on Unix/Linux systems, and it is often compared with Emacs, another great code editor among programmers. The debate about which one is the best editor never cease. Vim is powerful, but it has its own shortcomings as an old editor1. Over the years, Vim\u0026rsquo;s code base has grown increasing larger, which makes it hard for maintenance and for adding new features quickly. It has only one core developer, Bram Moolenaar. Although Vim has a lot of contributors, nearly all patches are merged by Bram2. To overcome the shortcomings of Vim, preserve its advantages (i.e., compatible with Vim) and make the development of Vim faster, the Neovim project is created.\nIn this post, I will give a detailed guide on how to install Neovim and configure it as an IDE-like environment for Python development (in the rest of this post, I will use Neovim and Nvim interchangeably).\nInstall Nvim # Neovim has pre-built binary package for Linux, you can download it from the Neovim GitHub release page:\nmkdir -p $HOME/tools/ \u0026amp;\u0026amp; cd $HOME/tools/ wget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz tar zxvf nvim-linux64.tar.gz The executable file is located in $HOME/tools/nvim-linux/bin/nvim.\nNow, we need to add the bin directory to the system PATH. Open .bash_profile and add the following line:\nexport PATH=$HOME/tools/nvim-linux64/bin:$PATH Save the file and source it to make the change take effect.\nNow, Neovim has been installed on your system successfully. You can open neovim on terminal with nvim command.\nNvim configuration file # Neovim use a different configuration file from Vim. You need to create a file named init.vim under the directory $HOME/.config/nvim (if this directory does not exist, just create one)3. All configurations can be put into this file.\nMost of the configuration options for Neovim are the same with Vim. You can copy your vim configurations if you have used Vim before.\nInstall and use a plugin manager # One of main reasons for the powerfulness of Vim comes from the various plugins written for it. With these plugins, you can achieve all sorts of crazy things which are hard to achieve with plain Vim. If you have installed a lot of plugins manually, you will find it difficult to manage them. Like Vim, Neovim does not have a built-in plugin manager. We need to install one ourselves.\nThere are two plugin managers in wide use among Nvim users. One is dein and the other is vim-plug. Vim-plug has a larger user base and seems more popular. Finally, I decided to give vim-plug a try.\nInstall vim-plug # Install vim-plug itself: curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim After installing vim-plug, you may need to restart Nvim.\nEdit init.vim and add the configuration for vim-plug. I show an example configuration below (modified from the vim-plug GitHub page): call plug#begin(\u0026#39;~/.local/share/nvim/plugged\u0026#39;) Plug \u0026#39;davidhalter/jedi-vim\u0026#39; call plug#end() Note that all the plugin installation command must be put inside the two call command above. I will not repeat that later.\nHow to use vim-plug # You can execute following command in Nvim command mode:\nInstall plugins：:PlugInstall Update plugins：:PlugUpdate Remove plugins：:PlugClean (First, comment the plugin install command in init.vim. Open Nvim and use :PlugClean to uninstall plugins) Check the plugin status：:PlugStatus Upgrade vim-plug itself：:PlugUpgrade Disable a plugin only temporarily # If you want to disable certain plugin for a while but do not want to delete it, you can try two methods:\nComment out the plugin and reopen Nvim.\nAccording to discussions here, to disable plugin foo/bar, you can use the following settings:\nPlug \u0026#39;foo/bar\u0026#39;, { \u0026#39;on\u0026#39;: [] } Plugin install and settings # Auto-completion plugin deoplete # deoplete is an auto-completion plugin designed for Neovim:\nDeoplete is the abbreviation of \u0026ldquo;dark powered neo-completion\u0026rdquo;. It provides an extensible and asynchronous completion framework for neovim/Vim8.\nStrictly speaking, it is an auto-completion engine. In order to enable auto-completion for a certain programming language, you need to install the corresponding source.\nDeoplete is easy to install. Use the following settings inside the vim-plug calls:\nPlug \u0026#39;Shougo/deoplete.nvim\u0026#39;, { \u0026#39;do\u0026#39;: \u0026#39;:UpdateRemotePlugins\u0026#39; } The minimum setting for deoplete is as follows:\nlet g:deoplete#enable_at_startup = 1 For more options and their meanings, check :h deoplete-options inside Nvim.\nInstall plugin deoplete-jedi # As I have said, deoplete supports auto-completion for various languages via different sources. In order to do auto-completion for Python, we need to install deoplete-jedi. In the following, I list the steps to install deoplete-jedi.\nStep 1: Install dependency packages\nFirst we need to install pynvim，\npip install pynvim We also need to install jedi. If you happen to use the latest version of Anaconda, jedi is already installed. Otherwise, you can install jedi via pip:\npip install jedi Step 2: Install and set up deoplete-jedi\nFirst, we need to install deoplete-jedi using vim-plug:\nPlug \u0026#39;zchee/deoplete-jedi\u0026#39; After that, if nothing wrong happens, you can use auto-completion now! Open a Python source file with Nvim and start editing, you will see the auto-completion pop-up menu like what is shown in the following image:\nHow to use deoplete # How to navigate between the items in the auto-completion list? According to discussions here, you can navigate through the auto-completion list with \u0026lt;Ctrl-N\u0026gt; and \u0026lt;Ctrl-P\u0026gt;.\nHow to automatically close the method preview window? When we navigate through the auto-completion list, a small window will appear on top of current window and gives hints about the parameters of current selected method. But this window will not disappear after auto-completion is done. According to discussions here, we can use the following setting to close the preview window automatically:\nautocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif How can I open the preview window below the current window? By default, preview windows will open on top of current window. You can change this behaviour by adding set splitbelow in the configuration file. For more info, see here.\nHow can I navigate through the auto-completion list with Tab? Add the following setting in the Nvim configuration file:\ninoremap \u0026lt;expr\u0026gt;\u0026lt;tab\u0026gt; pumvisible() ? \u0026#34;\\\u0026lt;c-n\u0026gt;\u0026#34; : \u0026#34;\\\u0026lt;tab\u0026gt;\u0026#34; Status bar plugin: vim-airline # The default status bar of Nvim is simple and can not provide much useful information like Sublime Text or other modern code editors. However, the status bar can be customized to achieve wonderful effects. An excellent plugin is called vim-airline, which can achieve the same functionalities as Sublime Text status bar. It is easy to install:\nPlug \u0026#39;vim-airline/vim-airline\u0026#39; Use :PlugInstall to install this plugin and restart Nvim. You should be able to see the new status bar with more information displayed.\nSwitch vim-airlinetheme # Vim-airline provides a lot of themes for you to customize your status bar. Check here to see what different theme looks like. Vim-airline has put the various themes in another plugin called vim-airlinetheme. To change the theme, we need to install this plugin:\nPlug \u0026#39;vim-airline/vim-airline-themes\u0026#39; Then, in the Nvim configuration file, add the following settings:\nlet g:airline_theme=\u0026#39;\u0026lt;theme\u0026gt;\u0026#39; \u0026#34; \u0026lt;theme\u0026gt; is a valid theme name Automatic quote and bracket completion # When input quote and bracket, we often wish to input them as pairs. Nvim does not support this feature. Auto-pairs can achieve this and much more. Simply install it:\nPlug \u0026#39;jiangmiao/auto-pairs\u0026#39; How to use # Let\u0026rsquo;s take manipulating double quotes as an example. In insert model, press \u0026quot;, it will automatically become two double quotes. At the same time, the cursor is placed between the two double quotes, waiting for input. When you finish inputting text between the quotes, you may want to place the cursor after the right quote and continue inserting text. Here comes the magic part: just press \u0026quot; one more time, and the cursor will be placed right behind the right quote.\ncomment plugin # Different programming languages have different specifications for comment. It would be great to change the comment style for the current file based on its file type. nerdcommenter is one such plugin. Install it with vim-plug:\nPlug \u0026#39;scrooloose/nerdcommenter\u0026#39; To comment out a single line, use \u0026lt;leader\u0026gt;cc (leader is a prefix key in Nvim, the default leader key is backslash \\); to uncomment a line, use \u0026lt;leader\u0026gt;cu. To comment or uncomment several lines, add a repeating number to corresponding command, just like what you do in plain Vim. For more usages, check nerdcommenter\u0026rsquo;s documentation.\ncode auto-format plugin # Neoformat can be used to format your source code. Install it with vim-plug:\nPlug \u0026#39;sbdchd/neoformat\u0026#39; For Python code, you need to install a Python code formatter to work together with neoformat. We will choose yapf. First, we install this formatter with pip:\npip install yapf Then, you can format Python code with yapf formatter using neoformat.\nHow to format code? # In command mode, input Neoformat, neoformat will auto-format your source code.\nIf neoformat can not detect your file type or you haven\u0026rsquo;t installed any formatter. You can add the following command to your Nvim configuration to let neoformat do some basic format for the file:\n\u0026#34; Enable alignment let g:neoformat_basic_format_align = 1 \u0026#34; Enable tab to space conversion let g:neoformat_basic_format_retab = 1 \u0026#34; Enable trimmming of trailing whitespace let g:neoformat_basic_format_trim = 1 There is another format plugin vim-autoformat which you can try.\nCode jump (go-to) plugin # We often need to jump to the definition of class and method to check their implementation details. We can use jedi-vim to achieve this. Actually, jedi-vim can also do code auto-completion. Since we have installed deoplete and deoplete-jedi, we can disable code completion and only use the code jump function of jedi-vim. Install jedi-vim with vim-plug:\nPlug \u0026#39;davidhalter/jedi-vim\u0026#39; Use the following simple configuration:\n\u0026#34; disable autocompletion, because we use deoplete for completion let g:jedi#completions_enabled = 0 \u0026#34; open the go-to function in split, not another buffer let g:jedi#use_splits_not_buffers = \u0026#34;right\u0026#34; How to use jedi-vim # Move the cursor to the class or method you want to check, then press the various supported shortcut provided by jedi-vim:\n\u0026lt;leader\u0026gt;d: go to definition K: check documentation of class or method \u0026lt;leader\u0026gt;n: show the usage of a name in current file \u0026lt;leader\u0026gt;r: rename a name File managing and exploration plugin # Those who have been working with GUI code editors are familiar with the sidebar on the left side of the code editor, which provides an overview of files and folders in current project. How do we achieve similar functions in Nvim? You can use nerdtree. First, install it using vim-plug:\nPlug \u0026#39;scrooloose/nerdtree\u0026#39; How to use nerdtree? # How to open file navigation window? In command mode, input :NERDTree to open the directory your current file resides.\nHow do I open a file in the file explorer? Place the cursor in the file you want to open and press o to open this file in the right window.\nHow do I switch between file window and nerdtree file navigation window? This is the same as how you switch windows in Vim. Press ctrl and press w two times quickly to switch window. You can also press \u0026lt;Ctrl-w\u0026gt; and then press L.\nHow do I exit or close file explorer window? Press q while your cursor is this window? Or use NERDTreeClose command in command mode.\nFor more customization, refer to this post.\nCode checker plugin # Neomake is a tool for code syntax check and build automation for Nvim. Install it with vim-plug:\nPlug \u0026#39;neomake/neomake\u0026#39; Neomake\u0026rsquo;s syntax check for various languages relies on various linters. After installation, you need to install linters according to your programming languages. The linter for different languages are listed here.\nFor Python, we can use pylint as linter. Install pylint with pip or conda:\nconda install pylint # pip install pylint After installing pylint, we need to set it in init.vim as the Python code checker:\nlet g:neomake_python_enabled_makers = [\u0026#39;pylint\u0026#39;] Code checking # In command mode, use Neomake command to start syntax check. We can also enable automatic code check. Just add the following setting in Nvim configuration file:\ncall neomake#configure#automake(\u0026#39;nrwi\u0026#39;, 500) Pylint checks extensively on your code, which makes it a bit slow. Another code linter you can try is flake8, which is faster.\nMultiple cursor editing plugin # If you have used Sublime Text before, you must be impressed by Sublime Text\u0026rsquo;s ability to edit multiple position in the code simultaneously. This function is great when you want to refactor your code. You can achieve similar function with the help of vim-multiple-cursors. Install it with:\nPlug \u0026#39;terryma/vim-multiple-cursors\u0026#39; How to use # In normal mode, move the cursor to a variable you want to rename, press \u0026lt;Ctrl-N\u0026gt; and this variable will be highlighted. Continue press \u0026lt;Ctrl-N\u0026gt;, the next occurrence of this variable will be highlighted. If you want to skip a certain occurrence (for example, a string may contain a sub-string which is the same as the variable), just press \u0026lt;Ctrl-X\u0026gt; after this position has been highlighted. Continue selecting the occurrence of this variable until all its occurrence has been selected.\nNow, press c (in Nvim, c means to change ) and enter insert mode. Input a new name and save.\nBut, I should say that this plugin is not perfect. When you have a lot of occurrences of the variable in the file, the refactor of variable name is slow.\nThere are some discussions about Neovim\u0026rsquo;s native support for multiple cursors. But it seems that this function is still not finished as of today. You can find relevant discussions in the following links:\nhttps://github.com/neovim/neovim/issues/3845 https://github.com/neovim/neovim/issues/211 https://github.com/neovim/neovim/issues/7257 https://github.com/onivim/oni/issues/184 Highlight your yank area # In Nvim, if you yank (i.e., copy) a block of text, you do not get a visual hint about exactly what you have copied. Unless you are very familiar with Nvim, you may have copied less or more than what you want to copy, which is annoying. With the help of vim-highlightedyank, you can now highlight the text region which you have yanked. Handy little feature, isn\u0026rsquo;t it?\nYou can install it with vim-plug:\nPlug \u0026#39;machakann/vim-highlightedyank\u0026#39; Most of the time, you do not need any further settings after installing this plugin. But, for some colorschemes, you will not be able to see the highlight colors. To fix this issue, add the following setting to Nvim configuration:\nhi HighlightedyankRegion cterm=reverse gui=reverse If you feel that the highlight duration time is too short, you can increase the highlight duration (measured in ms):\n\u0026#34; set highlight duration time to 1000 ms, i.e., 1 second let g:highlightedyank_highlight_duration = 1000 Code folding plugin # For large code base, it is helpful to fold some part to get a better idea of the structure of the code. SimplyFold is nice plugin for code folding. Install it with vim-plug:\nPlug \u0026#39;tmhedberg/SimpylFold\u0026#39; You do not need further settings. It works out of the box.\nsimple usage # There are some shortcuts to manipulate code folding:\nzo： Open fold in current cursor position zO： Open fold and sub-fold in current cursor position recursively zc： Close the fold in current cursor position zC： Close the fold and sub-fold in current cursor position recursively Theme install and configuration # Before we begin # Neovim has several built-in colorschemes or themes. You may not like them and want better themes. It is easy to install a theme. But it is little tricky to make the theme display correctly as what the theme homepage shows. A lot of themes will not display well if you use an SSH client which has poor support for true colors. For Windows system, after trying several SSH clients, I find that ZOC works best. For Mac, you can use the open source tool iTerm2. To find more SSH clients which support true colors, visit this page.\nInstall themes # Gruvbox is a popular Vim colorscheme. Install it with vim-plug:\nPlug \u0026#39;morhetz/gruvbox\u0026#39; Then use :PlugInstall to install it just like you install other plugins.\nIn Nvim configuration file, activate this theme with the following setting:\ncolorscheme gruvbox It has two modes, i.e., dark and light, which can be switched using the following settings:\nset background=dark \u0026#34; use dark mode \u0026#34; set background=light \u0026#34; uncomment to use light mode Restart Nvim and you will activate the new theme. It looks like the following on my Mac:\nOther themes # There are other themes you may want to try:\none dark monokai jellybeans NeoSolarized How do I change the font? # Unlike Sublime Text, you can not set up which font to use in Nvim\u0026rsquo;s configuration. Instead, Nvim will use the font you choose for your terminal emulator. So you need to set up your favorite font in the terminal. Some good programming fonts are:\nHack FiraCode Source Code Pro Check nerd fonts for more programming fonts.\nHow to find more interesting plugins? # There is a website called vimawesome, which collects information about various Vim plugins. You can find helpful plugins on this website.\nSince most Vim plugins are published on GitHub, you can also search with vim and other keywords on GitHub to find relevant plugins. For example, search vim colorschem or vim theme to find themes designed for Vim.\nBuiltin terminal # Neovim has support for terminal emulator so that you can directly run a shell inside Neovim. It is handy for temporary shell operations.\nTo open the terminal, use :terminal or :vnew term://bash or new term://bash. After entering the terminal, you are in normal mode. Press i to start typing terminal command.\nTo exit insert mode in terminal emulator, press \u0026lt;Ctrl+\\\u0026gt;\u0026lt;Ctrl+N\u0026gt;.\nTo exit terminal emulator and close the window, use exit.\nThe difference between Nvim and Vim # Support for bracketed paste mode # Neovim has support for bracketed paste mode. The paste option in Vim is obsolete. Use :h paste and you will the following documentation:\nThis option is obsolete; bracketed-paste-mode is built-in.\nNeovim is all nocompatible # In Nvim normal mode, use :h comatible, and you will see that:\nNvim is always \u0026ldquo;nocompatible\u0026rdquo;\nFor more differences between Nvim and Vim, see here.\nTrouble shooting # In this part, I introduce some issues found when using Nvim and how to fix these issue.\nNvim colorscheme does not look right inside Tmux # If your terminal supports true color, first install the latest version of tmux4, add the following config to ~/.tmux.conf (extracted from here)\nset -g default-terminal \u0026#34;screen-256color\u0026#34; set -ga terminal-overrides \u0026#34;,xterm-256color*:Tc\u0026#34; Then the color should be fine. Otherwise, in the Nvim config file init.vim, use the following setting instead:\nset notermguicolors Also, there are some discussions here.\nHow do I get a log file when starting Neovim # Use nvim -VNUMnvim.log. NUM is used to indicate verbose level, for example:\nnvim -V10nvim.log The above command creates a log file nvim.log with verbose level 10.\nMore reference here. See also nvim --help.\nOK, that is end of this long post. You can find my complete Nvim configurations here. Happy Vimming!\nVim was first released in 1991. Its predecessor is Vi, born in 1978.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nDevelopers would send a patch to Bram. Bram will review it and then merge it on GitHub if he thinks the patch is okay.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor Windows, the config directory is different. Open neovim and run command :echo stdpath('config') to find the exact directory.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCheck here on how to build the latest version of tmux from source.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 December 2018","externalUrl":null,"permalink":"/2018/12/24/centos_nvim_install_use_guide_en/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/Xnip2020-04-04_21-39-49.jpg\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"blue\"\u003eChange log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2022-01-29: Add deprecation notice\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-01-17: Install nvim via tar ball instead of appimage\u003c/font\u003e\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2020-12-01: Add detailed guide on installing Neovim on Linux\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eTL;DR: My complete nvim configuration is \u003ca href=\"https://github.com/jdhao/nvim-config\" target=\"_blank\"\u003ehere\u003c/a\u003e. Follow the guide there on how to\nuse it. Most of the config below also applies to Windows and Mac. For how to\nconfigure Neovim on Windows, you may also be interested in \u003ca href=\"https://jdhao.github.io/2018/11/15/neovim_configuration_windows/\" target=\"_blank\"\u003ethis post\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2022-01-29: Note that this post is written more than three years ago.\nSome of the plugins mentioned here may not be maintained or may not be the best fit for Neovim, or even not needed,\ne.g., \u003ca href=\"https://jdhao.github.io/2020/05/22/highlight_yank_region_nvim/#neovim-only\" target=\"_blank\"\u003ehighlighted yank is builtin in Neovim since May 2020\u003c/a\u003e.\nI have shared some of the plugin changes in \u003ca href=\"https://jdhao.github.io/2021/12/31/using_nvim_after_three_years/#what-remains-what-has-changed-and-some-new-plugins\" target=\"_blank\"\u003ethis post\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e","title":"A Complete Guide to Neovim Configuration for Python Development","type":"posts"},{"content":" Every programmer knows newline character, but may be not so familiar. In this post, I want to share what I have learned about newline handling in various cases.\nNewline characters on different platforms # Due to historical reasons, different platforms use different characters to signify a new line. On Windows, \u0026lt;CR\u0026gt;\u0026lt;LF\u0026gt; (byte code 0x0D0x0A) is used to represent newline. On Linux, \u0026lt;LF\u0026gt;(byte code 0x0A) is used to represent newline. On older Mac1, \u0026lt;CR\u0026gt;(byte code 0x0D) is used.\n\u0026lt;CR\u0026gt; and \u0026lt;LF\u0026gt; date back to the old time when typewriters is used for printing texts on paper. \u0026lt;CR\u0026gt; represents carriage return, which means to put the carriage to its left-most position. \u0026lt;LF\u0026gt; represents line feed, which means to move the paper a little higher so that you can type on a new line. You can see that these two actions combined will start a new line ready for typing.\nNewline handling in Python # Python 2 and Python 3 have different way of handling newlines. In Python 2, there is a universal newline mode, which means that no matter what the file line ending is, it will all be translated to \\n when reading files with mode specifier rU.\nIn Python 3, things have changed. The old U mode specifier has been deprecated in favor of a newline parameter in the open() method. According to the documentation:\nnewline controls how universal newlines mode works (it only applies to text mode). It can be None, \u0026lsquo;\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo;, \u0026lsquo;\\r\u0026rsquo;, and \u0026lsquo;\\r\\n\u0026rsquo;. It works as follows:\nWhen reading input from the stream, if newline is None, universal newlines mode is enabled. Lines in the input can end in \u0026lsquo;\\n\u0026rsquo;, \u0026lsquo;\\r\u0026rsquo;, or \u0026lsquo;\\r\\n\u0026rsquo;, and these are translated into \u0026lsquo;\\n\u0026rsquo; before being returned to the caller. If it is \u0026lsquo;\u0026rsquo;, universal newlines mode is enabled, but line endings are returned to the caller untranslated. When writing output to the stream, if newline is None, any \u0026lsquo;\\n\u0026rsquo; characters written are translated to the system default line separator, os.linesep. If newline is \u0026rsquo;\u0026rsquo; or \u0026lsquo;\\n\u0026rsquo;, no translation takes place. when reading text files, newline is None by default, which means that system-dependent newline will be quietly replaced by \\n. If you are not aware of this behavior, you may get into trouble. For example, when you read a file with \\r\\n line ending and want to split the text into lines on Windows platform, if you use the following snippet:\nwith open(\u0026#34;some_file.txt\u0026#34;, \u0026#34;r\u0026#34;) as f: text = f.read() lines = text.split(os.linesep) you will not be able to split the text into lines. That is because on Windows platform, os.linesep is \\r\\n. But Python has secretly translated the \\r\\n in the file to \\n!\nWhen writing files, you should also be aware that \\n will be translated to platform-dependent line endings.\nNewline handling in different editors # Vim # When reading a file into the buffer, Vim will automatically detect the file format2. Then Vim will replace the platform-dependent newline characters with a special mark to mark the end of each line. When writing the buffer content back into the file, Vim will write the actual newline characters based on the detected file format.\nFor example, if you open a file with Windows-style line ending, Vim will replace all \u0026lt;CR\u0026gt;\u0026lt;LF\u0026gt; with its own newline mark. If you try to search these two characters using their byte code (\\%x0A for \u0026lt;CR\u0026gt; and \\%x0D for \u0026lt;LF\u0026gt; ), you will find nothing. Neither can you find \u0026lt;CR\u0026gt; characters using \\r in Windows file in Vim (suppose fileformats include dos). When searching in Vim, \\n is used to specify end of line, no matter what the actual newline character is for this file. So you can search the line end with \\n.\nHow do I show the \u0026lt;CR\u0026gt; characters in Vim then? # You can open a Windows file in Vim and use e ++ff=unix3 to force Vim to treat this file as a unix file. Vim will then treat the \\n characters as newline, thus removing it from the buffer. But the \\r characters in the file will now be treated as normal characters and will be shown as ^M. You will see it now.\nYou can also press \u0026lt;Ctrl-V\u0026gt; and then press \u0026lt;Enter\u0026gt; to type a carriage return character. Then you can search this character using \\r.\nA pitfall in searching and replacing newlines # In Vim, \\n is used to represent newline only when you are searching it. If you want to represent a newline in replacement, use \\r instead4. This makes no sense, but that is how Vim works.\nSublime Text # According to discussions here, Sublime Text will also convert platform-dependent newline to \\n in memory. When writing to files, it will write newlines based on the detected file type (Windows, Unix or Mac).\nNotepad++ # Notepad++ is also a popular code editor. It can detect your line endings, but it will not replace the newline with \\n. To show the newline characters in a file, go to View --\u0026gt; Show Symbol and toggle on option Show End of Line, you will be able to see the newline characters.\nConversion between different file formats? # In Vim, you can use set ff=\u0026lt;Format\u0026gt; to covert the current file to desired format, where \u0026lt;Format\u0026gt; can be unix, dos or mac.\nIn Sublime Text, just choose the desired format from the bottom right status bar.\nIn Notepad++, go to Edit --\u0026gt; EOL Conversion and choose the desired file format.\nThere are also tools such as dos2unix and unix2dos which convert between different file formats.\nReferences # Newline handling in Python3. Discussions of newline characters on StackOverflow. Different parts of a typewriters explained. https://groups.google.com/d/msg/vim_use/s0HF9GJyCo8/I0VKA2Z32BIJ https://stackoverflow.com/q/34939473/6064933 See line breaks and carriage returns in editor. How to get rid of ^M. Why does Vim sometimes shows ^M. https://blogs.msdn.microsoft.com/oldnewthing/20040318-00/?p=40193 Title image is taken from here.\nNewer Mac system also use the unix-style newline character, see discussion here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIn vim, use :h fileformats, :h file-read and :h file-formats for more info about how Vim detects and file format and reads files.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nUse :h ++ff to find more information about what this command means.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIn replace, \\n means null character \\0, which is show as ^@ in Vim. See here for more discussions.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"8 December 2018","externalUrl":null,"permalink":"/2018/12/08/newline_vim_python_sublime_notepad/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20181208223253.png\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003eEvery programmer knows newline character, but may be not so familiar. In this\npost, I want to share what I have learned about newline handling in various\ncases.\u003c/p\u003e","title":"How Is Newline Handled in Python and Various Editors?","type":"posts"},{"content":"In this post, I want to write about two issues related to the ImageFont module in the PIL package.\nCan not use non-ASCII characters in font path on Windows # On Windows, if you use non-ASCII characters in font path in ImageFont.truetype() method, you will get the following error:\nOSError Traceback (most recent call last) \u0026lt;ipython-input-2-72cffff24bf9\u0026gt; in \u0026lt;module\u0026gt;() ----\u0026gt; 1 font = ImageFont.truetype(\u0026#34;../测试.ttf\u0026#34;) D:\\Anaconda\\lib\\site-packages\\PIL\\ImageFont.py in truetype(font, size, index, encoding, layout_engine) 278 279 try: --\u0026gt; 280 return FreeTypeFont(font, size, index, encoding, layout_engine) 281 except IOError: 282 ttf_filename = os.path.basename(font) D:\\Anaconda\\lib\\site-packages\\PIL\\ImageFont.py in __init__(self, font, size, index, encoding, layout_engine) 143 if isPath(font): 144 self.font = core.getfont(font, size, index, encoding, --\u0026gt; 145 layout_engine=layout_engine) 146 else: 147 self.font_bytes = font.read() OSError: cannot open resource This is an issue related to how Unicode file paths are handled on Windows platform.\nA simple solution is to rename the font file to include only ASCII characters. Another solution is to read the font file in binary form. A working example is shown below:\nfrom PIL import ImageFont from io import BytesIO with open(\u0026#34;测试.ttf\u0026#34;, \u0026#34;rb\u0026#34;) as f: bytes_font = BytesIO(f.read()) font = ImageFont.truetype(bytes_font) print(font.getsize(\u0026#34;test\u0026#34;)) Invalid reference when drawing text on image # When drawing text on image using PIL, you may see an error complaining about invalid reference:\npython draw_text.py Traceback (most recent call last): File \u0026#34;draw_text.py\u0026#34;, line 12, in \u0026lt;module\u0026gt; drawer.text((10, 10), \u0026#34;大美中國\u0026#34;, font=font, fill=(10, 10, 10)) File \u0026#34;D:\\Anaconda\\lib\\site-packages\\PIL\\ImageDraw.py\u0026#34;, line 275, in text *args, **kwargs) File \u0026#34;D:\\Anaconda\\lib\\site-packages\\PIL\\ImageFont.py\u0026#34;, line 185, in getmask2 size, offset = self.font.getsize(text, direction, features) OSError: invalid reference This is caused by a missing table in the font, which is discussed here. To fix this problem, we need to use the open-source tool ttfautohint.\nAfter downloading this tool, we can process the font to get a fixed font:\nttfautohint test.ttf test_processed.ttf After this process, you should be able to draw text on images using the processed font without any error.\n","date":"4 December 2018","externalUrl":null,"permalink":"/2018/12/04/two_issues_related_to_imagefont_pillow/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to write about two issues related to the\n\u003ca href=\"https://pillow.readthedocs.io/en/5.1.x/reference/ImageFont.html\" target=\"_blank\"\u003eImageFont\u003c/a\u003e\nmodule in the \u003ca href=\"https://github.com/python-pillow/Pillow\" target=\"_blank\"\u003ePIL\u003c/a\u003e package.\u003c/p\u003e","title":"Two Issues Related to ImageFont Module in PIL","type":"posts"},{"content":"GoldenDict 是一款开源字典应用，功能强大，支持多种字典格式，同时也支持网络资源。欧路词典 是一款国产的查词软件，产品做得也很不错，同样支持多种字典格式。本文介绍 GoldenDict 以及欧路词典的配置, 以及如何在Listary 中调用它们实现查词功能。\nGoldenDict 安装配置 # GoldenDict 最新版可以从这里下载，下载直接解压即可，免安装。\n安装词库 # 如前面所说，GoldenDict 支持多种字典格式，其中 MDX 文件是非常常用的字典格式，从这里可以下载到牛津高阶词典的 mdx 文件。下载以后解压。\n打开 GoldenDict，进入 编辑 -\u0026gt; 词典，在默认的“词典来源”页面下，点击“文件”，然后点击“添加”，选择刚才解压牛津词典的文件夹，勾选 “递归搜索”，然后点击“重新扫描”，这样牛津词典就添加成功了。\n点击 “词典”页面，可以看到牛津词典已经在词典列表里面了（默认的是维基百科词典）。\n配合 Listary 使用 # Listary 是一款非常好用的命令启动与文件搜索工具，能不能直接使用 Listary 来调用 GoldenDict 来查词呢？可以的，只需简单配置即可。\n进入 Listary 的设置，然后点击 “关键字 -\u0026gt; 自定义”，点击左下角的 +，添加一个新的命令，配置如下：\n关键字：gd 显示名称：search word with goldenDict 路径： \u0026lt;此处填写 goldenDict.exe 的完整路径，引号不是必须的\u0026gt; 参数： {query} 一个示例配置如下图所示：\n配置完成以后，使用 Ctrl-Ctrl 调出 Listary 的查询界面，然后输入 gd \u0026lt;query\u0026gt; 即可打开 GoldenDict 查询单词 \u0026lt;query\u0026gt;。\n此时，GoldenDict 的简易查词界面将会弹出，给出所查单词的释义：\n欧路词典的配置 # 欧路词典下载地址为 https://www.eudic.net/v4/en/app/download,下载安装欧路词典以后，可以在设置里添加下载好的 mdx 词库，过程比较简单，这里不再赘述，免费版本默认支持两本外部词库。\n与 GoldenDict 不同，要在 Listary 中调用欧路词典，需要指定 --word 或 -w 选项，使用最新的 Listary 6 版本，配置如下图所示：\n参考 # https://discussion.listary.com/t/listary-goldendict/3740 https://jdhao.github.io/2017/03/01/Listary_intro/#search-in-the-web-or-in-the-app 欧路词典如何安装词库 ","date":"4 December 2018","externalUrl":null,"permalink":"/2018/12/04/golden_dict_install_usage/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/goldendict/goldendict\" target=\"_blank\"\u003eGoldenDict\u003c/a\u003e 是一款开源字典应用，功能强大，支持多种字典格式，同时也支持网络资源。\u003ca href=\"https://www.eudic.net/v4/en/app/eudic\" target=\"_blank\"\u003e欧路词典\u003c/a\u003e 是一款国产的查词软件，产品做得也很不错，同样支持多种字典格式。本文介绍 GoldenDict 以及欧路词典的配置, 以及如何在Listary 中调用它们实现查词功能。\u003c/p\u003e","title":"在 Listary 中调用 GoldenDict 或欧路词典查单词","type":"posts"},{"content":"If you are using Python 3 on Windows, you may have seen a Unicode decoding error when opening files in UTF-8 format:\nUnicodeDecodeError: \u0026lsquo;gbk\u0026rsquo; codec can\u0026rsquo;t decode byte 0xaf in position 5: illegal multibyte sequence\nIf you read the same file on Linux or macOS, you will find that this file can be opened without any error. Why is there a difference? It has something to do with the default encoding Python chooses to use on different platforms.\nThe reason and the solution # Reading UTF-8 files # To show the default encoding used by Python on your platform, use the following snippet:\nimport locale locale.getpreferredencoding() The method locale.getpreferredencoding() is used to get the encoding for text files on the system. On Linux, the output is UTF-8 and on my Windows (a Chinese simplified version of Windows 10 Pro), the output is cp936, which means that UTF-8 is used as the default encoding on Linux and cp936 is used as the default encoding on Windows1.cp936 is the abbreviation for \u0026ldquo;Microsoft code page 936\u0026rdquo;, which encodes all the characters in the GBK character set.\nThe solution to this issue is quite simple. If you are sure that the file to read is encoded in UTF-8, you can use encoding=\u0026quot;utf-8\u0026quot; in the built-in open() method:\nwith open(\u0026#34;test.txt\u0026#34;, \u0026#34;r\u0026#34;, encoding=\u0026#34;utf-8\u0026#34;): text = f.read() The Python 3 official documentation for encoding parameter says:\nencoding is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever locale.getpreferredencoding() returns), but any text encoding supported by Python can be used. See the codecs module for the list of supported encodings.\nWriting UTF-8 files # You may wonder that when you write non-ASCII characters to files on Windows, you haven\u0026rsquo;t encountered any issues related to encoding. The reason is probably that the gbk codec used can encode the characters by chance. If you use characters not in the GBK character set, you will see encoding errors. To verify this, use the following snippet:\nwith open(\u0026#34;test.txt\u0026#34;, \u0026#34;w\u0026#34;) as f: f.write(\u0026#34;조선말\u0026#34;) If you run the above script on Windows, you may see the following error message:\nUnicodeEncodeError Traceback (most recent call last) in () 1 with open(\u0026ldquo;test.txt\u0026rdquo;, \u0026ldquo;w\u0026rdquo;) as f: \u0026mdash;-\u0026gt; 2 f.write(\u0026ldquo;조선말\u0026rdquo;) 3\nUnicodeEncodeError: \u0026lsquo;gbk\u0026rsquo; codec can\u0026rsquo;t encode character \u0026lsquo;\\uc870\u0026rsquo; in position 0: illegal multibyte sequence\nTo solve this issue and save files in UTF-8 encoding, you should use encoding=\u0026quot;utf-8\u0026quot; when writing texts to files.\nReferences # https://stackoverflow.com/questions/36303919/python-3-0-open-default-encoding https://github.com/rkern/line_profiler/issues/37#issuecomment-153257214 UTF-8 mode in Python 3.7 Note that in different regions, the output of locale.getpreferredencoding() will change.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"3 December 2018","externalUrl":null,"permalink":"/2018/12/03/text_file_read_write_on_windows/","section":"Posts","summary":"\u003cp\u003eIf you are using Python 3 on Windows, you may have seen a Unicode decoding\nerror when opening files in UTF-8 format:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUnicodeDecodeError: \u0026lsquo;gbk\u0026rsquo; codec can\u0026rsquo;t decode byte 0xaf in position 5: illegal multibyte sequence\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf you read the same file on Linux or macOS, you will find that this file can\nbe opened without any error. Why is there a difference? It has something to do\nwith the default encoding Python chooses to use on different platforms.\u003c/p\u003e","title":"Reading and Writing Text Files on Windows","type":"posts"},{"content":" Steve Jobs once said that “technology alone is not enough”. He thinks that truly great products reside on the intersection of technology and liberal arts. He had also told a story about how he dropped Reed college and attended the calligraphy class, which had a great impact on the font he decided to adopt on Macintosh later1.\nIn my opinion, computer font is a great demonstration of arts and aesthetics combined seamless with technology. In this post, I try to understand the mathematics behind the beauty of font. Below is the Source Han Serif font designed by Google and Adobe.\nYou may have noticed already that most fonts in use nowadays can be resized to arbitrary size and still looks good and smooth. This kind of fonts are called outline fonts (or vector fonts), as opposed to the already deprecated bitmap fonts. The fonts we now use are mostly opentype fonts, which is an extension of the truetype font format2.\nThe word “outline” means that the shape of each glyph in a font is made up of straight and curved lines. Various fonts mainly use two major outline types — truetype outline and postscript outline. Truetype outlines are represented using quadratic Bézier curves, while postscript outlines are represented using cubic Bézier curves. Quadratic Bézier curve is a special case for cubic Bézier curve. As a result, quadratic curves can be converted to cubic curves without any loss of accuracy, while cubic curves can only be approximated by several quadratic curves.\nSince opentype font can either use truetype or postscript outlines, we can convert truetype font to opentype format without loss of accuracy, but not the other way around3.\nHow does Bézier curves represent the font outline? Bézier curves are parametric curves whose shapes are controlled by a parameter t and some on and off curve points. In this part, we focus on quadratic Bézier curves. The shape of quadratic curves are determined by two on-curve points (or end points) and one off-curve point. The off-curve point is used to control the shape of the curve. Suppose we have three points： \\((A_x, A_y)\\) (point A), \\((B_x, B_y)\\) (point B), and \\((C_x, C_y)\\) (point C). A and C are the end points and B is the control point. The parametric equation for the underlying curve is:\n\\[\\begin{align} P_x \u0026amp;= (1-t)^2A_x + 2t(1-t)B_x + t^2C_x \\\\ P_y \u0026amp;= (1-t)^2A_y + 2t(1-t)B_y + t^2C_y \\\\ \\end{align}\\]\nWhen parameter \\(t\\) is changed from 0 to 1 in the above equations, we can get all the points \\((P_x, P_y)\\) in the underling curve. That is, this curve can be uniquely determined once we know the position of point A, B and C.\nSee the figure above for an example of quadratic B-curve. In this example, A is \\((1.0, 1.0)\\), B is \\((1.5, 2.0)\\) and C is \\((3.0, 1.5)\\). The blue line is the generated curve when we change \\(t\\) from 0 to 1.\nFor a glyph in a font, its outline can be split into multiple small curves until it can be represented by B-curves4, which is in turn represented by three points. Ultimately, if we simplify things a bit, we can represent each glyph in a font with a set of points.\nIn the below image, I show the outline for character e from a font5:\nIn the above image, the character e is made up of two outlines. The red dots are the end points of B-curves and the cross symbols are the control points. You can see that for complex characters, the outline consists of a dozen small curves.\nHow are the characters filled? Knowing only the glyph outline is not enough. How do we actually fill the characters, i.e., how do you decide what is inside the character and what is outside? In fact, there is a rule. Each point is given a unique number starting from zero. When you traverse the outline from lower number to higher number, the “inside” of character is always on your right. So the outer outline of a character is numbered clockwise and the inner outline is numbered counter-clockwise. See the below image for an example:\nFurthermore, if one on-curve point is exactly in the center of two control points, it can be omitted without loss of information. So you may see there are several consecutive control points with no on-curve points in between. In the above image, for example, point 7, 8, 9 and 10 are both control points. More discussion regarding this issue can be found here.\nConclusion In this post, I have roughly covered how font outline works, that is, how the glyph shapes for a font are represented. But how we should display or print the font at various size (usually measured in pt) is another long story. Hopefully, I will try to describe that on another posts soon.\nReferences https://fontforge.github.io/bezier.html Truetype outlines How outline font is rendered on screen Very good documentation about font outline and how to convert hand design to acutal font outline Microsoft truetype font documentation You can find a detailed discussion here.↩︎\nA good read about history of fonts can be found here↩︎\nBut cubic curves can be approximated using quadratic curves with arbitary precisions. See here for more discussions.↩︎\nYou can find more discussion here.↩︎\nYou can use the well-known open source tool FontForge to check the character outlines of a font.↩︎\n","date":"27 November 2018","externalUrl":null,"permalink":"/2018/11/27/font_shape_mathematics_bezier_curves/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20200223203853.png\"\u003e\n\u003c/p\u003e","title":"The Mathematics behind Font Shapes --- Bézier Curves and More","type":"posts"},{"content":"在日常工作中，有时候，我们可能需要知道图片中的文字用的是哪种字体，本文介绍几种在线字体识别工具（从图片识别所用的字体），并且给出一些提高字体识别准确率的方法。\n英文字体识别 # 由于英文字符较少，市面上英文字体远多于中文字体，而且很多英文字体之间的差异非常细微，所以查找英文字体比中文字体要困难。有两个网站可以试试，但是效果不敢恭维，这两个网站分别是 WhatTheFont 和 What Font is.\n使用方法：直接把包含英文字符的图片上传到网站，按照提示操作即可。包含字符的图片要尽可能大一些，识别的效果才会比较准确。\n中文字体识别 # 本文主要介绍中文字体识别，有两个不错的字体在线识别网站，一个是 识字体网（likefont），另外一个是 求字体网。\n两个网站使用方法类似，个人感觉识字体网 的字体识别准确率更高。直接将包含字体的图片上传到网站，网站将会智能识别图片中包含的字符，如果智能识别的结果不理想，可以使用下面的“手动拼字”模式。在“手动拼字”模式下，一个字符可能被分成了多个图像，拖动图片把属于一个字的所有图像合并，直到拼成一个字。为了识别准确，可以多拼几个字，然后在所拼的字下方填入字符图像对应的真实字符（只能填写一个字符，注意简体 or 繁体区别）。\n然后网站会根据字符的图像，从网站的数据库中找出与所给的字符图像相似的字体，并且会给出相似度的评分（见下图），非常不错。\n如何处理背景和前景区分度不高的图片 # 这两个网站对输入的图片都有要求，不是所有图片的识别效果都很好： 如果图片中字符的颜色和背景的颜色不易区分，或者背景的颜色太过嘈杂，字体识别将无法工作。\n如果输入一张不符合要求的图片，求字体网站直接提示图片不符合要求，识字体网则没有任何反应。例如对于下面的图片，\n字体识别将不能工作，我们需要将背景和前景（即实际的字符）分得更清楚。\n解决办法 # 可以使用这个网站提供的图像分割技术，把图像的前景背景分割开来，从而获得更加清晰的字体图像。\n首先输入一张图片，然后直接用鼠标在前景上点击，标记一些前景像素点1，为了标注准确，可以更改笔尖大小（pen size）。\n标记完成之后，点击 run，算法将会计算前景与背景，生成二值化的黑白分割图像。\n点击 \u0026ldquo;Marker\u0026rdquo; 会显示之前标记的 marker，点击 \u0026ldquo;Segmentation result\u0026rdquo;，显示的是分割以后的结果，如下图所示：\n最后，把分割后的图像输入字体识别网站，能够得到比较好的字体识别结果：\n参考资料 # https://sspai.com/post/39518 这一步很重要！分割算法将利用标记的前景点来寻找所有前景像素，理论上标记的点越多，标记的越准确，分割的结果越好。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 November 2018","externalUrl":null,"permalink":"/2018/11/22/online_font_recognition_tool/","section":"Posts","summary":"\u003cp\u003e在日常工作中，有时候，我们可能需要知道图片中的文字用的是哪种字体，本文介绍几种在线字体识别工具（从图片识别所用的字体），并且给出一些提高字体识别准确率的方法。\u003c/p\u003e","title":"快速识别图片字体：字体识别工具介绍","type":"posts"},{"content":"Today when I use :checkhealth to check if there are anything wrong with my Neovim and related packages. I got an info that Python neovim package is not up to date. So I tried to update neovim with pip install --upgrade neovim. This is the start of a disaster which wastes me several hours.\nAfter the upgrade, when I open Neovim, it complains:\nUltiSnips requires py \u0026gt;= 2.7 or py3\nI add the following setting in my init.vim:\nlet g:python3_host_prog=\u0026#39;/home/jdhao/tools/anaconda3/bin/python\u0026#39; The above warning message disappears. Each time I open nvim, I see the error message:\n[deoplete] deoplete failed to load. Try the :UpdateRemotePlugins command and restart Neovim. See also :checkhealth.\nI follow the guide and use :UpdateRemotePlugins command. Then I got another error message:\nfunction remote#host#UpdateRemotePlugins[6]..\u0026lt;SNR\u0026gt;36_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require[13]..provider#Poll, line 4 Vim(if):ch 3 was closed by the client function remote#host#UpdateRemotePlugins[6]..\u0026lt;SNR\u0026gt;36_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require[13]..provider#Poll, line 14 Failed to load python3 host. You can try to see what happened by starting nvim with $NVIM_PYTHON_LOG_FILE set and opening the generated log file. Also, the host stderr is available in messages. remote/host: generated rplugin manifest: /home/jdhao/.local/share/nvim/rplugin.vim I may also get the error message:\nfunction remote#host#UpdateRemotePlugins[6]..\u0026lt;SNR\u0026gt;36_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require[13]..provider#Poll, line 4 Vim(if):ch 3 was closed by the client Traceback (most recent call last): File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; ModuleNotFoundError: No module named \u0026#39;neovim\u0026#39; function remote#host#UpdateRemotePlugins[6]..\u0026lt;SNR\u0026gt;36_RegistrationCommands[15]..remote#host#Require[10]..provider#pythonx#Require[13]..provider#Poll, line 14 Failed to load python3 host. You can try to see what happened by starting nvim with $NVIM_PYTHON_LOG_FILE set and opening the generated log file. Also, the host stderr is available in messages. remote/host: generated rplugin manifest: /home/jdhao/.local/share/nvim/rplugin.vim In fact, neovim is already installed and conda list|grep neovim shows:\nneovim 0.3.1 I tried to unistall neovim and reinstall:\npip uninstall neovim pip install neovim # or pip install --no-cache-dir neovim and the error was not gone. Installing the neovim package under user directory also does not work:\n# does not work pip install --user neovim Why is neovim package not found but pip reports that neovim is installed? When I go to $ANACONDA_ROOT/Lib/site-packages, ls neovim* only shows the neovim egg/wheel info directory. There is acutually no package installed. That is the reason why neovim pacakge is not found.\nFinally, I decided to do a complete uninstall and reinstall neovim. By complete uninstall, I mean to remove all dependency packages installed along with neovim. These dependency packages are:\npynvim msgpack greenlet After uninstalling these packages and reinstall neovim with pip install --no-cache-dir neovim, the error finally disappeared:\npip uninstall -y neovim pynvim msgpack greenlet pip install neovim Now, ls|grep neovim command in Anaconda Python site package directory shows:\n205:neovim/ 206:neovim-0.3.1.dist-info/\nSo the neovim Python client is successfully installed. Now open neovim and use issue UpdateRemotePlugins command, you will see:\nremote/host: python3 host registered plugins [\u0026#39;deoplete\u0026#39;] remote/host: generated rplugin manifest: /home/jdhao/.local/share/nvim/rplugin.vim Restart Neovim and the error message will disappear. You will be able to use autocompletion again.\nReferences # https://github.com/Shougo/deoplete.nvim/issues/550 https://github.com/neovim/neovim/issues/8085 https://github.com/neovim/pynvim/issues/380 ","date":"19 November 2018","externalUrl":null,"permalink":"/2018/11/19/deoplete_failed_to_load_neovim/","section":"Posts","summary":"\u003cp\u003eToday when I use \u003ccode\u003e:checkhealth\u003c/code\u003e to check if there are anything wrong with my\nNeovim and related packages. I got an info that \u003ca href=\"https://github.com/neovim/pynvim\" target=\"_blank\"\u003ePython \u003ccode\u003eneovim\u003c/code\u003e\npackage\u003c/a\u003e is not up to date. So I tried to\nupdate neovim with \u003ccode\u003epip install --upgrade neovim\u003c/code\u003e. This is the start of a\ndisaster which wastes me several hours.\u003c/p\u003e","title":"Deoplete Failed to Load at Startup after Updating Python neovim Package","type":"posts"},{"content":"On Windows system, if you install Python3 via Anaconda. Under Anaconda root directory, there is a directory named Scripts, in which pip.exe, pip3.exe and pip3.6.exe all exist. When we want to install a package, a natural question arises, is there any difference if I use pip install PACKAGE or pip3 install PACKAGE?\nOn Windows # The three executables have exactly the same file size and file last-mod time:\nIf you show their version information, the output is also exactly the same. On my system, the output is:\npip 18.1 from d:\\anaconda\\lib\\site-packages\\pip (python 3.6)\nSo, on Windows, the three executables have no difference.\nWhat about Linux? # On Linux, the default python is usually Python 2. If you are a system administrator and install python2-pip package, you will see that pip and pip2 under /usr/bin are the same. If you also installed python3-pip, there will an executable named pip3 under /usr/bin. Under this situation, pip and pip2 is used for installing Python 2.X packages and pip3 is used for Python 3.\nYou can also verify this by using pip[3] --version. On my system (Ubuntu on Windows), the result of pip --version is:\npip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\n, while the output of pip3 --version is;\npip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)\nIt is clear that they are different.\nReferences # https://www.reddit.com/r/learnpython/comments/4j1f3x/do_i_use_pip_or_pip3_or_pip34_to_install_packages/ https://stackoverflow.com/questions/40832533/pip-or-pip3-to-install-packages-for-python-3 ","date":"19 November 2018","externalUrl":null,"permalink":"/2018/11/19/anaconda3_windows_difference_between_pip_pip3/","section":"Posts","summary":"\u003cp\u003eOn Windows system, if you install Python3 via\n\u003ca href=\"https://www.anaconda.com/download/#windows\" target=\"_blank\"\u003eAnaconda\u003c/a\u003e. Under Anaconda root directory,\nthere is a directory named \u003ccode\u003eScripts\u003c/code\u003e, in which \u003ccode\u003epip.exe\u003c/code\u003e, \u003ccode\u003epip3.exe\u003c/code\u003e and\n\u003ccode\u003epip3.6.exe\u003c/code\u003e all exist. When we want to install a package, a natural question\narises, is there any difference if I use \u003ccode\u003epip install PACKAGE\u003c/code\u003e or \u003ccode\u003epip3 install PACKAGE\u003c/code\u003e?\u003c/p\u003e","title":"What Is The Difference between pip, pip3 and pip3.6 Shipped with Anaconda3?","type":"posts"},{"content":" 本篇文章介绍如何在 Windows 系统下安装并配置终端上的 Neovim。关于如何配置 Neovim 的 GUI 客户端 nvim-qt，可以参考 这篇博客。\nTL;DR: 长时间在 Windows 使用 Neovim 编程以后，我认为要在 Windows 上获得使用 Neovim 的最佳体验，必须使用 GUI 客户端（使用 GUI 客户端能避免很多小问题），而不是在终端命令行使用 Neovim。另外，Windows 系统下一些不错的 GUI 客户端有 Nvim-qt 和 fvim（新出来的一个客户端，体验不错）。\n开始之前 # Windows 自带的 CMD 命令行非常糟糕，不仅颜色难看，而且缺乏许多常用的 Linux 命令。不建议使用 CMD 作为命令行终端，建议使用 Cmder。Cmder 安装的时候，也附带安装了 Git for Windows 和其他的一些工具，可以使用 Linux 下的常用命令，如 ls, find, pwd 等等。\n如何安装 Neovim # Neovim 针对各个系统均有编译好的安装包，用户无需自己编译，省去了大量配置时间，安装非常方便。从 这里 可以下载到 Neovim win-64 位安装包，直接解压安装包即可完成安装。另外，需要把 Neovim 可执行程序所在的目录添加到系统的 PATH 中，确保在命令行可以使用 nvim 这个命令打开 Neovim。\n当然也可以用 Chocolatey 或者 scoop 等包管理工具安装 Neovim，具体可以参考 这里 的说明。\n配置 # 配置文件应该放在哪里？ # Neovim 使用了和 Vim 不同的配置文件名称以及配置文件存放位置，根据 Neovim 官方文档，Neovim 的配置文件应该命名为 init.vim，并且应该放在 ~/AppData/Local/nvim 目录下1。\n安装插件管理器 vim-plug # Vim-plug 是一个不错的插件管理器，要安装 vim-plug，首先打开 PowerShell 窗口，然后执行以下的命令：\nmd ~\\AppData\\Local\\nvim\\autoload $uri = \u0026#39;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\u0026#39; (New-Object Net.WebClient).DownloadFile( $uri, $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath( \u0026#34;~\\AppData\\Local\\nvim\\autoload\\plug.vim\u0026#34; ) ) 在 Neovim 的配置文件中，使用如下的 vim-plug 示例配置：\ncall plug#begin(\u0026#39;~/AppData/Local/nvim/plugged\u0026#39;) \u0026#34; below are some vim plugin for demonstration purpose Plug \u0026#39;joshdick/onedark.vim\u0026#39; Plug \u0026#39;iCyMind/NeoSolarized\u0026#39; Plug \u0026#39;vim-airline/vim-airline\u0026#39; Plug \u0026#39;vim-airline/vim-airline-themes\u0026#39; call plug#end() 打开 Neovim，然后运行 :PlugInstall 命令，所有要安装的插件都会被安装到目录 ~/AppData/Local/nvim/plugged 下. 当然，你可以根据自己的实际需求，更改插件安装的目录。\n问题及解决方案 # 退出 Neovim 窗口的时候，buffer 里面的内容未清空 # 在命令行使用 Neovim 时，当退出 Neovim 窗口，原来的窗口里面的文字内容仍然显示在命令行，并未被清空，浪费了大量的空间。这和 Neovim 在 Linux 下的表现不相同，如何在退出 Neovim 以后自动清除这些文字内容呢？\n经过一番搜索，我发现了一个对 Cmder 有效的解决方法。打开 Cmder 的配置，找到 Startup -\u0026gt; Environment，添加如下的配置：\nset TERM=xterm-256color 重启 Cmder，以上的问题应该就消失了。更多讨论，参见这里.\n当配置文件出错时，无法进入 Neovim 窗口 # 在命令使用 Neovim，如果配置文件某行设置有错，在打开 Neovim 时，我们会收到如下提示：\nPress ENTER or type command to continue\n然而，如果我们按下 Enter，Neovim 也不会启动。Neovim 程序会卡死在那里，除非你使用 Ctrl+ C 强行关闭这个进程。\n为了避免这个问题，根据 这里 的回答，可以使用以下命令启动 Neovim：\nnvim --cmd silent! 一些快捷键无法正常工作 # Neovim 和 Cmder 的快捷键冲突 # 部分原因是 Neovim 和 Cmder 的某些快捷键有冲突，例如在 Cmder 中，Ctrl-W 用来关闭一个 console 窗口。但是 Ctrl-W 在 Neovim 被用于和窗口相关的操作。可能还存在其他有冲突的快捷键，例如 Ctrl-v 无法像 Linux 下那样工作。\n要禁止 Cmder 中和 Neovim 冲突的快捷键，可以在设置的 Keys \u0026amp; Macro 部分更改或者禁止那些冲突的快捷键，\n\u0026lt;Ctrl-6\u0026gt; 无法工作? # 在 Linux 或者 Mac 下，我们可以使用 Ctrl-^(实际上是Ctrl-6) 来切换 Neovim 的 buffer，但是在 Windows Cmder 命令行下面，我发现 \u0026lt;Ctrl-6\u0026gt; 不起作用，按下以后也无法切换 buffer。我试着把 Ctrl-6 映射为 Ctrl-^:\nnnoremap \u0026lt;C-6\u0026gt; \u0026lt;C-^\u0026gt; 还是不起作用。目前暂时使用 Ctrl+shift+6 来切换 buffer。\n我的完整 Neovim 配置可以在 这里 查看。关于如何配置 Neovim Python 开发环境，可以看 这篇文章。\n参考链接 # Neovim 配置文件应该放在哪里？ 设置 Cmder 的终端类型。 Changing Cmder hotkey Ctrl-6 不起作用。 Shift+Insert 不起作用。 Shift+Insert 不起作用。 打开 Neovim，使用 :echo stdpath('config') 可以查看该目录的具体位置。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 November 2018","externalUrl":null,"permalink":"/2018/11/16/neovim_configuration_windows-zh/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190119221237.png\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003e本篇文章介绍如何在 Windows 系统下安装并配置终端上的 \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e。关于如何配置 Neovim 的 GUI 客户端 \u003ca href=\"https://github.com/equalsraf/neovim-qt\" target=\"_blank\"\u003envim-qt\u003c/a\u003e，可以参考 \u003ca href=\"https://jdhao.github.io/2019/01/17/nvim_qt_settings_on_windows/\" target=\"_blank\"\u003e这篇博客\u003c/a\u003e。\u003c/p\u003e","title":"Windows 10 系统下 Neovim 安装与配置","type":"posts"},{"content":"Today when I try to move a file using shutil.move() on my Windows machine, I encounter an error message:\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process\nIn this post, I will write about what I have learned from this error.\nHow to move files correctly on Windows # On Windows, before moving a file, you must close it. Or, you will see the above error message.\nSuppose that we want to move images in a child directory images/ to another child directory small_image/ if the width of an image is below a threshold. On Windows system, the correct way to do it is like the following:\nfrom glob import glob from PIL import Image all_images = glob(\u0026#34;images/*.jpg\u0026#34;) for i, im_path in enumerate(all_images): im = Image.open(im_path) width = im.width # we must close the image before moving it to another directory im.close() if width \u0026lt; 15: shutil.move(im_path, \u0026#39;small_images/\u0026#39;) On Linux, you are not required to close the file before moving it, i.e., you can move a file even if it is opened by another process.\nHow to move a file if a file with the same name already exists in the destination directory? # On both Linux and Windows, when you try to move a file using shutil.move(src, dst) with dst set as a directory path, you will encounter the following error message if a file with the same name already exists under dst:\nshutil.Error: Destination path \u0026lsquo;./test.txt\u0026rsquo; already exists\nThe solution is to use the full file path in dst, i.e., a complete path to the new file. If a file with the same name exists under the destination folder, it will be silently replaced. If that behaviour is not what you want, you may consider renaming the file under the new directory.\nReferences # Solve the issue of \u0026ldquo;file used by another process\u0026rdquo; Solve the \u0026ldquo;file already exists\u0026rdquo; error when using shutil.move(). Different behaviour of shutil.move on Windows and Mac. ","date":"15 November 2018","externalUrl":null,"permalink":"/2018/11/15/shutil_linux_windows_usage/","section":"Posts","summary":"\u003cp\u003eToday when I try to move a file using\n\u003ca href=\"https://docs.python.org/3/library/shutil.html#shutil.move\" target=\"_blank\"\u003e\u003ccode\u003eshutil.move()\u003c/code\u003e\u003c/a\u003e on\nmy Windows machine, I encounter an error message:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePermissionError: [WinError 32] The process cannot access the file because it is being used by another process\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn this post, I will write about what I have learned from this error.\u003c/p\u003e","title":"How to Use shutil.move() on Windows and Linux","type":"posts"},{"content":" update: 2020-11-15, add detailed instruction for Neovim config location.\nTL;DR: After nearly one year of using Neovim on Windows, I find that the best experience one can get on Windows is to use GUI Neovim client such as Nvim-qt or fvim, not the terminal Nvim1.\nIn this post, I want to share how to install and configure Neovim on Windows 102. For configurations of nvim-qt on Windows, check this post.\nBefore we begin # The built-in CMD on Windows is awful and lacks features of a normal Linux terminal. I strongly recommend readers using a better terminal emulator, for example, Cmder, which comes with Git for Windows and other utilities for you.\nInstall # You can download the neovim nightly release from its GitHub repo. Then extract the package, add the extracted folder to your system PATH variable, and make sure that you can invoke nvim on the command line.\nSee here for other ways to install Neovim on Windows.\nConfiguration # Where to put the configuration file? # A common confusion for novice users of Neovim is that they do not know where to put the config files. It is in fact quite simple.\nFirst of all, the neovim config file is named init.vim regardless of your system.\nSecond, based on Neovim official documentation, you should put init.vim under the directory ~/AppData/Local/nvim on Windows. To find here that directory is exactly, use the command :echo stdpath('config') inside Neovim.\nIf this directory does not exist, do not worry. Just create it and put your config file there.\nInstall plugin-manager vim-plug # vim-plug is popular plugin manager for Neovim. To install it on Windows, open a PowerShell terminal (not Windows CMD!), and execute the following command:\nmd ~\\AppData\\Local\\nvim\\autoload $uri = \u0026#39;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\u0026#39; (New-Object Net.WebClient).DownloadFile( $uri, $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath( \u0026#34;~\\AppData\\Local\\nvim\\autoload\\plug.vim\u0026#34; ) ) In init.vim, use the following settings for vim-plug:\ncall plug#begin(\u0026#39;~/AppData/Local/nvim/plugged\u0026#39;) \u0026#34; below are some vim plugins for demonstration purpose. \u0026#34; add the plugin you want to use here. Plug \u0026#39;joshdick/onedark.vim\u0026#39; Plug \u0026#39;iCyMind/NeoSolarized\u0026#39; Plug \u0026#39;vim-airline/vim-airline\u0026#39; Plug \u0026#39;vim-airline/vim-airline-themes\u0026#39; call plug#end() When we run command :PlugInstall, all the plugins will be installed under ~/AppData/Local/nvim/plugged. We can also change this directory to where we want, for example, ~/AppData/Local/nvim-data/plugged.\nIssues # The Neovim window content is not cleared when I exit # When I exit Neovim, the text content inside the buffer is still shown in the command line, wasting a lot of space. How do we clear the Neovim window content after exit?\nAfter some research, I have finally found a solution that works for Cmder. Open Cmder settings and go to Startup -\u0026gt; Environment, add the following settings:\nset TERM=xterm-256color Restart Cmder and the issue should disappear. More discussions can be found here.\nCan not enter Neovim if there are errors in config file # If there are errors in init.vim, Neovim will prompt you the following message during startup:\nPress ENTER or type command to continue\nHowever, pressing Enter has no effect. Neovim will hang unless you press Ctrl-C to terminate the process.\nTo circumvent this issue, according to this issue, try to open Neovim with the following option:\nnvim --cmd silent! Some shortcuts do not work # Shortcut conflict with Cmder # For Cmder, Ctrl-W is used to close a console. Unfortunately, this shortcut is also used by Neovim as prefix for window operations. Maybe there are some other conflicting shortcuts, for example, Ctrl-V does work like Linux.\nTo disable the conflicting shortcuts in Cmder, go to Keys \u0026amp; Macro part to change or disable a shortcut.\n\u0026lt;Ctrl-6\u0026gt; does not work? # On Linux, we can use Ctrl-^(actually Ctrl-6) to switch buffers. However, on Windows, using \u0026lt;Ctrl-6\u0026gt; for buffer switching does not work in terminal nvim. I try to map Ctrl-6 to Ctrl-^:\nnnoremap \u0026lt;C-6\u0026gt; \u0026lt;C-^\u0026gt; It doesn\u0026rsquo;t work either. Until I find the solution , I use Ctrl+shift+6 to switch buffers.\nMy complete configurations for Neovim can be found in this repo. For How to configure Neovim for Python development, check this post.\nReferences # Where to put Neovim config file. Set terminal type for Cmder. Changing Cmder hotkeys Ctrl-6 does not work Shift+Insert does not work Shift+Insert does not work Maybe the situation will change after Microsoft\u0026rsquo;s windows terminal become mature enough.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIt should work for Windows 7 as well.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"15 November 2018","externalUrl":null,"permalink":"/2018/11/15/neovim_configuration_windows/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190119221237.png\" width=\"600\"\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003cfont color=\"blue\"\u003eupdate: 2020-11-15, add detailed instruction for Neovim config location.\u003c/font\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTL;DR\u003c/strong\u003e: After nearly one year of using Neovim on Windows, I find that the\nbest experience one can get on Windows is to use GUI Neovim client such as\n\u003ca href=\"https://github.com/equalsraf/neovim-qt\" target=\"_blank\"\u003eNvim-qt\u003c/a\u003e or \u003ca href=\"https://github.com/yatli/fvim\" target=\"_blank\"\u003efvim\u003c/a\u003e, not the terminal Nvim\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003cp\u003eIn this post, I want to share how to install and configure Neovim on Windows 10\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\nFor configurations of \u003ca href=\"https://github.com/equalsraf/neovim-qt\" target=\"_blank\"\u003envim-qt\u003c/a\u003e on Windows, check \u003ca href=\"https://jdhao.github.io/2019/01/17/nvim_qt_settings_on_windows/\" target=\"_blank\"\u003ethis post\u003c/a\u003e.\u003c/p\u003e","title":"Neovim configuration on Windows 10","type":"posts"},{"content":"On Linux system, if we do not have root priviledge, we can not use package managers to install a package to its default location (usually under /usr). Besides, the packages installed by the package managers are often too old to have the latest features. Or, even if we have root priviledge, we do not want to mess up with the system-wide packages and just want to experiment with a package locally. On these ocassions, we may want to install the package to a custom location.\nThe standard procedure to build and install a package from source is something like the following:\n./configure make \u0026amp;\u0026amp; make install By default, the package will be installed under /usr and you must have root priviledge. If you are not familiar with these steps. Read here and here for more discussions on what each step does.\nIn order to install the package to a custom location and find dependency packages which are not installed on standard locations, we need to set custom options and variables for the configure script. In this post, I will explain the meaning of --prefix, CLFAGS, CXXFLAGS, CPPFLAGS and LDFLAGS.\nThe meaning of these options and variables # --prefix # --prefix is used to tell make where to install the compiled packages. For example, if you use --prefix=$HOME/local, after building the package using make -j, if you do a make install, the binary file will be put in $HOME/local/bin, the library file will be put in $HOME/local/lib or $HOME/local/lib64, the header file will be put in $HOME/local/include and the help file and other resources may be put in $HOME/local/share.\nCFLAGS and CXXFLAGS # CFLAGS and CXXFLAGS are used to set up C and C++ compilers respectively. On most Linux system, the C compiler is usually gcc, while the C++ compilers is usually g++.\nCPPFLAGS # The CPPFLAGS is often mis-understood to set up C++ compiler options. In fact, it is used by C/C++ preprocessors. It tells preprocessor where to find the header files. If you need to set up C++ compiler, you should use CXXFLAGS variable. A valid CPPFLAGS is something like CPPFLAGS=\u0026quot;-I$HOME/local/include\u0026quot;.\nLDFLAGS # LDFLAGS is used to set up the path of library files. For example, LDFLAGS=\u0026quot;-L$HOME/local/lib\u0026quot;.\nConclusion # In this post, I introduced some of the most commonly-used options and flags for the configure script when building packages from source. Understanding these options and flags will help you succeed in building the packages.\nReference # CPPFLAGS vs CXXLAGS. CFLAGS vs CPPFLAGS Variable meanings from GNU offical doc compiler flags on Unix system ","date":"7 November 2018","externalUrl":null,"permalink":"/2018/11/07/option_flag_meaning_build_packages_from_source/","section":"Posts","summary":"\u003cp\u003eOn Linux system, if we do not have root priviledge, we can not use package\nmanagers to install a package to its default location (usually under \u003ccode\u003e/usr\u003c/code\u003e).\nBesides, the packages installed by the package managers are often too old to\nhave the latest features. Or, even if we have root priviledge, we do not want\nto mess up with the system-wide packages and just want to experiment with a\npackage locally. On these ocassions, we may want to install the package to a\ncustom location.\u003c/p\u003e","title":"Commonly-used Building Options Explained","type":"posts"},{"content":" fzf is a fast and powerful fuzzy file search tool on the command-line. In this post, I will introduce its installation and usage.\nInstallation # Two step install # We can use git to install fzf:\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf ~/.fzf/install The above command will install fzf under ~/.fzf/bin.\nIf you want to enable fzf inside Neovim, add the following setting to Neovim configuration (suppose your plugin manager is vim-plug):\nPlug \u0026#39;~/.fzf\u0026#39; One step install # We can install fzf and enable it inside Neovim in one step. Use the following configuration for Neovim:\nPlug \u0026#39;junegunn/fzf\u0026#39;, { \u0026#39;dir\u0026#39;: \u0026#39;~/.fzf\u0026#39;, \u0026#39;do\u0026#39;: \u0026#39;./install --all\u0026#39; } You can change the directory where you want to install fzf.\nHow to use # As Nvim plugin # Inside Nvim, we can search and open files quickly using the command provided by fzf:\n:FZF \u0026#34; find file under current directory :FZF ~ \u0026#34; find file under HOME directory For convenience, we can add shortcut mappings for the above commands:\nnnoremap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;f :FZF\u0026lt;cr\u0026gt; nnoremap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;F :FZF ~\u0026lt;cr\u0026gt; You can use Ctrl + N and Ctrl + P or the arrow key to navigate through the list of files found by fzf. To open the file in Neovim, fzf provides several shortcut key:\n\u0026lt;Enter\u0026gt;: open file in current window Ctrl + T: open file in new tab page Ctrl + X: open file in new horizontal window Ctrl + V: open file in new vertical window To close the file search window, use Esc or Ctrl+C.\nUse fzf with other command # You can also use fzf in conjunction with other command. For example, you can use fzf and nvim together. Fzf is used to find the file and then open the file with nvim:\nnvim $(fzf) Use fzf alone # Fzf provide several command-line shortcut after installation:\nCtrl + T: paste the path of file or directory found on the command line Ctrl + R: find history command and paste command on the command line Alt + C: cd to specific directory Note that Ctrl + T 和 Alt + C will only find file or folder under current directory. If you can not find a file, please make sure that it exists under current directory.\nBy default, fzf use find to search files. You can use the variable FZF_DEFAULT_COMMAND to change the default search command. For example, if you have installed the silver searcher, AKA, ag, you may want to use the following setting in your .bash_profile:\nexport FZF_DEFAULT_COMMAND=\u0026#39;ag --hidden --ignore .git -g \u0026#34;\u0026#34;\u0026#39; Autocompletion on command line # Auto-complete file or directory names # When you are using vim and cd, you can activate file and directory fuzzy completion with ** as a trigger (press Tab to trigger auto-completion):\nvim **\u0026lt;TAB\u0026gt; # open file under current directory vim ../**\u0026lt;TAB\u0026gt; # open file under parent directory vim ~/**\u0026lt;TAB\u0026gt; # open file under $HOME cd **\u0026lt;TAB\u0026gt; # go to a directory under current directory The auto-completion function only supports a few commands. If you want to add your own command, say, pylint, it is easy to set up. Following the guide here, you need to add the below command to your .bash_profile:\ncomplete -o bashdefault -o default -F _fzf_path_completion pylint Do not forget to source your .bash_profile. Then you can trigger auto-complete for pylint just like what you do with vim and cd:\n# open some file under home directory in a recursive manner pylint ~/**\u0026lt;TAB\u0026gt; Autocompletion for environment variables # Fzf can also auto-complete environment variables:\nexport **\u0026lt;TAB\u0026gt; unalias **\u0026lt;TAB\u0026gt; unset **\u0026lt;TAB\u0026gt; search hidden file by default # By default, fzf does not search hidden files. In order to search hidden files by default, use the following setting (suppose that you use ag):\nexport FZF_DEFAULT_COMMAND=\u0026#39;ag --hidden --ignore .git -g \u0026#34;\u0026#34;\u0026#39; See here for more discussions.\nMake fzf work under Zsh on macOS # If you are using zsh on Mac with oh-my-zsh, zsh has a plugin to make fzf work with it.\nFirst, add the following setting in .zshrc:\n# suppose you have installed fzf to ~/.fzf, change it to what suits you export FZF_BASE=\u0026#34;$HOME/.fzf\u0026#34; In the .zshrc plugin part, enable this plugin:\nplugins=( ... fzf ) Source .zshrc to make changes take effect. Fzf should work now on Zsh.\nThere is one gotcha, Alt + C does not work: it will just print the character ç. If you are using iterm2, it is easy to fix. Open the iterm2 preference settings, go to Profiles -\u0026gt; Keys. In the bottom right of the window, there are different buttons to choose the behaviour of Option key. Just choose Esc+ and everything should be fine.\n","date":"5 November 2018","externalUrl":null,"permalink":"/2018/11/05/fzf_install_use/","section":"Posts","summary":"\u003cscript id=\"asciicast-218493\" src=\"https://asciinema.org/a/218493.js\" async\u003e\u003c/script\u003e","title":"Fzf Installation and Usage","type":"posts"},{"content":"Linux is great for programming compared to Windows. If you miss the experience you get on Linux, maybe you should try Cygwin, which set up a Linux-like environment on Windows platform. In this post, I want to talk about how to configure Cygwin and how to use mintty terminal on Windows 10 to get excellent programming experience.\nHow to install new packages? # There is no official way to install a new package. Just run the Cygwin setup tool one more time and select the package you want to install. It will not rewrite the package you have installed, only the new package will be installed.\nIf the package download speed is slow, you can choose a local mirror for Cygwin. In China, TUNA is good.\nReference # https://superuser.com/a/304543/736190 When I use ssh to connect to my server, I got an error message \u0026ldquo;Pseudo-terminal will not be allocated because stdin is not a terminal\u0026rdquo; # On Windows 10, there is a built-in ssh program under C:/Windows/System32/OpenSSH/ssh.exe. You are probably using this program. If that is the case, you have to install openssh yourself. Just run the Cygwin setup program one more time to install the additional package. Then this issue should disappear.\nReference # https://stackoverflow.com/a/18091711/6064933 Mintty settings # Cygwin use the popular mintty terminal as its terminal emulator. In this part, I document several settings related to mintty.\nHow do I set up the mintty terminal emulator type, i.e., TERM variable? # Right-click Cygwin window title and choose Options..., go to Terminal, and choose Type to be xterm-256color. That is all.\nHow to use an external color theme for mintty? # By default, mintty provides a few color themes. The color theme for mintty are just a list of settings for different colors. There are several places where you can find mintty themes. A non-exhaustive list is:\nhttps://github.com/oumu/mintty-color-schemes A python tool with several built-in color themes, https://github.com/joakimkarlsson/mintty-colors How do I change colors on-the-fly in mintty? Save the color theme file under $CYGWIN_ROOT/usr/share/mintty/themes. Open mintty options (right click on Cygwin title bar), go to Looks pane and choose from the Theme pull-down menu a color theme you want to use.\nAlternatively, create a .minttyrc file under your HOME. Paste the content of color theme in this file and save it. The next time you open Cygwin, mintty will automatically use the configurations in .minttyrc.\nReferences # https://github.com/mintty/mintty/wiki/Tips#using-colour-schemes-themes How do I configure mintty to use the settings from a config file and what are the available options? # As I have said, create a .minttyrc under your HOME, and put mintty settings in this file. To see all the options available, visit this page.\nHow to open URL in browser # In the iTerm terminal, we can click a URL to open it in the browser, which is convenient. Actually mintty also supports this feature.\nBut sometimes, Ctrl+click won\u0026rsquo;t work properly. It has something to do with the mouse mode of various programs. When mouse mode is enabled for Neovim and Tmux, to open a URL in browser, I have to use Ctrl+Shift+click . If the mouse mode is turned off, I can open a URL with just Ctrl+click.\nReferences # https://github.com/mintty/mintty/issues/694 https://github.com/mintty/mintty/issues/164 How to update mintty? # It is the same as you install or update other packages. Run setup_x86_64.exe and install the latest version of Mintty.\n","date":"23 October 2018","externalUrl":null,"permalink":"/2018/10/23/cygwin_install_and_use/","section":"Posts","summary":"\u003cp\u003eLinux is great for programming compared to Windows. If you miss the experience\nyou get on Linux, maybe you should try \u003ca href=\"https://www.cygwin.com/\" target=\"_blank\"\u003eCygwin\u003c/a\u003e, which\nset up a Linux-like environment on Windows platform. In this post, I want to\ntalk about how to configure Cygwin and how to use mintty terminal on Windows 10\nto get excellent programming experience.\u003c/p\u003e","title":"Execellent Development Experience with Cygwin and Mintty Terminal on Windows 10","type":"posts"},{"content":"In this post, I will summarize a list of questions related to Tmux during the process of learning how to use it.\nHow to set the right status bar to show load average? # Show system load average and time at right of status bar\nset -g status-right \u0026#34;#[fg=red,bold]#(uptime | cut -d \u0026#39;,\u0026#39; -f 4-) #[fg=blue,bold][%Y-%m-%d %H:%M]#[default]\u0026#34; # increase the length of status bar, or the characters won\u0026#39;t fit set -g status-right-length 100 You may need to change the part cut -d ',' -f 4- to cut -d ',' -f 3-. Because, on my system, the output of uptime is something like this:\n16:36:09 up 9 days, 5:30, 40 users, load average: 31.12, 24.51, 21.68\nWith the above setting, the current load average and time will be shown on the right side of tmux status bar.\nHow does tmux color work? # You may use the following setting to set the color of some Tmux window component:\n# set the status bar background color to colour10 set -g status-bg colour10 The colors are from the 256 colors supported by the terminal. we can use script below to show what these colors look like:\nfor i in {0..255}; do printf \u0026#34;\\x1b[38;5;${i}mcolour${i}\\x1b[0m\\n\u0026#34; done Then, inside Tmux config file ~/.tmux.conf, we can use a color with index \u0026lt;INDEX\u0026gt; as colour\u0026lt;INDEX\u0026gt;.\nSee here for more discussions.\nHome and End key does not work inside Tmux? # Inside Tmux, the home and end key does not work. The reason is probably that the terminal type inside Tmux conflict with terminal type set outside. Try to use the following setting in .tmux.conf:\nset -g default-terminal \u0026#34;screen-256color\u0026#34; Also make sure that you do not manually set TERM variable in .bash_profile or other shell configuration files. You should set TERM in your terminal emulator configurations. This will most probably fix the issue.\nSee also reference here.\nWhat is terminfo and how to check the content of a term files? # For almost every terminal, there is terminfo file describing the ability of this terminal. Usually, programs have to know the terminal type to send the correct command to terminal. So the terminal or (terminal emulators) are responsible for telling what they are capable of (i.e., what kind of terminal they are). Then the various program depending on this information will read this message and work accordingly. That is why we need to set default term for Tmux for it to work nicely with Neovim/Vim.\nTo see the content of a term file, you can use infocmp followed by the term name. For example:\ninfocmp xterm-256color The command above will print the info of term file xterm-256color. If you use infocmp without any argument, it will print the info of term file currently in use.\nRedraw window when switching from a smaller window to a bigger one? # When you attach to a session in two different terminal applications. You may notice that some of the window space is filled with dots. That is because the session window before is smaller than the current window. How to redraw the current window so that it can fill the whole space?\nYou can use tmux detach -a inside the current session window. This command will detach all session window except the current one.\nThere is another solution. When you attach to a session, you can use -d option, which will detach all previous sessions opened elsewhere. The syntax is:\ntmux a -d -t \u0026lt;SESSION_NUM\u0026gt; How to copy text inside Tmux when set -g mouse on? # Press \u0026lt;Shift\u0026gt; and drag mouse to select text, the selected text will be copied automatically.\nTo copy a block of text when there are multiple vertical splits, press \u0026lt;Alt\u0026gt;+\u0026lt;Shift\u0026gt; and drag mouse to select a rectangle text region.\nOr you can temporarily zoom the current pane to make it occupy the whole window and copy text. After you have copied the text, press \u0026lt;Prefix\u0026gt; z again to go back to normal state.\nWhat does -n in bind -n mean? # By default, when you bind key to a Tmux command, you need to first press the prefix key (the default prefix key is Ctrl-b). For example,\nbind s split-window -v In the above settings, s is binded to horizontally split a window. To invoke it, you have to press \u0026lt;prefix\u0026gt; s. The -n options means that no prefix is needed, thus we can directly press the keys to invoke a command. The Tmux man page says:\nbind-key [-nr] [-T key-table] key command [arguments] (alias: bind) Bind key key to command. Keys are bound in a key table. By default (without -T), the key is bound in the prefix key table. This table is used for keys pressed after the prefix key (for example, by default ‘c’ is bound to new-window in the prefix table, so ‘C-b c’ creates a new window). The root table is used for keys pressed without the prefix key: binding ‘c’ to new-window in the root table (not recommended) means a plain ‘c’ will create a new window. -n is an alias for -T root. Keys may also be bound in custom key tables and the switch-client -T command used to switch to them from a key binding. The -r flag indicates this key may repeat, see the repeat-time option. There is a delay to exit Vim when pressing Esc key inside Tmux? # Tmux has a escape-time option to control how Esc is interpreted:\nescape-time time. Set the time in milliseconds for which tmux waits after an escape is input to determine if it is part of a function or meta key sequences. The default is 500 milliseconds. You should set escape-time to a lower value to prevent it from being interpreted as a Meta key. For example:\nset -gs escape-time 10 See more discussions here and here.\nDifference between set and set-option? # set is an alias for set-option, see here.\nDifference between bind and bind-key? # bind is an alias for bind-key, see here.\nrz and sz does not work inside Tmux? # rz and sz are not so popular and supporting it will add more code. So the Tmux author decide to not support them. See here.\nTmux hangs or freezes when there are a lot of output from one pane # When you open a Tmux session and start multiple vertical splits, if there are a lot of output from one pane, for example, when you use tar to compress a large amount of files, you may find that tmux is very slow to respond your input in another pane split.\nIt seems that there is no good solution for this issue. You may need to change your terminal emulator.\nMore discussions can be found here, here and here.\nReferences # Is there any way to redraw tmux window when switching smaller monitor to bigger one? How can I check which terminal definitions are available? https://www.tldp.org/HOWTO/Text-Terminal-HOWTO-16.html http://man7.org/linux/man-pages/man5/terminfo.5.html Tmux mouse-mode on does not allow to select text with mouse https://news.ycombinator.com/item?id=7758368 ","date":"23 October 2018","externalUrl":null,"permalink":"/2018/10/23/tmux_questions_and_trouble_shooting/","section":"Posts","summary":"\u003cp\u003eIn this post, I will summarize a list of questions related to Tmux\nduring the process of learning how to use it.\u003c/p\u003e","title":"Tmux Questions and Trouble Shootings","type":"posts"},{"content":"If you connect your Android device to a Macbook, you will notice that your phone is not recognized. Unlike Windows, Apple\u0026rsquo;s Mac is not so friendly to Android devices. Of course, you can install Android File Transfer provided by Google and connect your phone to Mac. But it is kinda cumbersome and does work so well. In this post, I want to share several ways to transfer files between Android and Mac wirelessly.\nI have tested the three different methods listed below on my Mac and Android. For your reference, the device info is:\nMac: Macbook Pro 2018 with the latest macOS Mojave (version 10.14) Phone: OnePlus 3T with Android 8.0.0 Bluetooth # In order to share files between Android and Mac using Bluetooth, you need to set up Mac first. Open the system preference setting and open the Sharing panel. Turn on the Bluetooth Sharing service and set up the destination folder properly. Then you can share files via Bluetooth easily.\nPros and Cons # The advantage of this method is that you do not need to install any additional software since Bluetooth is the standard utility across different OS. The disadvantage is also obvious: the file transfer speed is slow. I have observed that the transfer speed is about 100kb/s. For large files, it will take a lot of time. Unless you are always transferring small files, I would not recommend using Bluetooth.\nKDE connect and Soduto # From the KDE connect GitHub repo:\nKDE Connect is a multi-platform app that allows your devices to communicate (eg: your phone and your computer).\nFirst, you need to install kdeconnect for Android from the Google Play store. There is no official package for Mac. Fortunately, there is a software called Soduto which is like KDE connect. So you can install Soduto on Mac instead.\nAfter installing these applications, you should make sure that your Mac and Android device is connected to the same wireless router. Open kdeconnect on your phone, you should be able to see your Macbook automatically like the image below.\nTap the Macbook device and let your phone pair with it. Now, you can browse files on your phone easily and share files freely.\nWith kdeconnect, you can not only share files, but also share the clipboard between your Android phone and Mac. When you copy text on one device, it will be automatically synced to another device. Amazing, isn\u0026rsquo;t it? The transfer speed is also high.\nThe disadvantage is that you need to install an application both on your phone and on your Mac.\nMiXplorer # The third way is to install MiXplorer file manager on your phone. MiXplore is a light-weight yet powerful file manager. With it, you can create FTP server or http servers on your phone, which your Mac can later connect to.\nCreate a HTTP server # Open MiXplorer and click top-right button and click servers\u0026hellip; menu, you will be prompted to choose a server type. Choose Start HTTP Server.\nYou will see a notification on your notification bar like the following:\nOpen the HTTP address in your browser, and you should be able to see all the files on your phone. Click a file to download it to your Mac1. To upload files to your phone, first choose a file and then hit the upload button in the interface.\nThe transfer speed is high and the process is stable.\nCreate a FTP server # Like the way to create a HTTP server, we can also create a FTP server on our phone.\nAfter starting the FTP server, we need to connect to it to share files. To connect to the FTP server. We need a FTP client. You may try the free software such as cyberbuck or filezilla. Let\u0026rsquo;s take filezilla for an example. Install this application, open it and set up the FTP server, you will see an interface like the image below:\nThe file transfer speed is also quite high.\nConclusion # In this post, I introduced three ways to share files between Android device and Mac wirelessly. Overall, I recommend the second (using Soduto) and third way (using MiXplorer), since these two methods can all guarantee high transfer speed. If you need to exchange texts, URLs and other small text snippet between Android and Mac frequently, maybe Soduto suits you better.\nReferences # Set up Bluetooth sharing on Mac This may not work on Apple Safari. On Chrome, it works.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 October 2018","externalUrl":null,"permalink":"/2018/10/21/transfer_file_between_android_mac_wireless/","section":"Posts","summary":"\u003cp\u003eIf you connect your Android device to a Macbook, you will notice that your\nphone is not recognized. Unlike Windows, Apple\u0026rsquo;s Mac is not so friendly to\nAndroid devices. Of course, you can install \u003ca href=\"https://www.android.com/filetransfer/\" target=\"_blank\"\u003eAndroid File Transfer\u003c/a\u003e\nprovided by Google and connect your phone to Mac. But it is kinda cumbersome\nand does work so well. In this post, I want to share several ways to transfer\nfiles between Android and Mac wirelessly.\u003c/p\u003e","title":"File Sharing between Android and Mac Wirelessly without Pain","type":"posts"},{"content":"去年建立博客的时候，选择了七牛对象存储来存放博客的图片，最近收到了七牛的邮件，之前一直在用的域名只是一个测试域名，再过一阵就要回收了，到时必须使用自己的域名。大概看了一下，申请自己的域名还要涉及注册和备案，我仅仅是需要存储图片，这样太费周章，所以决定把博客的图片从七牛迁移出来。\n经过一番查找比较，最后决定使用腾讯云的对象存储 COS，由于我的图片量很少，所以就算付费，每个月实际的支出也不会太大。本文介绍图片迁移过程。\n从七牛 bucket 下载图片 # 七牛提供了命令行工具qshell 来对七牛存储进行操作，我们可以利用这个工具把 bucket 里面的图片全部下载到本地。对于 Mac 系统，下载以后解压文件，qshell_darwin_x64 即为可执行文件，为了方便后续操作，先建立 qshell 软链接，指向实际的可执行程序：\nchmod u+x qshell_darwin_x64 ln -s qshell_darwin_x64 qshell 然后配置自己的账户：\nqshell account \u0026lt;AK\u0026gt; \u0026lt;SK\u0026gt; \u0026lt;AK\u0026gt; 和 \u0026lt;SK\u0026gt; 分别是自己的 access key and secret key，可以从七牛账户的个人面板的 密钥管理 模块查看。\nqshell 提供了一个 qdownload 功能，可以批量从 bucket 下载图片，但是该功能的下载流量默认是收费的，如果想要免费，建立配置文件 qdownload.conf，一个示例配置内容如下：\n{ \u0026#34;dest_dir\u0026#34; : \u0026#34;/Users/jdhao/Documents/qiniu_bucket_files\u0026#34;, \u0026#34;bucket\u0026#34; : \u0026#34;github-pages-image-storage\u0026#34;, \u0026#34;prefix\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;suffixes\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;cdn_domain\u0026#34; : \u0026#34;olvlcptdv.bkt.clouddn.com\u0026#34;, \u0026#34;referer\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;log_file\u0026#34; : \u0026#34;download.log\u0026#34;, \u0026#34;log_level\u0026#34; : \u0026#34;info\u0026#34;, \u0026#34;log_rotate\u0026#34; : 1, \u0026#34;log_stdout\u0026#34; : false } dest_dir 填写下载的图片存放路径，确保路径存在；bucket 填写你在七牛建立的 bucket 的名称；cdn_domain 填写七牛给的测试域名；其他信息可以不用填写。\n配置文件填写好以后，使用下面命令下载 bucket 里面所有图片：\nqshell qdownload qdownload.conf 程序运行结束以后，所有的图片就被下载到了指定的目录下面。\n设置腾讯云对象存储 # 注册腾讯云，然后在对象存储里面建立一个存放博客图片的 bucket，注意权限要设置为「公有读私有写」1，这样别人访问博客的时候，才能看到图片。\n然后把刚才下载的图片全部上传到这个 bucket 里面，可以批量拖拽上传。值得注意的是，如果七牛 bucket 下有文件夹，那么拷贝到腾讯云，也要保持文件夹结构，否则替换到腾讯的域名以后图片将无法访问。\n替换原有的图片中七牛域名 # 接下来，使用命令行工具或者带有正则表达式的编辑器，批量替换所有博客源代码中图片的地址，把七牛云的测试域名，替换为腾讯云存储提供的域名。创建的 bucket 的访问域名可以点击「基础配置」一栏，「基本信息」部分有域名信息。\n另外，如果之前使用七牛时候使用了图像处理操作，原有图片链接中的图像操作部分也应该去掉。\n图片上传工具 # 找了一圈，支持上传到腾讯云存储的有两个不错的程序，一个是iPic，另外一个是PicGo。iPic 免费版只能使用新浪微博图床，要使用其他图床，需要付费版，每年 $9.9，个人觉得太贵，不值这么多，所以放弃。PicGo 支持腾讯云，并且免费，正好满足需要。\n具体配置可以参考官方wiki。可以直接拖拽图片到 PicGO 的菜单栏图标实现图片上传，或者如果已经把图片拷贝到剪切板，使用默认的 Command + shift + P 快捷键上传图片，当然快捷键可以根据自己需求修改。\n腾讯云对象存储配置 CDN # 如果直接使用腾讯云对象存储提供的图片 URL，每个月的流量费还是比较贵的，强烈建议搭配腾讯云提供的 CDN，能够减少流量费用支出。具体配置方法见 这里。\n如果要配置 CDN，可以设置权限为「私有读私有写」，具体设置见 官方文档。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 October 2018","externalUrl":null,"permalink":"/2018/10/20/qiuniu_migrate_to_tencent_cos/","section":"Posts","summary":"\u003cp\u003e去年建立博客的时候，选择了\u003ca href=\"https://www.qiniu.com/\" target=\"_blank\"\u003e七牛\u003c/a\u003e对象存储来存放博客的图片，最近收到了七牛的邮件，之前一直在用的域名只是一个测试域名，再过一阵就要回收了，到时必须使用自己的域名。大概看了一下，申请自己的域名还要涉及注册和备案，我仅仅是需要存储图片，这样太费周章，所以决定把博客的图片从七牛迁移出来。\u003c/p\u003e","title":"博客图床从七牛云存储迁移到腾讯云存储","type":"posts"},{"content":" Update log 2021-11-23: update tmux and nvim version to the latest and fix other issues.\nIn this post, I want to share how to set up true color support in Tmux, Nvim and the shell to make them work nicely together.\nThere are tons of posts on the Internet regarding how to set up true color support to make Tmux, Nvim and terminal work together. Time flies and settings may change. Many people also do not really understand the reason behind all the settings and often give some ad-hoc settings. All these lead to chaos. It turns out that setting up true color support is painfully difficult and costs me several hours.\nVersion info # Before we begin, I will list the info about all the necessary components so that you can reproduce on your device:\nTerminal: iTerm2 and kitty, which support True color by default. Tmux: Version 3.2 (tmux -V) and installed via HomeBrew Neovim: v0.5.1 (nvim --version) and installed via HomeBrew First, we have to understand that not all terminals support true colors. Whether you use a terminal emulator to connect to remote host or use a native terminal, make sure that your terminal supports true colors. For a list of terminals supporting true colors, see this wonderful repo.\nSetting up true color support # terminal emulator settings # iTerm2 settings # For iTerm2, make sure the output of echo $TERM is xterm-256color. If the output is wrong, you should set it properly in iTerm2. Open the iTerm2 preference settings, go to Profiles --\u0026gt; Terminal, in the Terminal Emulation part, choose xterm-256color as the reported terminal type.\nDo not set TERM variable in your shell profile! It is your terminal emulator that is responsible for reporting what kind of terminal it supports. If you set TERM variable in your shell, the TERM variable inside Tmux will also be set to that value when the shell is initialized, which is simply wrong!1. Do not do this.\nkitty settings # Open ~/.config/kitty/kitty.conf and use the following setting:\nterm xterm-256color Neovim settings # Neovim has good support for true colors. According to official doc, to enable true color support, you need to add the following setting to init.vim:\nset termguicolors Tmux settings # In order to make Nvim colorscheme work well inside Tmux, you need to add these settings to your .tmux.conf2:\nset -g default-terminal \u0026#34;screen-256color\u0026#34; # tell Tmux that outside terminal supports true color set -ga terminal-overrides \u0026#34;,xterm-256color*:Tc\u0026#34; # for tmux 3.2, you can use the following setting instead: # set -as terminal-features \u0026#34;,xterm-256color:RGB\u0026#34; You can also use tmux-256color instead of screen-256color. Tmux-256color supports italics inside Tmux. In case your system does not have an entry for tmux-256color, you can download terminfo database and build a more complete one:\ncurl -LO http://invisible-island.net/datafiles/current/terminfo.src.gz gunzip terminfo.src.gz tic -x terminfo.src This will install a terminfo library under your HOME in the directory .terminfo.\nVerifying # Open up a Tmux session, inside Tmux, the output of echo $TERM should be screen-256color or tmux-256color depending on which term file you choose to use, but the output definitely should not be xterm-256color.\nIf you have set up all these properly, run the following command on the command line:\nawk \u0026#39;BEGIN{ s=\u0026#34;/\\\\/\\\\/\\\\/\\\\/\\\\\u0026#34;; s=s s s s s s s s; for (colnum = 0; colnum\u0026lt;77; colnum++) { r = 255-(colnum*255/76); g = (colnum*510/76); b = (colnum*255/76); if (g\u0026gt;255) g = 510-g; printf \u0026#34;\\033[48;2;%d;%d;%dm\u0026#34;, r,g,b; printf \u0026#34;\\033[38;2;%d;%d;%dm\u0026#34;, 255-r,255-g,255-b; printf \u0026#34;%s\\033[0m\u0026#34;, substr(s,colnum+1,1); } printf \u0026#34;\\n\u0026#34;; }\u0026#39; The above script will print a color band. If something is wrong, the color band will show obvious gradient between different parts (see image below for an example).\nIf everything works well, you should be able to see a smooth color band both inside and outside Tmux.\nCongratulations, you have finally got it right!\nReferences # https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour https://stackoverflow.com/q/15375992/6064933 Good explanation about what terminal-overrides does. https://stackoverflow.com/q/41783367/6064933 https://www.reddit.com/r/neovim/comments/825dj7/the_endless_litany_of_tmux_and_nvim_color_problems/ Why you should not set TERM inside shell config file. You should not set TERM inside shell config file. You can find more discussion here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf the file .tmux.conf does not exist under your HOME, just create an empty one and start editing it..\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"19 October 2018","externalUrl":null,"permalink":"/2018/10/19/tmux_nvim_true_color/","section":"Posts","summary":"\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"2\" color=\"red\"\u003eUpdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cp\u003e\u003cfont color=\"blue\"\u003e2021-11-23: update tmux and nvim version to the latest and fix other issues.\u003c/font\u003e\u003c/p\u003e\n\u003c/details\u003e\n\u003cp\u003eIn this post, I want to share how to set up true color support in Tmux, Nvim\nand the shell to make them work nicely together.\u003c/p\u003e","title":"Setting up True Color Support for Neovim and Tmux on Mac","type":"posts"},{"content":"Today I want to use some regular expressions for searching and replacing in my files. But I found that Nvim/Vim regular expression engine has its own flavor, which is different from the regex engine used by Sublime Text1. I ended up learning some of the basics of Nvim-style regex. In this post, I want to share about how to use lookaround2 in Nvim.\nLookaround in Nvim # First, in Nvim, the syntax for look around is:\n\\@=: positive lookahead \\@!: negative lookahead \\@\u0026lt;=: positive lookbehind \\@\u0026lt;!: negative lookbehind But how to use look around in Nvim? Let is take an example to explain this. Suppose we have text as follows:\nfoobar foo barfoo To match foo which is followed by bar (bar not part of the match), use the following regex:\n/foo\\(bar\\)\\@= In Nvim, ( and ) matches literally, which is different from PCRE. In order to use lookaround in Nvim, we have to include the lookaround pattern in a group, hence the escaped parentheses \\(\\) around bar.\nSo the first foo in the above text matches:\nfoobar foo barfoo ^ one match here Similarly, we have the following 4 patterns:\nMatch foo which is not followed by bar: /foo\\(bar\\)\\@! # now we have two matches foobar foo barfoo ^ ^ two matches here Match foo which is preceded by bar: /\\(bar\\)\\@\u0026lt;=foo foobar foo barfoo ^ one match here Match foo which is not preceded by bar: /\\(bar\\)\\@\u0026lt;!foo foobar foo barfoo ^ ^ two matches here Match foo which is neither followed nor preceded by bar: /\\(bar\\)\\@\u0026lt;!foo\\(bar\\)\\@! foobar foo barfoo ^ one match here Combine magic mode and look around # Several months after I first wrote this article, I learned that Nvim also has a very magic mode (see :h /magic for more info) which behaves more like PCRE. The very magic mode is activate by preceding the search pattern with \\v. In the very magic mode, you have to remove the \\ character from the look around pattern. So in the very magic mode, the following regex should be used instead:\npositive look ahead: @= negative look ahead: @! positive look behind: @\u0026lt;= negative look behind: @\u0026lt;! For example, to match foo which is followed by bar, you should use:\n\\vfoo(bar)@= \\ze and \\zs for positive lookaround # We may also use \\zs and ze for positive lookbehind and lookahead. \\zs means that the actual match starts from here and \\ze means that the actual match ends here. Take the above foobar text as an example:\nMatch foo preceded by bar: \\bar\\zsfoo Match foo followed by bar: foo\\zebar In the above two match, bar is not part of the match. You can see that\\ze and \\zs simplify the pattern for positive lookaround.\nA last example # Let\u0026rsquo;s take another example (adapted from this post):\nrs11223-A -A rs23300-G -TTA rs9733-T -G rs11900000-GT -TTG Suppose we want to find - in the first part of each line, how do we write the regex pattern?\nUsing positive lookbehind # With positive lookbehind, the pattern can be (definitely not the only one):\n/\\(\\d\\+\\)\\@\u0026lt;=- In the above regex pattern, \\+ means to match previous pattern 1 or more time, which is a bit different from what we are accustomed to in Sublime Text.\nUsing \\zs # With \\zs, we can simplify the match pattern:\n/\\d\\+\\zs- Ok, that is all. Hope you can finally understand how to correctly use lookaround regex in Nvim.\nReferences # https://vi.stackexchange.com/questions/3036/is-lookaround-possible-in-vims-regex-system Vim regex cheatsheet A good post about vim lookaround regex. Use :h perl-patterns to find the difference of Nvim regex and Perl\u0026rsquo;s regex.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf you are not familiar with what lookaround in regex means, you can find a intro here and here\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 October 2018","externalUrl":null,"permalink":"/2018/10/18/regular_expression_nvim/","section":"Posts","summary":"\u003cp\u003eToday I want to use some regular expressions for searching and replacing in my\nfiles. But I found that Nvim/Vim regular expression engine has its own flavor,\nwhich is different from the regex engine used by Sublime Text\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I ended up\nlearning some of the basics of Nvim-style regex. In this post, I want to share\nabout how to use lookaround\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e in Nvim.\u003c/p\u003e","title":"An Introduction to Lookaround Regular Expression in Neovim/Vim","type":"posts"},{"content":"Tmux is a great terminal multiplexer. Tmux installed via the package manager is often too old. So I decided to install the latest version of Tmux that supports true colors from source. Since I do not have root privilege on the system, I have to build Tmux and install it under my HOME. If that is also what you want, keep reading.\nTmux has two dependencies: libevent and ncurses. We have to build and install these two libraries first.\nBuild libevent # First, we use the following script to build and install libevent:\nwget https://github.com/libevent/libevent/releases/download/release-2.1.11-stable/libevent-2.1.11-stable.tar.gz tar zxvf libevent-2.1.11-stable.tar.gz cd libevent-2.1.11-stable mkdir -p $HOME/local # install libevent under $HOME/local ./configure --prefix=\u0026#34;$HOME/local\u0026#34; make -j \u0026amp;\u0026amp; make install Libevent will be install to $HOME/local.\nBuild ncurses # We also need to build ncurses library:\nwget https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.2.tar.gz tar zxvf ncurses-6.2.tar.gz cd ncurses-6.2/ ./configure --prefix=\u0026#34;$HOME/local\u0026#34; make -j\u0026amp;\u0026amp; make install The above command will install ncurses under $HOME/local.\nBuild Tmux # Finally, we download the latest Tmux release tar ball from GitHub and build it:\nwget https://github.com/tmux/tmux/releases/download/3.1b/tmux-3.1b.tar.gz tar zxvf tmux-3.1b.tar.gz cd tmux-3.1b # the CPPFLAGS and LDFLAGS are important, make sure you have written them correctly, or the build will fail ./configure --prefix=$HOME/local \\ CPPFLAGS=\u0026#34;-I$HOME/local/include -I$HOME/local/include/ncurses\u0026#34; \\ LDFLAGS=\u0026#34;-L$HOME/local/lib\u0026#34; make -j \u0026amp;\u0026amp; make install After running the above commands, Tmux will be installed to $HOME/local. The tmux executable is under $HOME/local/bin.\nPost install # We need to add Tmux executable to env variable PATH.\nexport PATH=\u0026#34;$HOME/local/bin:$PATH\u0026#34; After building Tmux, we should also update the env variable LD_LIBRARY_PATH to include the libevent and libncurses shared object directory:\nexport LD_LIBRARY_PATH=\u0026#34;$HOME/local/lib:$LD_LIBRARY_PATH\u0026#34; Or you may meet the following error when starting tmux:\ntmux: error while loading shared libraries: libevent-2.1.so.7: cannot open shared object file: No such file or directory\nNow, you can use the latest Tmux and configure it as you wish. You may also be interested in the following posts:\nconfigure tmux to support true color. Tmux questions and trouble shootings. Vim like settings for Tmux. Tmux install and management. The complete script to build Tmux are shown below.\nClick to show the code. # Build libevent wget https://github.com/libevent/libevent/releases/download/release-2.1.11-stable/libevent-2.1.11-stable.tar.gz tar zxvf libevent-2.1.11-stable.tar.gz cd libevent-2.1.11-stable mkdir -p $HOME/local # install libevent under $HOME/local ./configure --prefix=\u0026#34;$HOME/local\u0026#34; make -j \u0026amp;\u0026amp; make install cd .. # Build ncurses wget https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.2.tar.gz tar zxvf ncurses-6.2.tar.gz cd ncurses-6.2/ ./configure --prefix=\u0026#34;$HOME/local\u0026#34; make -j\u0026amp;\u0026amp; make install cd .. # Build Tmux wget https://github.com/tmux/tmux/releases/download/3.1b/tmux-3.1b.tar.gz tar zxvf tmux-3.1b.tar.gz cd tmux-3.1b # the CPPFLAGS and LDFLAGS are important, make sure you have written them correctly, or the build will fail ./configure --prefix=$HOME/local \\ CPPFLAGS=\u0026#34;-I$HOME/local/include -I$HOME/local/include/ncurses\u0026#34; \\ LDFLAGS=\u0026#34;-L$HOME/local/lib\u0026#34; make -j \u0026amp;\u0026amp; make install References # Build libevent. Build Tmux from source. Tmux readme: https://github.com/tmux/tmux ","date":"16 October 2018","externalUrl":null,"permalink":"/2018/10/16/tmux_build_without_root_priviledge/","section":"Posts","summary":"\u003cp\u003eTmux is a great terminal multiplexer. Tmux installed via the package manager is\noften too old. So I decided to install the latest version of Tmux that supports\ntrue colors from source. Since I do not have root privilege on the system, I\nhave to build Tmux and install it under my \u003ccode\u003eHOME\u003c/code\u003e. If that is also what you\nwant, keep reading.\u003c/p\u003e","title":"Building and Install Tmux from Source on Linux","type":"posts"},{"content":"Update: this is my first post on Zsh install and configuration. For a list of useful plugins I use to boost my productivity, see this post.\nZsh is a powerful shell with better auto-completion and richer features. There are also various plugins to enrich your experience of using Zsh. In this post, I will give a brief summary on how to install and set up zsh.\nInstall # Build and install ncurses # The installation of zsh requires ncurses. On some systems, the ncurses development package is missing. If you do not have root privilege, you need to install ncurses from source:\nwget ftp://ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz tar xf ncurses-6.1.tar.gz cd ncurses-6.1 ./configure --prefix=$HOME/local CXXFLAGS=\u0026#34;-fPIC\u0026#34; CFLAGS=\u0026#34;-fPIC\u0026#34; make -j \u0026amp;\u0026amp; make install The CXXFLAGS=\u0026quot;-fPIC\u0026quot; CFLAGS=\u0026quot;-fPIC\u0026quot; flags are important. Without them, you will encounter errors when you try to build Zsh. See more information here.\nBuild and install Zsh # Latest code of zsh can be found here. It is easy to install:\nZSH_SRC_NAME=$HOME/packages/zsh.tar.xz ZSH_PACK_DIR=$HOME/packages/zsh ZSH_LINK=\u0026#34;https://sourceforge.net/projects/zsh/files/latest/download\u0026#34; if [[ ! -d \u0026#34;$ZSH_PACK_DIR\u0026#34; ]]; then echo \u0026#34;Creating zsh directory under packages directory\u0026#34; mkdir -p \u0026#34;$ZSH_PACK_DIR\u0026#34; fi if [[ ! -f $ZSH_SRC_NAME ]]; then curl -Lo \u0026#34;$ZSH_SRC_NAME\u0026#34; \u0026#34;$ZSH_LINK\u0026#34; fi tar xJvf \u0026#34;$ZSH_SRC_NAME\u0026#34; -C \u0026#34;$ZSH_PACK_DIR\u0026#34; --strip-components 1 cd \u0026#34;$ZSH_PACK_DIR\u0026#34; ./configure --prefix=\u0026#34;$HOME/local\u0026#34; \\ CPPFLAGS=\u0026#34;-I$HOME/local/include\u0026#34; \\ LDFLAGS=\u0026#34;-L$HOME/local/lib\u0026#34; make -j \u0026amp;\u0026amp; make install Since I do not have root privilege, I can not use chsh to change the default logging shell. In order to use Zsh as the default shell, we can add the following settings to .bash_profile,\nexport PATH=$HOME/local/bin:$PATH export SHELL=`which zsh` [ -f \u0026#34;$SHELL\u0026#34; ] \u0026amp;\u0026amp; exec \u0026#34;$SHELL\u0026#34; -l Then source .bash_prfile to make the changes take effect. With this setting, zsh will be activated each time you log into the system.\nInstall oh-my-zsh # Oh-my-zsh is framework for Zsh with rich features. To install, run the below command:\nsh -c \u0026#34;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\u0026#34; oh-my-zsh ships with a bunch of plugins to enhance your experience of using zsh. You can enable these plugins in the .zshrc file. For example,\nplugins=( git pip vi-mode ) The above setting will enable git, pip and vi-mode plugin. The complete list of plugins are listed here.\nFor other plugins that are not shipped by default. You have to install them yourself. You may want to try zsh-autosuggestion. It can give you suggestions when you type command, based on your command history.\nFirst, we need to install this plugin:\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions In .zshrc, add autosuggestions to plugins:\n# different plugins should be separated by space plugins=(zsh-autosuggestions) Do not forget to source .zshrc to make the change take effect.\nWhen you type a command, you will get suggestions. You can use -\u0026gt;(right arrow key) or End key to accept a suggestion. If the suggestion is not what you want, it will disappear as you continue typing.\nInstall zsh-syntax-highlighting # This plugin will highlight your command in command line to enhance your experience. Use the following command to install this plugin:\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting Add it to plugins:\nplugins=( [plugins...] zsh-syntax-highlighting) Then source ~/.zshrc.\nInstall themes # Powerlevel9k # You can use various themes in Zsh. For example, powerlevel9k. Install guide is here\ngit clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k And in .zshrc, use\nZSH_THEME=\u0026#34;powerlevel9k/powerlevel9k\u0026#34; Install a powerline font # powerlevel9k works well if you install a powerline font.\nCustomization # To change the default prompt style, put the following after ZSHTHEME=\u0026quot;powerlevel9k/powerlevel9k\u0026quot;:\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs) POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs) You can customize more settings following the theme documentation here.\nSpaceship # Spaceship is a simple and elegant theme. If you want simplicity, you may like it.\ngit clone https://github.com/denysdovhan/spaceship-prompt.git \u0026#34;$ZSH_CUSTOM/themes/spaceship-prompt\u0026#34; ln -s \u0026#34;$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme\u0026#34; \u0026#34;$ZSH_CUSTOM/themes/spaceship.zsh-theme\u0026#34; Set ZSH_THEME=\u0026quot;spaceship\u0026quot; in your .zshrc and source your zsh config to use this theme.\nhow to change prompt # In order to show current directory relative to $HOME, use the following setting in .zshrc:\nexport PS1=\u0026#34;[%~]$ \u0026#34; More prompt parameters can be found here.\nFinally, source ~/.bash_profile to change the shell to zsh.\nConclusion # In this post, I gave a summary on how to install zsh and make it your default shell. I also introduced how to install a theme and plugin with the popular framework oh-my-zsh. You can read the zsh and oh-my-zsh documentation for more customizations.\nYou can find my complete zsh configuration here.\nReferences # Use zsh as default shell without root right: https://unix.stackexchange.com/a/136424/221410 Change command prompt: https://stackoverflow.com/q/25090295/6064933 ","date":"13 October 2018","externalUrl":null,"permalink":"/2018/10/13/centos_zsh_install_use/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eUpdate\u003c/strong\u003e: this is my first post on Zsh install and configuration. For a list\nof useful plugins I use to boost my productivity, see \u003ca href=\"https://jdhao.github.io/2019/02/19/zsh_advanced_configuration/\" target=\"_blank\"\u003ethis post\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.zsh.org/\" target=\"_blank\"\u003eZsh\u003c/a\u003e is a powerful shell with better auto-completion and\nricher features. There are also various plugins to enrich your experience of\nusing Zsh. In this post, I will give a brief summary on how to install and set\nup zsh.\u003c/p\u003e","title":"Building Zsh from Source and Configuring It on CentOS","type":"posts"},{"content":"Recently I bought a MacBook Pro 2018. While it is a good design overall, its built-in keyboard is not so great AFAIK. So I bought a mechanical keyboard ikbc c87. The mechanical keyboard is designed for the Windows operating systems. I have to make a few tweaks to make my typing experience smooth.\nBefore we begin # I have tested the below settings on my MacBook Pro 2018 with the latest Mojave system. For older Mac OS, it probably will work too. But I cannot say for sure.\nSwitch Win and Alt key # The Win and Alt keys in the mechanical keyboard correspond to command and option key in the Mac internal keyboard, respectively. But the positions of the two keys are slightly different. In order to make the keyboard work more like Mac internal keyboard, we can use Karabiner-Elements to switch the key mappings of Win and Alt.\nAfter installing Karabiner-Elements, open its preference and choose Simple Modifications. Then, choose your external keyboard as Target Device. Click the Add item button to add one mapping. We need to add four mappings in total, i.e.,\nFrom key To key left_alt left_gui left_gui left_alt right_alt right_gui right_gui right_alt The left_gui and right_gui keys are equal to left_command and right_command.\nAfter this step, you may also consider changing the key caps of Win and Alt to make it clear you have switched the functions of Alt and Win.\nDisable internal keyboard when external keyboard is connected # While using the external keyboard, you may want to disable the internal keyboard temporarily.\nFirst, open Karabiner settings and go to Devices menu. In the bottom section, check the button of external USB keyboard to disable the built-in keyboard when external keyboard is connected.\nMake Home and End key behave like Windows # On Mac, by default, if you press Home and End key, you will go to the beginning and end of current document, which is often not what you expect. We can make the behavior of Home and End key like Windows, i.e., go to the beginning and end of current line.\nFirst, create a folder ~/Library/KeyBindings/ if it does not exist. Then create a file named DefaultKeyBinding.dict and add the following settings into it:\n{ \u0026#34;\\UF729\u0026#34; = moveToBeginningOfLine:; // home \u0026#34;\\UF72B\u0026#34; = moveToEndOfLine:; // end \u0026#34;$\\UF729\u0026#34; = moveToBeginningOfLineAndModifySelection:; // shift-home \u0026#34;$\\UF72B\u0026#34; = moveToEndOfLineAndModifySelection:; // shift-end \u0026#34;^\\UF729\u0026#34; = moveToBeginningOfDocument:; // ctrl-home \u0026#34;^\\UF72B\u0026#34; = moveToEndOfDocument:; // ctrl-end \u0026#34;^$\\UF729\u0026#34; = moveToBeginningOfDocumentAndModifySelection:; // ctrl-shift-home \u0026#34;^$\\UF72B\u0026#34; = moveToEndOfDocumentAndModifySelection:; // ctrl-shift-end } Rebooting is needed. The change should take effect after system restart.\nNow, happy typing!\nReferences # https://damieng.com/blog/2015/04/24/make-home-end-keys-behave-like-windows-on-mac-os-x https://groups.google.com/forum/#!topic/osx-karabiner/k-Yp6IpIovg https://apple.stackexchange.com/a/16137/285595 The cocoa text system that Mac uses Disable Mac internal keyboard ","date":"13 October 2018","externalUrl":null,"permalink":"/2018/10/13/mac_external_keyboard_setup/","section":"Posts","summary":"\u003cp\u003eRecently I bought a MacBook Pro 2018. While it is a good design overall, its\nbuilt-in keyboard is not so great AFAIK. So I bought a mechanical keyboard\n\u003ca href=\"http://www.ikbc.com.tw/c87\" target=\"_blank\"\u003eikbc c87\u003c/a\u003e. The mechanical keyboard is designed for\nthe Windows operating systems. I have to make a few tweaks to make my typing\nexperience smooth.\u003c/p\u003e","title":"Mechanical Keyboard Set up For Mac","type":"posts"},{"content":"In the past, I use plain print() to display some statistics during training process of my models. However, it is not convenient to save the statistics in a file for later inspection. Once the program is finished, we do not have an overview of the training process. I am aware that there are packages such as tensorboardX and visdom, which are specifically designed for inspecting the various statistics during training. Right now, I would rather keep the program plain simple and usable. So I decided to give Python logging package a try.\nIf we want to display messages on the terminal and save to a file, we can use the following setting:\nimport logging logging.basicConfig( level=logging.INFO, datefmt=\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;, format=\u0026#34;%(asctime)s %(message)s\u0026#34;, handlers=[ logging.FileHandler(\u0026#34;{}/{}\u0026#34;.format(log_path, log_name)), logging.StreamHandler() ] ) The datefmt parameter is used to format the time string in the logging message. With the above format, the time is shown as something like the following:\n2018-10-15 09:44:49 (\u0026hellip;other message\u0026hellip;)\nThe format string uses the standard Python time format. You can find the full list of format directives here.\nThe format parameter is used to set the format of the output message, i.e., what to show in the logging message. We can show time, current file name, process name etc. A list of predefined attributes are (excerpted from the logging documentation):\nClick to see the doc. %(name)s Name of the logger (logging channel) %(levelno)s Numeric logging level for the message (DEBUG, INFO, WARNING, ERROR, CRITICAL) %(levelname)s Text logging level for the message (\u0026#34;DEBUG\u0026#34;, \u0026#34;INFO\u0026#34;, \u0026#34;WARNING\u0026#34;, \u0026#34;ERROR\u0026#34;, \u0026#34;CRITICAL\u0026#34;) %(pathname)s Full pathname of the source file where the logging call was issued (if available) %(filename)s Filename portion of pathname %(module)s Module (name portion of filename) %(lineno)d Source line number where the logging call was issued (if available) %(funcName)s Function name %(created)f Time when the LogRecord was created (time.time() return value) %(asctime)s Textual time when the LogRecord was created %(msecs)d Millisecond portion of the creation time %(relativeCreated)d Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded (typically at application startup time) %(thread)d Thread ID (if available) %(threadName)s Thread name (if available) %(process)d Process ID (if available) %(message)s The result of record.getMessage(), computed just as the record is emitted The handler parameter is used to set up where logging messages should go. In the above example, we use a FileHandler to save the logging message to a disk file. We use StreamHandler to display messages in the terminal.\nAfter configuring logging, we need a logger:\nlogger = logging.getLogger(__name__) In our program, if we need to log something, use logger.info(). An example usage is shown below:\nlogger.info(\u0026#34;Epoch %d, Accuracy: %f, Loss: %f\u0026#34;, epoch, accuracy, loss) The logging module relies on the old Python string formatting style. If you use the new .format() style string formatting, you will see a pylint warning complaining:\npylint: logging-not-lazy / Specify string format arguments as logging function parameters\nThe above formatting is also slightly different from the old Python formatting style. We do not need to write % between strings and the values. We can just append a list of needed values as the argument for the info method.\nHow to log exceptions # After catching an exception, we may want to log the exception message using our logger. Initially, I have the following code:\ntry: # my code except SomeError as e: logger.debug(\u0026#34;Exception: %s\u0026#34;, e) Unfortunately, this will only print an incomplete exception message and does not help to debug the error.\nUsing str(e) or repr(e) to represent the exception, you also won\u0026rsquo;t get the actual stack trace. So it is not helpful to find where the exception is.\nAfter reading other answers and the logging package doc, the following two ways work great to print the actual stack trace for later debugging:\nuse logger.debug() with parameter exc_info:\ntry: # my code except SomeError as e: logger.debug(e, exc_info=True) use logger.exception() to print the exception directly:\ntry: # my code except SomeError as e: logger.exception(e) References # Log to a file and stdio at the same line. Fix pylint logging-not-lazy warning. Show exception message using logging package. ","date":"12 October 2018","externalUrl":null,"permalink":"/2018/10/12/python_logging_module/","section":"Posts","summary":"\u003cp\u003eIn the past, I use plain \u003ccode\u003eprint()\u003c/code\u003e to display some statistics during training process of my models.\nHowever, it is not convenient to save the statistics in a file for later inspection.\nOnce the program is finished, we do not have an overview of the training process.\nI am aware that there are packages such as \u003ca href=\"https://github.com/lanpa/tensorboardX\" target=\"_blank\"\u003etensorboardX\u003c/a\u003e and \u003ca href=\"https://github.com/facebookresearch/visdom\" target=\"_blank\"\u003evisdom\u003c/a\u003e,\nwhich are specifically designed for inspecting the various statistics during training.\nRight now, I would rather keep the program plain simple and usable.\nSo I decided to give \u003ca href=\"https://docs.python.org/3/library/logging.html\" target=\"_blank\"\u003ePython logging package\u003c/a\u003e a try.\u003c/p\u003e","title":"A Simple Guide on How to Use the Python Logging Module","type":"posts"},{"content":"TL;DR\nIf you want to set a parameter\u0026rsquo;s default value to True using argparse, use\nparser.add_argument(\u0026#39;--param\u0026#39;, action=\u0026#39;store_false\u0026#39;) Otherwise, use\nparser.add_argument(\u0026#39;--param\u0026#39;, action=\u0026#39;store_true\u0026#39;) when we use argparse to manager program parameters and add a parameter, we often use the action options to set the parameter\u0026rsquo;s value to a boolean value. But I have previously misunderstood this options and made a mistake. In this post, I will explain how does this option work and how to use it correctly. Typically we use action='store_true' or action='store_false' to set the parameter to boolean value. Previously, I thought that action='store_true' will set the parameter value to True and action='store_false' will set the parameter value to False. In fact, it is not true. Suppose we have a script toy_parser.py:\nimport argparase parser = argparse.ArgumentParser(description=\u0026#34;A toy argument parser\u0026#34;) parser.add_argument(\u0026#39;--param1\u0026#39;, action=\u0026#39;store_true\u0026#39;) parser.add_argument(\u0026#39;--param2\u0026#39;, action=\u0026#39;store_false\u0026#39;) args = parser.parse_args() print(args) If we run this script on the command line with no argument\npython toy_parser.py the output will be:\nNamespace(param1=False, param2=True)\nThe result is exactly contratry to what we thought.\nWhat about run the script with parameters?\n$ python toy_parser.py \u0026ndash;param1 \u0026ndash;param2 Namespace(param1=True, param2=False)\n$ python toy_parser.py \u0026ndash;param1 Namespace(param1=True, param2=True)\n$ python toy_parser.py \u0026ndash;param2 Namespace(param1=False, param2=False)\nIn summary, if a parameter has action store_true but is missing in the command line, the default value will be False, otherwise, the value will be True. Similarly, if a parameter has action store_false but is missing in the command line, the default value will be True, otherwise, the value will be False.\nThe following two statements are problematic:\nparser.add_argument(\u0026#39;--param1\u0026#39;, action=\u0026#39;store_true\u0026#39;, default=True) parser.add_argument(\u0026#39;--param2\u0026#39;, action=\u0026#39;store_false\u0026#39;, default=False) Wheter you use these paramters on the command line, they will always be True or False, which is not what we want.\n","date":"11 October 2018","externalUrl":null,"permalink":"/2018/10/11/python_argparse_set_boolean_params/","section":"Posts","summary":"\u003cp\u003eTL;DR\u003c/p\u003e\n\u003cp\u003eIf you want to set a parameter\u0026rsquo;s default value to \u003ccode\u003eTrue\u003c/code\u003e using argparse, use\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eparser.add_argument(\u0026#39;--param\u0026#39;, action=\u0026#39;store_false\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOtherwise, use\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eparser.add_argument(\u0026#39;--param\u0026#39;, action=\u0026#39;store_true\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e","title":"Set up the Default Value for Boolean Option in Argparse","type":"posts"},{"content":"","date":"10 October 2018","externalUrl":null,"permalink":"/tags/hexo/","section":"Tags","summary":"","title":"Hexo","type":"tags"},{"content":"","date":"10 October 2018","externalUrl":null,"permalink":"/tags/mathjax/","section":"Tags","summary":"","title":"MathJax","type":"tags"},{"content":"这个博客于 2017 年 2 月开始搭建运行，最初使用的是 Hexo 搭建，配合精美的 NexT 主题，经过鼓捣，差不多算是做出了让自己满意的博客。不过每次安装 Hexo，要配置的东西太多了，总觉得不是很简洁，另外，随着文章数量的增加，Hexo 生成博客的速度也慢了下来。怀着尝鲜的心态，我把 Hexo 博客迁移到了 Hugo。\nHugo 安装与配置 # Hugo 安装 # 首先安装 Hugo，在不同系统上安装都很简单，在 Mac 上，使用 Homebrew 可以安装 Hugo：\nbrew install hugo 建立博客站点 # 安装以后，首先我们需要建立一个博客目录，下面存放的是博客的所有配置以及博文等资料，例如要建立一个名为 Blog 的站点，使用下面的命令：\nhugo new site Blog 会看到以下提示内容：\nCongratulations! Your new Hugo site is created in /Users/jdhao/Blog.\nJust a few more steps and you\u0026rsquo;re ready to go:\nDownload a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/, or create your own with the \u0026ldquo;hugo new theme \u0026rdquo; command. Perhaps you want to add some content. You can add single files with \u0026ldquo;hugo new /.\u0026rdquo;. Start the built-in live server via \u0026ldquo;hugo server\u0026rdquo;. Visit https://gohugo.io/ for quickstart guide and full documentation.\n建立站点以后，博客根目录下默认有这些文件和子目录：\narchetypes/ config.toml content/ data/ layouts/ static/ themes/ config.toml 就是博客的配置文件，archetypes 目录下有一个 default.md，存放的是建立新博文时候默认使用的模板，可以根据自己需求修改。content 目录用来存放博文，static 可以存放一些自己的文件，themes 文件夹用于存放不同的主题。\n安装主题 # 建立站点以后，我们需要安装主题，Hugo 提供了一个主题浏览网站，可以浏览各种主题的效果，找了一圈，没有发现自己特别中意的。也可以直接在 GitHub 上搜索 Hugo 的主题，最后经过各种查找比较，选择了 even 主题。\n在博客根目录下，使用以下命令安装 even 主题：\ngit init git submodule add https://github.com/olOwOlo/hugo-theme-even.git themes/even 然后编辑 config.toml，设置主题为 even:\ntheme = \u0026#34;even\u0026#34; 新建博文 # 要建立新的博文 test.md，使用下面的命令：\nhugo new post/test.md 这个命令会在 content 目录下建立 post 目录，并在 post 下生成 test.md 文件，博文书写就在这个文件里使用 Markdown 语法完成。博文的 front matter 里 draft 选项默认为 true，需要改为 false 才能发表博文，建议直接更改上面说的archetypes 目录下的 default 文件，把 draft: true 改为 draft: false，这样生成的博文就是默认可以发表的。\n和 Hexo 一样，在 front matter 里面，使用 tags 指定文章的 tag，使用 categories 指定文章的类别，示例如下：\ntags: [LaTeX, Hexo, font] categories: [Mac, Linux] 把 Hexo 博客里的所有博文 Markdown 文件拷贝到 content/post/ 目录下，就完成了博文的迁移。\n查看生成效果 # 为了查看生成的博客的效果，可以使用 hugo server 命令，示例输出如下：\n| EN +------------------+-----+ Pages | 196 Paginator pages | 9 Non-page files | 0 Static files | 63 Processed images | 0 Aliases | 53 Sitemaps | 1 Cleaned | 0 Total in 90 ms Watching for changes in /Users/jdhao/Blog/{content,data,layouts,static,themes} Watching for config changes in /Users/jdhao/Blog/config.toml Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 博客有七十多篇文章，生成时间才 90 ms，速度果然惊人。该命令会建立一个本地的博客服务器，直接在浏览器访问网址 http://localhost:1313/ 即可查看生成的博客效果。\n部署到 github pages # 确定生成的博客效果无误后，就可以将博客部署到服务器了，我使用的是免费的 GitHub pages 服务。本部分假定我们在 github pages 建立的是 User/Organization Pages ，地址名称形式为https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io/，如果不是这种类型地址，请参考 Hugo 官方指导。\n如果之前已经建立了 xxxx.github.io 这种形式的仓库，并且使用 Hexo 往这个仓库部署过，但是不想要之前的东西了，在博客的根目录下，运行下面的命令即可：\nmkdir public cd public git init git remote add upstream https://github.com/jdhao/jdhao.github.io.git 执行 hugo -t even，hugo 会生成 blog 内容，放到 public 目录。然后，我们把 public 下面的内容 push 到 github 即可。\ngit add . git commit -m \u0026#34;switch to hugo\u0026#34; git push -f upstream master # 第一次 push 必须使用 -f，因为此时远程仓库非空，和本地有冲突 这样就部署成功了，一般等待几分钟，访问自己的博客，就能看到更新以后的内容。\n每次部署都输入一大堆命令，很繁琐，参考官方教程，做一个 deploy.sh 脚本，方便每次把博客 push 到 github。我的 deploy.sh 脚本内容为：\n点击查看脚本内容。 #!/bin/bash echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # build the project hugo -t even cd public git add . msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; # push source to github git push upstream master # come back to blog root cd .. 赋予 deploy.sh 文件执行权限：\nchmod u+x deploy.sh 以后执行 ./deploy.sh 就可以部署博客到 github 了。\n注：第一次 push 需要使用 -f，以后 push 就不需要该参数了，force push 以后，github 仓库的 commit 数量会清零，原有的 commit 信息会丢失，不过这个仓库就是为了存放博客，不需要和其他人合作，所以 commit 信息丢失问题不大。\n主题设置与迁移细节 # 时间格式 # Hexo 中时间格式与 Hugo 格式不太相同，Hugo 对时间格式的要求比较严格，Hexo 中YYYY-MM-DD HH:MM 格式的时间在 Hugo 中无法被正确识别。Hugo 中使用的时间格式如下：\nYYYY-MM-DD HH:MM:SS +0800 最后的 +0800 代表中国的时区是GMT+8。\n另外，Hexo 中 front matter 代表博客更新时间的 updated 选项在 Hugo 中是 lastmod。\n具体时间格式的替换，我采用 Sublime Text 配合正则表达式匹配来替换。\n文章的 permalinks 设置 # Hexo 中，文章的链接都是 YYYY/MM/DD/post_name/ 的格式，在 Hugo 中，可以通过设置 permalinks 参数来实现平滑过渡，在 config.toml 中加入以下设置：\n[permalinks] post = \u0026#34;/:year/:month/:day/:filename/\u0026#34; 大小写问题 # Hugo 默认会把 url 中的大写字符转为小写，如果不想转换，在配置文件中加入\ndisablePathToLower = true Hugo 默认会把分类（categories）名称转为小写，如果不想转换，在配置中加入，\npreserveTaxonomyNames = true 如何完美支持 LaTeX 公式 # 由于 Markdown 中的 \\，_ 等字符在 LaTeX 公式也有特殊含义，两者会有冲突，之前为了配置 Hexo 博客的数学公式支持也费了很大功夫，具体过程可以参考这篇博客。迁移到Hugo以后，经过搜索、查找与验证，找到了两种比较好的解决方法。\n2022-03-04 注：mmark 已经被 hugo 淘汰，后续会移除支持，不再推荐。\n### 使用 mmark 格式 Mmark 是一个 Markdown 引擎，Hugo 原生支持。对于包含 LaTeX 公式的文档，首先把后缀名改为 mmark（即名称由 *.md \u0026ndash;\u0026gt; *.mmark），然后在文章的 front matter，加上一行设置\nmarkup: mmark 使用 Pandoc # Hugo 也支持使用外部的处理程序来处理 Markdown 文件，例如 asciidoc，reStructuredText 和 Pandoc。这里选择 Pandoc，首先安装Pandoc。然后在文章的 front matter，加上一行设置\nmarkup: pandoc hugo 在生成博客的时候就会自动调用 pandoc 来生成 html。\n小问题 # Hugo 中，为了支持 LaTeX，如果使用 mmark 或者 pandoc 来处理 Markdown，生成的博客没有目录。对于 mmark 格式，暂时不支持目录；对于Pandoc，无法生成 TOC 是因为 hugo 在调用 Pandoc 将 Markdown 文件转换为 HTML 的时候，只使用了 --mathjax 选项，没有使用 --toc 选项，具体 code 见 这里, 如果加上 --toc 选项应该是可以生成 TOC 的。不妨试着加上 --toc 选项，然后 自己编译hugo看看能不能生成 TOC。\n参考 # https://github.com/gohugoio/hugo/pull/4060 https://stackoverflow.com/questions/37533412/md-with-latex-to-html-with-mathjax-with-pandoc/55106932#55106932 https://github.com/olOwOlo/hugo-theme-even/issues/139 文章缩略的格式 # 要在文章某个地方缩略，要使用 \u0026lt;!--more--\u0026gt;。注意 more 的周围不要有空格，Hugo无法识别这种有空格的缩略格式，这里的记录也证实了这个情况。同时，也可以参考Hugo 官方文档的说明。\n个人文件的位置 # 如果博客中有一些文章设定了下载链接，建议把文件放在博客根目录下的 static 目录，可以在该目录下建立名为 files 的目录（该名称仅仅是举例，可以根据自己喜好更改），然后把文件放在 files 目录下。假如 files 目录下有一个文件 test.pdf，参考这里，在博客中引用它的正确方式是:\n[点击这里下载 test.pdf](/files/test.pdf) 完整的配置文件见这里。\nbusuanzi 博客计数失效？ # Even 主题默认使用 busuanzi 服务来给博客的 pv 和sv 计数，最近打开博客，发现计数部分的数字无法显示，一直在转圈。查了一下，原来是busuanzi 在七牛云上的域名失效了，所以服务挂了。\n解决办法如下，打开 even 主题的目录，打开主题目录下/layouts/partials/head.html 这个文件，把1\n\u0026lt;script async src=\u0026#34;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 改为\n\u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 然后重新生成博客，部署到博客托管网站服务器即可。\n参考 # Hugo quick start, https://gohugo.io/getting-started/quick-start/ http://www.flysnow.org/2018/07/29/from-hexo-to-hugo.html 禁止转换分类名称为小写，https://discourse.gohugo.io/t/solved-disablepathtolower-doesnt-work-for-taxonomic-terms/9429 Hugo configuration, https://gohugo.io/getting-started/configuration/ Hugo 支持的博文格式，内有详细介绍，https://gohugo.io/content-management/formats/ Hugo 对 Pandoc 的支持，https://github.com/gohugoio/hugo/pull/4060 如何快速定位到这个文件，参考这篇文章\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 October 2018","externalUrl":null,"permalink":"/2018/10/10/hexo_to_hugo/","section":"Posts","summary":"\u003cp\u003e这个博客于 2017 年 2 月开始搭建运行，最初使用的是 \u003ca href=\"https://hexo.io/zh-cn/\" target=\"_blank\"\u003eHexo\u003c/a\u003e 搭建，配合精美的 \u003ca href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\"\u003eNexT\u003c/a\u003e 主题，经过\u003ca href=\"https://jdhao.github.io/tags/Hexo/\" target=\"_blank\"\u003e鼓捣\u003c/a\u003e，差不多算是做出了让自己满意的博客。不过每次安装 Hexo，要配置的东西太多了，总觉得不是很简洁，另外，随着文章数量的增加，Hexo 生成博客的速度也慢了下来。怀着尝鲜的心态，我把 Hexo 博客迁移到了 \u003ca href=\"https://gohugo.io/\" target=\"_blank\"\u003eHugo\u003c/a\u003e。\u003c/p\u003e","title":"把博客从 Hexo 迁移到 Hugo","type":"posts"},{"content":"If you have a nerdtree file navigation window on the left of the current buffer and use :bd1, you will find that the nerdtree window will occupy the whole window. When you open another buffer, you have to manually resize the nerdtree window to a smaller size, which is super annoying.\nHow to prevent this behaviour?\nAn easy way is to switch to another buffer first, and then delete the previous buffer. We can create a shortcut for this:\nnnoremap \\d :bp\u0026lt;cr\u0026gt;:bd #\u0026lt;cr\u0026gt; In the above command, :bp stands for :bprevious, which will change the buffer to the previous buffer. # after the :bd command represents the last used buffer, i.e., the buffer we want to delete.\nThere is also a Nvim plugin called vim-bufkill, which specifically address this issue. After installing this plugin, you can use :BD to delete the current buffer without closing the window.\nReferences # https://github.com/carlhuda/janus/issues/71 https://www.johnplummer.com/tools/macvim-nerdtree-janus-annoyances.html https://github.com/scrooloose/nerdtree/issues/400 https://github.com/vim-airline/vim-airline/issues/460 https://superuser.com/questions/1131952/vim-close-buffer-not-quite-vim https://stackoverflow.com/questions/1864394/vim-and-nerd-tree-closing-a-buffer-properly/ https://stackoverflow.com/questions/4465095/vim-delete-buffer-without-losing-the-split-window In Nvim, bd[elete] will delete the current buffer. But the window for the current buffer will also be closed.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 October 2018","externalUrl":null,"permalink":"/2018/10/09/nerdtree_windows_issue_bd_vim/","section":"Posts","summary":"\u003cp\u003eIf you have a nerdtree file navigation window on the left of the current buffer\nand use \u003ccode\u003e:bd\u003c/code\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, you will find that the nerdtree window will occupy the whole\nwindow.  When you open another buffer, you have to manually resize the nerdtree\nwindow to a smaller size, which is super annoying.\u003c/p\u003e\n\u003cp\u003eHow to prevent this behaviour?\u003c/p\u003e","title":"Fixing the nerdtree Window Problem with `bd` Command in Nvim","type":"posts"},{"content":"I use a Windows 10 machine and need to connect to Linux servers. After using several ssh clients for connecting to the server, I finally settled for Cygwin and Wsltty, which is open-sourced and use the well-known mintty terminal.\nBut one feature I miss from the SSH tools such as MobaXterm or Xshell is that these tools can save the server IP, port, user name and even password, so that you can log into the server with just a click.\nWith mintty terminal, I have to manually ssh to my server each time, which is tedious and time consuming. Fortunately, I have found the Expect scripting language which is pretty powerful for this task.\nInstall # If you are using Cygwin, you can install Expect package via its setup program. If you are using Ubuntu on Windows, you can install expect with apt-get:\nsudo apt-get install -y expect Usage # Simple case # Expect can execute command, receive input and send output automatically for you. Suppose you want to connect to a server, you can use the following script:\n#!/usr/bin/expect set timeout 10 spawn ssh -p 22 USER@SERVER_IP expect \u0026#34;Password: \u0026#34; send \u0026#34;PASSWORD\\r\u0026#34; You should change USER, SERVER_IP and PASSWORD properly. In the above script, we first use spawn to execute the ssh command for us. Then we use expect to capture the output of the terminal to see if it matches the predefined string. Finally, we use send command to send the right password and a newline character: it is just like you have typed your password and press Enter manually in terminal.\nYou can save this script as auto_login.exp and execute it with\nexpect auto_login.exp Accept command line parameters # In the above script, the user name and password is fixed in the script. If you have multiple user account in the server, it would be better that you can input the user name and password dynamically from the command line. You can use the following script for that:\n#!/usr/bin/expect set timeout 10 set user [lindex $argv 0] set password [lindex $argv 1] spawn ssh -p 22 $user@SERVER_IP expect \u0026#34;Password: \u0026#34; send \u0026#34;$password\\r\u0026#34; In the above script, lindex command is used to get the parameters supplied in the command line. To use a variable, add a $ before it to access its value. In the command line, you can invoke the script like this:\nexpect auto_login.exp user_name some_password References # https://stackoverflow.com/questions/17059682/how-to-pass-argument-in-expect-through-command-line-in-shell-script https://www.geeksforgeeks.org/expect-command-in-linux-with-examples/ ","date":"8 October 2018","externalUrl":null,"permalink":"/2018/10/08/server_autologin_with_expect/","section":"Posts","summary":"\u003cp\u003eI use a Windows 10 machine and need to connect to Linux servers. After using\nseveral \u003ca href=\"https://www.slant.co/topics/149/~best-ssh-clients-for-windows\" target=\"_blank\"\u003essh clients\u003c/a\u003e\nfor connecting to the server, I finally settled for\n\u003ca href=\"https://www.cygwin.com/\" target=\"_blank\"\u003eCygwin\u003c/a\u003e and\n\u003ca href=\"https://github.com/mintty/wsltty\" target=\"_blank\"\u003eWsltty\u003c/a\u003e, which is open-sourced and use the\nwell-known \u003ca href=\"https://github.com/mintty/mintty\" target=\"_blank\"\u003emintty terminal\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBut one feature I miss from the SSH tools such as MobaXterm or Xshell is that\nthese tools can save the server IP, port, user name and even password, so that\nyou can log into the server with just a click.\u003c/p\u003e\n\u003cp\u003eWith mintty terminal, I have to manually ssh to my server each time, which is\ntedious and time consuming. Fortunately, I have found the\n\u003ca href=\"https://en.wikipedia.org/wiki/Expect\" target=\"_blank\"\u003eExpect\u003c/a\u003e scripting language which is\npretty powerful for this task.\u003c/p\u003e","title":"Server Autologin with Expect","type":"posts"},{"content":"When we want to find out where a method is used across the whole project, how do we do that in Nvim? Various tools are available, for example, ack, ag or rg.\nThese are the 3 most popular tools to use. In the following post, I will introduce how to install and use these packages in Neovim (Nvim).\nInstalling the searching tools # Install ack # Suppose that we want to install it to $HOME/tools/bin, you can use the following install command:\n# directory ~/tools/bin must exist curl https://beyondgrep.com/ack-2.24-single-file \u0026gt; ~tools/bin/ack # make it executable chmod u+x ~/tools/bin/ack Add ack to PATH variable in .bash_profile:\nexport PATH=$HOME/tools/bin:$PATH Then source .bash_profile to make the change take effect:\nsource ~/.bash_profile`. Install ag \u0026ndash; the silver searcher # I have found an exceptional tool for this task. It is called The Silver Searcher, AKA, ag.\nPlease follow the official guide on how to install this tool.\nInstall rg \u0026ndash; ripgrep # Ripgrep is also a great tool for searching patterns. It seems that rg is faster than both ack and ag. So it is also worth a trial.\nFollow the offical guide on installing this tools.\nUse these search tools inside Nvim # You can use these tools directly on the command line. If you want to use it with Vim, you also need to use a front end1 for it.\nInstall ack.vim # To use ack inside Nvim, we also need to install ack.vim:\n# using vim-plug to install this package Plug \u0026#39;mileszs/ack.vim\u0026#39; By default, ack.vim use ack to search for patterns. If you have installed both ag and rg. You can tell ack.vim to use them instead, with a preference for rg.\n\u0026#34; Prefer rg \u0026gt; ag \u0026gt; ack \u0026#34; https://hackercodex.com/guide/vim-search-find-in-project/ if executable(\u0026#39;rg\u0026#39;) let g:ackprg = \u0026#39;rg -S --no-heading --vimgrep\u0026#39; elseif executable(\u0026#39;ag\u0026#39;) let g:ackprg = \u0026#39;ag --vimgrep\u0026#39; endif In Nvim normal mode, use :Ack {PATTERN} [{PATH}] to search {PATTERN} recursively under directory {PATH}. If you omit the {PATH} parameter, the default path is the current path.\nAck.vim will open the first file that matches. If you do not want this behaviour, you can use :Ack! instead. Or, use the following setting in your Nvim config:\ncnoreabbrev Ack Ack! nnoremap \u0026lt;Leader\u0026gt;a :Ack!\u0026lt;Space\u0026gt; It adds a custom shortcut for the :Ack! command. For more information, see the ack.vim documentation.\nIf you are a minimalist # There is high chance that you may have installed fzf and fzf.vim. Then You do not need to install ack.vim. fzf.vim has built-in support for ag and rg.\nBoth fzf and fzf.vim is easy to install. After installation, you can use :Ag PATTERN or rg PATTERN to search for keyword PATTERN under your current root directory. The search speed is quite fast. Enjoy~\nAnother great tool # Recently, I have switched from fzf to Leaderf, which is also a great fuzzy find tool. To use ripgrep with leaderf, you can use the following command:\n:Leaderf rg PATTERN Update history:\n2020-02-21: Add section on Leaderf. References # Ack install: https://beyondgrep.com/install/ https://stackoverflow.com/questions/38398787/how-do-i-search-in-all-files-of-my-project-using-vim By front end, I mean that some Nvim plugin which will invoke this command for you.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"7 October 2018","externalUrl":null,"permalink":"/2018/10/07/nvim_fast_keyword_search/","section":"Posts","summary":"\u003cp\u003eWhen we want to find out where a method is used across the whole project, how\ndo we do that in Nvim? Various tools are available, for example, \u003ca href=\"https://beyondgrep.com/documentation/\" target=\"_blank\"\u003eack\u003c/a\u003e,\n\u003ca href=\"https://github.com/ggreer/the_silver_searcher\" target=\"_blank\"\u003eag\u003c/a\u003e or \u003ca href=\"https://github.com/BurntSushi/ripgrep\" target=\"_blank\"\u003erg\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThese are the 3 most popular tools to use. In the following post, I will\nintroduce how to install and use these packages in Neovim (Nvim).\u003c/p\u003e","title":"The Fastest Way to Search A Keyword across the Project in Neovim","type":"posts"},{"content":"I am a Neovim (or Nvim in abbreviation) user. In Nvim, we use Ctrl-W as prefix for window-related operations. However, the default prefix is Ctrl-B in Tmux. As a result, I often mistakenly press Ctrl-W when trying to change panes inside Tmux, which is annoying. Why not change tmux prefix to be more vim-like?\nTmux does not create a configuration file under your home by default. You have to create one yourself. First, we need to create a config file named .tmux.conf under home directory:\ntouch ~/.tmux.conf Then, we edit this file to customize tmux behaviours.\nChange prefix # To change prefix, add the following settings to .tmux.conf,\nunbind C-b set-option -g prefix C-w bind-key C-w send-prefix Split panes like Vim # By default, tmux use \u0026lt;prefix\u0026gt; % and \u0026lt;prefix\u0026gt; \u0026quot; to split window vertically and horizontally respectively, which is rather obscure. We can change it to be more Vim-like.\n# use \u0026lt;prefix\u0026gt; s for horizontal split bind s split-window -v # use \u0026lt;prefix\u0026gt; v for vertical split bind v split-window -h Then we can use \u0026lt;prefix\u0026gt; s and \u0026lt;prefix\u0026gt; v to create horizontal and vertical split respectively.\nVim-like pane navigation # In order to use the traditional Vim navigation key HJKL to switch between different panes, use the following settings:\nbind h select-pane -L bind j select-pane -D bind k select-pane -U bind l select-pane -R Then we can use \u0026lt;prefix\u0026gt; h/j/k/l to go to pane left/below/above/right.\nWe can also use Altand arrow keys for pane switching,\nbind -n M-Left select-pane -L bind -n M-Right select-pane -R bind -n M-Up select-pane -U bind -n M-Down select-pane -D Then we can press Alt followed by arrow key to switch panes.\nResize panes # # resize panes more easily bind \u0026lt; resize-pane -L 10 bind \u0026gt; resize-pane -R 10 bind - resize-pane -D 10 bind + resize-pane -U 10 To resize pane in the horizontal direction, use \u0026lt;prefix\u0026gt; \u0026lt; or \u0026lt;prefix\u0026gt; \u0026gt;. To resize pane in the vertical direction, use \u0026lt;prefix\u0026gt; + or \u0026lt;prefix\u0026gt; -.\nHow to reload tmux config? # If you are in a tmux session, just press \u0026lt;prefix\u0026gt;, then use command :source ~/.tmux.conf to refresh the Tmux session. If you are outside of a Tmux session, use tmux source ~/.tmux.conf to refresh tmux configurations.\nNote: before changing the tmux prefix key, the old prefix still takes effect. If you want to change the prefix inside a tmux session, you need to use the old prefix.\nReferences # A good gist: https://gist.github.com/rssvihla/789284 TMUX using HJKL to navigate panes https://gist.github.com/spicycode/1229612 changing .tmux.conf binding for prefix ","date":"30 September 2018","externalUrl":null,"permalink":"/2018/09/30/tmux_settings_for_vim_users/","section":"Posts","summary":"\u003cp\u003eI am a \u003ca href=\"https://neovim.io/\" target=\"_blank\"\u003eNeovim\u003c/a\u003e (or Nvim in abbreviation) user. In Nvim, we\nuse \u003ccode\u003eCtrl-W\u003c/code\u003e as prefix for window-related operations. However, the default\nprefix is \u003ccode\u003eCtrl-B\u003c/code\u003e in Tmux. As a result, I often mistakenly press \u003ccode\u003eCtrl-W\u003c/code\u003e when\ntrying to change panes inside Tmux, which is annoying. Why not change tmux\nprefix to be more vim-like?\u003c/p\u003e","title":"Vim-like Settings for Tmux","type":"posts"},{"content":"When working on real projects using Neovim, we often open several files in a window. Each file corresponds to a buffer. How to switch between these buffers quickly?\nTo show a list of opened buffers, we can use the :buffers command. Below is an example output:\n3 \u0026#34;train.py\u0026#34; line 1 4 %a \u0026#34;main.py\u0026#34; line 17 6 \u0026#34;keys.py\u0026#34; line 1 7 \u0026#34;utils.py\u0026#34; line 1 8 # \u0026#34;val_CTC.py\u0026#34; line 2 The first number is a unique buffer number corresponding to each buffer.\nThe native way # In command mode, some of the commands to change buffers are list below:\n:bfirst: change to first buffer in the buffer list :blast: change to last buffer in the buffer list :bnext: change to next buffer :bprevious: change to previous buffer Or you can use :b \u0026lt;TAB\u0026gt; to choose from currently opened buffers.\nIf there are a few buffers, it is easy to switch using the above command. However, if we have a dozen of opened buffers, it is cumbersome to use these commands.\nSwitching buffers using buffer number # We can switch to a buffer quickly if we know its number. If we know the number of a buffer, we can use NUM Ctrl-6 to go to a particular buffer (replace NUM with actual buffer number). For example, to switch to main.py, we will press 4\u0026lt;C-6\u0026gt;.\nThis is still inconvenient \u0026mdash; since we have to find the buffer number first.\nA better solution for buffer switching # If you have installed vim-airline ，you can configure it to show the buffer number on the top of the window tabline. Just add the following settings to Nvim config file init.vim:\nlet g:airline#extensions#tabline#enabled = 1 let g:airline#extensions#tabline#buffer_nr_show = 1 Restart Nvim and you will find that each buffer has a number on the left of the file name. Then you can easily go to a buffer.\nIf you do not want to use vim-airline, there are other plugins to show a buffer tabline, such as buf-tabline, which is more lightweight.\nReferences # Fastest way to switch to a buffer in vim? https://github.com/vim-airline/vim-airline/issues/1149 Nvim documentation ","date":"29 September 2018","externalUrl":null,"permalink":"/2018/09/29/switching_buffers_quickly_neovim/","section":"Posts","summary":"\u003cp\u003eWhen working on real projects using Neovim, we often open several files in a\nwindow. Each file corresponds to a buffer. How to switch between these buffers\nquickly?\u003c/p\u003e","title":"How to Switch between Buffers Quickly in Neovim/Vim","type":"posts"},{"content":"If you have a source file with hundreds or thousands of lines of code. How to you see its structure and go to some classes or methods quickly in Nvim? The solution is to use tagbar.\nInstallation # To use tagbar, you have to install universal-ctags, which will generate tag files for tagbar to use.\nInstall universal-ctags # For Linux # We need to build and install by ourself:\ngit clone https://github.com/universal-ctags/ctags.git cd ctags ./autogen.sh ./configure --prefix=/where/you/want/to/install # install to where you have access make -j \u0026amp;\u0026amp; make install # may require extra privileges depending on where to install Under the install directory, there are two directories: bin 和 share. The ctags executable is in the bin directory. We need to add this bin directory to the system PATH variable:\n# suppose that you have install ctags to $HOME/tools/ctags echo export PATH=$HOME/tools/ctags/bin:$PATH \u0026gt;\u0026gt; ~/.bash_profile source ~/.bash_profile For Mac OS # For Mac OS, if you have installed Homebrew, you can simply using the following command to install ctags:\nbrew install --HEAD universal-ctags/universal-ctags/universal-ctags Homebrew will do everything for you. No need to set up install path.\nInstall tagbar # Then install tagbar with your favorite plugin manager such as vim-plug:\nPlug \u0026#39;majutsushi/tagbar\u0026#39; Use :PlugInstall to install tagbar.\nUsing tagbar # Open your code and use :TarbarToggle to toggle the tagbar window. You should be able to see the tagbar window with all your classes, methods and variables.\nIn the above image, the window on the right is the tagbar window.\nIf you frequently use tagbar, you should consider adding a shortcut for this command like the following:\nnnoremap \u0026lt;silent\u0026gt; \u0026lt;C-K\u0026gt;\u0026lt;C-T\u0026gt; :TagbarToggle\u0026lt;CR\u0026gt; Tagbar also provides some shortcut for tag operation. Place the cursor on some tags in the tagbar window:\n\u0026lt;Enter\u0026gt;: go to the line in the code where the tag occur, the cursor will be in the source code p: Like the \u0026lt;Enter\u0026gt; key, except that the cursor is still in tagbar window q: quit the tagbar window References # Install ctags on Linux. Install ctags on Mac OS. ","date":"28 September 2018","externalUrl":null,"permalink":"/2018/09/28/nvim_tagbar_install_use/","section":"Posts","summary":"\u003cp\u003eIf you have a source file with hundreds or thousands of lines of code. How to\nyou see its structure and go to some classes or methods quickly in Nvim? The\nsolution is to use \u003ca href=\"https://github.com/majutsushi/tagbar\" target=\"_blank\"\u003etagbar\u003c/a\u003e.\u003c/p\u003e","title":"How to Use Tagbar in Neovim","type":"posts"},{"content":"这是一篇帮助初学者快速入门 Markdown 的文章，看完此篇，你应该就可以使用 Markdown 写出格式规范的文章了。\n什么是 Markdown # Markdown 是一种可标记语言，通过简单的标记，可以将纯文本内容转为内容丰富的 HTML 网页，实现字体加粗，链接，插入图片等等纯文本无法实现的功能。\nMarkdown 类似编程语言，需要先编写，然后通过渲染器把 Markdown 源文件转为内容丰富 的 HTML 网页（类似于编程语言的编译器，把一种语言翻译为另外一种语言）。\nMarkdown 优点 # 采用 Markdown 生成的文档，格式规范，清晰明了，避免了纯文本文件无法对文本格式进 行控制的尴尬，是书写技术文档的最佳选择之一。同时，Markdown 又不像网页那样复杂， 仅仅使用简单的语法，就能生成丰富的内容，这也是 Markdown 流行的原因。\nMarkdown 具体语法 # 本部分介绍常用的 Markdown 语法，由于 Markdown 类似编程语言，因此对书写格式有一 定要求，符合要求才能生成想要的结果，书写时候一定要遵循规范。\n标题（heading） # Markdown 中的标题采用 # 来标志，# 后面跟具体的标题文本。# 的个数代表标题 级别：1 个 # 代表一级标题，2 个 # 代表二级标题，以此类推。\n注意点 # # 与标题的文本之间，需要留一个空格，否则可能无法正常渲染为标题样式 标题级别不要太多，五六级标题与正文文本字体大小区别已经不大，因此意义也不大 效果展示与源代码 # 源代码：\n# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 生成的标题效果为：\n列表 # Markdown 中的列表，分为有序列表以及无序列表两种。\n对于有序列表，使用数字开头，后面跟 .（英文的句号），空格，后面写上该步骤内容。 对于无序列表，使用 + 或者 - 开头，空格，后面写具体内容。 你也可以创建多级嵌套列表，在某一级别下另起一行，缩进四个空格开始更低级别。\n注意点 # 列表项前面需要空一行，否则某些 Markdown 渲染器无法正常识别列表 列表标志后面需空格 效果展示与源代码 # 源代码：\n1. 有序列表，这是步骤一 1. 步骤 1.1 1. 步骤 1.1.1 2. 步骤 1.1.2 3. 步骤 1.1.3 2. 步骤 1.2 3. 步骤 1.3 2. 有序列表，这是步骤二 1. 步骤 2.1 2. 步骤 2.2 3. 有序列表，这是步骤三 + 车 + 汽车 + BMW + BYD + 火车 + 普通列车 + 动车 + 高铁 + 自行车 + 动物 + 猴子 + 骆驼 + 大象 + 人 + 白人 + 黑人 + 非洲黑人 + 美洲黑人 + 亚洲黑人 + 黄人 生成的列表效果如下图：\n强调与着重表示 # 要使用斜体，可以使用一对 * 或者 _包围要斜体的文字；要加粗文字，使用两对 * 或者 _ 包围文字。\n如何既斜体又加粗文字？* 与 _ 交替使用即可，像这样 ，或者 这样 。\n以上文字源代码为：\n要使用*斜体*，可以使用一对 `*` 或者 `_`包围要斜体的文字；要**加粗文字**，使用两对 `*` 或者 `_` 包围文字。 如何既斜体又加粗文字？`*` 与 `_` 交替使用即可，*__像这样__* ，或者 _**这样**_ 。 注意点 # 使用 _ 进行斜体或者着重表示，可能需要和周围文字之间加上空格，否则无法正常渲 染，建议使用 * 链接 # 可以给文字加上链接，链接的格式为 []()，方括号内填写希望显示的文字，圆括号内填 写该文字具体链接的网页地址。\n例如，我们不可以访问谷歌和 YouTube。直接书写网页地址也可以，用 \u0026lt;\u0026gt; 包含网页， 像这样，https://www.google.com/。\n可以给文字加上链接，链接的格式为 `[]()`，方括号内填写希望显示的文字，圆括号内填写该文字具体链接的网页地址。 例如，我们不可以访问[谷歌](https://www.google.com/)和 [YouTube](https://www.youtube.com)。直接书写网页地址也可以， 用 `\u0026lt;\u0026gt;` 包含网页，像这样，\u0026lt;https://www.google.com/\u0026gt;。 代码块与代码段 # Markdown 中可以写 inline code 以及 code block，inline code 使用一对 ` （ backtick 键）包含，sell = np.sin(time)。code block 使用三个 ` 开始与结 束。\nimport matplotlib matplotlib.use(\u0026#39;agg\u0026#39;) import matplotlib.pyplot as plt import numpy as np print(\u0026#34;hello\u0026#34;) for i in range(10): print(i) x = np.linspace(0, 4, 100) y = np.sin(x) fig, ax = plt.subplots() ax.plot(x, y) plt.savefig(\u0026#39;test.png\u0026#39;) 上述代码块源代码为\n``` import matplotlib matplotlib.use(\u0026#39;agg\u0026#39;) import matplotlib.pyplot as plt import numpy as np print(\u0026#34;hello\u0026#34;) for i in range(10): print(i) x = np.linspace(0, 4, 100) y = np.sin(x) fig, ax = plt.subplots() ax.plot(x, y) plt.savefig(\u0026#39;test.png\u0026#39;) ``` 图片 # 可以在 Markdown 中使用图片，格式为 ！[Image_caption](Image_link)。有两种方式 来引用图片：\n本地图片：直接写上图片绝对路径或者相对当前 Markdown 文件的相对路径 网络图片：直接写上图片链接即可 以上图片对应的源代码如下：\n![这是一张网络图片](https://assets-cdn.github.com/images/modules/logos_page/Octocat.png) 注意点 # 如果图片的链接为本地路径，Markdown 文件移动到其它地方，或者分享给他人以后，图片 将不能显示。可以使用一些图床1来存放图片，保 证在哪里都能显示图片。或者，尽量不在 Markdown 里使用图片。\n表格 # Markdown 中也可以书写简单的表格：\n姓名 数学 语文 张三 1 2 李四 3 4 生成上述表格的源代码为：\n|姓名|数学|语文| |---|---|---| |张三| 1| 2 | |李四| 3| 4 | 自己手写一个表格比较麻烦和枯燥，可以利用在线的工具，生成 Markdown 格式的表格， 一个不错的网站是 TableGenerator.\n任务列表 # 某些种类的 Markdown 还支持任务列表语法，例如：\n吃饭 [] 睡觉 打怪兽 [] 写作业 [] 看电影 生成上述任务列表的源代码如下：\n- [x] 吃饭 - [ ] 睡觉 - [x] 打怪兽 - [ ] 写作业 - [ ] 看电影 [] 中加上 x 表示某个任务已经完成，否则表示该任务进行中。\nMarkdown 源文件编辑与预览 # 推荐几款编辑与预览的编辑器，VNote，Sublime Text 与 Visual Stuido Code\nVnote # Vnote 是国人开发的 Markdown 笔记软件，专为 Markdown 设计，可以方便编写 Markdown 文件，进行预览，对文件进行管理等。\nVisual Stuido Code # 安装 Visual Studio Code，VScode 原生支持 Markdown 文件预览，无需安装插件，按 Ctrl+K，再按 V，会在当前编辑窗口的右边打开文件 预览窗口，可以实时查看生成的 HTML 文件效果。更多指导，请查看 官方文档 。\nSublime Text # 安装 Sublime Text，并且安装插件 Markdown Preview。\n写好 Markdown 以后，直接使用快捷键 Ctrl+Shift+M 打开浏览器预览生成的 HTML 网页效 果。\n参考资料 # Markdown cheatsheet：https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#links Markdown 官方文档：https://daringfireball.net/projects/markdown/ 所谓“图床”，简单来说，就是存储图片的网络空间，这样不管身在何处，只要有网络，就可以看到图片。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 September 2018","externalUrl":null,"permalink":"/2018/09/21/markdown_tutorial_for_beginners/","section":"Posts","summary":"\u003cp\u003e这是一篇帮助初学者快速入门 Markdown 的文章，看完此篇，你应该就可以使用 Markdown\n写出格式规范的文章了。\u003c/p\u003e","title":"写给初学者的 Markdown 教程","type":"posts"},{"content":"Pylint is a popular static code checker which can effectively find the possible bugs in your source code. It is easy to install pylint with conda or pip:\nconda install pylint # pip install pylint Pylint configuration # The pylint configuration file is named .pylintrc which controls its behaviors. Pylint will try to read the configuration from default locations. The locations of the configuration file vary from system to system:\nLinux/Mac: ~/.pylintrc Windows: %userprofile%\\.pylintrc (%userprofile% is a system variable. You can use echo %userprofile% to show its value.) You can disable certain warnings and errors in the configuration file, which will apply globally for every Python source file you check.\nUsage # pylint warning “module has no member\u0026quot; # For Python packages which are partly written in C/CPP, such as Numpy and PyTorch, pylint may not be able to find the relevant method for an object. You can set up in [TYPECHECK] section of .pylintrc to disable warning about unfound method for Numpy and PyTorch:\n[TYPECHECK] # List of members which are set dynamically and missed by pylint inference # system, and so shouldn\u0026#39;t trigger E1101 when accessed. Python regular # expressions are accepted. generated-members=numpy.*,torch.* Disable warning for a certain line # If you only want to disable a certain warning or error for a specific line. You can add #pylint: disable=some-message,another-message in the end of the line. For example:\nsys.path.insert(0, \u0026#39;..\u0026#39;) import mymodule #pylint: disable=import-error You can also use the warning or error code instead of the actual message:\nsys.path.insert(0, \u0026#39;..\u0026#39;) import mymodule #pylint: disable=E0401 Disable warning for a certain file # If you want to disable a certain warning or error for a particular file, you can add #pylint: disable=some-message at the top of the file.\nFind the msg id of a certain message # To disable a certain warning, we want to know its message id. On the command line, use the following command:\npylint --list-msgs |grep message For example, to find the message id of unnecessary-comprehension, we can use:\npylint --list-msgs|grep unnecessary-comprehension We may also find the message id from pylint doc.\nConfigure and use pylint with Neovim # To use pylint inside Neovim, you need to install a linting plugin. Neomake is a good choice. The minimum configuration for Neomake is:\n\u0026#34; when to activate neomake call neomake#configure#automake(\u0026#39;nrw\u0026#39;, 50) \u0026#34; which linter to enable for Python source file linting let g:neomake_python_enabled_makers = [\u0026#39;pylint\u0026#39;] Neomake will automatically run pylint for currently edited file and show warning and error symbols in sign column. You can also use :lopen to open the location list window to see all the warnings and errors. To navigate the location list, use :lprevious and :lnext to go to the previous and next item on the list respectively.\nHow to ignore warnings in Neomake # When we lint our Python code with Neomake (using Pylint), it is often the case that our code can not pass the checker 100%. A lot of warnings and errors may occur, e.g., no docstring for method, variable names not conforming to standard. For some warnings, we do not want them to occur. How to ignore these warnings?\nFor example, if we want to ignore invalid-name(corresponding code is C0103) and missing-docstring（ corresponding code C0111），we can use two methods.\nConfigure in the nvim config file # The first way is to configure through Nvim configuration file. Add the following settings to your Nvim configuration:\nlet g:neomake_python_pylint_maker = { \\ \u0026#39;args\u0026#39;: [ \\ \u0026#39;-d\u0026#39;, \u0026#39;C0103, C0111\u0026#39;, \\ \u0026#39;-f\u0026#39;, \u0026#39;text\u0026#39;, \\ \u0026#39;--msg-template=\u0026#34;{path}:{line}:{column}:{C}: [{symbol}] {msg}\u0026#34;\u0026#39;, \\ \u0026#39;-r\u0026#39;, \u0026#39;n\u0026#39; \\ ], \\ \u0026#39;errorformat\u0026#39;: \\ \u0026#39;%A%f:%l:%c:%t: %m,\u0026#39; . \\ \u0026#39;%A%f:%l: %m,\u0026#39; . \\ \u0026#39;%A%f:(%l): %m,\u0026#39; . \\ \u0026#39;%-Z%p^%.%#,\u0026#39; . \\ \u0026#39;%-G%.%#\u0026#39;, \\ } let g:neomake_python_enabled_makers = [\u0026#39;flake8\u0026#39;, \u0026#39;pylint\u0026#39;] Find the code corresponding to a warning and paste it in the string after -d options. Separate different warning codes with ,.\nConfigure in .pylintrc # The second way is to create a .pylintrc file and ignore certain warning in this file. First, we need to generate .pylintrc under the home directory:\npylint --disable=invalid-namae,missing-docstring --generate-rcfile \u0026gt; ~/.pylintrc If you want to ignore new warnings, you just need to edit .pylintrc, find the part starting with disable= and add the new warnings to the long list of existing warnings. The format should conform to the existing format in the .pylintrc file.\nReferences # https://github.com/neomake/neomake/issues/612 https://stackoverflow.com/questions/22448731/how-do-i-create-a-pylintrc-file/52362063#52362063 http://pylint.pycqa.org/en/latest/faq.html#how-do-i-find-the-option-name-for-pylintrc-corresponding-to-a-specific-command-line-option https://github.com/pytorch/pytorch/issues/701 https://stackoverflow.com/questions/20553551/how-do-i-get-pylint-to-recognize-numpy-members https://stackoverflow.com/questions/28829236/is-it-possible-to-ignore-one-single-specific-line-with-pylint http://pylint.pycqa.org/en/latest/faq.html http://pylint-messages.wikidot.com/all-messages ","date":"20 September 2018","externalUrl":null,"permalink":"/2018/09/20/disable_warning_neomake_pylint/","section":"Posts","summary":"\u003cp\u003ePylint is a popular static code checker which can effectively find the possible\nbugs in your source code. It is easy to install pylint with conda or pip:\u003c/p\u003e","title":"Use Pylint for Code Checking inside Neovim","type":"posts"},{"content":"Nerdtree is a file explorer for Vim/Neovim. It will generate a file navigation window just like an IDE. We can operate on files easily in the nerdtree window. In this post, I will summarize some of its configurations and usages.\nInstall # We can use vim-plug to install nerdtree：\nPlug \u0026#39;scrooloose/nerdtree\u0026#39; Then install this plugin in Nvim using command :PlugInstall.\nConfiguration # In normal mode, you can use :NERDTreeToggle to open the nerdtree windows. Nerdtree does not provide a shortcut for this command by default. In order to quickly open or close the file navigation window, we can add a shortcut to this command. For example, imitating the way Sublime Text opens the side bar, we can use this setting:\nnnoremap \u0026lt;silent\u0026gt; \u0026lt;C-k\u0026gt;\u0026lt;C-B\u0026gt; :NERDTreeToggle\u0026lt;CR\u0026gt; If you want to open the nerdtree window when opening up Nvim, but put the cursor in the file-editing window, you can use the following setting:\naugroup nerdtree_open autocmd! autocmd VimEnter * NERDTree | wincmd p augroup END For more info, see here.\nDirectory operation # Create child file or dir under a directory # First, move the cursor to the directory, press m(stand for menu), then press a to create a child node which can be a file or a directory. To create a directory, you need to append / behind the node name. See here for more info.\nHow to exit a menu？ # When you press m to open the file operation menu for a directory, if you do not want to perform any operation, you can press \u0026lt;ESC\u0026gt; or Ctrl-C to exit this menu. See here.\ngo up one level of directory # To show parent directory of current node, press u.\nChange root to the directory where the cursor is # To change the root directory to where the cursor resides, press C.\nOpen/close child directory of current directory recursively # Open recursively：O Close recursively：X Move the cursor to the first/last node which has the same level with current node # Move to first node of same level：K Move to last node of same level： J A node can be a file or directory.\nMove the cursor to the previous/next node which has the same level with current node # Move to previous node of same level：Ctrl + k Move to next node of same level：Ctrl + j File node operations # How to open a file in new Nvim window？ # To open file in a new window in vertical direction, use i. To open file in a new window in horizontal direction, use s.\nWe can also use gi or gs. The function is the same except that the cursor is still in the nerdtree file navigation window. See reference here.\nHow to rename or move files? # In the nerdtree window, move the cursor to the node that you want rename, then press m. In the opened up menu, press m again. In Neovim window below, you will see prompt to give the path of the new file. Just change the file name.\nIf you want to move the file, the operation is the same: just input a new path for this file (including the file name).\nHow to reveal or show current file in nerdtree window # In normal mode, use :NERDTreeFind command to reveal the position of current file in the file tree. There is no shortcut for this command. According to solution provided here, we can use the following mappings:\nnmap \u0026lt;leader\u0026gt;nf :NERDTreeFind\u0026lt;CR\u0026gt; What is \u0026lt;leader\u0026gt;? See here for an explanation.\nMiscellaneous # How to yank the path of a node in nerdtree window # When we are navigating through the nerdtree window, we may want to copy the full path or the relative path of current node. Nerdtree provide a custom function NERDTreeAddKeyMap to achieve what we want.\nFirst, we need to create a file, e.g., mymapping.vim, under the nerdtree install directory. If you are using Neovim and use vim-plug to manage your plugin, the directory is likely to be ~/.local/share/nvim/plugged/nerdtree/nerdtree_plugin/ or something similar. Anyway, create file mymapping.vim under this directory and edit it.\nTo yank the full path of node using shortcut yy, we can use the following settings:\ncall NERDTreeAddKeyMap({ \\ \u0026#39;key\u0026#39;: \u0026#39;yy\u0026#39;, \\ \u0026#39;callback\u0026#39;: \u0026#39;NERDTreeYankFullPath\u0026#39;, \\ \u0026#39;quickhelpText\u0026#39;: \u0026#39;put full path of current node into the default register\u0026#39; }) function! NERDTreeYankFullPath() let n = g:NERDTreeFileNode.GetSelected() if n != {} call setreg(\u0026#39;\u0026#34;\u0026#39;, n.path.str()) endif call nerdtree#echo(\u0026#34;Node full path yanked!\u0026#34;) endfunction Similarly, to yank the relative path (relative to current root) of current code using yr, we can use the following settings:\ncall NERDTreeAddKeyMap({ \\ \u0026#39;key\u0026#39;: \u0026#39;yr\u0026#39;, \\ \u0026#39;callback\u0026#39;: \u0026#39;NERDTreeYankRelativePath\u0026#39;, \\ \u0026#39;quickhelpText\u0026#39;: \u0026#39;put relative path of current node into the default register\u0026#39; }) function! NERDTreeYankRelativePath() let n = g:NERDTreeFileNode.GetSelected() if n != {} call setreg(\u0026#39;\u0026#34;\u0026#39;, fnamemodify(n.path.str(), \u0026#39;:.\u0026#39;)) endif call nerdtree#echo(\u0026#34;Node relative path yanked!\u0026#34;) endfunction For the meaning of fnamemodify(), see here.\nOk, that is all the settings. Then you can use yy/yr to copy the full/relative path of node under the cursor when you are in the nerdtree file explorer window.\nHow to ignore files and folders # Nerdtree shows all the files and directories under current root by default. If you want to ignore certain files and folder, e.g., *.pyc file and __pycache__ directory, you can use the following settings:\n\u0026#34; the ignore patterns are regular expression strings and seprated by comma let NERDTreeIgnore = [\u0026#39;\\.pyc$\u0026#39;, \u0026#39;^__pycache__$\u0026#39;] You can use regular expression for the ignore pattern and separate several patterns by commas.\nHow to show current root as relative path from $HOME in status bar? # Nerdtree has a setting NERDTreeStatusline for statuslines. Use the following setting in your Nvim config:\nlet NERDTreeStatusline=\u0026#34;%{exists(\u0026#39;b:NERDTree\u0026#39;)?fnamemodify(b:NERDTree.root.path.str(), \u0026#39;:~\u0026#39;):\u0026#39;\u0026#39;}\u0026#34; I got my inspiration from here, here and also the nerdtree documentation.\nReferences # Ignore files in nerdtree: https://github.com/scrooloose/nerdtree/issues/817 https://stackoverflow.com/questions/5601749/how-to-filter-out-files-by-extension-in-nerdtree https://framagit.org/marien.fressinaud/dotfiles/commit/65ded2a418a06e8dd05a0ef3bb70b69c2130b356 Yank the node path, https://stackoverflow.com/questions/16368771/copy-path-file-with-nerdtree-vim-plugin ","date":"10 September 2018","externalUrl":null,"permalink":"/2018/09/10/nerdtree_usage/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\"\u003eNerdtree\u003c/a\u003e is a file explorer for\nVim/Neovim. It will generate a file navigation window just like an IDE. We can\noperate on files easily in the nerdtree window. In this post, I will summarize\nsome of its configurations and usages.\u003c/p\u003e","title":"Intro to Nvim File Explorer Plugin Nerdtree","type":"posts"},{"content":"最近安装了 Neovim，并且在 HOME 目录下的 .bash_profile 中设置好了 Neovim 可执行程序对应的 PATH 变量。奇怪的是，每次在 SSH 客户端打开一个新的服务器连接 session，登录服务器，进入自己账号以后，位于 .bash_profile 中的 PATH 设置命令没有生效，导致我无法启动安装的 Neovim，每次登录以后，我还必须手动 source 一下 .bash_profile 文件，然后才能使用 nvim 命令，非常让人恼火。本文记录我排查问题的过程以及最终的解决方案。\n首先，我尝试把 .bash_profile 里面的设置拷贝到 .bashrc 中，发现登录服务器以后 PATH 变量设置是有效的，可以正常使用 Neovim，这说明 .bash_profile 里面的设置在登录的时候并未被执行。\n原因何在？知道了问题症结以后，很快找到了答案，原来是登录账户时使用的 su $USERNAME 指令的问题。我们的服务器登陆方式比较特殊，并不是通过 SSH 直接登陆到自己目标服务器，而是先 SSH 登陆到一个跳板机，然后以一个统一身份登陆到目标服务器，最后每个用户使用 su $USERNAME 切换到自己的账号。如果使用该指令切换到自己的账户，打开的 shell 是 non-login shell，只有 .bashrc 里面的设置被 source，所以 .bash_profile 里面的设置才没有生效。\n什么是 non-login shell？要说清这个问题，需要先介绍 shell 的不同工作模式，为了简化问题，仅仅针对 Bash。shell 分为 login shell 和 non-login shell；也可以分为 interactive shell 和 non-interactive shell.\nlogin/non-login shell 以及 interactive/non-interactive shell # Login shell 一般指的是用户通过正常的 ssh 登录到服务器（输入用户名和密码）进入的 shell；如果进入 login shell 以后，再打开 GUI terminal 或者执行 bash 命令，此时打开的是 non-login shell。\nInteractive shell 指的是 shell 可以输出结果，也可以接受输入；non-interactive shell 则无法接受用户输入，当运行 script 的时候，实际上就是有一个 non-interactive shell 在执行脚本文件。\n哪些配置文件被读取？ # 采用 interactive login shell 登录的时候，首先读取并执行 /etc/profile 文件中命令，然后再依次顺序寻找 ~/.bash_profile,~/.bash_login 和 ~/.profile 文件，然后从第一个存在且可读取的文件中读取并执行指令。Bash 的 man page 说明如下：\nWhen bash is invoked as an interactive login shell, or as a non-interactive shell with the \u0026ndash;login option, it first reads and executes commands from the file /etc/profile, if that file exists. After reading that file, it looks for ~/.bash_profile, ~/.bash_login, and ~/.profile, in that order, and reads and executes commands from the first one that exists and is readable\n如果是 interactive non-login shell, 启动时候，首先读取执行 /etc/bashrc，然后再读取执行 ~/.bashrc。\n以上两种情况是最常见的。\n使用 su $USERNAME 切换到自己的账号，打开的 Bash shell 实际上就是一个 interactive non-login shell，.bash_profile 里面的内容并没有被执行，所以设置才没有生效。想要在登录账号的时候确保 .bash_profile 里面的配置生效，打开的 shell 必须是 login shell。su 命令提供了 -l 选项（等同于 -）:\n-l Simulate a full login. The environment is discarded except for HOME, SHELL, PATH, TERM, and USER. HOME and SHELL are modified as above. USER is set to the target login. PATH is set to /bin:/usr/bin. TERM is imported from your current environment. The invoked shell is the target login\u0026rsquo;s, and su will change directory to the target login\u0026rsquo;s home directory.\n简单来说，-l 或 - 保证我们打开的是一个 login shell。所以，登录时候使用 su - USERNAME 即可保证 .bash_profile 里面的设置生效。\n参考 # Why ~/.bash_profile is not getting sourced when opening a terminal? .bash_profile not sourced when running su. Why doesn\u0026rsquo;t my ~/.bash_profile work? ","date":"6 September 2018","externalUrl":null,"permalink":"/2018/09/06/login_interactive_shell_bash/","section":"Posts","summary":"\u003cp\u003e最近安装了 \u003ca href=\"https://github.com/neovim/neovim\" target=\"_blank\"\u003eNeovim\u003c/a\u003e，并且在 HOME 目录下的 \u003ccode\u003e.bash_profile\u003c/code\u003e 中设置好了 Neovim 可执行程序对应的 PATH 变量。奇怪的是，每次在 SSH 客户端打开一个新的服务器连接 session，登录服务器，进入自己账号以后，位于 \u003ccode\u003e.bash_profile\u003c/code\u003e 中的 PATH 设置命令没有生效，导致我无法启动安装的 Neovim，每次登录以后，我还必须手动 source 一下 \u003ccode\u003e.bash_profile\u003c/code\u003e 文件，然后才能使用 nvim 命令，非常让人恼火。本文记录我排查问题的过程以及最终的解决方案。\u003c/p\u003e","title":"为什么 .bash_profile 里面的设置不生效？","type":"posts"},{"content":" 我的完整 Neovim 配置可以点这里查看。\n2022-01-29: 本文写于三年以前，其中提到的一些插件已经不再维护，或者对于 Neovim 不是最佳选择，甚至还有一些插件被 Nvim 自带的功能所替代，例如，从 2020.05 开始，highlighted yank 开始内置。我在 这篇博文 分享了一些插件迁移的事情。\nVim 是一款主要流行于 *nix 系统上的强大的编辑器，另外一款可以与之媲美的编辑器是 Emacs，这两款编辑器广泛流行于程序员群体，关于谁是编辑器之王的争论经久不息。Vim 的功能虽然强大，但是作为一款「古老」的编辑器1，也不是没有缺点：随着 Vim 代码量的增加，维护变得日益困难，不利于快速增加新功能；另外，它的主要开发者目前只有一个人，Bram Moolenaar，也不符合当今开源社区多人协作的习惯。为了克服 Vim 的这些缺点，保留 Vim 的优点（最大程度兼容 Vim），让 Vim 的开发能有更快的迭代速度，Neovim 项目诞生了。本文介绍如何安装 Neovim 并配置 Python 开发环境(在以下叙述中，Neovim 和 Nvim 含义相同，不再加以区分)2。\n安装 Nvim # Neovim 有针对 Linux 系统的统一的 appimage 格式的可执行文件，可以直接从 Neovim GitHub release 页面下载。下载以后，先赋予文件可执行权限，\nchmod u+x nvim.appimage 为了方便使用，可以在 Neovim 的安装目录下建立软链接，用 nvim 来作为该可执行文件的外部名称：\nln -s nvim.appimage nvim 接下来，我们需要将 Neovim 的安装目录加入到系统的 $PATH 变量，编辑.bash_profile 文件，把 Neovim 的安装目录（假设为 $HOME/tools/nvim）加入到$PATH变量:\nexport PATH=$HOME/tools/nvim:$PATH 保存文件，然后 source .bash_profile，使更改生效。\n至此，Neovim 安装完成。这样设置以后，在命令行使用 nvim 命令即可打开 Neovim。\nNvim 的配置文件 # Neovim 使用的配置文件和 Vim 不同，需要在 ~/.config/nvim/ 目录下创建文件 init.vim ，该文件就是 Neovim 的配置文件，Neovim 所有的配置都可以放入其中。\n由于 Neovim 是基于 Vim 开发的，所以 Neovim 和 Vim 的绝大多数配置都是相同的，如果之前使用过 Vim，可以把之前的配置的大部分拷贝过来使用。关于 Neovim 和 Vim 的不同，可以参见这里。\n使用插件管理器 vim-plug # Vim 之所以强大，一个很重要的原因是存在很多插件，在 Vim 漫长的发展过程中，无数开发者为 Vim 贡献了插件，这些插件可以实现各种各样的功能。如果安装插件很多，插件管理成为一个麻烦的问题。Neovim 和 Vim 一样，并没有自带插件管理器，我们需要自己安装插件管理器。经过搜索和比较，发现有两款比较有名的插件管理器在 Nvim 用户中流行，分别是 dein 和 vim-plug. Vim-plug 的 user base 更大，最后我决定安装 vim-plug，以下为 vim-plug 安装以及简单的使用说明。\nvim-plug 安装 # 安装 vim-plug 这个插件本身，运行以下命令安装： curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 安装 vim-plug 以后，可能需要退出 Nvim 重新进入。\n编辑 init.vim 文件，在该文件中加入 vim-plug 配置部分，以下为一个示例配置（改编自 vim-plug GitHub 主页，见这里）： call plug#begin(\u0026#39;~/.local/share/nvim/plugged\u0026#39;) call plug#end() 所有其它插件的安装都要放在两个 call 命令之间，下面不再赘述。\nvim-plug 使用 # 以下命令均在 Nvim 命令模式下使用\n安装插件：:PlugInstall 更新插件：:PlugUpdate 删除插件：:PlugClean （首先在 init.vim 中，注释掉该插件，然后打开 Nvim，使用 :PlugClean 命令清除该插件） 查看插件状态：:PlugStatus 升级 vim-plug：:PlugUpgrade 暂时禁用某个插件 # 如果想暂时禁用某个插件，但是不删除它，有两种方式。\n在 inti.vim 中注释掉该插件，重新打开 Nvim 即可 参考这里给出的解决方法，如果要禁用插件 foo/bar，使用如下设置 Plug \u0026#39;foo/bar\u0026#39;, { \u0026#39;on\u0026#39;: [] } 常用插件安装与配置 # 自动补全插件 deoplete # deoplete 是一款和 YouCompleteMe 类似的自动补全插件，官方对它的描述为：\nDeoplete is the abbreviation of \u0026ldquo;dark powered neo-completion\u0026rdquo;. It provides an extensible and asynchronous completion framework for neovim/Vim8.\n准确来说，它其实是一款自动补全的引擎，具体对某种编程语言的自动补全支持，要安装对应的source 才能真正工作.\ndeoplete 安装相对简单，在 vim-plug 的设置里加入以下配置：\nPlug \u0026#39;Shougo/deoplete.nvim\u0026#39;, { \u0026#39;do\u0026#39;: \u0026#39;:UpdateRemotePlugins\u0026#39; } 关于 deoplete 的配置，官方并未在 GitHub 主页多说，只给出了一个配置选项：\nlet g:deoplete#enable_at_startup = 1 更多选项以及对应的含义，可以在 Nvim 中输入 :h deoplete-options 查看。\n如前面所说，deoplete 对不同编程语言的支持需要安装不同的 source，下面给出 Python语言的 source 配置，供参考。\n安装 deoplete-jedi # Deoplete-jedi 是和 deoplete 配合使用的 Python source。安装以及配置步骤如下：\n需要安装的其他库 首先，我们需要安装 pynvim，\npip install pynvim 接着，安装 jedi. 如果你安装了最新的 Anaconda Python 发行版，jedi 已经安装了，否则，采用 pip 安装即可，\npip install jedi 安装与配置 deoplete-jedi 插件 编辑 Nvim 的配置文件 init.vim，在 vim-plugin 部分，加入以下命令：\nPlug \u0026#39;zchee/deoplete-jedi\u0026#39; 然后安装 deoplete-jedi，如果没有问题，现在你已经可以使用自动补全了！使用 Nvim打开一个 Python 源文件，试着编辑一下，你会看到类似下图的自动补全菜单：\nDeoplete 的使用 # 如何在自动补全给出的函数或者类的列表中上下移动选择？ 参考这里的答案，可以使用 Ctrl + N 以及 Ctrl + P 在列表项目中进行切换。\n函数方法 Preview 的窗口如何自动关闭？ 在自动补全给出的列表中移动的时候，Nvim 的上半部分会出现一个很小的窗口，提示当前方法的参数，但是该窗口在自动补全完成后并不能自动消失，参考这里，可以使用下面的设置使得窗口自动消失：\nautocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif Preview 窗口的可以设为在当前窗口下面打开吗？ 默认 preview 窗口在上面打开，可以通过 set splitbelow 使新建立的窗口位于当前窗口下面，参见这里。\n如何设定为使用 Tab 键在自动补全的列表跳转？ 在 Nvim 的配置中，加入如下设置即可：\ninoremap \u0026lt;expr\u0026gt;\u0026lt;tab\u0026gt; pumvisible() ? \u0026#34;\\\u0026lt;c-n\u0026gt;\u0026#34; : \u0026#34;\\\u0026lt;tab\u0026gt;\u0026#34; 状态栏插件 vim-airline # 原生的 Nvim 状态栏比较简单，不像 Sublime Text 那样，状态栏可以显示很多信息。有一款不错的插件 vim-airline 可以实现类似 Sublime Text 的功能。在 vim-plugin 安装区加入以下命令：\nPlug \u0026#39;vim-airline/vim-airline\u0026#39; 然后运行 PlugInstall 安装该插件，重启 Nvim 可以看到更新后的状态栏。\n切换 vim-airline 主题 # vim-airline 提供了很多主题来个性化状态栏，不同主题的样子可以参见这里。更改vim-airline 主题方式很简单，首先安装插件vim-airlinetheme:\nPlug \u0026#39;vim-airline/vim-airline-themes\u0026#39; 然后，在 Nvim 配置文件中，加入以下设置，\nlet g:airline_theme=\u0026#39;\u0026lt;theme\u0026gt;\u0026#39; \u0026#34; \u0026lt;theme\u0026gt; 代表某个主题的名称 自动引号\u0026amp;括号补全 # 输入引号，括号时，经常希望能够自动输入一对，原始的 Nvim 不支持这样的功能，可以使用 auto-paris 插件帮助我们实现这样的功能。插件安装：\nPlug \u0026#39;jiangmiao/auto-pairs\u0026#39; 使用方法 # 以引号输入为例，说明如何使用这个插件。按下 \u0026quot;，会自动变成双引号\u0026quot;\u0026quot;，此时光标位于双引号的中间，等待插入文本，文本插入结束以后，通常我们希望把光标置于右边引号的后面继续输入，此时，再按一次 \u0026quot;，光标就会跳转到右边引号的后面，等待我们继续输入文本。\n注释插件 # 不同编程语言中注释的表示方法不尽相同，如果能够根据当前编辑文件对应的编程语言自动选择合适的注释符号，将是极好的。nerdcommenter 就是这样一款插件。安装插件：\nPlug \u0026#39;scrooloose/nerdcommenter\u0026#39; 注释单行，使用 \u0026lt;leader\u0026gt;cc，其中 leader 是在 Nvim 中设置的前导按键（Nvim 中默认为 /）；如果要反注释，使用 \u0026lt;leader\u0026gt;cu。更多具体使用方法可以参考插件的文档。\n代码自动 format 插件 # neoformat 可以对源代码自动 format。安装 ：\nPlug \u0026#39;sbdchd/neoformat\u0026#39; 对于 Python 代码，neoformat 需要配合 Python 的自动格式化工具（称为 formatter）来使用，这里以 yapf 为例说明，首先安装该格式化工具：\npip install yapf 然后，neoformat 在格式化 Python 代码的时候就可以使用 yapf formatter 了。\n如何格式化代码？命令模式下，输入 :Neoformat，该插件会对源代码进行自动 format。还有一款 vim-autoformat，也可以尝试一下。\n如果 neoformat 没有检测到文件类型，或者没有插件，也可以设置以下命令，让 neoformat 对文件做简单的 format：\n\u0026#34; Enable alignment let g:neoformat_basic_format_align = 1 \u0026#34; Enable tab to spaces conversion let g:neoformat_basic_format_retab = 1 \u0026#34; Enable trimmming of trailing whitespace let g:neoformat_basic_format_trim = 1 代码跳转(go-to)插件 # 我们经常需要跳转到类，方法等的定义，查看实现细节，可以使用 jedi-vim 实现，实际上，jedi-vim 还可以进行 Python 代码的自动补全，但是由于我们已经安装了 deoplete 和 deoplete-jedi进行自动补全，所以将 jedi-vim 的自动补全功能关闭，只使用代码跳转功能。\n安装：\nPlug \u0026#39;davidhalter/jedi-vim\u0026#39; jedi-vim 配置如下，\n\u0026#34; disable autocompletion, cause we use deoplete for completion let g:jedi#completions_enabled = 0 \u0026#34; open the go-to function in split, not another buffer let g:jedi#use_splits_not_buffers = \u0026#34;right\u0026#34; 使用 # \u0026lt;leader\u0026gt;d: go to definition K: check documentation of class or method \u0026lt;leader\u0026gt;n: show the usage of a name in current file \u0026lt;leader\u0026gt;r: rename a name 文件管理器 nerdtree # 使用过 GUI 代码编辑器的人都知道，编辑器左边一般是项目文件浏览窗口，在 Nvim 中如何实现这一功能呢？可以安装 nerdtree 来实现。安装：\nPlug \u0026#39;scrooloose/nerdtree\u0026#39; 简单使用 # 如何打开 nerdtree 文件浏览窗口？ 直接在命令模式输入:NERDTree 即可打开当前编辑文件所在的目录。\n如何在文件窗口与 file explorer 窗口切换？ 按住 Ctrl, 双击 w 可以在两个窗口之间切换。\n如何打开 file explorer 中某个文件？ 把光标移动到该文件，然后按 o，即可在右边窗口打开该文件。\n如何退出 file explorer 窗口？ 在该窗口直接按 q 即可退出。\n更多个性化设置，可以参考这篇。\n代码检查工具 # Neomake 是为 Nvim 做的一款代码语法检查和自动化 make 工具。安装：\nPlug \u0026#39;neomake/neomake\u0026#39; Neomake 对不同编程语言的检查依赖各种 linter，安装 Neomake 以后，针对要使用的编程语言，我们还需要安装对应的 linter。各种编程语言支持的 linter 列表见这里。\n对于 Python，我们可以使用 pylint 作为 linter。直接使用 pip 或 conda 安装 pylint：\nconda install pylint 安装 pylint 以后，在 init.vim 中指定使用它作为 Python 代码检查器\nlet g:neomake_python_enabled_makers = [\u0026#39;pylint\u0026#39;] 代码检查 # 命令模式下，使用 :Neomake 命令检查代码正确性。或者也可以设置自动检查，在 Nvim 配置文件中，加入以下设置：\ncall neomake#configure#automake(\u0026#39;nrwi\u0026#39;, 500) 多点编辑插件 vim-multiple-cursors # 使用过 Sublime Text 的人应该都对 Sublime Text中多点编辑功能爱不释手，这个功能对于代码重构非常实用，如何在 Nvim 中使用类似的功能呢？可以借助于 vim-multiple-cursors。安装：\nPlug \u0026#39;terryma/vim-multiple-cursors\u0026#39; 简单使用 # 命令模式下，首先把光标移动到要重命名的变量处，然后开始按 Ctrl + N，可以看到变量被高亮，继续按 Ctrl + N，变量下一个出现的地方被高亮显示，如果要跳过某个位置该变量的出现（例如，字符串中也可能包含与该变量名相同的子字符串），在该处被高亮以后，再按 Ctrl + X 取消高亮即可，不断选中变量的出现位置，直到所有想要选中的位置均选中完毕。\n此时，按下 c（c 在 Nvim 中代表 change ）,进入编辑模式，输入变量新的名称，保存即可。更多使用方法，请参考该插件的文档。\n参考 # https://github.com/neovim/neovim/issues/3845 https://github.com/neovim/neovim/issues/211 https://github.com/neovim/neovim/issues/7257 https://github.com/onivim/oni/issues/184 高亮显示复制区域 # Nvim 中，使用 y 复制文本以后，不会提示复制了哪些文本，除非使用者非常熟悉 Nvim按键，否则可能会多复制或少复制部分字符。vim-highlightedyank 这款插件可以在复制（yank）文本以后高亮提示哪些文本被复制了，非常实用。安装：\nPlug \u0026#39;machakann/vim-highlightedyank\u0026#39; 通常情况下，安装插件以后不需要做任何设置即可使用，但是对于某些主题，高亮的颜色可能看不清楚，可以在 Nvim 设置中加入以下命令：\nhi HighlightedyankRegion cterm=reverse gui=reverse 如果觉得高亮显示的时间太短，可以设置增加高亮显示的时间（单位为毫秒）：\nlet g:highlightedyank_highlight_duration = 1000 \u0026#34; 高亮持续时间为 1000 毫秒 代码折叠插件 # 对于很长的代码，折叠代码有助于理清代码整体结构。SimplyFold 是一款不错代码折叠插件。安装：\nPlug \u0026#39;tmhedberg/SimpylFold\u0026#39; 安装以后不用进行设置，开箱即用。\n简单使用 # zo： 打开光标处的 fold zO： 递归打开光标处所有 fold zc： 关闭光标处 fold zC： 关闭光标处所有 fold 主题安装与配置 # Before we begin # Neovim 自带了几款主题（colorscheme），你可能不喜欢，想要安装个性化主题。安装主题相对比较简单，但是，某些 SSH 程序对颜色的支持似乎有问题，导致主题安装以后，并不能很好工作。经过试用多款 Windows 系统下的 SSH 软件，最终发现ZOC 最好用，当然Cygwin 也是不错的选择。更多的 SSH 软件，可以参考这里给出的支持 true color 的 SSH 客户端。\n主题安装介绍 # gruvbox 是一款 Vim 主题。在 vim-plug 安装插件部分，加入以下指令：\nPlug \u0026#39;morhetz/gruvbox\u0026#39; 运行 :PlugInstall 安装该主题。\n在 Nvim 配置文件中加入\ncolorscheme gruvbox 即可启用该主题，主题有两个模式，分别为 dark 和 light，可以使用下面的命令进行切换:\nset background=dark \u0026#34; 或者 set background=light 重启 Nvim，你将会看到主题的变化。在我的 Mac 上，主题显示如下：\n如何找到更多有用的插件？ # 有个叫做 vimawesome 的网站收集了很多不同类型 vim 插件的信息，可以在这个网站寻找合适的插件来尝试。另外，很多 Vim 插件都发布在GitHub 上，可以直接在 GitHub 上搜索 vim 和相关的关键词查找插件，例如，搜索 \u0026ldquo;vim colorscheme\u0026rdquo; 或 \u0026ldquo;vim theme\u0026quot;可以查找为 vim 设计的主题。\n更改显示字体 # Nvim 会自动使用 ssh 客户端设置的字体，所以在客户端设置字体即可。一些比较不错的编程字体有：\nFiraCode Source Code Pro Hack 内置 terminal # Neovim 原生支持 terminal，内置了 terminal emulator，可以直接在 Neovim 内运行 shell，对于一些临时的 shell 操作非常方便。打开的方式为在命令模式下输入 :terminal 或者输入 vnew term://bash(表示在水平方向再打开一个bash shell) 或者 new term://bash（在垂直方向打开一个 bash shell）。\n进入 terminal 后，默认是命令状态，不能输入文字，按 i 开始输入命令。如何退出terminal window 的插入状态？按\u0026lt;Ctrl+\\\u0026gt;\u0026lt;Ctrl+N\u0026gt;。\n要退出 terminal 窗口，输入 exit 即可，此时 terminal 的窗口将关闭。\nNeovim 与 Vim 的不同 # 支持 bracketed paste mode # Neovim 官方文档指出 Neovim 支持 bracketed paste mode，因此 Vim 中的 paste 选项已经过时了，在 Neovim 中使用 :h paste，可以看到如下的说明：\nThis option is obsolete; bracketed-paste-mode is built-in.\nNeovim is all nocompatible # 在 Neovim 界面，使用 :h compatible，给出的信息可以看到，\nNvim is always \u0026ldquo;nocompatible\u0026rdquo;\n一些小问题 # 在 Tmux 中，Nvim 的主题颜色显示有问题 # 首先，如果你的终端模拟器支持真彩色，那么需要先安装最新版本的 tmux3。然后把如下配置加入到 tmux 配置文件 (~/.tmux.conf) 中 (参考 这里)：\nset -g default-terminal \u0026#34;screen-256color\u0026#34; set -ga terminal-overrides \u0026#34;,xterm-256color*:Tc\u0026#34; 然后颜色显示应该会正常。如果你使用的终端不支持真彩色，那么就在 Neovim 的配置中加入下面的设置：\nset notermguicolors 更多的讨论参考这里.\n如何记录 Neovim 启动时候的 log # 参考这里。使用 nvim -VNUMnvim.log 来启动 Neovim。 NUM 用来指定 log 的 verbosity 等级，例如 nvim -V10nvim.log 将会生成一个 verbosity 等级为 10 的 log 文件。 另外在命令行运行 nvim --help 也有相关帮助信息.\n至此，Neovim 就算配置完成了，终于可以愉快码代码了。\nVim 最初于 1991 年发布，它的前身 Vi 诞生于 1978 年。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n关于如何在 Windows 上配置 Neovim，参考这里.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n参考这里，安装 Tmux 最新版。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"5 September 2018","externalUrl":null,"permalink":"/2018/09/05/centos_nvim_install_use_guide/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/Xnip2020-04-04_21-39-49.jpg\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003e我的完整 Neovim 配置可以点\u003ca href=\"https://github.com/jdhao/nvim-config\" target=\"_blank\"\u003e这里\u003c/a\u003e查看。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2022-01-29: 本文写于三年以前，其中提到的一些插件已经不再维护，或者对于 Neovim 不是最佳选择，甚至还有一些插件被 Nvim 自带的功能所替代，例如，\u003ca href=\"https://jdhao.github.io/2020/05/22/highlight_yank_region_nvim/#neovim-only\" target=\"_blank\"\u003e从 2020.05 开始，highlighted yank 开始内置\u003c/a\u003e。我在 \u003ca href=\"https://jdhao.github.io/2021/12/31/using_nvim_after_three_years/#what-remains-what-has-changed-and-some-new-plugins\" target=\"_blank\"\u003e 这篇博文\u003c/a\u003e 分享了一些插件迁移的事情。\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eVim 是一款主要流行于 *nix 系统上的强大的编辑器，另外一款可以与之媲美的编辑器是 Emacs，这两款编辑器广泛流行于程序员群体，\u003ca href=\"https://en.wikipedia.org/wiki/Editor_war\" target=\"_blank\"\u003e关于谁是编辑器之王的争论经久不息\u003c/a\u003e。Vim 的功能虽然强大，但是作为一款「古老」的编辑器\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e，也不是没有缺点：随着 Vim 代码量的增加，维护变得日益困难，不利于快速增加新功能；另外，它的主要开发者目前只有一个人，\u003ca href=\"https://en.wikipedia.org/wiki/Bram_Moolenaar\" target=\"_blank\"\u003eBram Moolenaar\u003c/a\u003e，也不符合当今开源社区多人协作的习惯。为了克服 Vim 的这些缺点，保留 Vim 的优点（最大程度兼容 Vim），让 Vim 的开发能有更快的迭代速度，\u003ca href=\"https://neovim.io/\" target=\"_blank\"\u003eNeovim\u003c/a\u003e 项目诞生了。本文介绍如何安装 Neovim 并配置 Python 开发环境(在以下叙述中，Neovim 和 Nvim 含义相同，不再加以区分)\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e","title":"Linux 下 Neovim 配置 Python 开发环境指南","type":"posts"},{"content":"In this post, I want to write about how to replace one page of existing PDF files with a new PDF image.\nCrop image and convert it to PDF file # Because the page size of most PDF files is A4 size1. First we need to crop the image to have the same aspect ratio as an A4 paper. We can use FastStone Image Viewer to achieve this.\nOpen the image using FastStone Image Viewer, press x and we will be in the crop mode. We need to add a new aspect ratio for the A4 size.\nIn the pop-up window, click \u0026ldquo;Add\u0026rdquo; and set the width and height of the paper ratios (see image below).\nThen go back to the crop board and choose the ratio we have just set up. Then choose the option \u0026ldquo;Lossless Crop to File\u0026rdquo;. In the pop-up save file window, choose the PDF format.\nEmbed PDF image to the existing PDF files # Now we can embed the produced PDF image to the existing PDF files. We use the free tool pdftk to do this. Download, install it and set the PATH variable properly.\nIf we have a file Thesis.pdf and we want to replace the 5th page with another file sign_page.pdf. We can use the following command:\npdftk A=Thesis.pdf B=sign_page.pdf cat A1-4 B1 A6-end output signed_thesis.pdf This command is pretty self-explanatory. We concatenate page 1 to 4 of Thesis.pdf, the sign_page.pdfand page 6 to end of Thesis.pdf to form a new PDF file. In effect, we have replaced the 5th page of Thesis.pdf. The produced file will be signed_thesis.pdf.\nAnother way to embed PDF files. # If you have purchased Adobe Acrobat Pro, you can use Acrobat to replace a page in PDF files.\nReference # https://superuser.com/questions/611227/how-to-replace-a-single-page-in-a-pdf-using-another-pdf-in-linux https://askubuntu.com/questions/221962/how-can-i-extract-a-page-range-a-part-of-a-pdf The A4 size is 210x297 in mm.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"4 June 2018","externalUrl":null,"permalink":"/2018/06/04/insert-image-page-to-pdf/","section":"Posts","summary":"\u003cp\u003eIn this post, I want to write about how to replace one page of existing PDF\nfiles with a new PDF image.\u003c/p\u003e","title":"How to Replace A Page of PDF File with Another PDF","type":"posts"},{"content":"In this post, I will share how to position the intersection of x and y axis at a specific point using Matplotlib.\nThe spines # In order to re-position x and y axis, we need to understand an important concept in Matplotlib \u0026mdash;spines. According to Matplotlib documentation:\nSpines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions. See function:set_position for more information.\nIn normal plot, we can clearly see four spines around the plot. Like the following plot:\nTwo of the 4 spines, i.e., bottom and left spines are used as x and y axis. Another two spines are used to indicate data boundary.\nMove the spines # In order to move a specific spine, we use the set_position() method of spines. This method accepts a 2-tuple as its parameter. The first element of the tuple is used to indicate the desired coordinate system1, i.e., axes or data. If you use axes, the value for the second element is in the range $[0.0, 1.0]$. If you choose data, the value for the second element is the range of actual data range.\nWe can use ax.spines to get the four spines. The returned object will be a dict, whose keys are bottom, left, top, right. Then we use one of these keys to access a specific spine and customize it.\nPosition spines in data coordinate # Let us take a concrete example. Suppose we want to put the intersection of x and y axis at data coordinate $(0, 0)$, we can use the following snippet:\nax.spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;data\u0026#39;, 0)) ax.spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;data\u0026#39;, 0)) The produced image will be:\nThe image looks a bit ugly since top and right spines now seem redundant. How do we remove them? It is easy:\nax.spines[\u0026#39;top\u0026#39;].set_visible(False) ax.spines[\u0026#39;right\u0026#39;].set_visible(False) Now the image will be prettier:\nYou can move the spines to whatever position you want, see more example below:\nPosition spines in axes coordinate # We can also position spines using the axes coordinate system. For example, if you want to place the x and y axis in the top right of the axes, i.e., in the axes coordinate $(1, 1)$, use the following script:\nax.spines[\u0026#39;left\u0026#39;].set_position((\u0026#39;axes\u0026#39;, 1)) ax.spines[\u0026#39;bottom\u0026#39;].set_position((\u0026#39;axes\u0026#39;, 1)) The produced plot is\nReferences # https://www.labri.fr/perso/nrougier/teaching/matplotlib/ How to draw axis in the middle of the figure? If you are not familiar with coordinate system in Matplotlib, you can check this tutorial.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"21 May 2018","externalUrl":null,"permalink":"/2018/05/21/matplotlib-change-axis-intersection-point/","section":"Posts","summary":"In this post, I will share how to position the intersection of x and y axis at a specific point using Matplotlib.\nThe spines # In order to re-position x and y axis, we need to understand an important concept in Matplotlib \u0026mdash;spines. According to Matplotlib documentation:\nSpines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions.","title":"How to Change Intersection Point of X and Y Axis in Matplotlib","type":"posts"},{"content":"本文简要总结一下如何在 PowerPoint 中使用母版视图制作个性化的页脚页眉1，先上效果图：\n背景介绍 # 假如张三是哈佛（哈尔滨佛学院，简称「哈佛」）的一个学生，他要作一篇报告，题目为“论马克思主义在人工智能时代的指导作用”，除了 PPT 的首页之外，其余每张幻灯片（slide）页脚要标明作者，报告的题目，时间，以及当前幻灯片的编号和所有幻灯片的数目；在页眉部分，右边要有哈佛的一个标志。如何来实现上述要求？\n最简单的办法就是每插入一张幻灯片，人工在页眉、页脚部分分别插入上述要求的内容，进行调整，或者做好一张 slide，拷贝多次，然后进行简单修改。但是这样的方式，非常笨拙，有很多重复性劳动，因为这种格式上的要求很多都是不变的，譬如，页脚的作者姓名，题目，页眉的哈佛图标等。PowerPoint 中的「母版视图」中的「版式」就是为这种需求准备的。简单来说，版式就是一张实际幻灯片的模板，从某一版式新建的幻灯片初始内容都是一模一样的，我们可以在此基础上进行进一步的编辑。\n版式制作过程 # 进入母版视图 # 新建一个 PowerPoint 文件，打开，不要新建任何 slide，点击「视图」选项卡，然后点击「幻灯片母版」。这时，菜单栏会多出一个「幻灯片母版」选项卡，同时，你会看到一张母版，下面以树形结构展示了多个不同的版式。要想快速在普通视图和母版视图之间切换，可以按住 Shift 键，单击 PowerPoint 右下角的「普通视图」按钮。\n不同的版式就是一张幻灯片的不同模板，我们不需要这些版式，可以直接把所有版式都删掉（使用 Delete 删除）。\n制作标题幻灯片的版式 # 单击「幻灯片母版」选项卡下的「插入版式」，插入一个新的版式，右键单击该版式，可以重命名，我们把它命名为「标题」。\n这个版式默认会有一些元素(如果不需要，可以直接删掉)。版式编辑和普通幻灯片编辑区别不大，上述 PPT 第一页幻灯片的版式如下：\n如何正确插入幻灯片编号和所有幻灯片张数？ # 上述的「标题」版式非常简单，这里重点讲一下如何插入左下角的幻灯片编码。首先，插入一个矩形到版式的左下角（这里对矩形的填充颜色，边线颜色等设置不再赘述），右击该形状，编辑文字，确保鼠标光标现在位于矩形内。然后单击「插入」选项卡，找到「幻灯片编号」按钮并点击，这时，矩形框中就插入了幻灯片符号的占位符。我们继续编辑，在占位符后面加上 /NUM。NUM 表示 PPT 的 slide 页数，可以在做完幻灯片以后再添加上该数字，注意，增删了幻灯片，需要自己在模板中手动更新该数字。\n制作普通幻灯片页面版式 # 完成了标题幻灯片版式制作，我们来制作普通幻灯片页面的版式，同样地，插入新的版式，重命名为「普通页面」。这个版式略复杂，主要元素见下图说明：\n页眉制作 # 页眉使用矩形，并设置背景色制作，然后右上角插入哈佛图标，具体格式可以根据自己喜好制作。\n同时页眉还有一个重要的元素是标题占位符，它的作用是：如果一张幻灯片 以「普通页面」版式为模板，那么生成该页面的时候标题的样式（主要是字体和字号）已经设置好，我们只需要点击输入标题内容即可，不需要对每一张使用该版式的幻灯片 标题重新设置一遍字体字号，能够有效提升效率，有木有。下面介绍具体如何实现。\n首先，在编辑「普通页面」版式时，选中「标题」，\n会出现一个文本框，内有「单击此处编辑母版标题样式」字样，把文本框中的文字移动到合适位置，然后使用「开始」选项卡设置文字的字体以及字号等格式（见下图）。\n页脚制作 # 页脚由四个矩形拼接组成，前两个较普通，直接分别插入作者以及报告题目即可。第三个矩形框为当前日期，插入方法与插入幻灯片编号类似：首先编辑该矩形的文字，确保光标位于矩形内，然后在「插入」选项卡找到「日期和时间」按钮并点击，在弹出的窗口选择日期格式，注意勾选「自动更新」2选项，见下图，\n插入幻灯片编号的方法已经说过，不再赘述。这些矩形的大小，背景色，其中的文字字体以及格式可以根据自己需要调整。\n至此，这个版式就算完成了。完成了这些版式的制作以后，可以开始制作幻灯片了：在「幻灯片母版」选项卡下，点击「关闭母版视图」，回到正常的幻灯片制作界面。\n版式的使用 # 点击新建幻灯片，可以看到我们刚才做好的两个版式：「标题」和「普通页面」版式。首先插入标题页面，然后插入多张普通页面，进行具体的内容制作。\n这时如果再回到「母版视图」界面，点击不同的版式，PowerPoint 会自动提示哪些幻灯片使用该版式，见下图：\n为什么有的版式删不掉？ # 如果有基于某个版式的幻灯片存在，那么你不能删除该版式，要删除该版式，先删除所有基于该版式的幻灯片。\n参考 # 微软 Office 官方说明 为什么一些版式无法删除 **注意：**本文使用的 PowerPoint 为 Office 2016 版本，相关设定对于其他版本 Office 不一定适用。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n会自动显示你打开幻灯片的当天的日期\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"19 May 2018","externalUrl":null,"permalink":"/2018/05/19/powerpoint-header-footer-master-view/","section":"Posts","summary":"本文简要总结一下如何在 PowerPoint 中使用母版视图制作个性化的页脚页眉1，先上效果图： 背景介绍 # 假如张三是哈佛（哈尔滨佛学院，简称「哈佛」）的一个学生，","title":"利用母版视图在 PowerPoint 中制作个性化页脚页眉","type":"posts"},{"content":"There are two basic cases when we push our local repo to remote repo. These two cases differ in their settings. But sometimes, we are easily confused.\nFirst scenario # The first case is that you have created a local repo and want to store it on GitHub later. In this case, your usual work flow for local repo is:\nInitialize the local repo (git init) Write you code and document, etc. Add changes to index (e.g., git add . ) Commit the changes (git commit -m \u0026quot;some message\u0026quot;) Repeat step 2 \u0026ndash; 4 Then, at some point, you want to push this local repo to GitHub. First, you need to create a new repo in GitHub. But be careful that you should not create a README file in this repo.\nIf you do create a README file, you will encounter errors when you try to push to this remote repo:\nhint: Updates were rejected because the remote contains work that you do hint: not have locally. This is usually caused by another repository pushing hint: to the same ref. You may want to first integrate the remote changes hint: (e.g., \u0026#39;git pull ...\u0026#39;) before pushing again. hint: See the \u0026#39;Note about fast-forwards\u0026#39; in \u0026#39;git push --help\u0026#39; for details. If you try to pull from the remote repo to fix the above error, you will then see error message such as:\nfatal: refusing to merge unrelated histories\nIn order to spare yourself from these troubles, just do not create a README file! Just create an empty repo.\nAfter you have created an empty remote repo, you should add it as one of your remote. You can then push to it smoothly.\ngit remote add upstream \u0026lt;your_repo_url\u0026gt; git push upstream master If you accidentally created it README file, you can also force to push to this remote repo:\ngit push -f upstream master The above option -f will erase the commit on the remote repo. You can then force push to the remote repo.\nSecond scenario # The other case is that you already have a remote repo1 and you want to continue to develop it locally. In this case, you should first clone this remote repo and then develop it locally.\ngit clone \u0026lt;your_remote_repo\u0026gt; After cloning this remote repo, you can develop it locally. In this case, you do not have to manually add this repo as your remote. It will be added as your remote by default with the name origin.\nIn order to push to this repo, we use the following command:\ngit push origin master References # https://stackoverflow.com/questions/17291995/push-existing-project-into-github https://stackoverflow.com/questions/23304688/issue-pushing-to-a-github-repository-created-with-initialize-repo-with-a-readme For example, you have forked someone else\u0026rsquo;s repo.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 May 2018","externalUrl":null,"permalink":"/2018/05/16/git-push-local-to-remote/","section":"Posts","summary":"There are two basic cases when we push our local repo to remote repo. These two cases differ in their settings. But sometimes, we are easily confused.\nFirst scenario # The first case is that you have created a local repo and want to store it on GitHub later. In this case, your usual work flow for local repo is:\nInitialize the local repo (git init) Write you code and document, etc.","title":"How to Push Local Git Repo to Remote Repo in GitHub","type":"posts"},{"content":" update log 2022-09-30: change order of read and write section; other small fixes.\nIn this post, I will share the most convenient way to read and write CSV files (with or w/o headers) in Python.\nRead CSV files # Use the builtin CSV module # Python has a built-in CSV module that deals with CSV files. CSV module provides a CSV reader, which we can use to read CSV files. The CSV reader is an iterable object. We can use the following snippet to read CSV files:\nimport csv with open(\u0026#34;test.csv\u0026#34;, \u0026#34;r\u0026#34;, newline=\u0026#39;\u0026#39;) as f: reader = csv.reader(f, delimiter=\u0026#39;,\u0026#39;) for l in reader: print(l) # l will be a Python list Use Pandas # The famous data processing package Pandas also provides a method read_csv() to read CSV files.\nFor example, in order to read the above test.csv file, we can use the following code:\nimport pandas as pd # delimiter is used to sinify the delimiter between different columns, change it based on your case df = pd.read_csv(\u0026#39;test.csv\u0026#39;, delimiter=\u0026#39;,\u0026#39;) # df is Pandas dataframe df in the above code will be Pandas dataframe object. If the csv file you have does not have header, you should use header=None when reading this file:\ndf = pd.read_csv(\u0026#34;test.csv\u0026#34;, delimiter=\u0026#39;,\u0026#39;, header=None) To show the number of rows in the dataframe, use len(df.index) or df.shape[0]. To show the number of columns, use len(df.columns) or df.shape[1].\nTo get a certain column, we use the column name as key:\ncol0 = df[\u0026#39;name\u0026#39;] # col0 is Pandas Series object df[[\u0026#39;c1\u0026#39;, \u0026#39;c2\u0026#39;]] # to get multiple columns from dataframe print(col0.tolist()) # use tolist() method to make a list The tolist() method in the above code convert Pandas Series to plain Python list. If the csv file does not have a header, you can also use column index to access a certain column. For example, to get column 0, you can use:\ndf[0].values (this is numpy array) df[0].tolist() (plain Python list) To access a certain row, we can use the loc method with the row number.\nrow0 = df.loc[0] # row0 is Pandas Series object df.loc[0].values # a numpy array print(row0.tolist()) # use tolist() method to make a list To get the whole dataframe as a numpy ndarray, you can use df.values.\nWrite CSV files # Use the builtin CSV writer # In order to write to files in CSV format, we build a CSV writer, then write to a file using this writer. Here is a simple example:\nimport csv lines = [[\u0026#39;Bob\u0026#39;, \u0026#39;male\u0026#39;, \u0026#39;27\u0026#39;], [\u0026#39;Smith\u0026#39;, \u0026#39;male\u0026#39;, \u0026#39;26\u0026#39;], [\u0026#39;Alice\u0026#39;, \u0026#39;female\u0026#39;, \u0026#39;26\u0026#39;]] header = [\u0026#39;name\u0026#39;, \u0026#39;gender\u0026#39;, \u0026#39;age\u0026#39;] with open(\u0026#34;test.csv\u0026#34;, \u0026#34;w\u0026#34;, newline=\u0026#39;\u0026#39;) as f: writer = csv.writer(f, delimiter=\u0026#39;,\u0026#39;) writer.writerow(header) # write the header # write the actual content line by line for l in lines: writer.writerow(l) # or we can write in a whole # writer.writerows(lines) In the above code snippet, the newline parameter inside the open method is important. If you do not use newline='', there will an extra blank line after each line on Windows platform. The parameter delimiter is used to denote the delimiter between different columns.\nUse pandas # Another way to generate csv files is to use to_csv() from pandas, which is easier to use. Here is an example using pandas:\nimport pandas as pd lines = [[\u0026#39;Bob\u0026#39;, \u0026#39;male\u0026#39;, \u0026#39;27\u0026#39;], [\u0026#39;Smith\u0026#39;, \u0026#39;male\u0026#39;, \u0026#39;26\u0026#39;], [\u0026#39;Alice\u0026#39;, \u0026#39;female\u0026#39;, \u0026#39;26\u0026#39;]] header = [\u0026#39;name\u0026#39;, \u0026#39;gender\u0026#39;, \u0026#39;age\u0026#39;] new_df = pd.DataFrame(data=lines, columns=header) new_fname = \u0026#34;test.csv\u0026#34; new_df.to_csv(new_fname, sep=\u0026#34;,\u0026#34;, index=False) The parameter index=False disable adding row index to each row, which is often desired. sep is used to change the separation character between columns.\nReferences # Indexing and selecting data in Pandas Get the number of rows or columns in dataframe ","date":"13 May 2018","externalUrl":null,"permalink":"/2018/05/13/read-write-csv-file-with-header/","section":"Posts","summary":"update log 2022-09-30: change order of read and write section; other small fixes.\nIn this post, I will share the most convenient way to read and write CSV files (with or w/o headers) in Python.\nRead CSV files # Use the builtin CSV module # Python has a built-in CSV module that deals with CSV files. CSV module provides a CSV reader, which we can use to read CSV files.","title":"How to Read and Write CSV Files in Python","type":"posts"},{"content":"今天是 5 月 12 日，对于 2008 年以后的中国人来说，这是一个特殊的日子：十年前的今天，四川省汶川县等区域发生了 8 级大地震，造成了重大的生命损失与伤痛。今天也来写一下我个人对地震的记忆与恐惧。\n5 月 12 日地震那时，我们刚刚开始下午的课，教室轻微摇晃，有人喊：“地震啦！”我就惊慌地跟着大家一起跑出了教室，来到了操场上，腿都是颤抖的。然后我们很快就知道了，是四川的汶川发生了大地震，我们山西并没有太大的损失。此后几天似乎恢复了平静，到后来学校还专门组织大家进行防震演练，虽然不知道这样的演练有没有作用。\n地震后的一个周末，发生了一次较大的余震，我们在学校也感受到了。此后大家似乎谣传运城也会发生大地震，于是到了某一个晚上，已经熄灯睡觉了，不知道谁喊了一声“地震了”，宿舍区的所有人都被带动了起来，大家吓得顾不上换上衣服就跑出宿舍，整栋楼因为大量人的快速跑动，发出“轰隆隆”一般的巨响，此后这种声响简直成了一种梦魇，每次听到这种类似的声响，我总疑心是地震了，精神处于极度紧张与害怕的状态，这样的梦魇恐怕永远也除去不掉了。\n此后大家都积极捐款，表现出极大的热情，某些同学也因为不积极，受到大家的辱骂与批评，我自己暗地里却不同意这样的批评，我至今仍认为我的想法是对的。\n2008 年，我 17 岁，对世界的认识还太少，我什么都不知道，我只是一个学生。假如当时你问我，我关心地震吗，我可能会回答，也许有那么一点点关心吧，但是也没有那么关心，毕竟生活琐碎是我最关心的。到了今天，我竟然都 27 岁了，我又知道了更多的以前不知道的事情，我想说，有些事我们不应该忘记，有些人我们也不应该忘记！如果我们忘记，我们就是一个可耻的民族！一个可耻的民族，是没有也不配有前途的。\n","date":"12 May 2018","externalUrl":null,"permalink":"/2018/05/12/memory-of-wenchuan-earthquake/","section":"Posts","summary":"今天是 5 月 12 日，对于 2008 年以后的中国人来说，这是一个特殊的日子：十年前的今天，四川省汶川县等区域发生了 8 级大地震，造成了重大的生命损失与伤痛。","title":"回忆汶川地震","type":"posts"},{"content":"本文总结一些使用 Microsoft Word 2016 撰写论文时遇到的一些问题以及解决办法。\nWord 如何插入分节符？ # 「分节符」是 Word 中一个非常重要概念，很多设置都会涉及到分节符。分节符，顾名思义，就是把文档从某处分节（节的英语为 section）的标志。常用的分节符类型有「下一页」（即从当前位置的下一页开始新的一节），「连续」（即从当前位置开始新的一节）。具体如何插入分节符见下图（以插入「下一页」分节符为例）：\nWord 中如何显示文中所有的控制符号，例如分页符，分节符等？ # 在 Word 中，默认情况下，分页符，分节符等控制符号，用户是看不到的，如果你不小心多插入了分节符，可能会造成意想不到的结果，但是很难找出原因，因此建议把显示控制符号的选项打开，帮助你了解文档中都有哪些字符。\n如何打开这个选项？点击「开始」选项卡，然后找到「段落」部分，打开「显示/隐藏编辑标记」选项，如下图：\n或者使用 Word 提供的快捷键，Ctrl+* 来开启或关闭这项功能。\n如何在目录部分不显示目录本身的页码 # 你可能会遇到这种情况：在目录部分，目录本身作为第一项显示在上面（如下图所示）。\n通常我们希望目录第一项能从摘要开始，不要包含目录自身。之所以出现目录自身，是因为目录也采用了一级标题的样式，因此生成目录的时候，Word 自动把目录本身也加入了进去。我们可以先清除目录的格式，然后再手动把目录设置为一级标题要求的字体以及字号，然后再更新目录，你会发现第一项从摘要开始了。\n清除目录格式很简单，首先选中目录，在「开始」选项卡下，找到「样式」，然后点击下拉菜单，找到「清除格式」，点击即可（见下图）。\n如何更新目录？点击「引用」选项卡，在目录部分，点击「更新目录」，然后选择「更新整个目录」即可，见下图：\n如何在 Word 左边显示当前文档的目录导航？ # 在 Word 文档左边显示当前文档的结构，可以方便跳转到某一部分，作用类似 PDF 文件中的书签功能。如何开启？在 Word 中点击「视图」选项卡，然后找到「显示」相关的选项，选中「导航窗口」，目录就会出现在文档的左边（前提是你已经正确设置了各级标题），如下图所示：\n如何从摘要部分开始文档的页码？ # 摘要之前一般为目录，把光标置于目录页最后一页（假设目录有多页），然后插入一个类型为「下一页」分节符，你会看到目录页最后一页多了一个「分节符」的标志：\n然后如果此时双击该页的页脚，Word 会提示文档每一页位于哪一节，你会发现目录页与正文的摘要处于不同的节，这正是我们需要的效果，见下图，\n然后把光标移到下一节页脚的位置，单击「设计」选项卡，找到「页眉与页脚」部分，点击「页码」下拉菜单，\n然后在菜单中选择「设置页码格式」，在弹出的窗口使用下面的设置，\n如果目录页以及目录页之前的部分有页码出现，直接把光标移动到目录页页脚，删掉那些页码即可，这样论文就是从摘要开始编码了，起始页码为 1。\n如何使得表格的宽度等于页面的宽度 # 在 Word 中，有的表格宽度很窄，如何使得表格的宽度等于当前 Word 页面的宽度呢？首先选中整个表格，然后单击「布局」选项卡，找到「单元格大小」栏目，点击「自动调整」下拉菜单，然后选择「根据窗口自动调整表格」选项，见下图\n如何插入公式 # Word 中自带的插入公式功能简直是噩梦，效率极其低下。一种解决的办法就是安装第三方的公式辅助插件，例如 MathType（国外），或者 AxMath（国内），这两款软件都是收费的，但是后者价格更低，并且看起来做的更美观，可以考虑购买。另外一个非常不错的免费插件，叫做 texsword，可以直接在其中书写 LaTeX 公式，生成图片，插入到 Word 中，具体安装使用参见这里。\n如果对 LaTeX 比较熟悉1，还可以安装Pandoc，\nPandoc 是一个非常强大的文件格式转换工具，我们可以利用它把 Markdown 文件格式转为 Word 的 docx 格式。首先新建一个后缀为 md 的文件（也就是 Markdown 格式的文件），在里面书写数学公式，然后利用 Pandoc 把该 md 文件转为 Word 的 docx 格式，\n# 利用 Pandoc 把 md 文件转为 docx 文件 pandoc equation.md -t equation.docx 把生成的 equation.docx 文件中的公式拷贝到要使用公式的文档中即可。\n如何删除页眉文字下面的横线 # 首先，双击页眉区域，进入页眉页脚编辑模式，然后选中页眉文字，点击「开始」选项卡，在段落部分，找到「边框」选项，然后选择「无框线」，这是页眉文字下面的横线就会消失。注意一定要选中页眉文字，见下方图片。\n参考 # 如何在目录页不显示目录本身的页码 Word 显示控制字符 去除页眉横线 不熟悉的话，可以看看 LaTex 输入公式的教程，还有这个 LaTeX 中数学公式输入命令列表。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"10 May 2018","externalUrl":null,"permalink":"/2018/05/10/write-paper-word-issues/","section":"Posts","summary":"本文总结一些使用 Microsoft Word 2016 撰写论文时遇到的一些问题以及解决办法。 Word 如何插入分节符？ # 「分节符」是 Word 中一个非常重要概念，很多设置都会涉及到分节符。","title":"使用 Microsoft Word 撰写论文常见问题总结","type":"posts"},{"content":"Today I make my first ever GitHub pull request to the great Hexo theme NexT. I will summarize how to make a pull request in following post.\nCreating a fork # According to GitHub documentation:\nIf you don\u0026rsquo;t have write access to the repository where you\u0026rsquo;d like to create a pull request, you must create a fork, or copy, of the repository first.\nIf you do not have write access to the repository you want to contribute to, the first step is to fork it. A fork means a complete copy of the original repository. But now you can do whatever you want on the fork without permission from the maintainer of the original repo.\nIt is easy to fork a public repository. Take the theme NexT for an example. Go to theme NexT\u0026rsquo;s GitHub repo, and click the \u0026ldquo;fork\u0026rdquo; button on the upper right to fork it.\nNow I have a forked repo of the original repo. The address of the forked repo is https://github.com/jdhao/hexo-theme-next.\nCreate a local clone of your forked repo # If you want to start working on your forked repo, first you need to create a local clone the forked repo. Go to the forked repo in GitHub, and copy its address (see image below).\nOn the command line, use the following command to clone the forked repo:\ngit clone https://github.com/jdhao/hexo-theme-next.git # replace this address with your actual address After a while, the forked remote repo will be copied to your local computer. The folder name is hexo-theme-next.\nAdd original remote repo as one of your remote # In order to communicate with the original remote repo, we need to add it as one of our remote repo. Before that, your remote repo is only the forked remote repo. Use the following command to confirm that:\ncd hexo-theme-next \u0026amp;\u0026amp; git remote -v You will see something like:\norigin https://github.com/jdhao/hexo-theme-next.git (fetch) origin https://github.com/jdhao/hexo-theme-next.git (push)\nIn the above output, origin means your forked remote repo. Then go to the original remote and copy its address, just as we do for the forked remote. We then add the original remote as upstream:\ngit remote add upstream https://github.com/theme-next/hexo-theme-next.git Now, using git remote -v again, you will see that original repo is also shown in your remote list:\norigin https://github.com/jdhao/hexo-theme-next.git (fetch) origin https://github.com/jdhao/hexo-theme-next.git (push) upstream https://github.com/theme-next/hexo-theme-next.git (fetch) upstream https://github.com/theme-next/hexo-theme-next.git (push)\nMake changes # Now you can make changes in your local repo. It is good practice to only change one feature at a time and commit it. After you have finished making changes to your local repo, you should commit and push it to your forked remote.\ngit add . git commit -m \u0026#34;change feature xxx\u0026#34; git push origin master # your forked remote will be updated now Make your pull request # Now you can make your pull request. Go to the original repo, and click \u0026ldquo;New pull request\u0026rdquo; button,\nOn the Compare page, click \u0026ldquo;compare across forks\u0026rdquo;, you will see something like the following\nOn the left, there is \u0026ldquo;base fork\u0026rdquo;. On the right, there is \u0026ldquo;head fork\u0026rdquo;. Click the pull-down list to choose the original remote as base fork and choose your forked repo as head fork.\nThen give a title to your pull request. You should also create a description according to the repo\u0026rsquo;s pull request template. Most serious projects have a pull request template. Make sure your pull request description follows their guidelines.\nFinally, click the button \u0026ldquo;create pull request\u0026rdquo; on the bottom of the page to finish your pull request. Stay patient and wait for the original repo owner to review your pull request!\nHow to update your pull request # As is often the case, your pull request may need some polishing before it can be merged. So how do we update our pull request with new changes? It turns out that git can do that for us \u0026ldquo;magically\u0026rdquo;!\nYou just need to make modifications on your local branch, commit the changes and push it to your forked remote. Now go to your pull request page, you will find that the new commit will appear at the bottom of this pull request discussion (see image below for an example).\nHow to sync your master with original repository # A lot of people contribute to an open source project. After you have forked a project, other people may have committed several changes to the original repo\u0026rsquo;s master branch. How to keep your forked remote master up to date with the original repo?\nYou can fetch the changes from the upstream master and then merge the changes with your origin master:\ngit fetch upstream # fetch latest changes in upstream to your local git checkout master # make sure that you are on local master git merge upstream/master # merge changes with your local master git push origin master # push changes to your forked remote master In the git merge stage, there may be some conflict between your master and upstream master. In order to merge, you have to resolve the conflicts. See here as a start on how to handle merge conflicts.\nReferences # How to fork a repo Create a pull request, general guide Create a pull request from a fork Contribute to a project How to update a pull request. How to update a fork update a pull request ","date":"6 May 2018","externalUrl":null,"permalink":"/2018/05/06/first-github-pull-request/","section":"Posts","summary":"Today I make my first ever GitHub pull request to the great Hexo theme NexT. I will summarize how to make a pull request in following post.\nCreating a fork # According to GitHub documentation:\nIf you don\u0026rsquo;t have write access to the repository where you\u0026rsquo;d like to create a pull request, you must create a fork, or copy, of the repository first.\nIf you do not have write access to the repository you want to contribute to, the first step is to fork it.","title":"A Tutorial on Creating GitHub Pull Requests","type":"posts"},{"content":"最近在使用 1.9.19 版本的 MX 播放器播放视频的时候，提示不支持 E-AC-3 （全称为 Enhanced Audio Codec 3，是AC-3 的升级版）音频格式。稍微查了一下，原因是由于版权问题，新版的 MX 播放器默认不包含 AC-3 解码器，我们需要自己下载安装解码器。下面简单介绍如何加入对 AC-3 音频的支持。\n确定自己手机的平台 # 由于手机平台的不同，AC-3 的解码器也不同，所以首先需要明确自己的安卓手机是什么平台，例如 tegra2, tegra3, x86, neon 等。打开 MX 播放器，然后依次打开右上角的 帮助 -\u0026gt; 关于 菜单，可以看到自己的手机平台，例如我的手机是 ARMv7 NEON 。\n下载相应的解码器 # 根据自己的平台，下载对应该平台的解码器，具体下载地址为 XDA 论坛，选择合适自己平台的下载即可，如果实在不确定自己的平台，就下载 aio 版本的解码器。\n安装解码器 # 下载完解码器以后，进入 设置 -\u0026gt; 解码器 界面，在该页面的最下面「常规」一栏，点击「自定义编解码器」，然后找到刚才下载的 zip 文件，选中。软件会提示：\n重启应用以重新载入编解码器\n点击「确定」，然后重启 MX 播放器。\n确认解码器安装成功 # 重启进入 MX 播放器，再次进入关于页面，在手机版本显示的地方会增加提示：\n自定义编解码器 1.9.18.2\n说明编码器已经安装成功了，现在就可以使用 MX 播放器播放含有 AC-3 音频的视频文件了。\n参考资料 # https://forum.xda-developers.com/apps/mx-player/mx-player-custom-codec-dts-support-t2156254 https://www.3nions.com/fix-ac3-audio-format-not-supported-in-mx-player/ ","date":"24 April 2018","externalUrl":null,"permalink":"/2018/04/24/mxplayer-ac3-codec-support/","section":"Posts","summary":"\u003cp\u003e最近在使用 1.9.19 版本的 \u003ca href=\"http://mx.j2inter.com/\" target=\"_blank\"\u003eMX 播放器\u003c/a\u003e播放视频的时候，提示不支持 E-AC-3 （全称为 Enhanced Audio Codec 3，是\u003ca href=\"https://en.wikipedia.org/wiki/Dolby_Digital\" target=\"_blank\"\u003eAC-3\u003c/a\u003e 的升级版）音频格式。稍微查了一下，原因是由于版权问题，新版的 MX 播放器默认不包含 AC-3 解码器，我们需要自己下载安装解码器。下面简单介绍如何加入对 AC-3 音频的支持。\u003c/p\u003e","title":"如何在新版 MX 播放器中加入对 AC-3 音频支持","type":"posts"},{"content":"刚读完《众病之王：癌症传》（英文名字叫《The emperor of all maladies: a biography of cancer》），“意外”发现这本书是一本的融合科普与历史的精品图书。\n这本书是一位名为「悉达多•穆克吉」的印度裔肿瘤医生写的，该书曾获得 2011 年普利策非虚构小说奖。主要讲述了人类对抗癌症的历史，从蒙昧时代的粗暴手段，到现代科学一点一点揭开癌症的本质，使用基因技术治疗癌症，其间也串联了很多有机化学，基因，疾病等概念的科普，介绍了很多发现背后的故事，例如幽门螺杆菌的发现，艾滋病的出现等。初看的时候，觉得还有一些枯燥，看了一段时间，觉得这本书写的太精彩了，像小说一样荡气回肠，有一种惊心动魄的气质，融合故事性与科普性，吸引我读下去。\n看了此书，有一些想法。科学研究并不是光靠计划就能计划出来的，存在一定偶然的成分，有一些抗癌的化疗药物的发现，就是意外的发现，例如芥子气，本来是用于战争的化学武器，科学家意外发现芥子气可以降低血液中白细胞的数量，于是芥子气被用来治疗癌症。有时候科研并不是能够计划出来的，面对未知，需要不同的尝试，我们应该容许科研人员进行尝试，而不是事先让他们定好所谓的计划，这样出来的科研都是什么科研？\n另外，科学研究需要科学的方法，在书中，作者也多次强调了这个问题，无论是评估全国范围治疗癌症的各种措施是否有效，还是评估某种物质是否具有致癌性，抑或是某种药是否对癌症治疗有明确的作用，都需要客观科学的评估。科学工作者需要对最新的研究以及相关领域的研究都非常敏锐，有可能快速找到解决当前问题的新思路。同时，不同的学科，如癌症的理论研究，癌症的实际治疗，基因科学，甚至物理，化学专家，还有数学家，计算机科学家需要合力研究癌症的治疗。\n最初，当研究人员与临床医生不清楚癌症的致病原因时，一些外科医生希望通过大面积切除肿瘤以及周边的人体组织，来阻止癌症的复发，有的医生进行的切除手术甚至已经到了疯狂的程度，最明显的例子就是对乳腺癌的治疗。但是，很多时候，这种疯狂的切除手术并不能阻止癌症的反弹。这些医生不明白，癌症可以局部癌症和转移性癌症，如果癌症细胞已经转移到其他地方，无论多疯狂的手术切除，都是无法治愈癌症的。如果对癌症的认识仅停留在经验层面，就会出现「盲人摸象」一般的认识，所有的认识都是漂浮在表面的，因此会出现无法解释的矛盾。一个典型的例子就是癌症的病毒致病学说，1910 年Peyton Rous 发现一种病毒可以导致肿瘤的出现，这种病毒被命名为 Rous sarcoma virus（Rous 肉瘤病毒，简称 RSV），因此很多学者认为癌症可能是由病毒导致的，但是这并不能解释为什么很多吸烟的人患癌症的风险大大增强，随着基因技术的发展，科学家发现 RSV 是一种神奇的病毒，在一般的生物体遗传信息的流动方向是 DNA -\u0026gt; RNA -\u0026gt; 多肽，但是 RSV 病毒存在另外一种遗传信息流动方向： RNA -\u0026gt; DNA -\u0026gt; RNA -\u0026gt; 多肽，因此 RSV 被称为逆转录病毒，RSV 逆转录形成的蛋白质阻塞了人类正常的细胞有丝分裂调控信号通路，因此细胞开始了无节制的有丝分裂，形成了癌症，RSV 也使得研究人员发现了人类癌症基因（oncogene）的存在。只有对癌症的认识深入到基因层面，所有看似矛盾的现象才会有统一的解释，这也是科学研究的价值所在。说到这里，我又想起了国内流行的中西医之争，中医支持者总拿几千年历史来论证中医的合理性，但是问题的关键并不在这里，诚然中医里有一些经验的东西可能对治疗疾病有用，但是为什么有用呢，到底是如何作用的，机理何在，中医能给的东西寥寥。相信西医，是相信科学的研究方法，并不是西医所产生的一切知识，因为这些知识随着人类认识的进步，可能并不正确，但是思想与方法是不会错的。中医如不能在科学的路上走下去，只会招来一帮骗子和混子为其摇旗呐喊。\n作者在这本书里不仅讨论了一些偏学术的东西（癌症的致病原因，癌症的治疗等），也花了很多篇幅讲述同样重要的政治以及社会动员。尽管癌症很致命，有很多人患病，但是放在全美甚至全世界的范围，同样会淹没在喧嚣的世界，除了癌症病人以及他们的亲属朋友，并不能引起广泛的关注，因此也吸引不了资金支持，开展了不了大规模的研究。对于生活在象牙塔的科学家来说，这往往是他们所不熟悉的领域，如何与政府以及公众打交道，如何筹钱，也是科学研究必不可少的一部分。在这方面，病理学家 Sidney Farber 与社会活动家 Mary Woodard Lasker 等人联手，创建了 The Jimmy Fund，通过一系列活动成功使癌症成为全美关注的疾病，推动了美国国会对癌症研究拨款的大幅度增加1。顺便说一句，Lasker 和她丈夫成立了 Lasker 基金会，每年颁发「拉斯克奖」，该奖也被誉为诺贝尔奖的风向标，我国科学家屠呦呦因为发现「青蒿素」于 2011 年曾获得「拉斯克基础医学奖」，2015 年获得诺贝尔医学与生理学奖。\n在抗击癌症的历史上，作者提到了两位华人，一位是李敏求（以下引用摘自维基百科）：\n1956年在国立癌症研究所与Hertz一道，用叶酸拮抗剂的甲氨蝶呤成功治愈子宫膜绒毛癌 ，是历史上第一次用化疗治愈恶性实体肿瘤，标志着化疗由姑息治疗向治愈的过渡。作为 第一位用化疗成功治愈恶性实体肿瘤的医生，1972年与当年在国立癌症研究所的同事们共 16人分享了拉斯克临床医学奖\n另外一位是王振义，上海瑞金医院的医生，他的贡献在于（摘自维基）：\n首次利用全反式维甲酸诱导急性早幼粒细胞白血病细胞分化，在临床上极大地提高急性早 幼粒细胞白血病病人的完全缓解率和长期生存率。\n除此之外，华人在治疗癌症上的贡献乏善可陈。\n一本好书应该激起人的兴趣去了解更多的知识，这本书起到了这样的作用。看了这本书，我对基因产生了兴趣，在 Youtube 上看了《DNA: the secret of life》，对基因科学产生了兴趣，这是以前学习生物时从来没有过的，以前接受的生物教育现在想想太糟糕了，枯燥，无聊。\n同时，也觉得很悲哀，国内根本不可能出现这样一本科普书，向大众普及基本的癌症知识，癌症专家与普通人之间有一条鸿沟。目前缺乏高质量的科普，反而大量反科学，骗人、以讹传讹的东西横行网络，令人失望。\n从 1957 年到 1967 年，美国国家癌症研究所（Nationla Cancer Institute，简称 NCI）的经费，从 4800 万美元上升至 1.76 亿美元。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 April 2018","externalUrl":null,"permalink":"/2018/04/16/cancer-the-emperor-of-all-meladies/","section":"Posts","summary":"\u003cp\u003e刚读完\u003ca href=\"https://book.douban.com/subject/5336588/\" target=\"_blank\"\u003e《众病之王：癌症传》\u003c/a\u003e（英文名字叫《The emperor of all maladies: a biography of cancer》），“意外”发现这本书是一本的融合科普与历史的精品图书。\u003c/p\u003e","title":"读《众病之王：癌症传》有感","type":"posts"},{"content":"Putty is a powerful and slim ssh tool with rich features. It is widely used to connect to the remote servers. I will summarize some of its settings and usages in this post.\nUse X server with putty # Putty supports X11 forwarding. To enable this feature, do the following steps:\nLoad a remote session which you want to use GUI application Go to connection-\u0026gt;SSH-\u0026gt;X11, check the option Enable X11 forwarding (see image below) Go back to Session settings and save the change. After these settings, you should be able to use X11 forwarding. Of course, you need to install a X server application, e.g., xming and vcxsrv.\nHow to remember the username and password of session? # Short answer: remembering username is possible, but remembering password is impossible by deliberate design.\nIn order to set a default username for a session. First load the session. Then go to Connection-\u0026gt;Data. Fill the username in the text box on the right of Auto-login username (see image below).\nHow to save the settings for a session # This question has confused me for a while. Each time I set up a session, the settings are only valid fro the current session. The next time I open the session, I have to configure it again, which is annoying. The correct steps to save your settings are as follows:\nChoose a particular session from the session list and click Load button to load it as the current session (the session name will appear in the text box under Saved Sessions) Change to other settings page and set up the session. Go back to the Session page and click Save button to save your settings. How to start a session directly from the command line # First make sure that putty executable has been added to your system PATH. Then use the following syntax:\nputty -load \u0026#34;\u0026lt;session_name\u0026gt;\u0026#34; to open a session directly from command line. \u0026lt;session_name\u0026gt; must be a valid session name.\nReferences # http://en.tldp.org/HOWTO/XDMCP-HOWTO/ssh.html http://serverfault.com/questions/12295/how-to-make-putty-settings-persistent http://tartarus.org/~simon/putty-snapshots/htmldoc/Chapter4.html#config-saving https://www.chiark.greenend.org.uk/~sgtatham/putty/faq.html#faq-startsess ","date":"12 April 2018","externalUrl":null,"permalink":"/2018/04/12/putty-windows-x11-forwarding-setup/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/\" target=\"_blank\"\u003ePutty\u003c/a\u003e is a powerful and\nslim ssh tool with rich features. It is widely used to connect to the remote\nservers. I will summarize some of its settings and usages in this post.\u003c/p\u003e","title":"How to Use Putty on Windows","type":"posts"},{"content":"This is a post which follows up my previous post on how to use Chinese characters with Matplotlib.\nIntroduction # If we use some Unicode characters when plotting with Matplotlib, for example, character ✹ (Unicode code point is U+2739), you will find that the character may not show up in the rendered image. The reason is simple: the default font used by Matplotlib does not support this Unicode character.\nIn order to plot this Unicode character, we need to do two things. Firstly, we need to find a font which supports this character. Secondly, we need to tell Matplotlib to choose this font for rendering the character.\nFind a valid font # Since this character may not belong to a certain language. It is trickier to find which font supports it. According to post here, we can use the Python package fontTools to check if a character exists in a certain font.\nFirst, we need to install fontTools. If you are using pip, use the following command to install fontTools,\npip install fonttools If you are using conda, use\nconda install -c conda-forge fonttools to install this package.\nThen, we can use the following script to show a list of fonts which contain this Unicode character.\nfrom fontTools.ttLib import TTFont import matplotlib.font_manager as mfm def char_in_font(Unicode_char, font): for cmap in font[\u0026#39;cmap\u0026#39;].tables: if cmap.isUnicode(): if ord(Unicode_char) in cmap.cmap: return True return False uni_char = u\u0026#34;✹\u0026#34; # or uni_char = u\u0026#34;\\u2739\u0026#34; font_info = [(f.fname, f.name) for f in mfm.fontManager.ttflist] for i, font in enumerate(font_info): if char_in_font(uni_char, TTFont(font[0], fontNumber=0)): print(font[0], font[1]) The above script will print a list of font path along with their corresponding font names. All these fonts support the queried character. Sample output on my system is shown below:\n/home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf DejaVu Sans /home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf DejaVu Sans Mono /home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf DejaVu Sans /home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf DejaVu Sans /home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf DejaVu Sans Mono /home/jdhao/util/anaconda3/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf DejaVu Sans /usr/share/fonts/dejavu/DejaVuSansCondensed-BoldOblique.ttf DejaVu Sans /usr/share/fonts/dejavu/DejaVuSansCondensed-Bold.ttf DejaVu Sans /usr/share/fonts/dejavu/DejaVuSansCondensed.ttf DejaVu Sans /usr/share/fonts/dejavu/DejaVuSansCondensed-Oblique.ttf DejaVu Sans /usr/share/fonts/gnu-free/FreeSerif.ttf FreeSerif /usr/share/fonts/opensymbol/opens___.ttf OpenSymbol Plot this character # In order to plot this character with Matplotlib, we need to use FontProperties class in Matplotlib to find this font. Then we can use this font in the plotting command:\nimport matplotlib.pyplot as plt import matplotlib.font_manager as mfm font_path = \u0026#39;/usr/share/fonts/gnu-free/FreeSerif.ttf\u0026#39; prop = mfm.FontProperties(fname=font_path) # find this font # use the font in plotting command plt.text(0.5, 0.5, s=uni_char, fontproperties=prop, fontsize=20) plt.show() In the above code, variable font_path is the path of a font supporting the Unicode character.\nWe can also use the font name to look up a font,\nimport matplotlib.pyplot as plt import matplotlib.font_manager as mfm font_path = \u0026#39;/usr/share/fonts/gnu-free/FreeSerif.ttf\u0026#39; prop = mfm.FontProperties(family=\u0026#39;OpenSymbol\u0026#39;) plt.text(0.5, 0.5, s=uni_char, fontproperties=prop, fontsize=20) plt.show() Output image is shown below\nReferences # Check if a font contains a character Matplotlib FontProperties class Find which characters a font support ","date":"8 April 2018","externalUrl":null,"permalink":"/2018/04/08/matplotlib-unicode-character/","section":"Posts","summary":"\u003cp\u003eThis is a post which follows up my previous post on \u003ca href=\"https://jdhao.github.io/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/\" target=\"_blank\"\u003ehow to use Chinese\ncharacters with\nMatplotlib\u003c/a\u003e.\u003c/p\u003e","title":"How to Plot Unicode Characters with Matplotlib","type":"posts"},{"content":"You can use two ways to set the GPU you want to use by default.\nSet up the device which PyTorch can see # The first way is to restrict the GPU device that PyTorch can see. For example, if you have four GPUs on your system1 and you want to GPU 2. We can use the environment variable CUDA_VISIBLE_DEVICES to control which GPU PyTorch can see. The following code should do the job:\nCUDA_VISIBLE_DEVICES=2 python test.py The above code ensures that the GPU 2 is used as the default GPU. You do not have to change anything in your source file test.py\nIf you want to set the environment in your script. Then you can use os.environ to set the environment variables. In order to use GPU 2, you can use the following code\nimport os os.environ[\u0026#39;CUDA_VISIBLE_DEVICES\u0026#39;]=\u0026#39;2\u0026#39; There is something that we should notice. If you have set up CUDA_VISIBLE_DEVICES. The actuall device will be numbered from zero. For example, if you use\nos.environ[\u0026#39;CUDA_VISIBLE_DEVICES\u0026#39;]=\u0026#39;2,3\u0026#39; Then GPU 2 on your system now has ID 0 and GPU 3 has ID 1. In other words, in PyTorch, device#0 corresponds to your GPU 2 and device#1 corresponds to GPU 3.\nDirectly set up which GPU to use # You can also directly set up which GPU to use with PyTorch. The method is torch.cuda.set_device. For example, to use GPU 1, use the following code before any GPU-related code:\nimport torch as th th.cuda.set_device(1) References # https://github.com/pytorch/pytorch/issues/260 https://discuss.pytorch.org/t/how-to-change-the-default-device-of-gpu-device-ids-0/1041/13 Their ids are 0, 1, 2, 3\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2 April 2018","externalUrl":null,"permalink":"/2018/04/02/pytorch-gpu-usage/","section":"Posts","summary":"\u003cp\u003eYou can use two ways to set the GPU you want to use by default.\u003c/p\u003e","title":"Set Default GPU in PyTorch","type":"posts"},{"content":"The original LaTeX do not have good support for Chinese. With the development of LaTeX, we can now easily use Chinese in LaTeX document. In this post, I would like to introduce several ways to work with Chinese in LaTeX.\nUse CTeX # Use ctexart documentclass # The CTeX group has developed multiple document classes and packages to deal with the particular need of Chinese typesetting.\nIf you have a long article mainly written in Chinese, you should choose ctexart document class. An MWE is shown below:\n\\documentclass[UTF8]{ctexart} \\begin{document} 你好，这是一个测试文档。 \\end{document} When using the ctexart documentclass, you should also add \\usepackage[T1]{fontenc}. Otherwise, some of the characters will be shown incorrectly.\nUse ctex package # Or you can use the ctex package instead:\n\\documentclass{article} \\usepackage[UTF8]{ctex} \\begin{document} 你好，这是一个测试文档。 \\end{document} You can compile it with latex, pdflatex, xelatex or lualatex. xelatex is recommed from the author of this class.\nUse xeCJK with xelatex # If you only need to type a few Chinese character, you can go with xeCJK package and compile the document with xelatex. A MWE is shown below:\nClick to check the code. % this file can be compiled with xelatex command \\documentclass[12pt, a4paper]{article} \\usepackage{fontspec} \\usepackage[slantfont, boldfont]{xeCJK} % set up English font \\setmainfont{Microsoft YaHei} \\setsansfont{Comic Sans MS} \\setmonofont{Courier New} % set up Chinese font, the font must be valid on your system \\setCJKmainfont{Microsoft YaHei} \\setCJKmonofont{Source Code Pro} \\setCJKsansfont{YouYuan} % correct line break for chinese \\XeTeXlinebreaklocale \u0026#34;zh\u0026#34; \\XeTeXlinebreakskip = 0pt plus 1pt \\title{测试} \\author{东} \\date{2016年6月6日} \\begin{document} \\maketitle \\begin{center} 满纸荒唐言\\\\ 一把辛酸泪\\\\ 都云作者痴\\\\ 谁解其中味\\\\ \\end{center} \\begin{verse} \\texttt{Stray birds of summer come to my window to sing and fly away}. \\\\ \\textsf{And yellow leaves of autumn, which have no songs}, \\\\ \\textrm{flutter and fall there with a sign}.\\\\ \\hfill \\emph{RabindranathTagore} \\end{verse} \\begin{verse} \\texttt{夏天的飞鸟}，\\textsf{飞到我的窗前唱歌}，\\textrm{又飞去了}。\\\\ 秋天的黄叶，它们没有什么可唱，只叹息一声，飞落在那里。\\\\ \\hfill \\emph{罗宾德拉纳特·泰戈尔} \\end{verse} \\end{document} For Chinese, the command \\setCJKmainfont{} are used to set up the font used by main text, which is also used by \\textrm{} command. \\setCJKmonofont{} is used to set up the font used by \\texttt{}. \\setCJKsansfont{} is used to set up the font used by \\textsf{}.\nSo how to find a valid Chinese font to use in these command? If you have installed TeX Live, it is easy to do. Just use the following command in your console:\nfc-list :lang=zh It will list all the fonts on your system which support Chinese. A sample output is as follows:\nYou can pick the font you like or experiment with different fonts to choose the one you want.\nThe above example is based on a number of posts, but I have removed several package since they are now redundant.\nReferences # Solution from the developer of CTeX. http://blog.sina.com.cn/s/blog_5e16f1770100lhbm.html https://bit.ly/2H3Udob Some characters are wrongly displayed: https://tex.stackexchange.com/q/2369/114857 http://texblog.net/latex-archive/uncategorized/symbols/ ","date":"29 March 2018","externalUrl":null,"permalink":"/2018/03/29/latex-chinese/","section":"Posts","summary":"\u003cp\u003eThe original LaTeX do not have good support for Chinese. With the development\nof LaTeX, we can now easily use Chinese in LaTeX document. In this post, I\nwould like to introduce several ways to work with Chinese in LaTeX.\u003c/p\u003e","title":"How to Use Chinese with LaTeX","type":"posts"},{"content":"LaTeX 最初对中文的支持并不友好，只支持 ASCII 字符，后来才逐渐变得好起来，加入了对 Unicode 字符的支持。本文总结一下几种在 LaTeX 中使用中文的方法，以期能够帮助读者快速使用 LaTeX 对中文内容进行排版。\n使用 CTeX # 国内的 CTeX 开发组为了满足用户在 LaTeX 中排版中文的种种需求，已经开发了多款 LaTeX 文档类以及 LaTeX 宏包。使用这些库，你能够很轻松地在 LaTeX 使用中文。另外值得注意的是，CTeX 也提供所谓的 CTeX 套装，其实是打包了 MikTeX 和其他的一些工具，现在已经基本上被淘汰了，非常老旧，不建议安装使用。建议读者直接安装 MikTeX 或者 TeX Live 即可 (Mac 用户可以安装 MacTeX)。\n使用 CTeX 排版中文，目前主要可以使用两种方式：\n使用 ctexart 文档类（英文：documentclass） 使用 ctex 宏包（英文：package） 使用 ctexart # 如果你的文章主要由中文构成，你可以考虑使用 CTeX 中的 ctexart 文档类，下面的例子展示了如何使用 ctexart 文档类来写中文文档：\n\\documentclass[UTF8]{ctexart} \\usepackage[T1]{fontenc} \\begin{document} 你好，这是一个测试文档。 \\end{document} 使用 ctexart documentclass 时候，最好加上 \\usepackage[T1]{fontenc}，否则某些符号显示不正确。\n使用 ctex 宏包 # 除了使用 ctexart 文档类，你可以可以选择使用 ctex 宏包，一个简单例子如下：\n\\documentclass{article} \\usepackage[UTF8]{ctex} \\begin{document} 你好，这是一个测试文档。 \\end{document} 使用以上代码的 LaTeX 源文件可以使用 latex，pdflatex，xelatex 或者 lualatex 命令来编译生成 PDF 文件。CTeX 开发者推荐使用 xelatex 命令编译源文件。\n使用 xeCJK # 如果你仅仅需要在文档中使用有限的一些中文字符，你可以使用 xeCJK 宏包，然后使用 xelatex 命令编译源文件。一个简单可运行的例子如下：\n点击查看代码 % 该文件使用 xelatex 命令可以编译通过 \\documentclass[12pt, a4paper]{article} \\usepackage{fontspec} \\usepackage[slantfont, boldfont]{xeCJK} % 设置英文字体 \\setmainfont{Microsoft YaHei} \\setsansfont{Comic Sans MS} \\setmonofont{Courier New} % 设置中文字体 \\setCJKmainfont{Microsoft YaHei} \\setCJKmonofont{Source Code Pro} \\setCJKsansfont{YouYuan} % 中文断行设置 \\XeTeXlinebreaklocale \u0026#34;zh\u0026#34; \\XeTeXlinebreakskip = 0pt plus 1pt \\title{测试} \\author{东} \\date{2016年6月6日} \\begin{document} \\maketitle \\begin{center} 满纸荒唐言\\\\ 一把辛酸泪\\\\ 都云作者痴\\\\ 谁解其中味\\\\ \\end{center} \\begin{verse} \\texttt{Stray birds of summer come to my window to sing and fly away}. \\\\ \\textsf{And yellow leaves of autumn, which have no songs}, \\\\ \\textrm{flutter and fall there with a sign}.\\\\ \\hfill \\emph{RabindranathTagore} \\end{verse} \\begin{verse} \\texttt{夏天的飞鸟}，\\textsf{飞到我的窗前唱歌}，\\textrm{又飞去了}。\\\\ 秋天的黄叶，它们没有什么可唱，只叹息一声，飞落在那里。\\\\ \\hfill \\emph{罗宾德拉纳特·泰戈尔} \\end{verse} \\end{document} 对于中文来说，\\setCJKmainfont{} 命令用来设置正文使用的中文字体，同时也是 \\textrm{} 命令使用的字体。\\setCJKmonofont{} 用来设置 \\texttt{} 命令中的中文使用的字体。\\setCJKsansfont{} 用来设置 \\textsf{} 命令中的中文使用的字体。\n那么问题来了，如何找到可用的中文字体呢？如果你已经安装了 TeX Live，那么很容易找到中文字体。在系统的命令行，使用下面的命令：\nfc-list :lang=zh 这个命令会列出系统中所有支持中文的字体，例如，在我的系统上部分输出如下：\n你可选择自己喜欢的字体，或者可以实验不同字体的输出效果来选择合适的字体。\n以上使用 xeCJK 的例子，综合参考了多个博文，但是我去掉了几个使用的宏包，例如xunicode 和 xltxtra，因为这些宏包已经过时了。\n参考资料 # CTeX 开发者给出的解答，很全面。 http://blog.sina.com.cn/s/blog_5e16f1770100lhbm.html https://bit.ly/2H3Udob 一些字符显示错误解决方案 https://tex.stackexchange.com/questions/2369/why-do-the-less-than-symbol-and-the-greater-than-symbol-appear-wrong-as http://texblog.net/latex-archive/uncategorized/symbols/ ","date":"29 March 2018","externalUrl":null,"permalink":"/2018/03/29/latex-chinese.zh/","section":"Posts","summary":"\u003cp\u003eLaTeX 最初对中文的支持并不友好，只支持 ASCII 字符，后来才逐渐变得好起来，加入了对 Unicode 字符的支持。本文总结一下几种在 LaTeX 中使用中文的方法，以期能够帮助读者快速使用 LaTeX 对中文内容进行排版。\u003c/p\u003e","title":"全面总结如何在 LaTeX 中使用中文 (2020 最新版)","type":"posts"},{"content":"In this post, I will show how to write and run simple C++ programs in Sublime Text 3.\nWriting source files # The following two part are optional. They are intended to increase your speed of writing C++ programs. If you do not need them, just skip and read how to build and run C++ source code.\nCode snippet # When you are writing code, you may want to create a snippet so that your keywords will be expanded to a template to reduce your typing. For example, we often need to write codes that output something and then output a new line character. Writing this boiler-plate code over and over again is boring. We can create snippet for it.\nIt is easy to create a code snippet in Sublime Text. Go to Tools -\u0026gt; Developer and click New Snippet... (see image below)\nIn the created tab, use the following settings:\n\u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ cout \u0026lt;\u0026lt; \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;cout\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;scope\u0026gt;source.c++\u0026lt;/scope\u0026gt; \u0026lt;decription\u0026gt;Insert a cout with newline\u0026lt;/decription\u0026gt; \u0026lt;/snippet\u0026gt; Save this snippet and give it a name, e.g., cout_oneline.sublime-snippet. All snippets in Sublime Text end with the extension sublime-snippet.\nWhen you have created this snippet, you can just type cout in the C++ source file and press Tab key to trigger the snippet (see the below image).\nAuto-completion # If you want to auto-complete your code, you can use EasyClangComplete. You can install this package via Package Control. Then you need to install clang for your system.\nThe package offers several ways to configure it. I will just demonstrate one way: configure it via setting file. Open the setting file of EasyClangComplete (see image below):\nExample settings are shown below:\n{ \u0026#34;common_flags\u0026#34; : [ // some example includes \u0026#34;-I/usr/include\u0026#34;, \u0026#34;-I$project_base_path/src\u0026#34;, //include search path of gcc \u0026#34;-I/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5\u0026#34;, \u0026#34;-I/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/x86_64-redhat-linux\u0026#34;, \u0026#34;-I/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/backward\u0026#34;, \u0026#34;-I/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include\u0026#34;, \u0026#34;-I/usr/local/include\u0026#34;, // this is needed to include the correct headers for clang \u0026#34;-I/usr/local/lib/clang/4.0.1/include\u0026#34;, ], \u0026#34;cpp_flags\u0026#34; : [ \u0026#34;-std=c++11\u0026#34;, \u0026#34;-Wall\u0026#34; ], \u0026#34;errors_style\u0026#34;: \u0026#34;phantoms\u0026#34;, \u0026#34;hide_default_completions\u0026#34;: true, \u0026#34;progress_style\u0026#34;: \u0026#34;ColorSublime\u0026#34;, \u0026#34;show_type_info\u0026#34;: false, } In the above settings, the include search paths of gcc can be found using the following command:\n`gcc -print-prog-name=cc1plus` -v The output is something like the following (use the paths in the green box):\nNow you should see that the auto-completion works.\nCompile and run C++ code # In order to compile C++ source files. You have to make sure that a C++ compiler is installed in your system. For Linux system, GCC is often installed by default. So further configuration is not needed. For Windows, there is a port of GCC named MinGW-w64. Download the on-line installer and install it. It will install all the component necessary to compile C++ source. After installation, you should add the directory of executables to the Windows PATH. On my Windows system, the executable directory is\nC:\\Program Files\\mingw-w64\\x86_64-7.3.0-posix-seh-rt_v5-rev0\\mingw64\\bin You may need to reboot your system to make the PATH change take effect.\nSublime Text has its own build system for C++. Unfortunately, it has at least one drawback: it can not run the executables in the system console (so if you want to run C++ program that need standard input from terminal, you will fail). We can write our own build system fairly easily.\nSimple build system to compile and run source code # After finishing writing the code, we now compile the code. We can build our own custom build system. Go to Tools –\u0026gt; Build System –\u0026gt; New Build System.... Use the following settings (I assume that you are using GCC to compile your code):\n{ \u0026#34;cmd\u0026#34; : [\u0026#34;g++ -std=c++11 -Wall ${file_name} -o ${file_base_name} \u0026amp;\u0026amp; ./${file_base_name}\u0026#34;], \u0026#34;selector\u0026#34; : \u0026#34;source.c\u0026#34;, \u0026#34;shell\u0026#34;: true, \u0026#34;working_dir\u0026#34; : \u0026#34;$file_path\u0026#34; } Save it and name it C++.sublime-build (build systems in Sublime Text all end with the extention sublime-build). Press Ctrl+Shift+B to select the build system.\nSelect the C++ build system we have just created and press Enter. Then the source file will be compiled and run. If everything goes well, you will see the output of this program in the bottom of Sublime Text window.\nHow to run the executable right in the system terminal or console # If you are executing a program which needs input from the standard input (often it is just the console), the program can not receive input due to the limit of Sublime Text. How to solve this issue? It is easy. We can add a variants to the build system we just created and run the executable file in the system GUI terminal. Different systems differ in their specific settings.\nHere is an example setting:\n{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34;\u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;source.c++, source.cpp, source.cc, source.cxx\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Run in Terminal\u0026#34;, \u0026#34;linux\u0026#34;: { \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; xterm -e \u0026#39;${file_path}/${file_base_name} \u0026amp;\u0026amp; echo \u0026amp;\u0026amp; echo Press ENTER to continue \u0026amp;\u0026amp; read line \u0026amp;\u0026amp; exit\u0026#39;\u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; gnome-terminal -e \u0026#39;bash -c \\\u0026#34;${file_path}/${file_base_name}\u0026amp;\u0026amp; echo \u0026amp;\u0026amp; echo Press ENTER to continue \u0026amp;\u0026amp; read line \u0026amp;\u0026amp; exit\\\u0026#34;\u0026#39;\u0026#34;, // for gnome-terminal // \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; xterm -e \u0026#39;${file_path}/${file_base_name}; bash\u0026#39;\u0026#34;, // for xterm // \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; xterm -hold -e ${file_path}/${file_base_name}\u0026#34;, // for xterm // \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; konsole --hold -e ${file_path}/./${file_base_name}\u0026#34;, // for konsole }, \u0026#34;windows\u0026#34;:{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; start cmd /k $file_base_name \u0026#34; // \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; }, \u0026#34;osx\u0026#34;:{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; xterm -e \u0026#39;${file_path}/${file_base_name} \u0026amp;\u0026amp; echo \u0026amp;\u0026amp; echo Press ENTER to continue \u0026amp;\u0026amp; read line \u0026amp;\u0026amp; exit\u0026#39;\u0026#34;, }, \u0026#34;shell\u0026#34;: true, }, ] } The above setting file provides settings for different systems. For Linux, options for GUI terminals such as genome-terminal, xterm and Konsole are provided. You can uncomment corresponding line to set up for your currently-used GUI terminal. The above settings will ensure that the GUI terminal window will not be closed immediately after running your program (so that you can examine the result of the program). For Windows, we use the default CMD. For OSX, we use the xterm.\nWhen you want to compile and run files which need input from the console, you can use the build variants Run in Terminal. To use it, press Ctrl+Shift+B to bring up the command plate, and choose option Run in Terminal (see image below).\nReferences # Sublime Text build system overview Sublime Text snippet documentation Windows, prevent the window from closing after program execution, solution 1 Same as above, another solution ","date":"28 March 2018","externalUrl":null,"permalink":"/2018/03/28/sublime-cpp-build-system/","section":"Posts","summary":"\u003cp\u003eIn this post, I will show how to write and run simple C++ programs in \u003ca href=\"https://www.sublimetext.com/\" target=\"_blank\"\u003eSublime\nText 3\u003c/a\u003e.\u003c/p\u003e","title":"A Complete Guide on Writing and Building C++ Programs in Sublime Text","type":"posts"},{"content":"","date":"24 March 2018","externalUrl":null,"permalink":"/tags/bibliography/","section":"Tags","summary":"","title":"Bibliography","type":"tags"},{"content":"毕业季到了，如果使用 Word 来写毕业论文，论文写作中的参考文献处理也是一个非常重要的问题，在 Word 管理参考的比较好的方式是通过 Endnote。Endnote 是一个非常方便的可视化管理参考文献的工具，本文介绍如何使用 Endnote 结合 Microsoft Word 给每个章节分别设置参考文献列表。\n本文假设你对 Endnote 的使用有基本的了解，如果不了解，可以看这里。要给每个章节设置参考文献，需要两个步骤：\n第一步，需要对你的输出 style1 进行修改。 第二步，在 Microsoft Word 中进行必要的设置。 修改 Endnote 的 style 设置 # 首先，我们需要对 Endnote 的 output style 进行修改，找到你目前正在使用的 style。以「IEEE Proceedings」style 为例来说明，我们需要编辑这个 style，参见下图\n在弹出的编辑界面，找到「Section」部分，选中「Create a bibliography for each section」。\n请特别注意：经过上面的设置，每个章节后的参考文献列表编号默认是重新从 1 开始编号。如果你想要每章后面的参考文献列表编号是连续的，那么请勾选「Create a bibliography for each section」下面的「Continue numbering\u0026hellip;」。\n设置完以后，需要保存这个 style，Endnote 会提示你重新命名，例如，我们把刚才的「IEEE Proceedings」style 命名为「IEEE Proceedings bibliography」。\nWord 的设置 # 完成 Endnote 设置以后，需要对 Word 进行设置。现在，进入你正在编辑的 Word 文档，把光标移动到要插入参考文献列表的章节的末尾，选择 布局 -\u0026gt; 分隔符 -\u0026gt; 分节符 -\u0026gt;下一页（如果你的参考文献可以和论文的章节正文在一页，你可以选择布局 -\u0026gt; 分隔符-\u0026gt; 分节符 -\u0026gt; 连续），如下图所示\n如果你要在多个章节后面分别插入参考文献列表，重复以上插入「分节符」的步骤，确保在要插入参考文献的章节后面都插入了「分节符」。\n然后，点击 Endnote 在 Word 中的选项卡，在 Style 设置里选中我们刚才编辑保存的style，也就是 「IEEE Proceedings bibliography」，如下图所示：\n点击「Update Citations and Bibliography」，更新参考文献列表，你会发现所有插入分节符的章节后分别出现了该章的参考文献列表。\n参考 # https://libguides.uthsc.edu/endnote/cwyw/separate-bibs Endnote 中的 style 用来控制参考文献的在文章中以及文后的输出格式，不同的期刊，会议以及标准对格式的要求不同。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"24 March 2018","externalUrl":null,"permalink":"/2018/03/24/separate-reference-with-endnote/","section":"Posts","summary":"\u003cp\u003e毕业季到了，如果使用 Word 来写毕业论文，论文写作中的参考文献处理也是一个非常重要的问题，在 Word 管理参考的比较好的方式是通过 \u003ca href=\"http://www.ioa.cas.cn/xwzx/zhxw/201410/P020141013364219434960.pdf\" target=\"_blank\"\u003eEndnote\u003c/a\u003e。Endnote 是一个非常方便的可视化管理参考文献的工具，本文介绍如何使用 Endnote 结合 Microsoft Word 给每个章节分别设置参考文献列表。\u003c/p\u003e","title":"使用 Endnote 为论文每个章节制作单独的参考文献列表","type":"posts"},{"content":"There are a lot of front-end editors for writing LaTeX source, for example, Texmaker, TeXstudio, WinEdt. I have used TeXstudio for a while, but its user interface is a little dull. So I decided to give Sublime Text a shot. In this post, I want to share the configurations necessary to write and compile LaTeX source code and to preview the produced PDF files.\nChoose a TeX distribution # $\\TeX$ is like a programming language, you need a compiler and other necessary components such as packages and classes to compile your source files. For Windows, TeX Live is an excellent choice. You can download it here. When installing TeX Live, you can choose the full scheme, which will install everything you need on your computer.\nThe full installation of TeX Live may take more than half of an hour depending on various factors. Stay patient. After installation, you should add TeX Live executables to your system PATH. On my system, the directory where these executables reside is D:\\texlive\\2017\\bin\\win32.\nRestarting your computer may be required for PATH change to take effect.\nInstall the LaTeXTools package # Now, you should install the LaTeXTools package, which provides a lot of functionalities for writing and compiling LaTeX files. If you have installed package control, you can install this package using package control.\nInstall Sumatra PDF reader # To preview the produced PDF files, I recommend using the well-known light-weight Sumatra PDF reader. After install, we should also set its path properly.\nCheck your system # After all these installations and settings, we can use the built-in function of LaTexTools to check our system. To check if there are any issues, follow the image below on how to do it:\nThe result of Check System is shown below:\nIf there are no issues found, you can now write and compile your LaTeX source files.\nWrite and compile LaTeX source files # Use the shortcut key Ctrl+B to compile the file. You may be prompted to choose a builder. Just choose the basic builder.\nOther packages to install # There are a few packages designed for use with LaTeXTools, for example, LaTex-cwl and LaTeXYZ. You should install them to enhance your experience of writing LaTeX in Sublime Text.\nConfigure inverse search for PDF files # Inverse search is a handy feature. First, compile any tex files and open it with Sumatra PDF reader. Then go to Settings -\u0026gt; Options. In the inverse search part, use the following setting:\n\u0026#34;D:\\Program Files\\Sublime Text 3\\sublime_text.exe\u0026#34; \u0026#34;%f:%l\u0026#34; In the above setting, change the directory of Sublime Text executable to its actual location on your system.\nMore questions? # The LaTeXTools package has an online documentation, which is well written. You can read it here.\nReferences # Set up inverse search on Sumatra. ","date":"10 March 2018","externalUrl":null,"permalink":"/2018/03/10/sublime-text-latextools-setup/","section":"Posts","summary":"\u003cp\u003eThere are a lot of \u003ca href=\"https://en.wikipedia.org/wiki/Comparison_of_TeX_editors\" target=\"_blank\"\u003efront-end\neditors\u003c/a\u003e for writing\nLaTeX source, for example, \u003ca href=\"http://www.xm1math.net/texmaker/\" target=\"_blank\"\u003eTexmaker\u003c/a\u003e,\n\u003ca href=\"https://github.com/texstudio-org/texstudio/releases\" target=\"_blank\"\u003eTeXstudio\u003c/a\u003e,\n\u003ca href=\"http://www.winedt.com/\" target=\"_blank\"\u003eWinEdt\u003c/a\u003e. I have used TeXstudio for a while, but its\nuser interface is a little dull. So I decided to give \u003ca href=\"https://www.sublimetext.com/\" target=\"_blank\"\u003eSublime\nText\u003c/a\u003e a shot. In this post, I want to share the\nconfigurations necessary to write and compile LaTeX source code and to preview\nthe produced PDF files.\u003c/p\u003e","title":"Set up Sublime Text as Your Ultimate LaTeX Editor","type":"posts"},{"content":"As I have posted earlier, Cmder is a better option if you use Windows command line frequently. The full installation of Cmder comes with Git for Windows, which is handy to provide a Linux-like environment. In this post, I will write about how to use Git for Windows to connect to a remote CentOS server and set up X11 forwarding to use the GUI applications on that server.\nEnable X11 forwarding on your CentOS server # First, you need to make sure that your server support X11 forwarding. Edit the file /etc/sshd_config and use the following settings:\nX11Forwarding yes X11DisplayOffset 10 X11UseLocalhost no If you are using CentOS 7, you should use\nsystemctl restart sshd.service to restart the sshd service. If you are on CentOS 6, you should use the following command instead:\nservice sshd restart Install X server program on Windows # In order to use X11 forwarding, you also need to install a X server on your Windows computer. You can choose to install xming or vcxsrv. Vcxsrv is better since it is updated frequently and is free, while latest version of xming requires a license. There is a good post that introduces vcxsrv.\nIn this post, we stick to vcxsrv. Install the application, and you will see two program: xlaunch and vcxsrv. Xlaunch is used to configure the X server and vcxsrv is used to start the server. Open xlaunch and use the default settings. Then start vcxsrv. The program will run in the background. Go to the task bar and point to program, you will see information like the following:\nJD-PC:0.0 - 0 clients\nConfigure ssh # After starting the X server, we need to configure the ssh.\nFirst, open git-bash, change directory to $HOME and create .bash_profile, write following options in the .bash_profile\nexport DISPLAY=localhost:0.0 Save the file and restart git-bash.\nSecond, connect to your remote server using the following command:\nssh -X -v \u0026lt;user\u0026gt;@\u0026lt;server_addresss\u0026gt; The option -v is used to diagnose the X connection problems.\nTrouble shotting # After logging into your server, you may notice a warning message during login:\nWarning: untrusted X11 forwarding setup failed: xauth key data not generated\nIf you try to start a GUI program, e.g., xclock, you may see an error message:\nError: Can\u0026rsquo;t open display:\nIf that is the case, close the session and try to use the following command to connect to your server instead:\nssh -Y -v \u0026lt;user\u0026gt;@\u0026lt;server_addresss\u0026gt; Rerun the xclock program with xclock \u0026amp;. It should works fine.\nWe can run multiple GUI applications, for example xclock \u0026amp;, xeyes \u0026amp;. If you point to vcxsrv icon in the task bar, you will see that now it has 2 clients:\nJD-PC:0.0 - 2 clients\nReferences # https://stackoverflow.com/questions/10129267/x-session-in-git-bash-on-windows https://serverfault.com/questions/273847/what-does-warning-untrusted-x11-forwarding-setup-failed-xauth-key-data-not-ge ","date":"2 March 2018","externalUrl":null,"permalink":"/2018/03/02/windows-connect-server-x11-with-gitbash/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://jdhao.github.io/2017/12/29/cmder-usage/\" target=\"_blank\"\u003eAs I have posted earlier\u003c/a\u003e,\nCmder is a better option if you use Windows command line frequently. The full\ninstallation of Cmder comes with \u003ca href=\"https://gitforwindows.org/\" target=\"_blank\"\u003e\u003cem\u003eGit for Windows\u003c/em\u003e\u003c/a\u003e, which is handy to provide a Linux-like\nenvironment. In this post, I will write about how to use Git for Windows to\nconnect to a remote CentOS server and set up X11 forwarding to use the GUI\napplications on that server.\u003c/p\u003e","title":"Set up X11 Forwarding with Git for Windows (git-bash)","type":"posts"},{"content":"Favicons are used widely in websites. Since you come to this post purposefully, I assume that you have a basic understanding of what favicon is. With Hexo, we can easily customize the favicon of our blog site. In this post, I will describe how to set up a custom favicon in theme NexT.\nConvert your favorite image into favicon # The first step is to convert your favorite image into favicon. You can use favicon generator，load your favorite image into this website, and click the button Create Favicon to generate favicons for your blog. Then download the generated favicons (see image below).\nCreate a favicon with only text # If you want to create a favicon with only text. You should use favicon.io. It is simple to use. You can tweak the font type, font size, text box shape, color etc. Then you can download the 1024x1024 PNG image from the website and use favicon generator to generate various favicons.\nSet up in theme NexT # After you have generated the favicons, extract the zipped files, you will see a lot of files.\nGo the blog root, under the source folder, create a folder named images. Copy the extracted files to this folder. Then edit the theme NexT configuration file (i.e., theme/next-new/_config.yml). Find the part about favicon and use the following settings,\nfavicon: small: images/favicon-16x16.png medium: images/favicon-32x32.png apple_touch_icon: images/apple-icon-180x180.png safari_pinned_tab: android_manifest: images/manifest.json ms_browserconfig: images/browserconfig.xml Then deploy your blog to GitHub. You will see that your blog now has a custom favicon (see image below, favicon in the circle)~\n","date":"8 February 2018","externalUrl":null,"permalink":"/2018/02/08/favicon-theme-next-setup/","section":"Posts","summary":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Favicon\" target=\"_blank\"\u003eFavicons\u003c/a\u003e are used widely in websites.\nSince you come to this post purposefully, I assume that you have a basic\nunderstanding of what favicon is. With \u003ca href=\"https://github.com/hexojs/hexo\" target=\"_blank\"\u003eHexo\u003c/a\u003e,\nwe can easily customize the favicon of our blog site. In this post, I will\ndescribe how to set up a custom favicon in \u003ca href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\"\u003etheme\nNexT\u003c/a\u003e.\u003c/p\u003e","title":"Customize Favicon for Hexo Blog in Theme NexT","type":"posts"},{"content":"","date":"8 February 2018","externalUrl":null,"permalink":"/tags/next/","section":"Tags","summary":"","title":"NexT","type":"tags"},{"content":"PowerPoint 是一个方便的绘图工具，可以完成一些简单的绘图工作，并且支持将 slide 导出为图片或者 PDF 格式，方便插入到其他文档中，但是默认导出的图片或者 PDF 文件 通常会有大量冗余的白边。如何设置，才能使得导出的文件中的白边尽可能少呢？本文将 给出一种办法。\n导出图片 # PowerPoint 支持导出单张 slide 为图片，要想使得导出的图片白边尽可能少，首先选中 slide 中的图，把图在水平以及垂直方向都居中放置，然后点击「设计」选项卡，设置「 幻灯片大小」，如下图所示。\n点击「幻灯片大小」，选择「自定义幻灯片大小」，\n在弹出的窗口中，逐渐缩小幻灯片的高和宽，\n点击「确定」，会弹出新的窗口，选择「最大化」，\n然后你会发现 slide 的白边变少了，边缘更加紧凑了。然后逐渐更改宽和高，得到自己想 要的结果。最后把当前幻灯片另存为 JPEG 或者 PNG 格式的图片就可以了。\n导出 PDF # PDF 文件的优点是不会因为放大而变形，因此如果想要保存高质量的图片，PDF 格式是首 选，PowerPoint 支持把幻灯片保存为 PDF 格式，但是会把所有幻灯片全部保存为一个 PDF，并不支持把单张 slide 导出 PDF，因此如果想要导出单张幻灯片到 PDF，新建一个 PowerPoint 文件，把想要导出为 PDF 的 slide 拷贝过去，相当于建立一个只有一张幻灯 片的 PowerPoint 文件。设置 margin 的方式与导出图片时是一样的，也是通过自定义幻 灯片大小来实现的。然后再导出为 PDF 文件即可。\n参考 # https://answers.microsoft.com/en-us/msoffice/forum/msoffice_powerpoint-mso_mac-mso_mac2016/powerpoint-2016-to-pdf-page-margin-issue/d7f69d16-adb4-4b9a-89a0-3f32359e03f9 https://answers.microsoft.com/en-us/mac/forum/macoffice2011-macpowerpoint/save-a-single-slide-as-a-pdf/9b438c1b-89cc-4a68-b65c-14d8d7ad8461 ","date":"6 February 2018","externalUrl":null,"permalink":"/2018/02/06/export-borderless-img-pdf-from-powerpoint/","section":"Posts","summary":"\u003cp\u003ePowerPoint 是一个方便的绘图工具，可以完成一些简单的绘图工作，并且支持将 slide\n导出为图片或者 PDF 格式，方便插入到其他文档中，但是默认导出的图片或者 PDF 文件\n通常会有大量冗余的白边。如何设置，才能使得导出的文件中的白边尽可能少呢？本文将\n给出一种办法。\u003c/p\u003e","title":"如何从 PowerPoint 幻灯片导出没有多余白边的图像或者 PDF 文件","type":"posts"},{"content":"好几个月前就知道有人用 GitHub 的 issue 功能为 Hexo 制作了一个评论系统 gitment，决定尝试一下 gitment 。\n简单配置 # 我使用的是 NexT 主题，最新版已经引入了 gitment 的支持，因此配置相对比较简单。首 先点击这里注册 GitHub OAuth，示 例配置如下：\n在接下来的页面，也会看到自己的 Client ID 以及 Client Secret，如下图所示，\n接下来打开 NexT 主题的配置文件，位于 hexo\\blog 目录下的 theme\\next\\_config.yml。 扎到 gitment 部分，示例配置如下：\ngitment: enable: enable mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: false # Hide \u0026#39;Powered by ...\u0026#39; on footer, and more language: en github_user: jdhao github_repo: jdhao.github.io #the name of the repo used to host your blog client_id: xxxxxxx client_secret: xxxxxx proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled 设置完成以后重新 generate blog 即可。\n使用 # 初次使用，对于一篇博客，想要评论，必须登录自己的 GitHub 帐号，同时如果是第一次 评论，需要点击 Initialize Comments:\n然后就可以进行评论了。\n值得警惕的事情 # 如果你使用 GitHub 帐号评论别人的博客，博客的主人将有权力读写你的账户下 repo 的 数据，所以可能会造成一些安全问题 ，如果介意的话，最好 不要使用 gitment。\n参考 # https://github.com/imsun/gitment/issues/18 ","date":"1 February 2018","externalUrl":null,"permalink":"/2018/02/01/hexo-comment-gitment-config/","section":"Posts","summary":"\u003cp\u003e好几个月前就知道有人用 GitHub 的 issue 功能为 Hexo 制作了一个评论系统\n\u003ca href=\"https://imsun.net/posts/gitment-introduction/\" target=\"_blank\"\u003egitment\u003c/a\u003e，决定尝试一下 gitment\n。\u003c/p\u003e","title":"把 Hexo 的评论系统切换为 gitment","type":"posts"},{"content":"It is almost destined that at some point of our programming years, we will meet the issue of character set, encoding and all the related stuff. There are tons of articles which explains the meaning of Unicode, UTF-8, UTF-16 etc. I am not going to repeat that here. In this post, I will write about what confused me when I tried to understand all this stuff.\nCharacter, character set, code point and encoding # We use characters every day. They are huge number of them, e.g., English characters (A, B, C), punctuations (,, ., !), Chinese characters (你, 好), Japanese characters (の, た).\nIn order to represent all these characters or part of them, we give each character a unique number (you can think of this number as an ID). In other words, when we refer to a number, the corresponding character will be uniquely determined. We call this number code point.\nSimply said, a character set is table which list the correspondence between code points and characters. One of the most simple character set is ASCII, in which characters are represented as code points in the range $[0, 127]$. For example, the code point of letter A is 65 (0x41 in hex format) and the code point of ! is 33 (0x21 in hex format). There are a lot of other character sets available, e.g., Unicode, GB18030, GBK, etc.\nNow, let\u0026rsquo;s talk about encoding. Since we have character set, where each character gets its own code point. But how to represent these code points so that characters can be actually saved in the hard disk (encode issue), and how to read from the hard disk and know which character we are reading (decode issue)? That is what encodings deal with. With proper encoding of character set, we can save characters in disk and read characters from disk without any error. Since encoding is just a way to represent code points in memory, it is natural that various encodings exist for the same character set. Character set and encoding are different concept. Do not confuse them. Take Unicode for an example, Unicode is a character set, and several encodings such as UTF-8, UTF-16 and UTF-32 designed for it exist.\nIt should be noted that for simple character set such as ASCII and Latin 1, the code point of a character and its binary representation in memory are the same. That is because all the code point can be expressed in just one byte. That is why sometimes character set and encoding are use interchangeably. But for Unicode, the code point of a character does not necessarily equal to its binary representation due to encoding issues of several bytes.\nReferences # https://www.w3.org/International/questions/qa-what-is-encoding http://ergoemacs.org/emacs/unicode_basics.html SBCS, DBCS and MBCS # SBCS denotes single-byte character set, where all characters are represented using a single byte. Thus, the maximum characters which can be represented are 256. DBCS denotes double-byte character set, where all characters are represented using two bytes. It is easy to see that both SBCS and DBCS can represent only a limited number of characters. In contrast, a multi-byte character set (MBCS) can represent a character using single byte, two bytes, three bytes or even more bytes. This gives it much more flexibility to represent more characters. Table below lists some representative character sets,\ncharacter set representatives SBCS ASCII, Latin 1 DBCS GB2312 MBCS Unicode Unicode # Unicode is a combined efforts from different organizations to try to standardize the representation of all existing characters in the world. It is the most comprehensive character set in the world, and it is updated regularly. Each character in Unicode is represented using a code point. The Unicode representation for code point starts with U+. For example, the code point for my name is U+90DD, U+6770 and U+4E1C. It is one of the most widely used character set in today\u0026rsquo;s world.\nReferences # Joel Spolsky\u0026rsquo;s Unicode article. Relationship between Unicode and UTF-8, UTF-16, UTF-32 etc. # Unicode is just a comprehensive character set, which assign a code point to each character. In contrast, UTF-8, UTF-16 and UTF-32 are encodings which implement the Unicode. For example, UTF-8 decrees how the different characters in Unicode character set are actually represented in memory. In UTF-8 encoding, code point does not necessarily equal to the actual memory representation of a character. Take the character 东 for an example, its code point is U+4E1C, and the byte representation in memory is E4B89C.\nReferences # Difference between Unicode and UTF-8. http://www.polylab.dk/utf8-vs-unicode.html Difference between Unicode, UTF8, ANSI etc. Difference between Unicode and ASCII. GB2312, GBK, GB18030, Big5 # Like Unicode, both the above names denote different character sets related to Chinese (simplified or traditional).\nGB2312 is an early character set for simplified Chinese, which contains 6763 Chinese characters (simplified) and 682 other signs. From WikiPedia,\nGB2312 includes 6,763 Chinese characters (on two levels: the first is arranged by reading, the second by radical then number of strokes), along with symbols and punctuation, Japanese kana, the Greek and Cyrillic alphabets, Zhuyin, and a double-byte set of Pinyin letters with tone marks\nBig5 is the character set for traditional Chinese characters used in Taiwan, HongKong etc. It is developed by 5 biggest IT companies in Taiwan in the 1980s.\nGBK is an extended character set of the early GB2312 (k denotes Kuozhan in Chinese, which means extend). From WikipPedia,\nGBK not only extended the old standard GB2312 with Traditional Chinese characters, but also with Chinese characters that were simplified after the establishment of GB2312 in 1981. With the arrival of GBK, certain names with characters formerly unrepresentable, like the \u0026ldquo;róng\u0026rdquo;(镕) character in former Chinese Premier Zhu Rongji\u0026rsquo;s name, are now representable.\nGB18030 is a further improvement over GB2312 and GBK and is backward compatible with GB2312 and GBK. It encodes all the code points in the Unicode 3.0 standard. So we can convert between Unicode and GB18030.\nReferences # https://www.pinyinjoe.com/pinyin/encoding.htm Microsoft Windows Code page # In the old days before Unicode becomes popular. Microsoft use code pages to deal with different characters used by different regions in the world. The name code page has somewhat combined meanings. Sometimes, it refers to character sets, and other times, it means character encoding.\nFor computers sold in mainland China, the default code page for command line is code page 936 (or cp936 in short form). In the Windows command line, you can check the current code page by using chcp without any argument. If the error message from some executable are in Unicode format and you are using cp936, the error message will be shown as gibberish. The way to fix is to change your code page to UTF-8. The Windows code page for UTF-8 is 65001. You can use chcp 65001 or chcp utf-8 to change your code page to UTF-8.\nReferences # https://msdn.microsoft.com/en-us/library/windows/desktop/dd317756(v=vs.85).aspx Is codepage 65001 and UTF-8 the same? Character set and typeface (or font) # Now that we have character set and encoding. How to display these characters in certain form (fontsize, bold or italic)? This is what the typeface or font (the two terms are often used interchangeably) do:\nA font is a set of printable or displayable text characters in a specific style and size. The type design for a set of fonts is the typeface and variations of this design form the typeface family .\nYou may have already noticed that for a particular character, there are several font which can display it. See the image below for the display of the character 东 in different fonts.\nA font has many glyphs for different characters. But no font contains all the characters in the Unicode standard. According to discussion here, a maximum of 65536 glyphs are allowed for OpenType font. If you want to display a Unicode character in a certain font, you have to make sure the font has the glyph for that character. If the chosen font does not have a glyph for the character, the character may be displayed as a square box. See reference below on how to check if a character is included in a certain font.\nReferences # How to know if a Unicode character is missing from a font. Similar character may have different code point # The other day, I encounter a strange problem. Two characters looking similar are actually different. The two characters are shown below (enlarged in order to show their subtle difference):\nLocale and difference between various UTF-8 locales # In Linux system, we often see the term locale. What does that mean? According to oracle documentation:\nA locale consists of a number of categories for which country-dependent formatting or other specifications exist. A program\u0026rsquo;s locale defines its code sets, date and time formatting conventions, monetary conventions, decimal formatting conventions, and collation (sort) order.\nA locale name can be composed of a base language, country (territory) of use, and codeset. For example, German language is de, an abbreviation for Deutsch, while Swiss German is de_CH, CH being an abbreviation for Confederation Helvetica. This convention allows for specific differences by country, such as currency unit notation. In Oracle Solaris 11 the default locale codeset is UTF-8, an ASCII compatible 8-bit encoding form of Unicode. The fully defined locale name for Swiss German would thus be de_CH.UTF-8.\nMore than one locale can be associated with a particular language, which allows for regional differences. For example, an English-speaking user in the United States can select the en_US.UTF-8 locale (English for the United States), while an English-speaking user in Great Britain can select en_GB.UTF-8 (English for Great Britain).\nThus, different locales can share the same encoding UTF-8, which is why you see locales such as en_US.UTF-8 and zh_CN.UTF-8. In these locales, the characters use the same encoding UTF-8. Their differences reside in region-specific format, e.g., date format and monetary sign ($ or ￥).\nReferences # Difference between zh_CN.UTF-8 and en_US.UTF-8. Difference between UTF-8 and en_AU.UTF-8. What should I set my locale to. Search a Unicode character in Sublime Text using its code point # We usually search a character using the character itself. But certain characters, such as the zero-width space character are hard to type. In that situation, it is easier to search such characters using their code points. In Sublime Text, you can use \\x{CODE_POINT} to search a character with code point CODE_POINT. For example, for zero-width space, you can use \\x{200b} to search it.\nReferences # Character sets, locales, fonts and code page relationship. ","date":"28 January 2018","externalUrl":null,"permalink":"/2018/01/28/unicodede-utf8-gbk/","section":"Posts","summary":"\u003cp\u003eIt is almost destined that at some point of our programming years, we will meet\nthe issue of character set, encoding and all the related stuff. There are tons\nof articles which explains the meaning of \u003ccode\u003eUnicode\u003c/code\u003e,  \u003ccode\u003eUTF-8\u003c/code\u003e, \u003ccode\u003eUTF-16\u003c/code\u003e etc. I\nam not going to repeat that here. In this post, I will write about what\nconfused me when I tried to understand all this stuff.\u003c/p\u003e","title":"Character set, Encoding, Locale, Font and More...","type":"posts"},{"content":"Recently I plan to transplant one of my old post from other site to this new site (you can find the new post here). The old post contains quite a lot of equations in LaTeX format. With so much equations in one post, I find it really hard to refer to some equations without using proper numbering. So I decide to figure out how to use LaTeX equation numbering properly in my post.\nEnable MathJax and equation numbering Update 2018-05-16: This feature has been incorporated into NexT and released in version 6.3.0. You can skip this section safely now.\nIf you use NexT theme, see here on how to enable MathJax. By default, equation numbering is disable by Mathjax, you can enable equation numbering in two ways.\nFirst way According to MathJax official documentation, just paste the following script into the front of your Markdown file,\n\u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \u0026quot;AMS\u0026quot; } } }); \u0026lt;/script\u0026gt; Second way Find the file mathjax.swig under theme NexT root (it is in the folder layout\\_third-party). Change the following snippet\n\u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [ [\u0026#39;$\u0026#39;,\u0026#39;$\u0026#39;], [\u0026quot;\\\\(\u0026quot;,\u0026quot;\\\\)\u0026quot;] ], processEscapes: true, skipTags: [\u0026#39;script\u0026#39;, \u0026#39;noscript\u0026#39;, \u0026#39;style\u0026#39;, \u0026#39;textarea\u0026#39;, \u0026#39;pre\u0026#39;, \u0026#39;code\u0026#39;] } }); \u0026lt;/script\u0026gt; to\n\u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [ [\u0026#39;$\u0026#39;,\u0026#39;$\u0026#39;], [\u0026quot;\\\\(\u0026quot;,\u0026quot;\\\\)\u0026quot;] ], processEscapes: true, skipTags: [\u0026#39;script\u0026#39;, \u0026#39;noscript\u0026#39;, \u0026#39;style\u0026#39;, \u0026#39;textarea\u0026#39;, \u0026#39;pre\u0026#39;, \u0026#39;code\u0026#39;] }, TeX: {equationNumbers: { autoNumber: \u0026quot;AMS\u0026quot; }} }); \u0026lt;/script\u0026gt; Thanks to post here.\nMake the automatic equation numbering work In general, to make the automatic equation numbering work, you have to wrap your LaTeX equations in equation environment. Using the plain old style (i.e., wrap an equation with two dollar signs in each side) will not work. How to refer to an equation? Just give a \\label{} tag and then in your later text, use \\ref{} or \\eqref{} to refer it. Using \\eqref{} is preferred since if you use \\ref{}, there are no parentheses around the equation number. There are some variations I would like to elaborate.\nSimple equation For simple equations like the following,\n\\[\\begin{equation} E=mc^2 \\end{equation}\\label{eq1}\\]\nIt is easy to write and cite. Just use $\\eqref{eq1}$ to refer to equation \\(\\eqref{eq1}\\). The code to produce the equation \\(\\eqref{eq1}\\) is\n$$\\begin{equation} E=mc^2 \\end{equation}\\label{eq1}$$ Multi-line equation For multi-line equations, inside the equation environment, you can use the aligned environment to split it into multiple lines. For example,\n\\[\\begin{equation} \\begin{aligned} a \u0026amp;= b + c \\\\ \u0026amp;= d + e + f + g \\\\ \u0026amp;= h + i \\end{aligned} \\end{equation}\\label{eq2}\\]\nEquation \\(\\eqref{eq2}\\) is a multi-line equation. The code to produce equation \\(\\eqref{eq2}\\) is\n$$\\begin{equation} \\begin{aligned} a \u0026amp;= b + c \\\\ \u0026amp;= d + e + f + g \\\\ \u0026amp;= h + i \\end{aligned} \\end{equation}\\label{eq2}$$ Multiple aligned equations We can use align environment to align multiple equations. Each of these equations will get its own numbers.\n\\[\\begin{align} a \u0026amp;= b + c \\label{eq3} \\\\ x \u0026amp;= yz \\label{eq4}\\\\ l \u0026amp;= m - n \\label{eq5} \\end{align}\\]\nThere are three aligned equations above: equation \\(\\eqref{eq3}\\), equation \\(\\eqref{eq4}\\) and equation \\(\\eqref{eq5}\\).\nUse the following code to reproduce,\n$$\\begin{align} a \u0026amp;= b + c \\label{eq3} \\\\ x \u0026amp;= yz \\label{eq4}\\\\ l \u0026amp;= m - n \\label{eq5} \\end{align}$$ Since align in and of itself is a complete equation environment1. You do not need to wrap it with equation environment.\nWhat if you do not want to number some equations In the align environment, if you do not want to number one or some equations, just use \\nonumber right behind these equations. Like the following.\n\\[\\begin{align} -4 + 5x \u0026amp;= 2+y \\nonumber \\\\ w+2 \u0026amp;= -1+w \\\\ ab \u0026amp;= cb \\end{align}\\]\nThe code to reproduce is\n$$\\begin{align} -4 + 5x \u0026amp;= 2+y \\nonumber \\\\ w+2 \u0026amp;= -1+w \\\\ ab \u0026amp;= cb \\end{align}$$ Use \\tag to tag equations Sometimes, you want to use more “exotic” style to refer your equation. You can use \\tag{} to achieve this. For example\n\\[x+1\\over\\sqrt{1-x^2} \\tag{i}\\label{eq_tag}\\]\nEquation \\(\\eqref{eq_tag}\\) use \\tag{} instead of automatic numbering. The code to produce it is\n$$x+1\\over\\sqrt{1-x^2} \\tag{i}\\label{eq_tag}$$ References http://docs.mathjax.org/en/latest/tex.html https://github.com/mathjax/MathJax/blob/master/test/sample-eqrefs.html https://minenet.me/2016/04/05/how-to-use-mathjax.html#mjx-eqn-1 http://kchen.cc/2016/12/06/latex-in-markdown/ Check here about the difference between aligned and align in LaTeX↩︎\n","date":"25 January 2018","externalUrl":null,"permalink":"/2018/01/25/hexo-mathjax-equation-number/","section":"Posts","summary":"\u003cp\u003eRecently I plan to transplant one of my old post from other site to\nthis new site (you can find the new post \u003ca\nhref=\"https://jdhao.github.io/2016/01/19/back-propagation-in-mlp-explained/\"\u003ehere\u003c/a\u003e).\nThe old post contains quite a lot of equations in LaTeX format. With so\nmuch equations in one post, I find it really hard to refer to some\nequations without using proper numbering. So I decide to figure out how\nto use LaTeX equation numbering properly in my post.\u003c/p\u003e","title":"LaTeX Equation Numbering Done Right in Hexo","type":"posts"},{"content":"When we want to put legend somewhere in a figure using Matplotlib, most of the time, the option loc='best' will produce the desired results. However, sometimes, we may want to have finer control over where the legend should be in the image. For example, we may want to put the legend outside of the axes, which is impossible using loc='best'.\nPut legend in your desired position # According to the documentation of Axes.legend() method, we can use the parameters loc and bbox_to_anchor to control the position of the legend. Unfortunately, the documentation for the two parameters are not very clear.\nIn plain words, bbox_to_anchor accepts a list of four values: (x0, y0, width, height). It will create a bounding box on the axes, inside which the actual legend will be placed. The lower left coordinate of the bounding box is (x0, y0). Its width and height are given by width and height, respectively. Often, you will see that a list of only two values are given to bbox_to_anchor, which means that the width and height of the bounding box is zero.\nThe parameter loc denotes the alignment relationship between the actual legend box and the bounding box. It means that different position indicated by loc in both the legend box and bounding box will be put at the same point. For example, if loc='center', the center of legend box and the bounding box will be at the same point. If loc='center right', the center of the right edge of the legend box and the bounding box will be aligned (i.e., at the same point).\nSo much for the text. Let\u0026rsquo;s take some examples to better illustrate the idea.\nWhen there are four values for bbox_to_anchor # import matplotlib.pyplot as plt import numpy as np import matplotlib.patches as patches locs = [\u0026#39;upper right\u0026#39;, \u0026#39;lower left\u0026#39;, \u0026#39;center left\u0026#39;, \u0026#39;lower center\u0026#39;, \u0026#39;center\u0026#39;, \u0026#39;right\u0026#39;] x0, y0, width, height = 0.5, 0.5, 0.1, 0.4 x = np.arange(0.1, 4, 0.1) y = 1.0/x fig = plt.figure(figsize=(10, 10)) idx = 1 for i in range(0, 2): for j in range(0, 3): ax = fig.add_subplot(3, 2, idx) ax.plot(x, y, label=r\u0026#39;$\\frac{1}{x}$\u0026#39;) ax.legend(loc=locs[idx-1], bbox_to_anchor=(x0, y0, width, height), edgecolor=\u0026#39;g\u0026#39;, fontsize=\u0026#39;large\u0026#39;, framealpha=0.5, borderaxespad=0) ax.add_patch( patches.Rectangle((x0, y0), width, height, color=\u0026#39;r\u0026#39;, fill=False, transform=ax.transAxes) ) ax.text(0.6, 0.2, s=\u0026#34;loc = \u0026#39;{}\u0026#39;\u0026#34;.format(locs[idx-1]), transform=ax.transAxes) idx += 1 plt.show() The above code will produce the image below\nIn the above image, the red box is the bounding box, and the green box is the legend box. loc in each subplot indicates the alignment between the two boxes.\nWhen there are only two values for bbox_to_anchor # When there are only two values given to bbox_to_anchor, the bounding box width and height are set to zero. So the bounding box will become a tiny little point. Let\u0026rsquo;s modify the above code slightly,\nimport matplotlib.pyplot as plt import numpy as np import matplotlib.patches as patches locs = [\u0026#39;upper right\u0026#39;, \u0026#39;lower left\u0026#39;, \u0026#39;center left\u0026#39;, \u0026#39;lower center\u0026#39;, \u0026#39;center\u0026#39;, \u0026#39;right\u0026#39;] x0, y0, width, height = 0.5, 0.5, 0, 0 x = np.arange(0.1, 4, 0.1) y = 1.0/x fig = plt.figure(figsize=(10, 10)) idx = 1 for i in range(0, 2): for j in range(0, 3): ax = fig.add_subplot(3, 2, idx) ax.plot(x, y, label=r\u0026#39;$\\frac{1}{x}$\u0026#39;) ax.legend(loc=locs[idx-1], bbox_to_anchor=(x0, y0, width, height), edgecolor=\u0026#39;g\u0026#39;, fontsize=\u0026#39;large\u0026#39;, framealpha=0.5, borderaxespad=0) ax.add_patch( patches.Rectangle((x0, y0), width, height, color=\u0026#39;r\u0026#39;, fill=False, transform=ax.transAxes) ) ax.text(0.6, 0.2, s=\u0026#34;loc = \u0026#39;{}\u0026#39;\u0026#34;.format(locs[idx-1]), transform=ax.transAxes) ax.plot(x0, y0, \u0026#39;r.\u0026#39;, markersize=8, transform=ax.transAxes) idx += 1 plt.show() Now, the produced image becomes\nPut legend outside of the axes box # Now that we know how to position the legend, it is trivial to put it outside of the axes. See the example code below on how to do it,\nimport matplotlib.pyplot as plt import numpy as np x = np.arange(-5, 5, 0.1) y1 = np.sin(x) y2 = np.cos(x) fig, ax = plt.subplots() ax.plot(x, y1, label=\u0026#39;sin(x)\u0026#39;) ax.plot(x, y2, label=\u0026#39;cos(x)\u0026#39;) ax.legend(loc=\u0026#39;lower left\u0026#39;, bbox_to_anchor= (0.0, 1.01), ncol=2, borderaxespad=0, frameon=False) plt.show() The produced image is\nCaveat # There is also a fig.legend() method which does similar things as the ax.legend() method, i.e., it can also put the legend outside of the axes. But, if you try to save the figure with its legend produced by fig.legend() using the option bbox_inches='tight', the legend may not be present in the generate image file. This is a bug of Matplotlib. Right now, just stick to the axes.legend() method.\nReferences # https://stackoverflow.com/questions/39803385/what-does-a-4-element-tuple-argument-for-bbox-to-anchor-mean-in-matplotlib/48405821#48405821 https://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot?noredirect=1\u0026lq=1 https://stackoverflow.com/questions/48128546/why-is-the-legend-not-present-in-the-generated-image-if-i-use-tight-for-bbox-i ","date":"23 January 2018","externalUrl":null,"permalink":"/2018/01/23/matplotlib-legend-outside-of-axes/","section":"Posts","summary":"\u003cp\u003eWhen we want to put legend somewhere in a figure using Matplotlib, most of the\ntime, the option \u003ccode\u003eloc='best'\u003c/code\u003e will produce the desired results. However,\nsometimes, we may want to have finer control over where the legend should be in\nthe image. For example, we may want to put the legend outside of the axes,\nwhich is impossible using \u003ccode\u003eloc='best'\u003c/code\u003e.\u003c/p\u003e","title":"How To Put Legend outside of Axes Properly in Matplotlib?","type":"posts"},{"content":"This post continues my previous post on various tips and tricks collected during the process of using Matplotlib.\nWorking with math font # Default math font is ugly? # If you try to play with the built-in LaTeX-style math support in the recent version of Matplotlib, e.g., version 2.0. You may have noticed that the default math font is ugly compared to the nicer look of math symbols produced by LaTeX. See the figure above for an example.\nIt is because the default math font has changed since Matplotlib version 2.0. If you want to use the LaTeX-style font. You need to change the default math font to computer modern. There are two ways to achieve to this.\nChange the math font temporarily # You can change math font in your plotting script so that it only takes effect in your script. To do this, add the following statement to your script,\nimport matplotlib as mpl mpl.rcParams[\u0026#39;mathtext.fontset\u0026#39;] = \u0026#39;cm\u0026#39; Change the math font globally # You can also change the math font options in your matplotlibrc files. This will affect all your scripts afterwards. This file is usually located in $HOME under the directory ~/.config/matplotlib. But its location may vary. Use the following command to find where rc file is on your system,\nimport matplotlib as mpl print(mpl.matplotlib_fname()) Then find the line\n#mathtext.fontset : dejavusans Uncomment it and change it to\nmathtext.fontset : cm Now, the math font will look much better. All your script will use the new settings.\nMix math text with regular text # If we want to use line break in math expression, it will be useless since everything inside raw text is interpretted verbatim. In order to combine math expression with regular text, we can concatenate them together.\nimport matplotlib.pyplot as plt fig, ax = plt.subplots() ax.text(0.5, 0.5, r\u0026#34;$\\mu=1$\u0026#34; + \u0026#34;\\n\u0026#34; + r\u0026#34;$\\sigma=2$\u0026#34;, transform=ax.transAxes) plt.show() The produced image is\nType 3 font used by Matplotlib PDF backend # If you use the default Matplotlib setting to produce a PDF file and then include it in your paper, chances are that you will encounter errors when you test the PDF for compliance with the IEEE conference standard. The error shows that Type 3 font has been used in your paper. That is because Matplotlib use Type 3 font to produce PDF file by default.\nThe disadvantage of Type 3 font is that it can not be edited by a PDF editor such as Adobe Acrobat Pro. The \u0026ldquo;advantage\u0026rdquo; is that the produced PDF is small in size.\nYou can change this behavior in your script to use Type 42 font instead. This setting will work locally:\nimport matplotlib as mpl mpl.rcParams[\u0026#39;pdf.fonttype\u0026#39;] = 42 If you want to change this settings globally1, you can edit your matplotlibrc file like the example of changing math font.\nFind the line,\n#pdf.fonttype : 3 # Output Type 3 (Type3) or Type 42 (TrueType) Uncomment it and change it to\npdf.fonttype : 42 # Output Type 3 (Type3) or Type 42 (TrueType) Reducing the PDF size when Type-42 fonts are used # I have come to find that if you use Chinese font in your image and use the Type 42 font, the produced PDF size will be much larger. If you do not want to edit the produce pdf file, I think using Type 3 font may be fine.\nSome publisher explicitly require that Type 3 font is not included. Then we need to reduce the size of PDF in which Type 42 fonts are used. According to solutions here, we can convert the PDF file to Ghostscript file and convert back to PDF.\npdf2ps file.pdf file.ps ps2pdf -dPDFSETTINGS=/prepress file.ps file-optimized.pdf The option -dPDFSETTINGS defines the quality of the produced PDF. Possible options and explanations are listed below:\noption description -dPDFSETTINGS=/screen (screen-view-only quality, 72 dpi images) -dPDFSETTINGS=/ebook (low quality, 150 dpi images) -dPDFSETTINGS=/printer (high quality, 300 dpi images) -dPDFSETTINGS=/prepress (high quality, color preserving, 300 dpi imgs) -dPDFSETTINGS=/default (almost identical to /screen) The conversion process will reduce the PDF size considerably. In my case, the PDF size went from 5.3M to just 29k. The quality of the optimized PDF is acceptable. So this is an viable solution.\nP.S.: The pdffonts shipped by most Linux system can be used to detect which fonts are embedded in your PDF files. Here is another example to use pdffonts command.\nReferences # https://stackoverflow.com/questions/2660319/putting-newline-in-matplotlib-label-with-tex-in-python https://stackoverflow.com/questions/10284847/python-matplotlib-annotate-line-break-with-and-without-latex It means that you do not need to set the fonttype in every source file.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"18 January 2018","externalUrl":null,"permalink":"/2018/01/18/mpl-plotting-notes-201801/","section":"Posts","summary":"\u003cp\u003eThis post continues my \u003ca href=\"https://jdhao.github.io/2017/11/16/matplotlib-plotting-notes/\" target=\"_blank\"\u003eprevious post\u003c/a\u003e\non various tips and tricks collected during the process of using Matplotlib.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/18-1-18/39303776.jpg\"\ntitle=\"Different math symbols produced by Matplotlib and LaTeX\"\nstyle=\"float: middle;\"\u003e\u003c/p\u003e","title":"Working with Fonts in Matplotlib","type":"posts"},{"content":" Intro to Cmder # As a Windows user, now and then, I have to use the Windows CMD to run some simple command. Compared to its Linux counterpart (bash, for example), the Windows CMD is totally disaster: it does not support smart TAB completion, it does not support pipes and it has a dumb UI\u0026hellip; Fortunately, there is a tool called cmder which tries to enhance our experience of using consoles on Windows systems. It has a decent UI with different color themes, support for Linux-style tab completion and more\u0026hellip; It is far better than windows CMD.\nInstallation # Cmder is a combination of several good tools: Conemu, clink and git for Windows. In order to use its full functionality, it is better to install the full version. After download, just extract the zip package into your program folder. Then you can launch cmder using launch tools such as Listary.\nHow to Use # Start cmder in a particular directory # Sometimes, we want to start cmder in current directory. We can configure this easily:\nOpen the cmder executable as an Administrator Go the directory where cmder is extracted, e.g., D:\\Program Files\\cmder Execute .\\cmder.exe /REGISTER ALL command Then go to a directory and right click, you will see a contextual menu option Cmder Here (See image below).\nkeyboard shortcut # Shortcut Description Ctrl+T or Ctrl+Shift+1 start a new console tab Ctrl+W close a console tab Ctrl+R search command history Win+Alt+P open settings page Fore more keyboard shortcut, see here.\nUTF-8 decoding related issue # In order to show Chinese characters properly, we need to set up console to use UTF-8 decoding. Also, the font used should support Chinese characters. First we need to set up the font options, as shown below:\nShow directories with Chinese characters in their names # In its default setting, cmder can not display directories with Chinese characters in their names as shown below.\nThis can be easily fixed. Open the setting page, and go to Startup -\u0026gt; Environment, in the text box, use the following setting:\nset LANG=zh_CN.utf8 Error message containing Chinese characters # When we are executing some command, the error message from the command may contains Chinese characters, which are not displayed properly:\n$ pandoc \u0026ndash;pdf-engine=xelatex -V CJKmainfont=KaiTi test.md -o test.pdf Error producing PDF. ! Undefined control sequence. l.67 \u0026hellip;锟斤拷搴︽湁闂锛屽簲璇ユ妸\\textwidth鎹㈡垚\nThis can be fixed by adding chcp utf-8 or chcp 65001 in the environment settings (see the above setting image). After applying this change, restart cmder and rerun the command, we find that the error message is correctly displayed now:\n$ pandoc \u0026ndash;pdf-engine=xelatex -V CJKmainfont=KaiTi test.md -o test.pdf Error producing PDF. ! Undefined control sequence. l.67 \u0026hellip;��度有问题，应该把\\textwidth换成\nSpurious character is inserted in command prompt when we press up arrow # When we press up arrow \u0026ldquo;↑\u0026rdquo; to bring up the history command, then delete the command, we may find that spurious character is inserted at command prompt. This issue is explained more thoroughly here, here and here.\nIn order to fix it, go to the cmder installation folder, the edit the file vendor\\clink.lua.\nFor older versions of Cmder # Replace the following snippet\nif env == nil then lambda = \u0026#34;λ\u0026#34; else lambda = \u0026#34;(\u0026#34;..env..\u0026#34;) λ\u0026#34; end with\nif env == nil then lambda = \u0026#34;$\u0026#34; else lambda = \u0026#34;(\u0026#34;..env..\u0026#34;) $\u0026#34; end For latest versions of Cmder # For the latest version of cmder (version 1.3.8), it seems that this old issue still persists. The clink.lua file have changed. Find the line\nlocal lambda = \u0026#34;λ\u0026#34; and replace it with\nlocal lambda = \u0026#34;$\u0026#34; Restart cmder and the problem should disappear.\nReferences # Solving the issue of incorrectly displayed Chinese in error message How to display Chinese characters correctly in command output How to display Chinese characters correctly in command output, another post Unicode support of cmder. ","date":"29 December 2017","externalUrl":null,"permalink":"/2017/12/29/cmder-usage/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/18-1-1/79824514.jpg\"\n         title=\"A glimpse of Cmder\"\u003e\n\u003c/p\u003e","title":"Cmder --- The Ultimate Command Line Tool for Windows","type":"posts"},{"content":"\nupdate log 2021-06-27: 补充标题如何生成的说明。 For English version of this post, click here.\n本文主要写如何使用 Pandoc 从 Markdown 文件生成格式精美的 PDF 文件，也包含了一些遇到的问题的解决办法。\n你需要什么 # 在正式开始文章之前，首先你需要安装下面的这些工具才能在后续正常进行操作：\n首先当然是 Pandoc，下载最新的安装包，安装完以后，记得把 Pandoc 安装目录加入系统 PATH 变量。\nTeX 发行版。请确保你的系统已经安装了 TeX 软件，你可以使用 TeX Live 或者 MiKTeX，安装完成之后可能需要设置 PATH，推荐安装 TeX Live。\n一个强大的文本编辑器，当然首推 Sublime Text.当然了，Visual Studio Code 和 GitHub Atom 也是不错的选择。\n使用 Pandoc 从 Markdown 生成 PDF 文件 # 背景介绍 # Pandoc 可以很方便地对不同 Markup 语言的文件进行格式转换，因此被誉为格式转换的「瑞士军刀」。使用 Pandoc 把 Markdown 文件转为 PDF 文件，实际上包含两个步骤：\n第一步， Markdown 文件被转为 LaTeX 源文件。 第二步，调用系统的 pdflatex, xelatex 或者其他 TeX 命令，将 .tex 文件转换为最终的 PDF 文件 (见上图)。 由于我的文档是中文，并且包含引用，表格等比较复杂的格式，在文件转换过程中遇到了一些问题，下面介绍具体解决办法。\n如何处理中文 # Pandoc 默认使用的 pdflatex 命令无法处理 Unicode 字符，如果要把包含中文的Markdown 文件转为 PDF，在生成 PDF 的过程中会报错。我们需要使用 xelatex 来处理中文，并且需要使用 CJKmainfont 选项指定支持中文的字体。 在 Windows 系统中，对于 Pandoc 2.0 版本以上，可以使用以下的命令生成 PDF 文件：\npandoc --pdf-engine=xelatex -V CJKmainfont=\u0026#34;KaiTi\u0026#34; test.md -o test1.pdf CJKmainfont 后面跟的是支持中文的字体名称。那么如何找到支持中文的字体呢？ 首先，你需要知道你所使用的语言的 language code, 例如，中文(即Chinese)的 language code 是 zh。 然后使用 fc-list 命令查看支持中文的字体(对于 Windows 系统，fc-list 命令在安装 TeX Live 完整版以后可以使用, Unix 系统一般会预装这个程序)：\nfc-list :lang=zh # zh 是中文的 「language code」 系统输出如下图所示:\n字体的名称就是字体文件位置后面的字符串，由于字体名称可能会包含空格，因此在引用的时候需要加上引号，例如 -V CJKmainfont=\u0026quot;Source Han Serif CN\u0026quot;。\n在 Pandoc 2.0 版本中， --pdf-engine 命令取代了原有的 --latex-engine 命令。对于Linux 系统，Pandoc 版本可能比较老，上述生成 PDF 的命令可能并不适合，正确的命令如下 (在 Pandoc 1.12.3.1 验证)：\npandoc --latex-engine=xelatex -V mainfont=\u0026#39;WenQuanYi Micro Hei\u0026#39; test.md -o test.pdf 在 Linux 系统上，找出支持中文的字体的方式与 Windows 系统是一样的。\n使用问题以及技巧 # 添加文档标题，作者，更新时间信息 # Pandoc 支持 YAML 格式的 header，通过 header 可以指定文章的标题，作者，更新时间等信息，一个示例 header 如下：\n--- title: \u0026#34;My demo title\u0026#34; author: \u0026#34;jdhao\u0026#34; date: 2021-06-27 --- block quote, table 以及 list 未能正确渲染 # 原因是在 Pandoc 中 block quote，list 以及 table 前需要空一行。另外 block quote 中每一行渲染成 PDF 未能正确换行，所有行的文字都跑到了一行，可以通过强制在原 block quote 的每一行后面加上空格来解决。\n给 block code 加上 highlight # Pandoc 支持给 block code 里面的代码加上背景高亮，并提供了不同的高亮主题，支持非常多的语言。要列出 Pandoc 提供的高亮方案，使用下面命令，\npandoc --list-highlight-styles 要列出所有支持的语言，使用下面命令，\npandoc --list-highlight-languages 要使用语法高亮，Markdown 文件中的 block code 必须指定语言，同时在命令行使用--highlight-style 选项，例如：\npandoc --pdf-engine=xelatex --highlight-style zenburn test.md -o test.pdf 以上命令，使用了 zenburn 主题, 另外，也推荐使用 tango, zenburn 或者breezedark 高亮主题。\n给 section 加上编号以及给文章加上目录 # 默认情况下，生成的 PDF 不含目录，同时各级标题不含编号，仅仅字体大小有变化，要给各个 section 加上编号，可以用 -N 选项；加上目录，可以使用 --toc 选项。 一个完整例子如下:\npandoc --pdf-engine=xelatex --toc -N -o test.pdf test.md 给链接加上颜色 # 根据 Pandoc user guide 的说明，我们可以通过 colorlinks 选项给各种链接加上颜色，便于和普通文本区分开来：\ncolorlinks add color to link text; automatically enabled if any of linkcolor, filecolor, citecolor, urlcolor, or toccolor are set 同时，为了精确控制不同类型链接颜色，Pandoc 还提供了对不同链接颜色的个性化设置选项：\nlinkcolor, filecolor, citecolor, urlcolor, toccolor color for internal links, external links, citation links, linked URLs, and links in table of contents, respectively: uses options allowed by xcolor, including the dvipsnames, svgnames, and x11names lists 例如，如果我们想给 URL 链接加上颜色，并且 urlcolor 要设为 NavyBlue, 可以使用下面的命令：\npandoc --pdf-engine=xelatex -V colorlinks -V urlcolor=NavyBlue test.md -o test.pdf 其他链接的颜色可以按照上述方式设置。\n值得注意的是，urlcolor 选项并不能给文中直接展示的 raw URL link 加上颜色。 要给直接展示的 URL link 加上颜色，可以用 \u0026lt;\u0026gt; 包围要展示的链接，例如\u0026lt;www.google.com\u0026gt;。\n另外，也可以使用选项 -f gfm，参考这里。完整命令如下，\npandoc --pdf-engine=xelatex -f gfm -Vurlcolor=cyan -o test.pdf test.md 使用 -f gfm 的一个缺点是 gfm 不支持公式，因此如果在 Markdown 中包含公式，将不能正确渲染。解决办法是去掉 -f gfm flag，或者使用 Pandoc 自带的 markdown格式。\n更改 PDF 的 margin # 使用默认设置生成的 PDF margin 太大，根据 Pandoc 官方FAQ，可以使用下面的选项更改 margin：\n-V geometry:\u0026#34;top=2cm, bottom=1.5cm, left=2cm, right=2cm\u0026#34; 完整命令为：\npandoc --pdf-engine=xelatex -V geometry:\u0026#34;top=2cm, bottom=1.5cm, left=2cm, right=2cm\u0026#34; -o test.pdf test.md Markdown 文件中使用斜杠 backslash 会出错 # 原始的 Markdown 格式，支持在文件中使用 backslash，但是 Pandoc 把 backslash 以及后面的内容理解成 LaTeX 命令，因此在编译包含 backslash 的文件时，可能会遇到undefined command 错误或者更加奇怪的错误。参考这里以及这里，解决办法是让 Pandoc 把 Markdown文件当成正常的 Markdown，不要解读 LaTeX 命令，使用下面的 flag:\npandoc -f markdown-raw_tex 或者，也可以用两个 backslash 表示字面意义的 backslash，例如 \\\\columnwidth 或者如果 backslash 及后面文字原本就是一个命令，用 inline code block 包含起来。\n给 inline code 加上背景色 # 将 Markdown 转为 PDF 时，由于 Pandoc 使用 LaTeX 中的 \\textt 命令来表示 inline code，所以 inline code 是没有背景色的。为了增加 inline code 的可读性，我们可以修改 \\texttt 命令，给文本添加背景色。首先建立 head.tex 文件，在其中加入以下命令：\n% change background color for inline code in % markdown files. The following code does not work well for % long text as the text will exceed the page boundary \\definecolor{bgcolor}{HTML}{E0E0E0} \\let\\oldtexttt\\texttt \\renewcommand{\\texttt}[1]{ \\colorbox{bgcolor}{\\oldtexttt{#1}} } 在使用 Pandoc 转换 Markdown 文件时，加上 -H 选项来引用 head.tex 文件，例如\npandoc --pdf-engine=xelatex -H head.tex test.md -o test.pdf 这样生成的 PDF 中，inline code 就会有灰色的背景色，背景颜色可以根据自己喜好修改。\n更改引用 (block quote) 的风格 # 默认情况下，当我们把 Markdown 文件转为 PDF 时，Pandoc 使用 LaTeX 中的 quote环境来表示 block quote。生成的 PDF 中，引用文字只是被缩进了，看起来很不明显。\n我们可以自己定义一个 quotation 环境，给环境加上背景颜色和缩进。将下面的设置写入到 head.tex 中：\n\\usepackage{framed} \\usepackage{quoting} \\definecolor{bgcolor}{HTML}{DADADA} \\colorlet{shadecolor}{bgcolor} % define a new environment shadedquotation. You can change leftmargin and % rightmargin as you wish. \\newenvironment{shadedquotation} {\\begin{shaded*} \\quoting[leftmargin=1em, rightmargin=0pt, vskip=0pt, font=itshape] } {\\endquoting \\end{shaded*} } % \\def\\quote{\\shadedquotation} \\def\\endquote{\\endshadedquotation} 当你想把 Markdown 转为 PDF 时，可以使用下面的命令：\npandoc -H head.tex test.md -o test.pdf 生成的 PDF 中引用的效果如下：\n参考 # 更改 quotation 环境的背景色. 如何重新定义 LaTeX 中已有的环境. 将设置放入 head.tex 文件中 # 由于将 Markdown 转为 PDF 需要诸多选项与设置，将这些设置都写在命令行上，既浪费时间，也不利于小修小改，所以可以将常用的一些命令都放到 head.tex 文件中，然后在转换 Markdown 文件的时候引用该文件即可。\n例如，可以将设置页面宽度的命令，给 inline code 着色的命令，以及设置链接颜色的命令统一放入 head.tex 中：\n\\usepackage{fancyvrb,newverbs} \\usepackage[top=2cm, bottom=1.5cm, left=2cm, right=2cm]{geometry} % change background color for inline code in % markdown files. The following code does not work well for % long text as the text will exceed the page boundary \\definecolor{bgcolor}{HTML}{E0E0E0} \\let\\oldtexttt\\texttt \\renewcommand{\\texttt}[1]{ \\colorbox{bgcolor}{\\oldtexttt{#1}} } %% color and other settings for hyperref package \\hypersetup{ bookmarksopen=true, linkcolor=blue, filecolor=magenta, urlcolor=RoyalBlue, } 下次使用的时候，直接用 -H 选项引用以上文件即可。\nList 嵌套层次太多的问题 # 读者Karl Liu反应，如果使用 Markdown List 嵌套的层次太多（具体是超过六层），使用 Pandoc 生成的 PDF 文件的时候，会出现错误\n! LaTeX Error: Too deeply nested.\n具体讨论见这个 issue，作者提出的解决方法是，在 head.tex 文件中加上如下设置：\n\\usepackage{enumitem} \\setlistdepth{9} \\setlist[itemize,1]{label=$\\bullet$} \\setlist[itemize,2]{label=$\\bullet$} \\setlist[itemize,3]{label=$\\bullet$} \\setlist[itemize,4]{label=$\\bullet$} \\setlist[itemize,5]{label=$\\bullet$} \\setlist[itemize,6]{label=$\\bullet$} \\setlist[itemize,7]{label=$\\bullet$} \\setlist[itemize,8]{label=$\\bullet$} \\setlist[itemize,9]{label=$\\bullet$} \\renewlist{itemize}{itemize}{9} \\setlist[enumerate,1]{label=$\\arabic*.$} \\setlist[enumerate,2]{label=$\\alph*.$} \\setlist[enumerate,3]{label=$\\roman*.$} \\setlist[enumerate,4]{label=$\\arabic*.$} \\setlist[enumerate,5]{label=$\\alpha*$} \\setlist[enumerate,6]{label=$\\roman*.$} \\setlist[enumerate,7]{label=$\\arabic*.$} \\setlist[enumerate,8]{label=$\\alph*.$} \\setlist[enumerate,9]{label=$\\roman*.$} \\renewlist{enumerate}{enumerate}{9} 在编译 PDF 的时候，加上 -H head.tex 选项。\n使用 Sublime Text build system 生成 PDF # 写完 Markdown，再切换到 terminal 使用 Pandoc 生成 PDF 以及预览,颇为麻烦，因此我使用 Sublime Text 的 build system 来简化编译生成 PDF 以及预览的整个过程。PDF 预览使用了轻量级的 Sumatra PDF reader。\n一个示例的 build system 如下，\n{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=KaiTi \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;text.html.markdown\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Convert to PDF and Preview\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=KaiTi \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026amp;\u0026amp;SumatraPDF \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; } ] } 在命令中使用到了引号，必须使用 backslash escape。可以从这里 下载这个 build system。\n系统无法识别 Pandoc 的问题 # 不知什么原因，上述把 Markdown 文件转为 PDF 的 build system 在编译 Markdown 文件时，突然给出如下错误提示：\n\u0026lsquo;pandoc\u0026rsquo; is not recognized as an internal or external command, operable program or batch file.\n通过查询 sublime 文档，发现我们可以在 build system 里面加上 path 变量。因此，我对上述的 build system 进行了调整，新的 build system 如下：\n{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=\\\u0026#34;Source Han Serif SC\\\u0026#34; \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;C:/Users/east/AppData/Local/Pandoc/;%PATH%\u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;text.html.markdown\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Convert to PDF and Preview\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;pandoc --pdf-engine=xelatex --highlight-style=zenburn -V colorlinks -V CJKmainfont=\\\u0026#34;Source Han Serif SC\\\u0026#34; \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026amp;\u0026amp;SumatraPDF \\\u0026#34;${file_path}/${file_base_name}.pdf\\\u0026#34; \u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;C:/Users/east/AppData/Local/Pandoc/;%PATH%\u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; } ] } 使用新的 build system 以后，一切恢复正常。\n笔记云同步 # 云同步可以选择坚果云。同步速度快，并且支持多个文件夹同步，每个月有 1G 免费上传流量，对于文档同步来说，足够使用了。当然也可以使用自己的网盘或者云存储，都是可以的，看自己喜好。\n注：以后有更新的话，会优先更新文章开头提到的英文版本，由于精力有限，此版本更新将不会很频繁，以修复错误为主。\n参考资料 # Pandoc 处理中文. Pandoc 对 block quote 的处理. Pandoc 语法高亮设置. dvipsnames 提供的颜色. Pandoc 设置 section number 解决 Pandoc 命令找不到的问题. ","date":"10 December 2017","externalUrl":null,"permalink":"/2017/12/10/pandoc-markdown-with-chinese/","section":"Posts","summary":"\u003cp\u003e\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/18-1-7/731510.jpg\"\ntitle=\"生成的 PDF 截图\"\nstyle=\"float: middle;\"\u003e\u003c/p\u003e\n\u003cdetails\u003e\n\u003csummary\u003e\u003cfont size=\"3\" color=\"red\"\u003eupdate log\u003c/font\u003e\u003c/summary\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cfont color=\"blue\"\u003e2021-06-27: 补充标题如何生成的说明。\u003c/font\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cp\u003eFor English version of this post, click \u003ca href=\"https://jdhao.github.io/2019/05/30/markdown2pdf_pandoc/\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e本文主要写如何使用 Pandoc 从 Markdown 文件生成格式精美的 PDF 文件，也包含了一些遇到的问题的解决办法。\u003c/p\u003e","title":"纯文本做笔记 --- 使用 Pandoc 把 Markdown 转为 PDF 文件","type":"posts"},{"content":"This post records my collected notes on various tricks in using Matplotlib.\nTwin axes in the same plot with one legend # Often times, we need to make two axes which share the same x axis, but with different scale of y axis. Fortunately, Matplotlib\u0026rsquo;s Axes class has a twinx() which fulfills our need. But another question arises: how to make the two axes share one legend?\nIf we have two axes and use their legend() method seperately. The figure will have two separate legends, which is a bit redundant. In order to use one legend to show the labels of lines in both axes, we need to collect all the lines as well as their corresponding labels.\nTwo different ways to achieve what we want # We can use two slightly different ways to achieve this. First, you can try the following:\nimport matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 10, 100) y1 = 2*x y2 = np.sqrt(x) y3 = np.exp(0.5*x) fig = plt.figure() ax1 = fig.add_subplot(111) line1 = ax1.plot(x, y1, \u0026#39;r\u0026#39;, label=\u0026#34;2x\u0026#34;) line2 = ax1.plot(x, y2, \u0026#39;g\u0026#39;, label=\u0026#34;sqrt(x)\u0026#34;) ax2 = ax1.twinx() line3 = ax2.plot(x, y3, \u0026#39;b\u0026#39;, label=\u0026#34;exp(0.5x)\u0026#34;) lines = line1+line2+line3 labels = [l.get_label() for l in lines] ax2.legend(lines, labels) plt.show() Or you can try the second method:\nimport matplotlib.pyplot as plt import numpy as np x = np.linspace(0, 10, 100) y1 = 2*x y2 = np.sqrt(x) y3 = np.exp(0.5*x) fig = plt.figure() ax1 = fig.add_subplot(111) ax1.plot(x, y1, \u0026#39;r\u0026#39;, label=\u0026#34;2x\u0026#34;) ax1.plot(x, y2, \u0026#39;g\u0026#39;, label=\u0026#34;sqrt(x)\u0026#34;) ax2 = ax1.twinx() ax2.plot(x, y3, \u0026#39;b\u0026#39;, label=\u0026#34;exp(0.5x)\u0026#34;) handles, labels = [], [] for ax in [ax1, ax2]: h, l = ax.get_legend_handles_labels() handles.extend(h) labels.extend(l) ax2.legend(handles, labels) plt.show() Both will produce the same output plot as shown below,\nA side note # Also, what is worth notice is that in first snippet, we use line1+line2+line3. That is possible because the three lines are actually Python list, which is in turn because Matplotlib\u0026rsquo;s plot() method return a list of lines even if you plot just one line.\nLog-scale plot with correct ticks and tick labels # Sometimes, we want to plot in log scale. This is easy to achieve in Matplotlib. We can use the normal plotting command and then set the x axis to log scale. Or we can directly plot in log scale using semi-log method. A simple snippet the shown below,\nimport matplotlib.pyplot as plt import numpy as np import matplotlib colors = [\u0026#34;#e6194b\u0026#34;, \u0026#34;#3cb44b\u0026#34;, \u0026#34;#ffe119\u0026#34;] m1 = np.array([ 0.6125, 0.775, 0.8375, 0.875, 0.9125, 0.9875]) m2 = np.array([0.6750, 0.8125, 0.8625, 0.9000, 0.9375, 0.9750]) m3 = np.array([0.8000, 0.8625, 0.9250, 0.9625, 0.9625, 0.9750]) position = [1, 2, 4, 8, 16, 32] fig, ax = plt.subplots() ax.semilogx(position, m1*100, linestyle=\u0026#39;-\u0026#39;, color=colors[0]) ax.semilogx(position, m2*100, linestyle=\u0026#39;-\u0026#39;, color=colors[1]) ax.semilogx(position, m3*100, linestyle=\u0026#39;-\u0026#39;, color=colors[2]) ax.set_xticks(position) ax.grid(linestyle=\u0026#39;--\u0026#39;) ax.set_xlabel(\u0026#34;K\u0026#34;) ax.set_ylabel(\u0026#34;Recall@k score (%)\u0026#34;) plt.show() The above snippet will produce the following figure,\nNotice that in the above figure, some minor ticks appear in the plot and also the tick labels are not properly shown.\nWe can use tick_params() method of axes and minorticks_off() method to turn off the axis minor ticks. As for the im-properly displayed ticks in x axis, we can use set_major_formatter to correct it. A work example is shown below,\nimport matplotlib.pyplot as plt import numpy as np import matplotlib colors = [\u0026#34;#e6194b\u0026#34;, \u0026#34;#3cb44b\u0026#34;, \u0026#34;#ffe119\u0026#34;] m1 = np.array([ 0.6125, 0.775, 0.8375, 0.875, 0.9125, 0.9875]) m2 = np.array([0.6750, 0.8125, 0.8625, 0.9000, 0.9375, 0.9750]) m3 = np.array([0.8000, 0.8625, 0.9250, 0.9625, 0.9625, 0.9750]) position = [1, 2, 4, 8, 16, 32] fig, ax = plt.subplots() ax.semilogx(position, m1*100, linestyle=\u0026#39;-\u0026#39;, color=colors[0]) ax.semilogx(position, m2*100, linestyle=\u0026#39;-\u0026#39;, color=colors[1]) ax.semilogx(position, m3*100, linestyle=\u0026#39;-\u0026#39;, color=colors[2]) ax.set_xticks(position) ax.get_xaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter()) # use the following method to turn off minor ticks ax.tick_params(axis=\u0026#39;x\u0026#39;, which=\u0026#39;minor\u0026#39;, bottom=\u0026#39;off\u0026#39;) # ax.minorticks_off() # or use minorticks_off method ax.grid(linestyle=\u0026#39;--\u0026#39;) ax.set_xlabel(\u0026#34;K\u0026#34;) ax.set_ylabel(\u0026#34;Recall@k score (%)\u0026#34;) plt.show() The new plot generate is shown below,\nWe can see that all the issues of the first-version plot have been corrected.\nChange line width in the legend # Sometimes, we want to increase the line width in the legend for better readability. The following snippet shows how to do this in Matplotlib using the object oriented API:\nimport numpy as np import matplotlib.pyplot as plt # make some data x = np.linspace(0, 2*np.pi) y1 = np.sin(x) y2 = np.cos(x) fig, ax = plt.subplots() ax.plot(x, y1, linewidth=1.0, label=\u0026#39;sin(x)\u0026#39;) ax.plot(x, y2, linewidth=1.0, label=\u0026#39;cos(x)\u0026#39;) leg = ax.legend() for line in leg.get_lines(): line.set_linewidth(4.0) plt.show() The generated image is shown below,\nReferences # Discussions on Stack Overflow. plot log scale, post in SO. Increase line width in legend ","date":"16 November 2017","externalUrl":null,"permalink":"/2017/11/16/matplotlib-plotting-notes/","section":"Posts","summary":"\u003cp\u003eThis post records my collected notes on various tricks in using Matplotlib.\u003c/p\u003e","title":"Matplotlib Plotting Notes -- Series 1","type":"posts"},{"content":"In PyTorch, Tensor is the primary object that we deal with (Variable is just a thin wrapper class for Tensor). In this post, I will give a summary of pitfalls that we should avoid when using Tensors. Since FloatTensor and LongTensor are the most popular Tensor types in PyTorch, I will focus on these two data types.\nTensor operations # Tensor and Tensor operation # For operations between Tensors, the rule is strict. Both Tensors of the operation must have the same data type, or you will see error messages like\nTypeError: sub received an invalid combination of arguments - got (float), but expected one of: * (int value) didn\u0026#39;t match because some of the arguments have invalid types: (!float!) * (torch.LongTensor other) didn\u0026#39;t match because some of the arguments have invalid types: (!float!) * (int value, torch.LongTensor other) As another example, several loss functions like CrossEntropyLoss require that the target should be torch LongTensor. So before doing operations, make sure that your input Tensor types match the function definitions.\nIt is easy to convert the type of one Tensor to another Tensor. Suppose x and y are Tensor of different types. You can use x.type(y.type()) or x.type_as(y) to convert x to the type of y.\nTensor and scalar operation # For FloatTensor, you can do math operations (multiplication, addition, division etc.) with a scalar of type int or float. But for LongTensor, you can only do math operation with int scalar but not float.\nWhy do some losses require target to be LongTensor? # According to PyTorch developers, some use cases requires that the target be LongTensor type and int just can not hold the target value.\nFloatTensor or DoubleTensor # For deep learning, precision is not a very important issue. Plus, GPU can not process double precision very well. So FloatTensor is enough, which is also the default type for model parameters.\nNumPy array and torch Tensor # Shared memory or not? # You can use torch.from_numpy() method to convert a NumPy array to corresponding torch Tensor, which will share underlying memory with NumPy array. To convert Tensor x to NumPy array, use x.numpy() to convert it to a NumPy array, which also shares the memory with original Tensor.\nDoes torch Tensor and Numpy array always share the underlying memory? The short answer is no. If their underlying data type is not compatible, a copy of original data will be made. For example, if you try to save torch FloatTensor as numpy array of type np.float64, it will trigger a deep copy.\nCorrepsondece between NumPy and torch data type # It should be noted that not all NumPy arrays can be converted to torch Tensor. Below is a table showing NumPy data types which is convertable to torch Tensor type.\nNumPy data type Tensor data type numpy.uint8 torch.ByteTensor numpy.int16 torch.ShortTensor numpy.int32 torch.IntTensor numpy.int torch.LongTensor numpy.int64 torch.LongTensor numpy.float32 torch.FloatTensor numpy.float torch.DoubleTensor numpy.float64 torch.DoubleTensor Speed comparison between NumPy and torch operations # I am curious to know the speed difference between torch Tensor operation and equivalent NumPy ndarray operations. I do it in Jupyter-console using the built-in magic %timeit.\nimport torch import numpy as np # torch Tensor on CPU x = torch.rand(1, 64) y = torch.rand(5000, 64) %timeit z=(x*y).sum(dim=1) # torch Tensor on GPU x, y = x.cuda(), y.cuda() %timeit z = (x*y).sum(dim=1) # numpy ndarray on CPU x = np.random.random((1, 64)) y = np.random.random((5000, 64)) %timeit z = (x*y).sum(axis=1) The result is listed on the following table:\nData type and device Average operation time Tensor on CPU 938 $\\mu s$ Tensor on GPU 38.9 $\\mu s$ NumPy ndarray (on CPU) 623 $\\mu s$ It is pretty clear that Tensor operations on GPU runs orders of magnitute faster than operations on CPU. NumPy, due to its excellent implementation of its core in C, runs a little bit faster than Tensor on CPU.\nConvert scalar to torch Tensor # You can convert a scalar to Tensor by providing the scalr to the Tensor constructor, which will not achieve what you want. For example,torch.Tensor(1) will not give you a Tensor which contains float 1. Instead, the produced Tensor is something like\n1.00000e-20 * 5.4514 [torch.FloatTensor of size 1]\nTo achieve what you want, you have to provide a list with single element 1 to the Tensor constructor.\nReferences # Integer type Tensor only works with integer, but float type Tensor works both with integer and float. Tensor types must match. Some loss functions require target to be LongTensor. NumPy and torch Tensor conversion, shared memory or not? ","date":"15 November 2017","externalUrl":null,"permalink":"/2017/11/15/pytorch-datatype-note/","section":"Posts","summary":"\u003cp\u003eIn PyTorch,\n\u003ca href=\"http://pytorch.org/docs/master/tensors.html#torch-tensor\" target=\"_blank\"\u003e\u003ccode\u003eTensor\u003c/code\u003e\u003c/a\u003e is the\nprimary object that we deal with (\u003ccode\u003eVariable\u003c/code\u003e is just a thin wrapper class for\n\u003ccode\u003eTensor\u003c/code\u003e). In this post, I will give a summary of pitfalls that we should avoid\nwhen using Tensors. Since \u003ccode\u003eFloatTensor\u003c/code\u003e and \u003ccode\u003eLongTensor\u003c/code\u003e are the most popular\n\u003ccode\u003eTensor\u003c/code\u003e types in PyTorch, I will focus on these two data types.\u003c/p\u003e","title":"Notes on PyTorch Tensor Data Types","type":"posts"},{"content":"PyTorch is a relatively new deep learning library which support dynamic computation graphs. It has gained a lot of attention after its official release in January. In this post, I want to share what I have learned about the computation graph in PyTorch. Without basic knowledge of computation graph, we can hardly understand what is actually happening under the hood when we are trying to train our landscape-changing neural networks.\nComputation graphs and its use in PyTorch # The idea of computation graph is important in the optimization of large-scale neural networks. In simple terms, a computation graph is a DAG in which nodes represent variables (tensors, matrix, scalars, etc.) and edge represent some mathematical operations (for example, summation, multiplication). The computation graph has some leaf variables. The root variables of the graph are computed according to operations defined by the graph. During the optimization step, we combine the chain rule and the graph to compute the derivative of the output w.r.t the learnable variable in the graph and update these variables to make the output close to what we want. In neural networks, these learnable variables are often called weight and bias.\nYou can also think of neural network as a computational graph: the input images and the parameters in each layer are leaf variables, the outputs (usually it is called the loss and we minimize it to update the parameters of the network) of neural networks are the root variables in the graph.\nHow is computation graph created and freed? # In PyTorch, the computation graph is created for each iteration in an epoch. In each iteration, we execute the forward pass, compute the derivatives of output w.r.t to the parameters of the network, and update the parameters to fit the given examples. After doing the backward pass, the graph will be freed to save memory. In the next iteration, a fresh new graph is created and ready for back-propagation.\nBecause the computation graph will be freed by default after the first backward pass, you will encounter errors if you are trying to do backward on the same graph the second time. That is why the following error message pops up:\nRuntimeError: Trying to backward through the graph a second time, but the buffers have already been freed. Specify retain_graph=True when calling backward the first time\nA toy example # Now, let\u0026rsquo;s take a small example to illustrate the idea. Suppose that we have a computation graph shown above. The variable d and e is the output, and a is the input. The underlining computation is:\nimport torch from torch.autograd import Variable a = Variable(torch.rand(1, 4), requires_grad=True) b = a**2 c = b*2 d = c.mean() e = c.sum() when we do d.backward(), that is fine. After this computation, the part of graph that calculate d will be freed by default to save memory. So if we do e.backward(), the error message will pop up. In order to do e.backward(), we have to set the parameter retain_graph to True in d.backward(), i.e.,\nd.backward(retain_graph=True) As long as you use retain_graph=True in your backward method, you can do backward any time you want:\nd.backward(retain_graph=True) # fine e.backward(retain_graph=True) # fine d.backward() # also fine e.backward() # error will occur! Real use cases # A real use case that you want to backward through the graph for more than once is multi-task learning where you have multiple losses at different layers. Suppose that you have 2 losses: loss1 and loss2 and they reside in different layers. In order to back-prop the gradient of loss1 and loss2 w.r.t to the learnable weight of your network independently. You have to use retain_graph=True in backward() method in the first back-propagated loss.\n# suppose you first back-propagate loss1, then loss2 # (you can also do it in reverse order) loss1.backward(retain_graph=True) loss2.backward() # now the graph is freed, and next process of batch gradient descent is ready optimizer.step() # update the network parameters References # leaf variable in PyTorch. How is computation graph created Error trying to backward the second time. Understanding graph and state. Graph creation and destroy. What does retain_graph in backward() function mean? Back-propagation on computation graph. ","date":"12 November 2017","externalUrl":null,"permalink":"/2017/11/12/pytorch-computation-graph/","section":"Posts","summary":"\u003cp\u003ePyTorch is a relatively new deep learning library which support dynamic\ncomputation graphs. It has gained a lot of attention after its official release\nin January. In this post, I want to share what I have learned about the\ncomputation graph in PyTorch. Without basic knowledge of computation graph, we\ncan hardly understand what is actually happening under the hood when we are\ntrying to train our \u003cem\u003elandscape-changing\u003c/em\u003e neural networks.\u003c/p\u003e","title":"Understanding Computational Graphs in PyTorch","type":"posts"},{"content":"When we are using convolutional neural networks, most of the time, we need to fix the input image size to feed it to the network. The usual practice is to resize the input image to the given size (the image aspect ratio is no longer kept) and then crop a fixed size patch randomly from the resized image. This practice may work well for image classification where fine details may not be necessary. But for Image retrieval, we want to keep the image aspect ration unchanged. In this post, I will summarize ways to resize an image to square shape with padding and keep its aspect ratio.\nThe main idea is to first resize the input image so that its maximum size equals to the given size. Then we pad the resized image to make it square. A number of packages in Python can easily achieves this.\nUsing PIL # PIL is a popular image processing package in Python. We can use either Image module or the ImageOps module to achieve what we want.\nResize and pad with Image module # First we create a blank square image, then we paste the resized image on it to form a new image. The code is:\nfrom PIL import Image, ImageOps desired_size = 368 im_pth = \u0026#34;/home/jdhao/test.jpg\u0026#34; im = Image.open(im_pth) old_size = im.size # old_size[0] is in (width, height) format ratio = float(desired_size)/max(old_size) new_size = tuple([int(x*ratio) for x in old_size]) # use thumbnail() or resize() method to resize the input image # thumbnail is a in-place operation # im.thumbnail(new_size, Image.ANTIALIAS) im = im.resize(new_size, Image.ANTIALIAS) # create a new image and paste the resized on it new_im = Image.new(\u0026#34;RGB\u0026#34;, (desired_size, desired_size)) new_im.paste(im, ((desired_size-new_size[0])//2, (desired_size-new_size[1])//2)) new_im.show() Resize and pad with ImageOps module # The PIL ImageOps module has a expand() function that will add borders to the 4 side of an image. We need to calculate the padding length in 4 side of the resized image before applying this method.\ndelta_w = desired_size - new_size[0] delta_h = desired_size - new_size[1] padding = (delta_w//2, delta_h//2, delta_w-(delta_w//2), delta_h-(elta_h//2)) new_im = ImageOps.expand(im, padding) new_im.show() Using OpenCV # In OpenCV, we have copyMakeBorder which is handy in making borders. The full code to resize and pad an image is as follows:\nimport cv2 desired_size = 368 im_pth = \u0026#34;/home/jdhao/test.jpg\u0026#34; im = cv2.imread(im_pth) old_size = im.shape[:2] # old_size is in (height, width) format ratio = float(desired_size)/max(old_size) new_size = tuple([int(x*ratio) for x in old_size]) # new_size should be in (width, height) format im = cv2.resize(im, (new_size[1], new_size[0])) delta_w = desired_size - new_size[1] delta_h = desired_size - new_size[0] top, bottom = delta_h//2, delta_h-(delta_h//2) left, right = delta_w//2, delta_w-(delta_w//2) color = [0, 0, 0] new_im = cv2.copyMakeBorder(im, top, bottom, left, right, cv2.BORDER_CONSTANT, value=color) cv2.imshow(\u0026#34;image\u0026#34;, new_im) cv2.waitKey(0) cv2.destroyAllWindows() I have upload the whole script to GitHub and you can download it here.\nReferences # Stack Overflow post on how to add borders to an image. OpenCV copyMakeBorder() method usage Resize an image using PIL ","date":"6 November 2017","externalUrl":null,"permalink":"/2017/11/06/resize-image-to-square-with-padding/","section":"Posts","summary":"\u003cp\u003eWhen we are using convolutional neural networks, most of the time, we need to\nfix the input image size to feed it to the network. The usual practice is to\nresize the input image to the given size (the image aspect ratio is no longer\nkept) and then crop a fixed size patch randomly from the resized image. This\npractice may work well for image classification where fine details may not be\nnecessary. But for Image retrieval, we want to keep the image aspect ration\nunchanged. In this post, I will summarize ways to resize an image to square\nshape with padding and keep its aspect ratio.\u003c/p\u003e","title":"How to Resize, Pad Image to Square Shape and Keep Its Aspect Ratio in Python","type":"posts"},{"content":"","date":"24 October 2017","externalUrl":null,"permalink":"/tags/metric/","section":"Tags","summary":"","title":"Metric","type":"tags"},{"content":"For image retrieval and other similarity-based tasks such as person re-identification, we need to compute the similarity (or distance) between the query image and database images. Then we can rank the database images based on their similarity to the query image. In this post, I want to briefly introduce two measures widely used in image retrieval tasks.\nThe Euclidean distance The Euclidean distance is straightforward, suppose \\(x\\) and \\(y\\) are two feature vectors in \\(\\mathbf{R^n}\\), then the Euclidean distance between the two vectors is:\n\\[\\begin{equation}\\begin{aligned} d_{euclid} \u0026amp;= {\\Vert x - y \\Vert}_2 \\\\ \u0026amp;= \\sqrt{\\sum_{i=1}^{n}(x_i - y_i)^2} \\\\ \u0026amp;= \\sqrt{ {\\Vert x \\Vert}^2 + {\\Vert y \\Vert}^2 - 2x\\cdot y }\\\\ \\end{aligned}\\end{equation}\\]\nIf Euclidean distance between feature vectors of image A and B is smaller than that of image A and C, we may conclude that image B is more similar to A than image C.\nThe cosine similarity Cosine similarity is another commonly used measure. For vector \\(x\\) and \\(y\\), it is defined as:\n\\[\\begin{equation} s = \\frac{x\\cdot y}{\\Vert x \\Vert \\Vert y \\Vert}\\ , \\end{equation}\\]\nwhich is actually the cosine value of angle \\(\\theta\\) between vector \\(x\\) and \\(y\\). Here is a plot illustrating that:\nHow does the above equation come? It can be derived from the The Law of cosines. Based on that law, we have:\n\\[\\begin{equation} \\cos(\\theta) = \\frac{ {\\Vert x \\Vert}^2 +{\\Vert y \\Vert}^2 - {\\Vert x - y\\Vert}^2 }{2\\Vert x \\Vert \\cdot \\Vert y \\Vert}\\ . \\end{equation}\\]\nWe also have the following equality:\n\\[\\begin{equation}\\begin{aligned} {\\Vert x - y\\Vert}^2 \u0026amp;= {d_{euclid}}^2 \\\\ \u0026amp;= {\\Vert x \\Vert}^2 +{\\Vert y \\Vert}^2 - 2x\\cdot y \\end{aligned}\\end{equation}\\]\nCombining the two equations, we finally get the following equation:\n\\[\\begin{equation} \\cos(\\theta) = \\frac{x\\cdot y}{\\Vert x \\Vert \\cdot \\Vert y \\Vert} \\end{equation}\\]\nIf the two vectors \\(x\\) and \\(y\\) both are unit vectors, then we can further get:\n\\[\\begin{equation} \\cos(\\theta) = x \\cdot y \\end{equation}\\]\nIn this case, the cosine similarity between these two vectors equals to their dot product.\nCosine distance and its relation to Euclidean distance In image retrieval, the feature vectors are often \\(L_2\\) normalized to be a unit vector. In this case, the Euclidean distance between two vectors \\(x\\) and \\(y\\) becomes:\n\\[\\begin{equation}\\begin{aligned} d_{euclid} \u0026amp;= \\sqrt{\\sum_{i=1}^{n}(x_i - y_i)^2} \\\\ \u0026amp;= \\sqrt{ {\\Vert x \\Vert}^2 + {\\Vert y \\Vert}^2 - 2x\\cdot y }\\\\ \u0026amp;= \\sqrt{ 2 - 2x\\cdot y }\\\\ \u0026amp;= \\sqrt{ 2(1 - x\\cdot y) }\\\\ \\end{aligned}\\end{equation}\\]\nIn image retrieval, the feature vector elements are all positive. \\(\\cos(\\theta)\\) are in the range \\([0, 1]\\). Then we can define cosine distance as\n\\[\\begin{equation} d_{cosine}(x, y) = 1 - x\\cdot y \\ . \\end{equation}\\]\nNow it is easy to see that\n\\[\\begin{equation} d_{euclid}(x, y) = \\sqrt{ 2d_{cosine} }\\ . \\end{equation}\\]\nSo these two measures are closely related. You can choose either of the two measurement to assess the similarity between two images.\nReferences A good blog post about cosine and Euclidean distance ","date":"24 October 2017","externalUrl":null,"permalink":"/2017/10/24/image-similarity-measure-image-retrieval/","section":"Posts","summary":"\u003cp\u003eFor image retrieval and other similarity-based tasks such as \u003ca\nhref=\"https://arxiv.org/abs/1610.02984\"\u003eperson re-identification\u003c/a\u003e, we\nneed to compute the similarity (or distance) between the query image and\ndatabase images. Then we can rank the database images based on their\nsimilarity to the query image. In this post, I want to briefly introduce\ntwo measures widely used in image retrieval tasks.\u003c/p\u003e","title":"Similarity Measurement in Image Retrieval","type":"posts"},{"content":"","date":"24 October 2017","externalUrl":null,"permalink":"/tags/stack-overflow/","section":"Tags","summary":"","title":"Stack-Overflow","type":"tags"},{"content":"一直以来，在搜索编程、技术相关的问题时，Stack Overflow 上的答案经常高居谷歌返回结果前列，这个网站上有一些质量很高的答案，能够真正解决我的疑问。大约一年以前，我正式注册了 Stack Overflow 的会员，也开始试着回答别人的提问。解答别人的问题也让我受益匪浅，但最近发生的一件事却让我对 Stack Overflow 有了更深的认识。\n由于对一道算法问题的解答不是很确定，我决定在 Stack Overflow 上提问，寻求高手的帮忙。结果问题刚刚贴上去没多久，问题就开始被点踩了，紧接着，就有人开始提议要 关闭我的问题。我赶忙问为什么要踩我的问题，有个叫 melpomene 的用户（简称 m君）就开始和我玩起了文字游戏。m 君一直强调我写的问题不清楚，不是一个算法问题，是一个数学问题，我只好不断解释，同时也试图修改我的问题描述，使得问题更加清楚易懂。另外一个用户 sascha（简称 s 君） 则说，我提的问题就像 homework question，我根本没有花费时间去解决这个问题，就上来提问，谷歌上可以容易搜到这个问题的解答，我又解释了一番，说我已经试着自己解决这个问题，自己也在谷歌上搜索过这个问题，但是并没有找到这个问题的解答，并且把自己写的代码也贴了上去，并说明我不清楚我的方法是否是最有效率(efficient)的。 s 君又开始评论，不清楚什么叫 efficient。我只好继续解释 efficient 指的是算法的时间和空间复杂度低。m 君又开始发难，我要的答案只是一个数字，无所谓复杂度，我又解释了一番。逐渐觉得这两个人只是在耍嘴皮子，并无心去真正解决我的问题。s 君说他可以在 O(1) 的时间解决这个问题，我于是让他贴出自己的代码，这货又狡辩不清楚我说的是最坏复杂度，还是平均时间复杂度，就是不贴出自己的代码。我于是怒了，开始怒喷这两个装逼货，结果 s 君怂了，不再答话，估计他也知道自己牛皮吹大了，根本想不出更好的方法来，于是夹着尾巴走了。m 君则给出了一个答案，我看了一下，时间复杂度比我的方法要低，试了一些简单的测试样例，貌似也是正确的，事情也许就这么过去了。\n第二天，我仔细研究了一下，发现 m 君的答案其实是有问题的，并不是正确的解法，给他的回答增加了评论，后面他也承认自己的答案有问题，删掉了自己的答案，修改好了以后才又放了出来，还给出了测试样例，这次他的答案没有问题了。昨天 m 君和我争论这不是一个算法问题，后面自己给了一个答案，结果却是错误的，装逼失败。这件事很好地说明了 Stack Overflow 上一些老用户的自大与傻逼，总是居高临下随意俯视新用户，利用自己的权力对新用户百般刁难与讽刺。\n我从比较早就注意到了 Stack Overflow 存在的这种问题，Stack Overflow 的哲学就是你要做足自己的功课，并且清楚如何提问，然后你才可以提出自己的问题。自己努力的程度越高越好，直到自己解决了问题，从而不用提出这个问题。然而这件事情发展的有点极端，伤害了大量新用户，甚至有人害怕在 Stack Overflow 提问题或者认为提问题是一种耻辱。\nStack Overflow 对新手确实是不友好的，很多问题刚一提出就被 downvote 或者干脆 close，新手们就像幼苗，战战兢兢地面对着一些分数 很高的用户，就连我这种并不算新手的用户在提问的时候也会担心，总觉得自己努力的还不够，担心自己的提问会被 downvote。这并不是一种很健康的发展状态。\n网络上有很多对 Stack Overflow 的批评，例如 Stack Overflow 正在衰落，又或者Stack Overflow 对新手太有敌意等，经过这次的事情，我对此有了更深的理解。但我并不认同 Stack Overflow 正在衰落的说法，在这里你仍然能找到最权威与最细致的答案。你的问题在贴出去以后，最有可能在短时间得到其他人的回答，这是任何其他网站无法媲美的。我希望自己的答案能够帮到别人，也希望自己的答案得到高手的回答。只是希望 Stack Overflow 上的社区能够多一些宽容，少一些尖刻的讽刺与居高临下的傲慢。\n距离我初次发文已经过去了大半年，Stack Overflow 官方博客发文承认了存在的问题，并称将进行改进，对新用户更加友好。\nUpdate: 2020-05-19, 我的 reputation 达到了 8698。 Update: 2019-04-20, 我的 reputation 增长到了 4959。 Update: 2018-05-26, 我的 reputation 已增长到 2000 了，不容易啊。 ","date":"24 October 2017","externalUrl":null,"permalink":"/2017/10/24/the-stackoverflow-love-and-hatred/","section":"Posts","summary":"\u003cp\u003e一直以来，在搜索编程、技术相关的问题时，Stack Overflow 上的答案经常高居谷歌返回结果前列，这个网站上有一些质量很高的答案，能够真正解决我的疑问。大约一年以前，我正式注册了 Stack Overflow 的会员，也开始试着回答别人的提问。解答别人的问题也让我受益匪浅，但最近发生的一件事却让我对 Stack Overflow 有了更深的认识。\u003c/p\u003e","title":"对 Stack Overflow 的爱与恨","type":"posts"},{"content":"In this post, I\u0026rsquo;d like to talk about how to create your own dataset, process it and make data batches ready to be fed into your neural networks, with the help of PyTorch.\nIn PyTorch, in order to feed your own training data into the network, you will mainly deal with two classes: the Dataset class and the Dataloader class. Now I will explain in more detail what they do.\nCreate your Dataset class # Overview # Dataset class is used to provide an interface for accessing all the training or testing samples in your dataset. In order to achieve this, you have to implement at least two methods, __getitem__ and __len__ so that each training sample (in image classification, a sample means an image plus its class label) can be accessed by its index.\nIn the initialization part of the class, you should collect a list of all the images and its labels in the dataset. When we want to get a particular sample, we then read the image, transform it and return the transformed image and the corresponding label.\nA good example is ImageFolder class provided by torchvision package, you can check its source code here to get a sense of how it actually works.\nData augmentation and preprocessing # Data augmentation and preprocessing is an important part of the whole work-flow. In PyTorch, we do it by providing a transform parameter to the Dataset class. Transform are class object which are called to process the given input. You can cascade a series of transforms by providing a list of transforms to torchvision.transforms.Compose method. Then the given transforms will be performed on the input in the order they appear.\nIt should be noted that some of the transforms are for PIL image object, such as RandomCrop() and Resize(). Other transforms are for torch Tensor, such as Normalize. If your dataset contains images, you should first perform all transforms expecting PIL image object, then convert PIL image to Tensor using ToTensor() method. The ToTensor transform will convert PIL image to torch Tensor of shape $H\\times W\\times C$, with its values in the range [0.0, 1.0].\nThe Normalize transform expects torch tensors. Its parameters are the means and standard deviations of RGB channels of all the training images. For ImageNet, the devs have already done that for us, the normalize transform should be\nnormalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]) For your own dataset, you have to calculate the statistics yourself.\nCreate data batch using Dataloader # Although we can access all the training data using the Dataset class, but that is not enough. For deep learning, we need the functionality such as batching, shuffling, multiprocess data loading, etc. This is what the Dataloader class do.\nThe Dataloader class accept a dataset and other parameters such as batch_size, batch_sampler and number of workers to load the data and so on\u0026hellip; Then we can iterate over the Dataloader to get batches of training data and train our models.\nLoading variable size input images # By default, Dataloader use collate_fn method to pack a series of images and target as tensors (first dimension of tensor is batch size). The default collate_fn expects all the images in a batch to have the same size because it uses torch.stack() to pack the images. If the images provided by Dataset have variable size, you have to provide your custom collate_fn. A simple example is shown below:\n# a simple custom collate function, just to show the idea # `batch` is a list of tuple where first element is image tensor and # second element is corresponding label def my_collate(batch): data = [item[0] for item in batch] # just form a list of tensor target = [item[1] for item in batch] target = torch.LongTensor(target) return [data, target] Conclusion # In this post, I give an introduction to the use of Dataset and Dataloader in PyTorch. Dataset is used to access single sample from your dataset and transform it, while Dataloader is used to load a batch of samples for training or testing your models. If your training images have variable size, you may also have to use your own custom collate_fn.\nReferences # Normalization for input images. Another post about image normalization. Dataloader with variable size images. ConvNet for variable size input image. ","date":"23 October 2017","externalUrl":null,"permalink":"/2017/10/23/pytorch-load-data-and-make-batch/","section":"Posts","summary":"\u003cp\u003eIn this post, I\u0026rsquo;d like to talk about how to create your own dataset, process it\nand make data batches ready to be fed into your neural networks, with the help\nof PyTorch.\u003c/p\u003e","title":"Writing Your Own Custom Dataset for Classification in PyTorch","type":"posts"},{"content":"In this post I will share some tips on how to use Sublime Text on Windows. These tips are collected over time and will be updated frequently (hopefully).\nOpen and close side bar # You can use Ctrl+K+B to open and close the side bar. The correct way to use this shortcut: hold on Ctrl, first press K and then press B.\nChange the case of selected text # To turn the selected text into upper case, use the shortcut key Ctrl+K+U. Here is how exactly to operate: first you need to press Ctrl, then press K and release it, finally, you press the U key, do not release the Ctrl key in the process. To turn the selected text into lower case, use the shortcut key Ctrl+K+L.\nTo turn the selected text into title case, you need to add a custom key binding. Open your key binding file and add the following setting:\n{ \u0026#34;keys\u0026#34;: [\u0026#34;ctrl+k\u0026#34;, \u0026#34;ctrl+t\u0026#34;], \u0026#34;command\u0026#34;: \u0026#34;title_case\u0026#34; } Then you can convert the selected text into title case with the shortcut Ctrl+K+T.\nSelect text between quotation marks # You can use the Plugin BracketHighlighter to achieve what you want. First, you need to install this Plugin. Then, go to Preferences --\u0026gt; Key Bindings. Add the following key binding setting,\n{ \u0026#34;no_outside_adj\u0026#34;: null, \u0026#34;keys\u0026#34;: [\u0026#34;ctrl+alt+super+s\u0026#34;], \u0026#34;command\u0026#34;: \u0026#34;bh_key\u0026#34;, \u0026#34;args\u0026#34;: { \u0026#34;lines\u0026#34; : true, \u0026#34;plugin\u0026#34;: { \u0026#34;type\u0026#34;: [\u0026#34;__all__\u0026#34;], \u0026#34;command\u0026#34;: \u0026#34;bh_modules.bracketselect\u0026#34; } } } Then you can use the shortcut key Ctrl+Alt+Super+S to select texts between quotation marks.\nShow current file in side bar # In the current file, right click your mouse. In the pop-up contextual menu, choose Reveal in Side Bar and the file will be highlighted in the side bar.\nPrevent a file from opening in the tab when I right click on it # One annoying thing when using Sublime-Text is that when you want to right click on a file in the sidebar to call its contextual menu, the file is automatically opened in the tab. If you want to disable this behaviour, you can add an option in your user Settings:\n{\u0026#34;preview_on_click\u0026#34;: false,} After using this option, you can left click on a file twice to open it.\nOpen a file in the current folder quickly # You can press Ctrl+P and start to type the filename. See the following image,\nFind a string in all files in current project # Press Ctrl+Shift+F, you will see three boxes: Find, Where and Replace. Type the string you want to search in Find box , and specify the folder you want to search in Where box.\nThe search result will be presented in a page called Find Results. If you want to go to specific file which contains the searched string, double click on the line.\nThis tip is based on a wonderful stackoverflow post.\nRename the current file # When you are editing a file, you may wish to change its name. First you should [reveal it in the side bar](# Show current file in side bar). Then right click on the file and rename it.\nQuick goto a class or a function # By pressing Ctrl+R, we can navigate to functions/class in the current file. This ability is really powerful and it works for multiple source file types such as \\*.py, \\*.md, \\*.cpp.\nEdit a variable simultaneously # Sometimes, we want to rename a variable name, but it have several occurrences in the source code. It is easy to select all occurrences of a variable in Sublime Text. You should first point the cursor to the variable and then hit Alt+F3. Now you can edit the variable simultaneously.\nQuickly go to a line # Press Ctrl+G and enter the line number, then press Enter, you will go to that line.\nUnindent lines # You have two choices. The first is to use Shift+Tab, which works only for multiple selected lines. In order to make it work for a single line, set\n\u0026#34;shift_tab_unindent\u0026#34;: true, in your user settings.\nYou can also use Ctrl+[ to un-indent lines on Windows and Linux (Ctrl+] is used to indent lines).\nStop hidden files and folders from showing in the sidebar # By default, hidden file and folders (files and folders starting with a dot) are shown in the sidebar. According to this Stackoverflow post, to disable this behaviour, you need to edit the User settings (just click Preferences -\u0026gt; Settings): add the following options to the User setting file:\n\u0026#34;file_exclude_patterns\u0026#34;: [ \u0026#34;*.pyc\u0026#34;, \u0026#34;*.pyo\u0026#34;, \u0026#34;*.exe\u0026#34;, \u0026#34;*.dll\u0026#34;, \u0026#34;*.obj\u0026#34;,\u0026#34;*.o\u0026#34;,\u0026#34;*.a\u0026#34;, \u0026#34;*.lib\u0026#34;, \u0026#34;*.so\u0026#34;, \u0026#34;*.dylib\u0026#34;, \u0026#34;*.ncb\u0026#34;, \u0026#34;*.sdf\u0026#34;, \u0026#34;*.suo\u0026#34;, \u0026#34;*.pdb\u0026#34;, \u0026#34;*.idb\u0026#34;, \u0026#34;.DS_Store\u0026#34;, \u0026#34;*.class\u0026#34;, \u0026#34;*.psd\u0026#34;, \u0026#34;*.db\u0026#34;, \u0026#34;*.sublime-workspace\u0026#34;, \u0026#34;.*\u0026#34; ], \u0026#34;folder_exclude_patterns\u0026#34;: [ \u0026#34;.svn\u0026#34;, \u0026#34;.git\u0026#34;, \u0026#34;.hg\u0026#34;, \u0026#34;CVS\u0026#34;, \u0026#34;.*\u0026#34; ] The pattern .* matches any file or folder which starts with a dot. The above options works effectively to prevent the hidden files and folders from showing up in your sidebar. You can also add your own custom patterns to the two exclude lists.\nReferences # Disable previewing file when right click on it. Search a file in current folder. Open and close side bar and more. Documentation on search a string in current project. ","date":"21 October 2017","externalUrl":null,"permalink":"/2017/10/21/useful-sublime-shortcut-and-plugin/","section":"Posts","summary":"\u003cp\u003eIn this post I will share some tips on how to use Sublime Text on Windows.\nThese tips are collected over time and will be updated frequently\n(hopefully).\u003c/p\u003e","title":"Sublime Text Tips and Tricks That Will Make Your Life Easier","type":"posts"},{"content":"","date":"19 October 2017","externalUrl":null,"permalink":"/tags/mobike/","section":"Tags","summary":"","title":"Mobike","type":"tags"},{"content":"记录一下做的几道算法问题的解答。\n第一题 # 给出两个字符串 A 和 B，B 的长度大于等于 A（B 的长度不超过 100），在 A 的开头或者结尾添加字符，使得 A 与 B 长度一样，当两者长度一样时，A 与 B 不相同字符的个数最小为多少？例如 A 是 \u0026ldquo;be\u0026rdquo;, B 是 \u0026ldquo;abd\u0026rdquo;, 可以在 A 的开头增加字符 \u0026lsquo;a\u0026rsquo;，此时 A 与 B 不相同字符数最小，为 1\n想法：因为只能给 A 增加字符，所以固定 B，采用 sliding window 的方式滑动 A，计算 A 与 B 的最大相同的字符数目 M，所求的答案就是 A 的长度减去 M.\n完整代码如下：\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;string\u0026gt; using namespace std; int main(){ string A, B; cin \u0026gt;\u0026gt; A \u0026gt;\u0026gt; B; int lenA = (int)A.size(); int lenB = (int)B.size(); int minVal = 101; for (int i = 0; i \u0026lt;= lenA - lenB; ++i){ int equalNum = checkEqualNum(A, B.substr(i, lenA)); if (lenA - equalNum \u0026lt; minVal){ minVal = lenA - equalNum; } } cout \u0026lt;\u0026lt; minVal \u0026lt;\u0026lt; endl; } 第二题 # 给出任意一个整数数组（可能包含重复数字），每次只能对数组进行一个操作：取出一个元素，放到数组末尾。最少需要操作多少次，该数组能够变成一个排好序的数组。 例子 输入数组为 {3, 4, 1, 2}，输出应该是 2 解释：先把 3 移到数组最后，再把 4 移到数组最后，排序完成。操作 2 次。\n想法：假设数组已经排号序，原数组中有一部分元素相对位置在排序好的数组中仍然不变 ，这部分元素不用移动，只用移动剩余元素即可。例如上述的例子，1 和 2 两个元素在原 数组中已经是有序的，其实排序的过程就是把 3 和 4 移动到数组末尾。因此可以把数组 排序，然后计算排序号的数组和原数组有多少元素相对位置是正确的，剩余元素数目就是 最小的操作次数。\n#include \u0026lt;vector\u0026gt; #include \u0026lt;iostream\u0026gt; using namespace std; int main(){ int N; // N 是数组的大小 cin \u0026gt;\u0026gt; N; vector\u0026lt;int\u0026gt; nums(N); vector\u0026lt;int\u0026gt; nums_copy(N); for (int i = 0; i != N; ++i){ cin \u0026gt;\u0026gt; nums[i]; nums_copy[i] = nums[i]; } sort(nums_copy.begin(), nums_copy.end()); size_t j = 0; for (size_t i = 0, end = nums.size(); i != end; ++i){ if (nums[i] == nums_copy[j]) ++j; } cout \u0026lt;\u0026lt; nums.size() - j \u0026lt;\u0026lt; endl; return 0; } 该方法的时间复杂度 $O(n\\log(n))$，空间复杂度 $O(n)$. 还有一种时间复杂度和空间复 杂度更低的方法，但是需要考虑的更加细致，可以参考这里的讨论 .\n（全文完）\n","date":"19 October 2017","externalUrl":null,"permalink":"/2017/10/19/mobike-programming-test-20171019/","section":"Posts","summary":"\u003cp\u003e记录一下做的几道算法问题的解答。\u003c/p\u003e","title":"几道算法问题解答","type":"posts"},{"content":"Today, I came across the open source project visdom and hope to use it in my future PyTorch project. I installed it on my Linux server and met with an issue that I have no way to deal with. I would like to share it in case someone also meet it.\nAfter installing visdom successfully, I started to play with it. But I find that it can not work properly on my CentOS server. After a long time of loading, the final webpage do not contain the tool bar that normal visdom webpages would have.\nIn order to find the cause, I also installed one on my Windows computer and find that it works properly. So I added an issue on github.\nAfter a while, a contributor to visdom responded. We started this nearly 2-hour journey to find what the hell was wrong. Finally, with the help of this kind and patient man, I find that it is because some of the javascript resources can not be loaded on my CentOS server. Why does not that happen on my Windows machine? I tried to switch off my proxy manager. Suddenly, visdom can not work on Windows too. So the root cause is that our great firewall has blokced some of resource addresses used by visdom. Plain and simple.\nI love you, my great country. I have nothing to say.\n","date":"16 October 2017","externalUrl":null,"permalink":"/2017/10/16/fuck-my-great-country/","section":"Posts","summary":"\u003cp\u003eToday, I came across the open source project\n\u003ca href=\"https://github.com/facebookresearch/visdom\" target=\"_blank\"\u003evisdom\u003c/a\u003e and hope to use it in my\nfuture \u003ca href=\"http://pytorch.org/\" target=\"_blank\"\u003ePyTorch\u003c/a\u003e project. I installed it on my Linux\nserver and met with an issue that I have no way to deal with. I would like to\nshare it in case someone also meet it.\u003c/p\u003e","title":"Why Doesn't Visdom Work Fine on CentOS?","type":"posts"},{"content":"It might seem naive to ask how to loop through a C++ vector using index. However, it is not: even experienced programmer may write buggy code to loop through a vector.\nI have long been familiar with code snippet below:\nvector\u0026lt;int\u0026gt; arr(100, 0); for (int i = 0; i != arr.size(); ++i){ // do something with arr[i] } Each time I write code like this, the compiler gives me warnings:\ncomparison between signed and unsigned integer expressions [-Wsign-compare]\nThe reason is simple: arr.size() has type vector\u0026lt;int\u0026gt;::size_type, which is unsigned. We are comparing signed types (int) with unsigned types (vector\u0026lt;int\u0026gt;::size_type), hence the warning. If you insist on using int as index for vector types, you are for some buggy code. The better way is to use unsigned type as index for vector, but we need to be careful.\nChoosing the index type: size_t or size_type? # Theoretically, we should declare the type of index i to be vector\u0026lt;int\u0026gt;::size_type. But it is a lot of code to type. So I prefer to use size_t as the type of index, which is also an unsigned type. Most of the time, you can safely use size_t as the index. If you are interested, you can check the difference between size_type and size_t here.\nHow to loop forward # Looping forward through a vector using index is straightforward. See the sample code below:\nvector\u0026lt;int\u0026gt; arr(100, 0); for (size_t i = 0; i != arr.size(); ++i){ // do something with arr[i] } How to loop backward # The pitfall # Looping backward through a vector when you declare the index as unsigned type has pitfalls that we should avoid. Unfortunately, I have fallen into this trap several times. Consider the following code:\nfor (size_t i = arr.size()-1; i \u0026gt;= 0; --i){ // do something with arr[i] } This code has a serious bug: because i is unsigned type, so i will never be smaller than 0, as a result, the for loop never stops.\nThe correct way # There are two ways to loop backward correctly, the first one is:\nfor (size_t i = arr.size()-1; i != (size_t)-1; --i){ // do something with arr[i] } Because i is unsigned type, when i equals 0, i-1 will become (size_t)-1, which is the largest value that size_t can represent. Then the loop will stop correctly.\nThe second one is:\nfor (size_t i = arr.size(); i-- \u0026gt; 0; ){ // do something with arr[i] } When i equals 0, the condition i-- \u0026gt; 0 will not be met, so the loop will terminate.\nOk, that is all I want to write in this post. Hope it can help you.\nReferences # Loop backward, second way. Loop forward.(There are discussions why you should not ignore warnings about comparison between signed and unsigned type) Possible danger of using unsigned index in C++. Another discussion about the pitfalls. Unsigned type, useful but tricky. How to loop forward and backward for a vector. How to find the maximum value of size_t. ","date":"7 October 2017","externalUrl":null,"permalink":"/2017/10/07/loop-forward-backward-with-cpp-vector/","section":"Posts","summary":"\u003cp\u003eIt might seem naive to ask how to loop through a C++ vector using index.\nHowever, it is not: even experienced programmer may write buggy code to loop\nthrough a vector.\u003c/p\u003e","title":"What Is the Correct Way of Loop Through C++ Vector Using Index?","type":"posts"},{"content":"What is value of a and b in the following statement according to the rules of C++ 11?\nint a = -5 % 2; int b = 5 % -2; If you can not clearly tell the result, then you should update your knowledge about % operator in C++.\nThe rules for remainder operator # Some people call % modulo operator, but its real name is remainder operator. Rules about % operator differs between C++ 11 and pre-C++ 11 era. In pre-C++ 11 era, the result of a%b when a or b is negative is undefined. But in C++ 11, the result is well-defined, the standard says (emphasis added by me):\nThe binary / operator yields the quotient, and the binary % operator yields the remainder from the division of the first expression by the second. If the second operand of / or % is zero the behavior is undefined. For integral operands the / operator yields the algebraic quotient with any fractional part discarded; if the quotient a/b is representable in the type of the result, (a/b)*b + a%b is equal to a.\nIt basically says that a == (a/b)*b + (a%b) and the result of a/b is truncated toward zero. With these two rules, the result of a%b can be calculated without any ambiguity:\na%b = a - (a/b)*b A real example # Take the calculation of a and b in the first paragraph as an example,\n-5/2 ==\u0026gt; -2 -5%2 = -5 - (-2*2) = -1 5/-2 = -2 5%-2 = 5 - (-2*-2) = 1 So, in C++ 11, the value for a and b is -1 and 1 respectively.\nReferences # Remainder operator in C++, post 1. Remainder operator in C++, post 2. Remainder operator in C++, post 3. ","date":"7 October 2017","externalUrl":null,"permalink":"/2017/10/07/modulo-operator-in-cpp/","section":"Posts","summary":"\u003cp\u003eWhat is value of \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e in the following statement according to the rules of C++ 11?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you can not clearly tell the result, then you should update your knowledge\nabout % operator in C++.\u003c/p\u003e","title":"Remainder Operator(%) in C++","type":"posts"},{"content":"在写作博文的时候，有时候需要输入一些数学公式，如果公式过长，我们通常希望把方程分成多行显示，在 LaTeX 中，我们可以使用 aligned 环境来书写多行公式，但是写出来的 Markdown 经过 Hexo 的处理以后显示不正确，原因何在？原来这与 Hexo 的渲染引擎有关系。\n开启公式支持 # Hexo 的自带的 Markdown 引擎并不支持 LaTeX 公式。 但是 MathJax 支持，因此首先要启用 MathJax 才能渲染 LaTeX 公式。如果你已经安装了 NexT theme，开启 MathJax 支持非常容易，在最新版的NexT 主题的 _config.yml 文件里，找到 MathJax 相关部分，使用以下配置，\nmath: enable: true # Default(true) will load mathjax/katex script on demand # That is it only render those page who has \u0026#39;mathjax: true\u0026#39; in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: false engine: mathjax 但是，由于 LaTeX 中的一些符号在 Markdown 也中有特殊含义，例如 两个 _ 在 Markdown中用来表示斜体（italic），因此两者的配合使用会产生一些问题。\n从一个例子说起 # 假如我们想要显示下面的方程，\n如果使用如下的 LaTeX 代码\n\\begin{align} x \u0026amp;= a +b+c+d\\\\ \u0026amp;= e +f\\\\ \u0026amp;= g \\end{align} 使用 Hexo 渲染以后，得到的结果如下图所示，\n可以看到，换行并未起作用，这是因为 Hexo 对 Markdown 文件的处理实际上分为两个步骤：\nHexo 中的 Markdown 引擎把 Markdown 变为 html 文件 MathJax 负责解释 html 的数学公式 第一步中，由于 backslash 在 Markdown 属于特殊字符，用于字符转义，所以两个 backslash 经过 Markdown 引擎处理，只剩下一个，等到 MathJax 引擎处理时，实际上 MathJax 只看到一个 backslash，MathJax 把它当作 LaTeX 中的空格，因此我们见到了上图所示的渲染结果。\n知道了渲染错误的原因，解决办法也很简单，就是用四个 backslash 代替两个 backslash，确保 MathJax 的引擎看到的是两个 backslash，也就是把上述代码变成\n\\begin{align} x \u0026amp;= a +b+c+d\\\\\\\\ \u0026amp;= e +f\\\\\\\\ \u0026amp;= g \\end{align} 这时产生的公式如下图所示，\n如果想要去掉公式的编号，在 LaTeX 中，我们通常会选择加星号的 align 环境，但是注意到星号 （star）在 Markdown 也有特殊含义(一对单星号表示斜体，一对双星号表示粗体)，因此必须对星号进行转义，才能确保 MathJax 见到星号，正确的代码是\n\\begin{align\\*} x \u0026amp;= a +b+c+d\\\\\\\\ \u0026amp;= e +f\\\\\\\\ \u0026amp;= g \\end{align\\*} 如果按照上面的方法在 Markdown 文件中写公式，我们将会十分痛苦，并且写出来的 LaTeX 公式不能被标准的 LaTeX 处理引擎识别，因此这个解决办法是非常糟糕的解决办法。有没有更好的办法？答案是：有的！\n解决方法 # 我试用了多款号称能够解决这个问题的 hexo renderer，例如 hexo-renderer-markdown-it-plus 以及 hexo-math，效果都差强人意。最后发现使用 hexo-renderer-pandoc 十分靠谱。使用这个 renderer 之前请确保你已经安装了Pandoc，然后卸载 Hexo 自带的 renderer，安装 Pandoc renderer:\nnpm uninstall hexo-renderer-marked --save npm install hexo-renderer-pandoc --save 注意事项 # 如果你使用这款 Pandoc renderer，那么书写 Markdown 时候需要遵循 Pandoc 对 Markdown 的规定。\n有一些比较明显的需要注意的事项：正常的文字后面如果跟的是list, table或者quotation，文字后面需要空一行，如果不空行，这些环境将不能被 Pandoc renderer 正常渲染。\n另外，文中的 URL 使用 Pandoc 渲染以后是普通的文本格式，不能点击，可以通过用\u0026lt;\u0026gt; 包围 URL 的方式把 URL 变成可点击的 URL。\n参考 # Discussion about correct way to use align environment in Markdown. Hexo 插入多行数学公式. How to make URL clickable ","date":"6 October 2017","externalUrl":null,"permalink":"/2017/10/06/hexo-markdown-latex-equation/","section":"Posts","summary":"\u003cp\u003e在写作博文的时候，有时候需要输入一些数学公式，如果公式过长，我们通常希望把方程分成多行显示，在 LaTeX 中，我们可以使用 \u003ccode\u003ealigned\u003c/code\u003e 环境来书写多行公式，但是写出来的 Markdown 经过 Hexo 的处理以后显示不正确，原因何在？原来这与 Hexo 的渲染引擎有关系。\u003c/p\u003e","title":"Hexo 书写 LaTeX 公式时的一些问题及解决方法","type":"posts"},{"content":"本文将介绍堆 (heap)的概念，进一步介绍如何把普通数组变成最大堆，并在此基础上进行堆排序。\n基础概念 要谈堆排序，必须先说清楚“堆”这种数据结构，堆的定义如下(来自维基百科)：\nIn computer science, a heap is a specialized tree-based data structure that satisfies the heap property: if P is a parent node of C, then the key (the value) of node P is greater than the key of node C. A heap can be classified further as either a “max heap” or a “min heap”. In a max heap, the keys of parent nodes are always greater than or equal to those of the children and the highest key is in the root node. In a min heap, the keys of parent nodes are less than or equal to those of the children and the lowest key is in the root node.\n在本文中，我们讨论的均是最大堆（max heap）。堆是一种完全二叉树(complete binary tree)，所谓完全二叉树，就是满二叉树 (full binary tree)去掉最后一层右边的一些节点构成的二叉树。关于二者的定义，可以参考这里。下面是一张形象的表示图，\n我们可以按照从上到下，从左到右的顺序给堆的节点编号，根节点编号为 \\(0\\)，如上图中右图所示（注意上图并不是一个最大堆或者最小堆，仅仅是示意可以这样来给堆的节点编号。这样的话，堆可以用一个数组 \\(A\\) 来表示，\\(A[0]\\) 表示堆的根节点的值。 由于堆是完全二叉树，计算编号为 \\(m\\) 的节点的父节点以及左右子节点(如果左右子节点存在的话)非常容易，计算公式由以下式子给出，\n父节点：\\(\\lfloor \\frac{m-1}{2}\\rfloor\\) 左子节点：\\(2m + 1\\) 右子节点：\\(2m + 2\\)\n证明如下，假设根节点所在的层为第 \\(0\\) 层，那么第 \\(i\\) 层节点个数为 \\(2^i\\) 个, 第 \\(i\\) 层各个节点编号为 \\(2^i - 1\\)(第 1 个节点)，\\(2^i + k - 2\\)（第 k 个节点），\\(2^{i+1} - 2\\)（第 \\(2^i\\) 个节点）。对于第 \\(i\\) 层第 \\(k\\) 个节点(编号是 \\(2^i + k - 2\\))，其在下层的左子节点编号计算公式为\n\\[\\begin{equation}\\begin{aligned} \\text{idLeftChild} \u0026amp;= \\left [ 2^i + k - 2 - (2^i - 1)\\right ] + 2^{i+1} - 1\\\\ \u0026amp;= 2k - 2 + 2^{i+1} - 1 \\\\ \u0026amp;= 2^{i+1} + 2k - 4 +1 \\\\ \u0026amp;= \\left (2^i + k - 2 \\right )*2 + 1 \\end{aligned}\\end{equation}\\]\n从以上公式可以归纳出，编号为 \\(m\\) 的节点，其左子节点编号为 \\(2m+1\\)，右子节点编号为 \\(2m+2\\)，其父节点编号为 \\(\\lfloor \\frac{m-1}{2}\\rfloor\\)。\n任意普通数组的“堆化” 因为完全二叉树可以用数组表示，反过来任意的数组也对应一个完全二叉树，只是这个完全二叉树不一定是最大堆。 给定一个数组，如何把它变为一个堆呢？观察一个最大堆，我们会发现，除了叶子节点，其余每个节点都满足最大堆的特点，因此要把一个数组对应的完全二叉树变为最大堆，只需要自底向上，逐层把各个非叶子节点逐一最大堆化即可，同时要保证最大堆的特性在最大堆化过程中不被破坏。\n对于大小为 \\(n\\) 的数组 \\(A\\)，很容易看出从节点 \\(0\\) 到节点 \\(\\lfloor \\frac{n}{2} - 1\\rfloor\\) 含有叶子节点，其余节点均为非叶子节点，所以最大堆化的过程只需要对这些非叶子节点进行。下面是最大堆化的 C++ 实现，\nvoid max_heapify(vector\u0026lt;int\u0026gt;\u0026amp; arr, const int N, int i){ int largest = i; int l = 2*i + 1; int r = 2*i + 2; if (l \u0026lt; N \u0026amp;\u0026amp; arr[l] \u0026gt; arr[largest]) largest = l; if (r \u0026lt; N \u0026amp;\u0026amp; arr[r] \u0026gt; arr[largest]) largest = r; // if largest val is not in parent node, we need to // switch val of parent node and largest val if (largest != i){ swap(arr[i], arr[largest]); max_heapify(arr, N, largest); } } void make_heap(vector\u0026lt;int\u0026gt;\u0026amp; arr, const int N){ for (int i = N/2 -1; i \u0026gt;= 0; --i){ max_heapify(arr, N, i); } } 堆排序的思想与实现 对于的给定的数组，堆排序算法工作原理如下\n把当前的无序数组变为最大堆（arr[0] 为数组最大元素） 对于 i 从 n-1 到 1， 交换 arr[0] 与当前数组的最后一个元素的位置 arr[i-1]，然后把堆的大小减 1 把剩余的二叉树的根节点重新变为最大堆化（因为该二叉树只有根节点不满足最大堆的条件 把以上算法写成代码如下\nvoid heap_sort(vector\u0026lt;int\u0026gt;\u0026amp; arr){ const int N = static_cast\u0026lt;int\u0026gt;(arr.size()); make_heap(arr, N); for (int i = N-1; i \u0026gt;= 1; --i){ swap(arr[0], arr[i]); max_heapify(arr, i, 0); } } 下面是一个完整的可以运行的例子，\n#include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; void printArray(const vector\u0026lt;int\u0026gt;\u0026amp; arr){ for(auto\u0026amp; num: arr){ cout \u0026lt;\u0026lt; num \u0026lt;\u0026lt; \u0026quot; \u0026quot;; } cout \u0026lt;\u0026lt; endl; } int main(){ const int N = 10; const int rangeBegin = 0; const int rangeEnd = 1000; random_device rd; mt19937 gen(rd()); uniform_int_distribution\u0026lt;int\u0026gt; distribution(rangeBegin, rangeEnd); vector\u0026lt;int\u0026gt; arr(N, 0); for (int i = 0; i != N; ++i){ arr[i] = distribution(gen); } cout \u0026lt;\u0026lt; \u0026quot;Original array: \u0026quot;; printArray(arr); heap_sort(arr); cout \u0026lt;\u0026lt; \u0026quot;After heap sort: \u0026quot;; printArray(arr); return 0; } 示例运行结果如下：\n时间复杂度，空间复杂度及稳定性 构建最大堆的时间复杂度为 \\(O(n)\\) (并不是 \\(O(\\log(n))\\)，详细论证过程见这里)，heap sort 时间复杂度为\\(O(n\\log(n))\\)，因此总的时间复杂度为 \\(O(n\\log(n))\\)，由于堆排序只使用了常量空间，因此该算法空间复杂度是 \\(O(1)\\)。\n前面的博客也提到过，排序算法的稳定性在某些情况下很重要. 本文中的堆排序属于不稳定的算法，举例来说明，假设输入的数组是 {2a, 2b, 1} (a, b 用来区分相同值的先后顺序)，这个数组已经是最大堆了，使用 heap sort 算法，得到的排序后的结果应该是 {1, 2b, 2a}，相同数值的先后顺序被破坏，这就说明了堆排序是不稳定的算法。\nReferences Difference between full binary tree and complete binary tree. 一个很详细的堆排序讲解. https://www.scaler.com/topics/data-structures/heap-sort-algorithm/ 为什么堆排序是不稳定的排序算法. ","date":"6 October 2017","externalUrl":null,"permalink":"/2017/10/06/heap-sort-explained/","section":"Posts","summary":"\u003cp\u003e本文将介绍堆\n(heap)的概念，进一步介绍如何把普通数组变成最大堆，并在此基础上进行堆排序。\u003c/p\u003e","title":"堆排序是如何工作的？","type":"posts"},{"content":"In this post, I will write about the stability of sorting algorithms and why it is important.\nWhen we read articles about sorting algorithms, a term that often appears is the \u0026ldquo;stability\u0026rdquo; of an algorithm. The definition of stability is pretty simple: Given an unsorted list and a sorting algorithm. If two equal elements in the original list remain their relative order in the sorted list, then the sorting algorithm is stable, otherwise it is an unstable algorithm.\nNow that we know the definition and there tons of article telling you which sorting algorithm is stable and which is not, we may wonder what is the point of identifying if an algorithm is stable or not. In fact, if you only have a list of single items to sort, the stability of the sorting algorithm is not important. However, if you have a list where each element is some kind of record which has several keys, you way want to sort the record based on several keys. That is where stability comes into play.\nFor example, we have a list of some students who belong to different labs,1\nDave A Alice B Ken A Eric B Carol A We want to sort the records first using the student names as the key, the result is:\nAlice B Carol A Dave A Eric B Ken A Then we want to sort the above result further based on their labs, we may get the result of\nDave A Ken A Carol A Alice B Eric B or\nCarol A Dave A Ken A Alice B Eric B If the use a stable algorithm, it will ensure that the order of previous sorting will be preserved if two keys are the same. So the names corresponding to the same labs are in sorted order. The result will be\nCarol A Dave A Ken A Alice B Eric B In summary, the stability of sorting algorithms is important only when you want to chain multiple sort according to different keys in the record. If your record only has one key, the stability issue is irrelevant.\nReferences # https://stackoverflow.com/questions/1517793/what-is-stability-in-sorting-algorithms-and-why-is-it-important https://stackoverflow.com/questions/808617/what-is-the-benefit-for-a-sort-algorithm-to-be-stable/808668#808668 http://www.drdobbs.com/cpp/why-stable-sorting-is-important/231001864 The example is from this page.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"30 September 2017","externalUrl":null,"permalink":"/2017/09/30/sorting-algorithms-stability/","section":"Posts","summary":"\u003cp\u003eIn this post, I will write about the stability of sorting algorithms and why it\nis important.\u003c/p\u003e","title":"When Does the Stability of Sorting Algorithms Matter?","type":"posts"},{"content":"In the early development of convolutional neural networks (CNNs), convolutions with kernel size \\(3\\times 3\\), \\(5\\times 5\\), \\(7\\times 7\\) or even \\(11\\times 11\\) are often used. In the more recent literature, however, \\(1\\times 1\\) convolutions are becoming prevalent. In this post, I will try to explain what \\(1\\times 1\\) convolutions are and discuss why they are used in CNNs.\nThe meaning of \\(1\\times 1\\) convolutions In essence, \\(1\\times 1\\) convolutions are just convolutions with kernel size equal to \\(1\\), nothing new. Suppose the feature map size of one layer is \\(64\\times 12\\times 12\\), and it is followed by \\(1\\times 1\\) convolutions, and the output channel is \\(C\\). Then in this convolution layer, we will have \\(C\\) filters, each of which has shape \\(64\\times 1\\times 1\\). The convolutional weight shape in this layer is \\(C\\times 64\\times 1\\times 1\\), and the shape of bias terms is \\(C\\times 1\\times 1\\). The output feature map size after this convolutional layer is \\(C\\times 12\\times 12\\). So the spatial size of feature maps is preserved, but the number of feature maps are changed from 64 to \\(C\\).\nThe paper Network in network first proposed to use \\(1\\times 1\\) convolutions. In that paper, multiple \\(1\\times 1\\) convolutional layers is stacked together, which the authors call a mlp layer. Since the kernel size is \\(1\\times 1\\), which can not learn a spatial relationship within channels, it is used solely to learn cross-channel relations of the feature maps. You can also think of it as a fully-connected operation, where for each feature map the multiplying coefficients are the same.\nLater in the Google Inception paper, \\(1\\times 1\\) convolutions are also used in the inception module shown below.\nThe use of \\(1\\times 1\\) convolutions is mainly for dimension reduction in channels to reduce the computational cost of the following \\(3\\times 3\\) or \\(5\\times 5\\) convolutions. Another purpose is to increase the non-linearity as \\(1\\times 1\\) convolutions are immediately followed by ReLU. The two purposes of \\(1\\times 1\\) convolutions are stated clearly in this paper:\nThat is, \\(1\\times 1\\) convolutions are used to compute reductions before the expensive \\(3\\times 3\\) and \\(5\\times 5\\) convolutions. Besides being used as reductions, they also include the use of rectified linear activation making them dual-purpose.\nIn the more recent ResNet paper, the authors proposed to use “bottleneck” structure (shown below), which also involves the use of \\(1\\times 1\\) convolutions. The purpose of it is also for reducing or increasing dimensions.\nRelationship between fully-connected layers and \\(1\\times 1\\) convolutions In image classification, researchers often use fixed size input image and fully connected layers as classifiers to classify the image. But according to the father of convolutional neural networks – Yann lecun, there is no such thing as fully-connected layers and you do not need to use fixed size input image in testing time:\nIn Convolutional Nets, there is no such thing as “fully-connected layers”. There are only convolution layers with 1x1 convolution kernels and a full connection table. It’s a too-rarely-understood fact that ConvNets don’t need to have a fixed-size input. You can train them on inputs that happen to produce a single output vector (with no spatial extent), and then apply them to larger images. Instead of a single output vector, you then get a spatial map of output vectors. Each vector sees input windows at different locations on the input. In that scenario, the “fully connected layers” really act as 1x1 convolutions.\nThat is, we can interpret fully-connected layers as \\(1\\times 1\\) convolutions. For example, in VGG-16 network, the input image size is \\(224\\times 224\\), the output is a classification score for 1000 classes, whose size is \\(1000\\times 1\\times 1\\). If the input images have bigger size than \\(224\\times 224\\), we can interpret the fully-connected layers as convolutions in a sliding windows fashion so that the output of the network is a classification map of size \\(1000\\times W\\times H\\), where \\(W\u0026gt;1\\) and \\(H\u0026gt;1\\). Each point in each classification map represent the probability of the corresponding receptive field in the original image belonging to that specific class.\nConclusions In summary, \\(1\\times 1\\) convolutions are used for 2 purposes: ones is to reduce dimensions in order to reduce computational cost, the other is to increase non-linearity of the network (or the capacity of the network) in a cheap way.\nReferences A discussion about the meaning of \\(1\\times 1\\) convolutions Why \\(1\\times 1\\) convolutions are used Another post about the meaning of \\(1\\times 1\\) convolutions A discussion about the significance of network in network How to interpret the fully-connected layers as convolutions. ","date":"29 September 2017","externalUrl":null,"permalink":"/2017/09/29/1by1-convolution-in-cnn/","section":"Posts","summary":"\u003cp\u003eIn the early development of convolutional neural networks (CNNs),\nconvolutions with kernel size \u003cspan class=\"math inline\"\u003e\\(3\\times\n3\\)\u003c/span\u003e, \u003cspan class=\"math inline\"\u003e\\(5\\times 5\\)\u003c/span\u003e, \u003cspan\nclass=\"math inline\"\u003e\\(7\\times 7\\)\u003c/span\u003e or even \u003cspan\nclass=\"math inline\"\u003e\\(11\\times 11\\)\u003c/span\u003e are often used. In the more\nrecent literature, however, \u003cspan class=\"math inline\"\u003e\\(1\\times\n1\\)\u003c/span\u003e convolutions are becoming prevalent. In this post, I will try\nto explain what \u003cspan class=\"math inline\"\u003e\\(1\\times 1\\)\u003c/span\u003e\nconvolutions are and discuss why they are used in CNNs.\u003c/p\u003e","title":"1x1 Convolutions Demystified","type":"posts"},{"content":"","date":"29 September 2017","externalUrl":null,"permalink":"/tags/cnn/","section":"Tags","summary":"","title":"CNN","type":"tags"},{"content":"","date":"24 September 2017","externalUrl":null,"permalink":"/tags/tools/","section":"Tags","summary":"","title":"Tools","type":"tags"},{"content":"本文介绍一些我常用的 Android Apps，希望你也能喜欢。\nTickTick # Ticktick 是一款待跨平台的办事项管理工具，可以很方便地添加待办事项，同时 app 非常简洁，没有多余的功能，如果要使用额外的功能，需要购买，但是基本功能也足够用了。\nFooview # Fooview是一款轻量级但是功能强大的工具类应用，支持截图，录屏，自动 OCR(并且有类似锤子手机 big bang 的功能)，我最喜欢的功能是截图，很方便，不像系统的截图做的那么复杂。\nLastpass # Lastpass 是一个多平台的密码管理软件，以前对于密码都是多个网站采用一个，但是这样的安全性不足，对于一些重要的帐号，需要单独设置密码，如果时间长了，密码就忘了，Lastpass 可以记录网站信息和对应的密码信息，登录网站的时候可以自动填充帐号密码，比较方便，但是这个密码是在云端存放的，如果 Lastpass 服务器被攻破，用户的密码也就不安全了。\nShare # 新浪微博官方的时间线从很久以前就开始乱了，现在也增加了很多对我来说无用的功能，我只想安静刷微博，不想尝试什么“微博故事”。Share 一款第三方微博客户端，简洁好用，时间线不乱，作者很用心，更新速度很频繁。\nX 浏览器 # 一加手机自带的浏览器是 QQ 浏览器的改编版本，首页太笨重，广告信息太多。我对浏览器的要求是能查东西就可以，越简洁越好，不要给我看什么新闻。也试用了一些简洁的浏览器，譬如 Via, 还有夸克浏览器，还有 X 浏览器。经过反复比较，觉得还是 X 浏览器不错：更新快，简洁但是功能并不少，安装包体积也很小。如果你喜欢简洁，那么强烈推荐这款浏览器。\n欧路词典 # 欧路词典是一款被低估的词典，本人觉得完全可以吊打有道词典，必应词典等一众华而不实的词典。该词典最大的特色在于可以使用自定义的词典库，例如朗文词典(Langman)，牛津词典(OLAD) 和科林斯词典等。在谷歌上搜索 “mdx 词典”关键词，可以搜索到很多相关的资源以及如何使用的教程，这里不赘述。\n在意空气 # 一款空气质量 APP 是必须的，在意空气是一款不错的空气质量检测应用，可以查看各地实时的空气质量数据，如 AQI，PM2.5 等,并且它还支持以世界各地不同的标准度量当前空气质量（美国标准，欧盟标准）。\nMX Player # MX Player 一款功能强大的手机播放器，支持所有主流视频格式，支持自定义解码器，支持加载外部字幕等等。\n（全文完）\n","date":"24 September 2017","externalUrl":null,"permalink":"/2017/09/24/some-good-android-apps/","section":"Posts","summary":"\u003cp\u003e本文介绍一些我常用的 Android Apps，希望你也能喜欢。\u003c/p\u003e","title":"善用佳软---我常用的 Android 应用","type":"posts"},{"content":"这是一道小米 2018 校招算法工程师的编程题目，类似与正则表达式匹配，但是该题不能使用 Python，因此需要自己实现这个简单的匹配，题目如下:\n给出两个字符串 text 和 pattern, 两个字符串均由小写字母构成，找出 text 中匹配 pattern 的最短子字符串的起始以及终止的索引号码，所谓匹配，是指 pattern 中字符都出现在该子字符串，并且顺序不变，这些字符中间可以有其他字符出现，不要求连续。 样例输入格式为两个字符串，用空格隔开，输出为最短的匹配字符串的前后索引，用空格隔开，如果不存在这样的字符串，那么输出 -1， -1. 样例输入： axxxbcaxbcaxxbc abc abcd x axxxbaxbab ab 样例输出： 6 9 -1 -1 8 9\n这道题目的思路是依次遍历 text, 如果 pattern 的第一个字符被找到，那么从当前位置的下一个位置开始遍历 text 找 pattern 的第二个字符，重复这个过程，直到pattern 的最后一个字符被找到，或者遍历 text 也未找到 pattern 中所有字符串。 每找到这样的一个子字符串，就记录该字符串前后的索引，如果子字符串长度等于pattern，此时我们已经找到最短匹配，停止继续搜索；如果从 text 某个位置开始，未找到匹配 pattern 的子字符串，那么该位置以后也不可能会有，停止搜索。\n我们可以使用递归的代码来解决这个问题，也可以使用循环代码，递归方式的代码如下：\n#include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string text, pattern; // posInPattern mean the next search character in pattern // posInText means the next pos the search start int dfs(int posInPattern, int posInText){ if (posInPattern == (int)pattern.size()){ return posInText-1; } int endID = -1; for (int i = posInText; i != (int)text.size(); ++i){ if (text[i] == pattern[posInPattern]){ endID = dfs(posInPattern+1, i+1); break; } } return endID; } int main(){ cin \u0026gt;\u0026gt; text \u0026gt;\u0026gt; pattern; int lenText = (int)text.size(); int lenPattern = (int)pattern.size(); vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; records; for (int i = 0; i \u0026lt;= lenText-lenPattern; ++i){ if (text[i] == pattern[0]){ int end = dfs(1, i+1); if (end != -1){ records.push_back(make_pair(i, end)); }// if no matching substring are found starting from current //position, then no substring can be found after this position. else{ break; } } } if (records.empty()) {// if no matching substring is found cout \u0026lt;\u0026lt; \u0026#34;-1 -1\\n\u0026#34;; } else{ // if mathcing substring is found, then select the shortest one. int begin = records[0].first, end = records[0].second; for (auto it = records.begin()+1; it != records.end(); ++it){ if (it-\u0026gt;second - it-\u0026gt;first \u0026lt; end - begin){ begin = it-\u0026gt;first; end = it-\u0026gt;second; } } cout \u0026lt;\u0026lt; begin \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; end \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } return 0; } 采用循环方式的代码如下：\n#include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ string text, pattern; cin \u0026gt;\u0026gt; text \u0026gt;\u0026gt; pattern; int lenText = (int)text.size(); int lenPattern = (int)pattern.size(); vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; record; for (int i = 0; i \u0026lt;= lenText-lenPattern; ++i){ if (text[i] != pattern[0]){ continue; } else{ int j = i+1; // next search position in text int k = 1; // next search character in pattern while (j \u0026lt; lenText \u0026amp;\u0026amp; k \u0026lt; lenPattern){ if (text[j] == pattern[k]){ ++k; } ++j; } // if we found the string if (k == lenPattern){ record.push_back(make_pair(i, j-1)); } else{ break;} // we cann\u0026#39;t find any string after, so break } } if (records.empty()) {// if no matching substring is found cout \u0026lt;\u0026lt; \u0026#34;-1 -1\\n\u0026#34;; } else{ // if mathcing substring is found, then select the shortest one. int begin = records[0].first, end = records[0].second; for (auto it = records.begin()+1; it != records.end(); ++it){ if (it-\u0026gt;second - it-\u0026gt;first \u0026lt; end - begin){ begin = it-\u0026gt;first; end = it-\u0026gt;second; } } cout \u0026lt;\u0026lt; begin \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; end \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } return 0; } (全文完)\n","date":"21 September 2017","externalUrl":null,"permalink":"/2017/09/21/xiaomi201818-pattern-match/","section":"Posts","summary":"\u003cp\u003e这是一道小米 2018 校招算法工程师的编程题目，类似与正则表达式匹配，但是该题不能使用 Python，因此需要自己实现这个简单的匹配，题目如下:\u003c/p\u003e","title":"小米 2018 校招算法工程师编程之字符串匹配","type":"posts"},{"content":"The C++ standard library doesn\u0026rsquo;t support big integer operations such as addition and multiplication. In this post, I will show how to solve such problems in C++.\nBig integer addition # The built in integer types in C++ are mainly short, int, long and long long. These types can only represent relatively small integers. If we store big integers in these types, integer overflow may happen. As a solution, we can store big integers as strings and do integer addition the same way as we do in paper.\nThe following code accepts two integers represented as strings and return their sum as a string,\nstring bigIntAddition(const string\u0026amp; num1, const string\u0026amp; num2){ string result; int i = static_cast\u0026lt;int\u0026gt;(num1.size() - 1); int j = static_cast\u0026lt;int\u0026gt;(num2.size() - 1); int carry = 0; while (i \u0026gt;= 0 or j \u0026gt;= 0 or carry != 0){ int sum = (i \u0026lt; 0 ? 0 : num1[i--] - \u0026#39;0\u0026#39;) + (j \u0026lt; 0 ? 0 : num2[j--] - \u0026#39;0\u0026#39;) + carry; result += ((sum % 10) + \u0026#39;0\u0026#39;); carry = sum / 10; } std::reverse(result.begin(), result.end()); return result; } Big integer multiplication # Integer multiplication is bit more complex, if two integers have $m$ and $n$ digits, then the final result have a maximum of $m + n$ digits. One post on leetcode gives an excellent explanation of how to do mulitiplication manually, digit by digit. The basic idea is this\nStart from the least significant digit of both integers, and calculate their product. If the indices of the digits are $i$, $j$, then the product will be added to indices $i+j$ and $i+j+1$.\nThis is a repeated process where each digit in the result is gradually built by addition. Until we finished the process, the digits are changing their values continuously.\nFollowing is the code to do interger(expresses as string) multiplications,\nstring bigIntMultiplication(const string\u0026amp; num1, const string\u0026amp; num2){ if (num1 == \u0026#34;0\u0026#34; or num2 == \u0026#34;0\u0026#34;){ return \u0026#34;0\u0026#34;; } int N = static_cast\u0026lt;int\u0026gt;(num1.size()); int M = static_cast\u0026lt;int\u0026gt;(num2.size()); vector\u0026lt;int\u0026gt; result(N+M, 0); for (int i = N-1; i \u0026gt;= 0; --i){ for (int j = M-1; j \u0026gt;= 0; --j){ int tmp = (num1[i] - \u0026#39;0\u0026#39;) * (num2[j] - \u0026#39;0\u0026#39;); int sum = tmp + result[i+j+1]; result[i+j+1] = sum % 10; result[i+j] += sum / 10; } } // in case the result only have N+M-1 digits or one of num is zero ostringstream out; int i = 0; while (result[i] == 0) {++i;} for (; i != N+M; ++i){ out \u0026lt;\u0026lt; result[i]; } return out.str(); } Factorial of n # Factorial increases really fast, for example, the factorial of 100! has 158 digits. In order to represent such big integer, we can use an array to store its digit separately. Below is an algorithm to find the factorial of n,\ncreate an array res[N] big enough to store all the digits in n!, initialize res[0] to 1\nlet m be the number of digits that current result takes up, the initialize m to be 1\nfor num from 2 to n\ninitialize carry to 0 for each digit in current result (i.e., from res[0] to res[m-1]), let cur = num*res[j] + carry, put last digit of cur in res[j], put other digit in cur in carry. if carry is not zero, put every digit in carry into res by incresing m In order to simplify computation, we store all the digits of the result in reverse order, which means that the least significant digit is stored in the smallest index of the array, kind of like \u0026ldquo;small endian\u0026rdquo;. In each iteration, we also keep track of how many digits the current result takes up. The following code is an implementation of this idea,\nstring factorial(int n){ const int N = 10000; int* digits = new int[N]; digits[0] = 1; int m = 1; for (int num = 2; num \u0026lt;= n; ++num){ // multipy num and every digit in current result int carry = 0; for (int j = 0; j != m; ++j){ int cur += num*digits[j]; digits[j] = cur % 10; carry = cur / 10; } // if carry is not zeros, span current result using digits in carry while (carry){ digits[m++] = carry % 10; carry /= 10; } } ostringstream out; for (int i = m-1; i \u0026gt;= 0; --i){ out \u0026lt;\u0026lt; digits[i]; } delete[] digits; return out.str(); } References # Leetcode, add two strings. Leetcode, string multiplication. Calculating factorials of big intergers. ","date":"21 September 2017","externalUrl":null,"permalink":"/2017/09/21/big-integer-operations-cpp/","section":"Posts","summary":"\u003cp\u003eThe C++ standard library doesn\u0026rsquo;t support big integer operations such as\naddition and multiplication. In this post, I will show how to solve such\nproblems in C++.\u003c/p\u003e","title":"Some Programming Questions Related to Operations with Big Integers","type":"posts"},{"content":"The default GCC that comes with the CentOS 7.2 is GCC 4.8.5, which does not support the complete C++11 standard, for example, it does not fully support regular expressions. In order to use regular expression functions, we need to install at least GCC 4.9.0. The following installation procedure is applicable to CentOS 7 and are not tested on other Linux systems. Also you have to make sure that you have root privelege.\nUpdate:\nGCC 8.3 has been released on Feb 22, 2019. The installation process is the same as prvevious versions. Download the corrent tar file from the GNU ftp server, compile and install it.\nDownloading GCC source code # You can download the GCC source code from the official GNU ftp. I choose to install version 5.4.0.\ncurl https://ftp.gnu.org/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.bz2 -O tar jxvf gcc-5.4.0.tar.bz2 Install dependencies # We need to install 3 dependencies packages. It is recommended to install these packages through yum.\nyum install gmp-devel mpfr-devel libmpc-devel Configuration and install # Unlike other packages, it is recommended to create another build directory outside of the GCC source directory to build GCC.\nmkdir gcc-5.4.0-build cd gcc-5.4.0-build ../gcc-5.4.0/configure --enable-languages=c,c++ --disable-multilib make -j$(nproc) \u0026amp;\u0026amp; make install The comiplation process may take a long time and you need to be patient. It will install GCC under /usr/local. You can change the install dir using --prefix option if you prefer.\nPost-installation # You should add the install dir of GCC to your PATH and LD_LIBRARY_PATH in order to use the newer GCC. Add the following settings to /etc/profile:\nexport PATH=/usr/local/bin:$PATH export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH Maybe a restart of your current session is also needed.\nYou can download the whole install script here.\nReferences # https://gist.github.com/craigminihan/b23c06afd9073ec32e0c GCC install wiki GNU GCC ftp site GCC configure options ","date":"4 September 2017","externalUrl":null,"permalink":"/2017/09/04/install-gcc-newer-version-on-centos/","section":"Posts","summary":"\u003cp\u003eThe default GCC that comes with the CentOS 7.2 is GCC 4.8.5, which does not\nsupport the complete C++11 standard, for example, it does not fully support\n\u003ca href=\"http://en.cppreference.com/w/cpp/regex\" target=\"_blank\"\u003eregular expressions\u003c/a\u003e. In order to use\nregular expression functions, \u003ca href=\"https://stackoverflow.com/a/8061172/6064933\" target=\"_blank\"\u003ewe need to install at least GCC\n4.9.0\u003c/a\u003e. The following installation\nprocedure is applicable to CentOS 7 and are not tested on other Linux systems.\nAlso you have to make sure that you have root privelege.\u003c/p\u003e","title":"How to Compile and Install Latest Version of GCC on CentOS 7","type":"posts"},{"content":"The problem is as follows:\nGiven an array $A$ of length $N$, $A[i] \\ge 0$ ( $0 \\le i \\le N-1$) , and a number $K$. Find the longest subarray whose sum is divisible by $K$, if there are no such subarray, return 0;\nThe idea is to traverse the array and record the result of cumulative sum modulo $K$ and its corresponding index. If for index $i, j$, the remainder is the same, then the subarray between $i, j$ must be a valid subarray (i.e., its sum is divisible by $K$). In order to find the longest subarray, we can keep a list of index corresponding to each remainder (there are $K$ remainders, $0, 1, 2, \u0026hellip;, K-1$). During the traversing process, we can also easily find the longest subarray (index list of each remainder is stored in ascending order).\nBelow is the implementation of the above idea:\nint findLongestSubarray(vector\u0026lt;int\u0026gt;\u0026amp; nums){ int N = nums.size(); map\u0026lt;int, vector\u0026lt;int\u0026gt;\u0026gt; indexInfo; index[0].push_back(-1); // the remainder at current index int cur_remainder = 0; int maxLen = 0; for (int i = 0; i \u0026lt; N; i++) { cur_remainder = (cur_remainder + nums[i]) % K; if (indexInfo[cur_remainder].size() != 0){ maxLen = max(maxLen, i - indexInfo[cur_remainder].front()); } indexInfo[cur_remainder].push_back(i); } return maxLen; } Note that the line index[0].push_back(-1); is needed. Otherwise, for $A = [3]$ and $k=3$, we can not the right answer.\nTime complexity: traversing the array and finding the maxLen during the process takes $O(n)$ time. Space complexity is apparently $O(n)$.\nP.S. Thanks to Scott for pointing out that there is no need to sort the list corresponding to each remainder, because they are already in sorted order.\nReference # A blog here describing the algorithm ","date":"1 September 2017","externalUrl":null,"permalink":"/2017/09/01/longest-subarray-modulo-k/","section":"Posts","summary":"\u003cp\u003eThe problem is as follows:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGiven an array $A$ of length $N$, $A[i] \\ge 0$ ( $0 \\le i \\le N-1$) , and a\nnumber $K$. Find the longest subarray whose sum is divisible by $K$, if there\nare no such subarray, return 0;\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Find Longest Subarray Whose Sum Is Divisible by K","type":"posts"},{"content":"一道二分搜索问题 # 下午做了一道 Leetcode 的编程题目，牵扯出了二分搜索实现中需要特别注意的一个问题，题目如下\nYou are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.\nSuppose you have n versions [1, 2, \u0026hellip;, n] and you want to find out the first bad one, which causes all the following ones to be bad.\nYou are given an API bool isBadVersion(version) which will return whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n这道题可以使用二分搜索来解决，我写出了自认为正确的算法，运行的时候却总是提示 “Time Limit Exceeded”，最初的完整代码如下：\nint firstBadVersion(int n) { int head = 1, tail = n; while (head != tail) { int mid = (head + tail) / 2; if (isBadVersion(mid)) { tail = mid; } else { head = mid + 1; } } return head; } 看了一下这道题目的讨论，有人也遇到了同样的问题，解决办法出奇简单。问题的关键就在下面这行看似正确实则错误的代码：\nint mid = (head + tail)/2; 改正这个错误也很简单，只需要将上述的写法换成另外一种「形式上等价」的写法：\nint mid = head + (tail - head)/2; 之所以说是「形式上等价」是因为，仅从数学推导上来说，上面两种写法结果是一样的，但是计算机科学并不是仅仅是理论，实际中，每种基本数据类型所能表达的数字都是有范围的，如果超过了范围，我们必须考虑整形溢出 (overflow) 问题。假设 head 与 tail 都不超过 int 所能表示的最大正整数（用 INT_MAX 表示），我们并不能保证 head + tail 不超过 INT_MAX，如果两者之和大于 int 类型所能表达的最大的正整数时(该数为 $2^{31}-1$)，就会发生溢出；采用第二种写法，由于每一步的计算都没有溢出的可能，最终的结果也不会溢出，因此是更安全的写法。\n根据Wiki上的说法，市面上流传的很多二分搜索的实现都存在溢出问题。就连大名鼎鼎的《Programming Pearls》这本书在 1986 年版本上提供的也是第一种写法，直到二十多年后才改为第二种写法；Java 语言中的二分搜索实现起初也存在这个溢出 bug，这个 bug 存在了长达九年才被更正。在计算机发展早期,可能谁也没有预料到，未来的数据量会如此庞大，以至于数组的 index 相加也会造成溢出。Google Research Blog 也曾发布过一篇关于二分搜索实现的博文。\n当溢出发生，到底会发生什么？ # 你可能会好奇，如果发生溢出，到底会有什么后果呢？例如，如果一个 int 类型的数 num 等于 INT_MAX，那么 num 再加上一个正数，会发生什么？C++ 标准对此有明确规定，\nIf during the evaluation of an expression, the result is not mathematically defined or not in the range of representable values for its type, the behavior is undefined, unless such an expression is a constant expression, in which case the program is ill-formed. [Note: most existing implementations of C++ ignore integer overflows].\n也就是说，num 再加上一个正数，这是 \u0026ldquo;Undefined behaviour\u0026rdquo;，任何结果都有可能出现。\n上述结果是对于有符号类型 (signed type) 来说的，对于无符号类型 (unsigned type)，C++ 标准有如下规定：\nThis implies that unsigned arithmetic does not overflow because a result that cannot be represented by the resulting unsigned integer type is reduced modulo the number that is one greater than the largest value that can be represented by the resulting unsigned integer type.\n翻译过来就是：无符号类型不会发生溢出。如果一个无符号类型的数加上一个正数产生的结果大于该无符号类型所能表示的最大数，那么最终结果就是原结果与最大数加1取余的结果。\n举个例子，假设 num 是 unsigned int 所能表达的最大的数，那么 num + 1 = 0， num + 2 = 1，以此类推。一个示例程序如下：\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;limits\u0026gt; using namespace std; int main(){ unsigned int num = std::numeric_limits\u0026lt;unsigned int\u0026gt;::max(); for (int i = 1; i \u0026lt;= 3; i++){ unsigned result = num + i; cout \u0026lt;\u0026lt; result \u0026lt;\u0026lt; (i==3?\u0026#39;\\n\u0026#39;:\u0026#39; \u0026#39;); } return 0; } 该程序运行输出结果为：\n0 1 2 (全文完)\n参考 # 当溢出产生，到底会发生什么？Stackoverflow 上的一个讨论。 ","date":"27 August 2017","externalUrl":null,"permalink":"/2017/08/27/binary-search-overflow-issue/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003e一道二分搜索问题 \n    \u003cdiv id=\"%E4%B8%80%E9%81%93%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%B8%80%E9%81%93%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e下午做了\u003ca href=\"https://leetcode.com/problems/first-bad-version/description/\" target=\"_blank\"\u003e一道 Leetcode 的编程题目\u003c/a\u003e，牵扯出了二分搜索实现中需要特别注意的一个问题，题目如下\u003c/p\u003e","title":"从二分搜索实现中的一个 bug 说起","type":"posts"},{"content":"据说墙升级了，本来用得很流畅的服务也不行了，时不时断掉，让人很恼火。有必要升级一下梯子了，于是我也研究了一下利用 VPS 自建梯子的方法。本文总结一下安装中遇到的问题和解决办法，只针对 CentOS 7 系统，其他 Linux 系统配置方法是类似的。\n关于 Shadowsocks 原理，网上有很多资源，这里不再赘述。要使用 Shadowsocks，首先要有可以访问外网的服务器，配置好服务器（主要是配置 Shadowsocks 的服务端），然后下载对应于不同平台的客户端，对应配置，就可以访问谷歌了。因此第一步，我们需要购买一台境外的 VPS （虚拟服务器）。\nVPS 选择与 操作系统安装 # VPS 提供商有很多，常见的有 Vultr，Linode，Digital ocean，Bandwagonhost。这些 VPS 提供商的网站可能会上不去，因此注册之前最好确保自己有一款免费的爬墙梯子，例如赛风，可以向这个地址发邮件索要下载地址；或者蓝灯。\n在这几个 VPS 提供商中，Vultr 和 Bandwagonhost 比较实惠，Vultr 有一个最便宜的2.5 美元一个月的套餐，很抢手，经常断货，Bandwagon 有一个 19.99 美元包年的套餐，也非常不错。如果选用 Vultr，支付的话可以使用 paypal，paypal 可以添加国内的银联卡，比较方便。使用 Bandwagonhost 支付更方便，直接支持支付宝付款。一般来说， VPS都会提供不同的操作系统供用户选择，例如 CentOS，Ubuntu，FreeBSD 等等。我对CentOS 非常熟悉，所以就选了 CentOS 系统，Vultr 提供的是 CentOS 7 系统，跟CentOS 6 的有一定的区别，需要注意。Bandwagonhost 默认提供的是 CentOS 6 的系统，如果你需要安装 CentOS 7 的系统，需要自己重装系统（很方便，大约几分钟就能搞定）。\nBandwagonhost 购买及使用 # Bandwagonhost 注册成功以后，可以在注册选择自己想要购买的虚拟服务器，然后按照提示操作购买就可以，服务器 location 可以选择 Los Angeles，支付的话选择 Alipay 直接用支付宝付款。\n服务器购买以后，点击右上角「Client Area」，\n然后点击「Services」,选择「My Services」，会出现购买的服务器的信息。\n在出现的页面，会显示订购的服务器的信息，如下图所示\n点击「KiwiVM Control Panel」，会进入服务器的控制与操作界面，在这里可以对订购的虚拟服务器进行各种操作，例如修改密码，重装系统，输入简单或者复杂的指令等等，见下图。\nBandwagonhost 默认安装的是 CentOS 6 系统，如果需要其他系统可以自己重新安装。另外，CentOS 6 系统可以直接一键安装 shadowsocks 服务，简直是为我国人民量身定做。\n从短暂的使用上看，Vultr 和 Bandwagonhost 使用起来速度都可以，用 ssh 客户端链接服务器的时候，都不是很稳定，输入命令或者使用 Vim 编辑文本的时候经常没有反应，卡死，我不得不经常重新打开一个 session。Bandwagonhost 修改 firewalld 服务以后，使用 ssh 客户端一段时间内无法连接服务器，不知道什么原因，Vultr 没有出现这种情况。\n另外，如果要使用 Vultr 服务，可以点击此链接注册，据说会有优惠。Bandwagonhost 一些网站也有优惠码，购买之前可以在网上搜索一下，毕竟都是按照美刀结算的，苍蝇腿也是肉啊，我的推荐链接为 https://bandwagonhost.com/aff.php?aff=27252。\nSS 服务端的安装及配置 # 一键式安装 # SS 服务的安装，主要参考了这篇博文，傻瓜式安装，对 Linux 系统熟悉的人应该都不会有问题。使用下面的命令安装：\nwget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh chmod +x shadowsocks-all.sh ./shadowsocks-all.sh 2\u0026gt;\u0026amp;1 | tee shadowsocks-all.log 有四种 SS 服务端可以安装，推荐选择第一个：shadowsocks-python。然后直接按照提示一步一步往下就可以安装了。安装成功以后，会有提示，告诉你服务器的地址，端口号，以及密码。安装成功的提示大概类似于下面：\nCongratulations, your_shadowsocks_version install completed! Your Server IP :your_server_ip Your Server Port :your_server_port Your Password :your_password Your Encryption Method:your_encryption_method Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients) ss://your_encryption_method:your_password@your_server_ip:your_server_port Your QR Code has been saved as a PNG file path: your_path.png Welcome to visit:https://teddysun.com/486.html Enjoy it! 使用这些信息就可以在自己客户端使用 ss 服务了，上面的链接有详细操作。\n安装好以后，可执行程序位于 /etc/init.d/ 目录,名称为 shadowsocks-python，该程序有四个选项，\n/etc/init.d/shadowsocks-python start #启动 /etc/init.d/shadowsocks-python stop #停止 /etc/init.d/shadowsocks-python restart #重启 /etc/init.d/shadowsocks-python status #当前状态 /etc/shadowsocks-python 目录下是服务端的配置文件 config.json，如果要对服务端配置进行更改，例如更改密码以及端口号，可以直接修改该文件。修改完文件以后，该配置并不能生效，需要自己重启 shadowsocks 服务：直接使用/etc/init.d/shadowsocks-python restart 命令重启服务。\n开启多用户模式 # Vultr 以及 Bandwagonhost 的套餐提供了每月提供了大量的流量，500G 到 1000 G 不等，足够多人使用，根据这里 的说明，目前只有 Python 以及 Go 服务端可以开启多用户模式，可以通过修改config.json 文件来实现多用户模式(不要忘记在更改后重启 shadowsocks 服务)。一个示例多用户配置如下：\n{ \u0026#34;server\u0026#34;:\u0026#34;0.0.0.0\u0026#34;, \u0026#34;local_address\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;local_port\u0026#34;:1080, \u0026#34;port_password\u0026#34;:{ \u0026#34;4278\u0026#34;:\u0026#34;fuckgfw1\u0026#34;, \u0026#34;4279\u0026#34;:\u0026#34;fuckgfw2\u0026#34;, \u0026#34;4280\u0026#34;:\u0026#34;fuckgfw3\u0026#34;, \u0026#34;4281\u0026#34;:\u0026#34;fuckgfw4\u0026#34; }, \u0026#34;timeout\u0026#34;:300, \u0026#34;method\u0026#34;:\u0026#34;aes-256-cfb\u0026#34;, \u0026#34;fast_open\u0026#34;:false } 请严格遵循 json 文件的格式，除了最后一个选项，每个选项后面都需要一个逗号。\n按照网上的教程，更改 json 文件，重启 shadowsocks 服务，发现新增加的端口在客户端仍连接不上。经过查找，发现原因是新增加的端口被系统的 firewall 服务屏蔽了，需要把新增加的端口加入白名单，参考这里给出的解决办法，如果新增加的端口是 1234，那么采用以下命令开启该端口，\nfirewall-cmd --permanent --zone=public --add-port=1234/tcp firewall-cmd --permanent --zone=public --add-port=1234/udp systemctl restart firewalld firewalld 服务的重启是必要的，否则在客户端仍然无法使用该端口连接 SS 服务。经过以上操作，新增加的端口就可以正常连接了。\n定时检查 SS 服务是否正常运行 # 由于你懂的原因，SS 服务并不稳定，可能会断掉。断掉以后，我立马采用另外一个梯子去Bandwagonhost 官网看了一下我的帐号，发现 SS 服务自动关闭了，于是自己手动重启了一下。上网搜了一下，可以采用脚本检测 SS 服务进程是否还存在，如果不存在，则自动重启服务，利用 Linux 系统的 cron来定时执行脚本。有人已经写好了脚本，我们可以直接下载使用，使用以下命令\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-crond.sh chmod +x shadowsocks-crond.sh 然后需要确定系统的 crond 服务处于运行状态，使用 systemctl status crond.service，示例输出如下:\n● crond.service - Command Scheduler Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled) Active: active (running) since Sun 2017-06-04 21:19:23 EDT; 2 months 21 days ago Main PID: 1638 (crond) Memory: 164.0K CGroup: /system.slice/crond.service └─1638 /usr/sbin/crond -n 如果该项服务被关闭了，直接使用 systemctl restart crond.service 重启服务即可。然后编辑文件 /etc/crontab，在文件最后加上一行，\n*/5 * * * * root bash /root/shadowsocks-crond.sh 以上命令表示每 5 分钟执行一次脚本 /root/shadowsocks-crond.sh，当然也可以根据自己的实际情况指定时间，譬如十分钟检查一次，保证服务器断掉之后可以尽快恢复。\nShadowsocks 客户端安装 # 配置好服务端以后，我们需要配置客户端才能使用 Shadowsocks。Shadowsocks 的客户端涵盖主流平台，Windows PC，Linux，MAC，Android，iOS都有对应的客户端。下载以后，对应自己在服务器端的设置，配置客户端即可，就可以顺利访问谷歌了。Happy Googling~\n（全文完）\n参考 # https://www.liquidweb.com/kb/how-to-start-and-enable-firewalld-on-centos-7/ https://shadowsocks.be/6.html ","date":"6 August 2017","externalUrl":null,"permalink":"/2017/08/06/vps-ss-issue-solution/","section":"Posts","summary":"\u003cp\u003e据说墙升级了，本来用得很流畅的服务也不行了，时不时断掉，让人很恼火。有必要升级一下梯子了，于是我也研究了一下利用 VPS 自建梯子的方法。本文总结一下安装中遇到的问题和解决办法，只针对 CentOS 7 系统，其他 Linux 系统配置方法是类似的。\u003c/p\u003e","title":"CentOS 7 系统安装 Shadowsocks 并且开启多用户模式指南","type":"posts"},{"content":"In some situations, we have several subplots and we want to use only one colorbar for all the subplots. How to do this in Matplotlib?\nTwo ways can be employed.\nThe conventional method # The first method is like normal plotting: first draw the main plot, then add a colorbar to the main plot. Matplotlib provide different ways to add a colorbar: explicit or implicit way.\nThe explicit way # The idea is to adjust the existing axes manually to make room for an additional colorbar. Then explicitly add an axes where the colorbar resides. See the code below for details:\nimport matplotlib.pyplot as plt import numpy as np fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(8.5, 5)) for ax in axes.flat: ax.set_axis_off() im = ax.imshow(np.random.random((16, 16)), cmap=\u0026#39;viridis\u0026#39;, vmin=0, vmax=1) fig.subplots_adjust(bottom=0.1, top=0.9, left=0.1, right=0.8, wspace=0.02, hspace=0.02) # add an axes, lower left corner in [0.83, 0.1] measured in figure coordinate with axes width 0.02 and height 0.8 cb_ax = fig.add_axes([0.83, 0.1, 0.02, 0.8]) cbar = fig.colorbar(im, cax=cb_ax) set the colorbar ticks and tick labels cbar.set_ticks(np.arange(0, 1.1, 0.5)) cbar.set_ticklabels([\u0026#39;low\u0026#39;, \u0026#39;medium\u0026#39;, \u0026#39;high\u0026#39;]) plt.show() In this way, we can control the position of colorbar precisely. The output image is like this:\nThe implicit way # Matplotlib also offers method which can adjust the existing axes and make room for a colorbar implicitly. See the code below for an example:\nimport matplotlib.pyplot as plt import numpy as np fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(8.5, 5)) for ax in axes.flat: ax.set_axis_off() im = ax.imshow(np.random.random((16, 16)), cmap=\u0026#39;viridis\u0026#39;, vmin=0, vmax=1) # notice that here we use ax param of figure.colorbar method instead of # the cax param as the above example cbar = fig.colorbar(im, ax=axes.ravel().tolist(), shrink=0.95) cbar.set_ticks(np.arange(0, 1.1, 0.5)) cbar.set_ticklabels([\u0026#39;low\u0026#39;, \u0026#39;medium\u0026#39;, \u0026#39;high\u0026#39;]) plt.show() In this way, you have to manually tweak the shrink param of fig.colorbar method to make the main plot and the colorbar appear the same height. See the output image below Both the two methods have an disadvantage that it is difficult to control the padding space between subplots. You have to adjust the figure aspect ratio and also the padding params to make the padding between the subplots appear the same. In fact, the padding in horizontal and vertical direction is not the same for the above two plots even after tweaking.\nUsing the axesgrid approach # Matplotlib also provides a AxesGrid toolkit to deal with padding and colorbar issues arising from plotting multiple subplots. By using axesgrid, the padding between subplots are guaranted to be the same. Also the colorbar have exactly the same height as the main plot. Following is a working example showing how to use axesgrid:\nimport matplotlib.pyplot as plt from mpl_toolkits.axes_grid1 import AxesGrid import numpy as np fig = plt.figure(figsize=(6, 4)) grid = AxesGrid(fig, 111, nrows_ncols=(2, 3), axes_pad=0.05, cbar_mode=\u0026#39;single\u0026#39;, cbar_location=\u0026#39;right\u0026#39;, cbar_pad=0.1 ) for ax in grid: ax.set_axis_off() im = ax.imshow(np.random.random((16,16)), vmin=0, vmax=1) # when cbar_mode is \u0026#39;single\u0026#39;, for ax in grid, ax.cax = grid.cbar_axes[0] cbar = ax.cax.colorbar(im) cbar = grid.cbar_axes[0].colorbar(im) cbar.ax.set_yticks(np.arange(0, 1.1, 0.5)) cbar.ax.set_yticklabels([\u0026#39;low\u0026#39;, \u0026#39;medium\u0026#39;, \u0026#39;high\u0026#39;]) plt.show() See the output image below.\nYou can see that the padding between subplots are all the same, also the colorbar have the same height as the main plot. Conveniently, isn\u0026rsquo;t it?\nSummary # Using the normal way is more flexible but also annoying because you have to adjust the paramters by trial and error. By employing the axesgrid, you can simplify the plotting of multiple plot with just one colorbar, significantly. In my opinion, the latter way is prefered.\nReferences # https://stackoverflow.com/questions/13784201/matplotlib-2-subplots-1-colorbar https://goo.gl/BT6Maz https://goo.gl/lHF3Aa https://matplotlib.org/examples/pylab_examples/subplots_adjust.html ","date":"11 June 2017","externalUrl":null,"permalink":"/2017/06/11/mpl_multiplot_one_colorbar/","section":"Posts","summary":"\u003cp\u003eIn some situations, we have several subplots and we want to use only one\ncolorbar for all the subplots. How to do this in Matplotlib?\u003c/p\u003e","title":"How to Plot Only One Colorbar for Multiple Plot Using Matplotlib","type":"posts"},{"content":"In Matplotlib, Axes is the primary place where we put plot elements, such as lines, texts and legends. However, for a long time, I failed to grasp the meaning of aspect ratio in Matplotlib, thus was constantly frustrated by the behavior of Maplotlib every time I attempted to change the aspect ratio of a plot. This post is the result of my attempt to understand it and my findings. Hope it can help you too.\nA first unsuccessful try Suppose I have the following code:\nimport matplotlib.pyplot as plt import numpy as np plt.style.use(\u0026#39;ggplot\u0026#39;) x = np.linspace(-5, 5, 100) y1 = np.exp(0.5*x) y2 = np.sin(x) fig = plt.figure() ax = fig.add_subplot(111) ax.plot(x, y1) ax.plot(x, y2) plt.show() The code snippet above produces the following image\nThis image is a bit thin. What if I want the width of the output image to be longer than its height, for example , an image with aspect ratio 0.6? According to the official documentation of Matplotlib, we can use set_aspect method of Axes class to set aspect ratio of an Axes object. This method has a parameter aspect which can be any positive number num. The description for num is rather vague:\na circle will be stretched such that the height is num times the width. aspect=1 is the same as aspect=‘equal’.\nAfter I add a statement\nax.set_aspect(aspect=0.5) in the above script, the rendered output image becomes\nApparently, this is not what I want: the new output image is even thinner. But what has gone wrong? It took me a lot of efforts to find out.\nThe meaning of aspect ratio in Matplotlib Before we get into aspect ratio, we should first know that there are four different coordinate systems in Matplotlib, which you are dealing with implicitly. Below is a brief description:\nCoordinate system Description data The userland data coordinate system, controlled by the xlim and ylim axes The coordinate system of the Axes; (0,0) is bottom left of the axes, and (1,1) is top right of the axes. figure The coordinate system of the Figure; (0,0) is bottom left of the figure, and (1,1) is top right of the figure. display This is the pixel coordinate system of the display; (0,0) is the bottom left of the display, and (width, height) is the top right of the display in pixels. Usually, these coordinate systems will work under the hood and you can hardly notice their existence. In our case, what we really want to set is the aspect ratio in the display coordinate system, i.e., the physical length of axes height divided by its width. But the aspect ratio in the set_aspect() method refers to the aspect ratio in data coordinate system. For example, if the aspect ratio equals 1, then in the display coordinate, the same length in data coordinate have the same displayed length. See the following image for an example (aspect=1):\nYou can easily verify that for the same interval in data coordinate system in x and y axis, they have the same length in display coordinate system.\nTransform between data and display coordinate Now that we know this distinction, the issue boils down to calculating the right aspect ratio to use in data coordinate system given the desired aspect ratio in display coordinate system. Suppose the axes height and width of the output plot are denoted as \\(disp_h\\) and \\(disp_w\\), then the desired display aspect ratio is\n\\[disp_r=\\frac{disp_h}{disp_w}\\ .\\]\nIf we denote the height and width in the data coordinate system as \\(data_h\\) and \\(data_w\\), we have the following equation:\n\\[\\frac{disp_w}{data_w}*aspect=\\frac{disp_h}{data_h}\\ .\\]\nThen the aspect we need to use in the set_aspect() method is\n\\[\\begin{equation}\\begin{aligned} aspect \u0026amp; = \\frac{data_w}{data_h}*\\frac{disp_h}{disp_w}\\\\ \u0026amp; =\\frac{data_w}{data_h}*disp_r \\\\ \u0026amp; = \\frac{1}{data_r}*disp_r \\end{aligned}\\end{equation}\\]\n\\(data_h\\) and \\(data_w\\) in the above equation can be easily calculated once we get the x and y axis limit using get_xlim() and get_ylim()methods of an Axes class object. Or we can directly calculate the dataRatio using the get_data_ratio() method of Axes class.\nThe final plot Now we are ready to set the display aspect ratio to whatever value we want using the following code:\nClick to show the code. import matplotlib.pyplot as plt import numpy as np plt.style.use(\u0026#39;ggplot\u0026#39;) x = np.linspace(-5, 5, 100) y1 = np.exp(0.8*x) y2 = np.sin(x) fig = plt.figure() ax = fig.add_subplot(111) ax.plot(x, y1) ax.plot(x, y2) ratio = 0.3 xleft, xright = ax.get_xlim() ybottom, ytop = ax.get_ylim() # the abs method is used to make sure that all numbers are positive # because x and y axis of an axes maybe inversed. ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio) # or we can utilise the get_data_ratio method which is more concise # ax.set_aspect(1.0/ax.get_data_ratio()*ratio) plt.show() The following images are plotted using the same data but with different display aspect ratios.\n(red numbers in each plot denote their axes aspect ratio)\nWhen we have shared x axis Usually, when we plot two subplots in a 1*2 layout, they have the same x axis but different y axis limit. If we share their x axis, we must set the parameter adjustable to “box-forced” in order to set the aspect ratios correctly. Below is a valid example showing how to do this\nClick to show the code. import matplotlib.pyplot as plt import numpy as np y1 = np.random.uniform(0.1, 0.7, size=(167,)) y2 = np.random.uniform(1, 100, size=(167,)) y1 = sorted(y1) y2 = sorted(y2) fig = plt.figure(figsize=(10,3)) fig.set_edgecolor(\u0026#39;red\u0026#39;) ax1 = fig.add_subplot(121) ax2 = fig.add_subplot(122, sharex=ax1) ax1.plot(y1) ax1.set_ylim([min(y1)*0.9, max(y1)*1.1]) ax1.set_ylabel(\u0026#39;y1\u0026#39;) ax2.plot(y2) ax2.set_ylim([min(y2)*0.9, max(y2)*1.1]) ax2.set_ylabel(\u0026#39;y2\u0026#39;) ratio = 0.4 for ax in [ax1, ax2]: xmin, xmax = ax.get_xlim() ymin, ymax = ax.get_ylim() print((xmax-xmin)/(ymax-ymin)) ax.set_aspect(abs((xmax-xmin)/(ymax-ymin))*ratio, adjustable=\u0026#39;box-forced\u0026#39;) plt.show() The produced figure is\nThe two subplots in the above figure have exactly the same display aspect ratio.\nOK, this is the end of this post, I hope that now you can finally under this and set the desired image aspect ratio without any difficulty.\nReferences https://stackoverflow.com/a/14911939/6064933 https://stackoverflow.com/a/43806072/6064933 https://stackoverflow.com/q/18572234/6064933 ","date":"3 June 2017","externalUrl":null,"permalink":"/2017/06/03/change-aspect-ratio-in-mpl/","section":"Posts","summary":"\u003cp\u003eIn Matplotlib, \u003ca\nhref=\"https://matplotlib.org/api/axes_api.html\"\u003e\u003ccode\u003eAxes\u003c/code\u003e\u003c/a\u003e is\nthe primary place where we put plot elements, such as lines, texts and\nlegends. However, for a long time, I failed to grasp the meaning of\naspect ratio in Matplotlib, thus was constantly frustrated by the\nbehavior of Maplotlib every time I attempted to change the aspect ratio\nof a plot. This post is the result of my attempt to understand it and my\nfindings. Hope it can help you too.\u003c/p\u003e","title":"How to Set the Aspect Ratio of Image (or Axes) in Matplotlib?","type":"posts"},{"content":"A few days ago, I found that Matplotlib can not show some Unicode characters (some Chinese characters) using its default settings. In the rendered output image, Chinese characters are shown as blank boxes. After reading a lot of posts on this issue, I am finally clear about how to use Unicode characters properly in Matplotlib.1\nThe reason that Chinese characters are shown as boxes is that Matplotlib\u0026rsquo;s default font does not support Chinese. In order to use Chinese, we need to tell Matplotlib to use a font which supports Chinese. Or, more directly, we can provide the path of a Chinese font to Matplotlib.\nThis post assumes that fc-list is available on your system. If this is not the case, you should first install fontconfig. On Linux, fontconfig is usually pre-installed, so no need to worry. On Windows, you can install MiKTeX or TeX Live in order to use fc-list.\nSpecify Chinese font by name # The first way to use Chinese is to give a valid font name to Matplotlib. Before going on to the next step, make sure that there are Chinese fonts on your system. If that is not the case, or if you want to try a new Chinese font, for example, Source Han Serif recently released by Google and Adobe2.\nFind valid Chinese fonts # Matplotlib provides the FontManager class to deal with fonts. This class has an attribute ttflist which provides a list of font files indexed by Matplotlib. We can also get each font\u0026rsquo;s name easily from this list. The problem is that we do not know which of these fonts support Chinese.\nThis is when fc-list comes to help. This command can help us find Chinese fonts installed on the system. The command fc-list :lang=zh will list all the available Chinese fonts. But it should be noted that not all Chinese fonts are indexed by Matplotlib. Some of the ttc font files can not be used by Matplotlib. So we need to find the intersection of available Chinese fonts and fonts indexed by Matplotlib.\nUse a font # After we have found a valid Chinese font indexed by Matplotlib, we can tell Matplotlib to use it by changing the Matplotlib rc in our script. In this way, all the following plotting command will use the new font. Suppose that you have installed \u0026ldquo;STKaiti\u0026rdquo; on your system, the following code will use it to render Chinese:\nimport matplotlib as mpl font_name = \u0026#34;STKaiti\u0026#34; mpl.rcParams[\u0026#39;font.family\u0026#39;]=font_name mpl.rcParams[\u0026#39;axes.unicode_minus\u0026#39;]=False # in case minus sign is shown as box plt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;) plt.show() In the above code, font_name can be the name of any valid Chinese font. If you just want to use a Chinese font for a particular command, you can directly specify the font\u0026rsquo;s name in the plotting command:\nplt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;, fontname=font_name) This is my preferred way of using Chinese fonts with Matplotlib.\nSpecify Chinese font by path # In order to use any font on our system, we should try the second way \u0026mdash; directly give a font\u0026rsquo;s path to Matplotlib. The code is like this:\nimport matplotlib.font_manager as mfm import matplotlib.pyplot as plt font_path = \u0026#34;/usr/share/fonts/custom/simhei.ttf\u0026#34; prop = mfm.FontProperties(fname=font_path) plt.text(0.5, 0.5, s=u\u0026#39;测试\u0026#39;, fontproperties=prop) plt.show() where font_path is the path to a Chinese font on your system.\nConclusion # Both the two ways are easy to follow. You can choose whichever suits your need best. For the complete code and also info on how to find available Chinese fonts on your system, please refer to the code on this repo.\nReferences # The first way This page shows how to use the first method. This SO post also use the second way. Matplotlib official example on the second way. How to use the fontconfig pattern While this post is about how to show Chinese Characters, it should work for other languages too, should you change the settings accordingly.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf you do not know how to install fonts on Linux or Windows, see here and here for detailed guides.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"13 May 2017","externalUrl":null,"permalink":"/2017/05/13/guide-on-how-to-use-chinese-with-matplotlib/","section":"Posts","summary":"\u003cp\u003eA few days ago, I found that Matplotlib can not show some Unicode characters\n(some Chinese characters) using its default settings. In the rendered output\nimage, Chinese characters are shown as blank boxes. After reading a lot of\nposts on this issue, I am finally clear about how to use Unicode characters\nproperly in Matplotlib.\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e","title":"A Guide on Using Unicode Characters in Matplotlib","type":"posts"},{"content":"On my CentOS system, I usually use eog to view images in the console. But I am a little upset by its speed of opening an image. I do not need such functionality besides viewing an image. So I decided to find another lightweight replacement.\nAfter searching the internet, I found a post on stackexchange. According to the answers in the post, I decided to install feh on my CentOS 7 system. The install process turns out to be a little bumpy.\nFeh is not in the official yum repo. So we have to build it from source. Unfortunately, the offical page only gives instructions on how to install it on Debian-based systems. What is worse, some of the package names are different on CentOS. After some trial and error, I succeeded in installing it on my system. Here is how.\nInstall # First, we need to install some dependencies:\nyum -y install libcurl-devel libX11-devel libXt-devel libXinerama-devel libpng-devel Then we need to manually download other packages and install them:\nwget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Kenzy:/modified:/C7/CentOS_7/x86_64/imlib2-1.4.6-2.1.x86_64.rpm wget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Kenzy:/modified:/C7/CentOS_7/x86_64/imlib2-devel-1.4.6-2.1.x86_64.rpm wget https://jaist.dl.sourceforge.net/project/libjpeg-turbo/1.5.1/libjpeg-turbo-official-1.5.1.x86_64.rpm yum --nogpgcheck localinstall imlib2-1.4.6-2.1.x86_64.rpm imlib2-devel-1.4.6-2.1.x86_64.rpm libjpeg-turbo-official-1.5.1.x86_64.rpm After that, get the latest feh release from official github repo, compile and install (make sure that you have root privilege, or you have to install it on other directories which you have write access):\ngit clone git://github.com/derf/feh.git cd feh make -j${nproc} \u0026amp;\u0026amp; make install I have put all the command into a bash script, you can find it here. Simply run the script to install feh.\nIf nothing went wrong, you should be able to use feh right away.\nUsage # Limit the window size to a specific size # We can use -g or --geometry option:\n-g, \u0026ndash;geometry WxH[+X+Y] Limit the window size to DIMENSION[+OFFSET]\nFor example, to show image with maximum window size of 400x500, use the following command:\nfeh --geometry 400x500 /home/images/ Keep the image viewing window to screen size # We can use -. or --scale-down to scale the image to fit the screen size:\nfeh --scale-down /home/images/ Display the image info without showing the image # We can use -l or --list to show image info (it width, height, etc.) without showing the image.\nfeh -l /home/images/ References # feh command cheatsheet: https://github.com/derf/feh/blob/master/src/help.raw feh man page: https://manpages.debian.org/testing/feh/feh.1.en.html ","date":"6 May 2017","externalUrl":null,"permalink":"/2017/05/06/install-feh-image-viewer-on-centos/","section":"Posts","summary":"\u003cp\u003eOn my CentOS system, I usually use \u003ca href=\"https://github.com/GNOME/eog\" target=\"_blank\"\u003eeog\u003c/a\u003e to view\nimages in the console. But I am a little upset by its speed of opening an\nimage. I do not need such functionality besides viewing an image. So I decided\nto find another lightweight replacement.\u003c/p\u003e","title":"Install feh Image Viewer from Source on CentOS 7","type":"posts"},{"content":"这个月中旬，ICME Workshop 的投稿结果公布，我投的论文被接收了，忙完 camera-ready 论文的提交和注册，我开始办理香港签证相关的东西。\n会议在香港召开，应该办理港澳通行证并且加盖合适的签注。由于是第一次办理港澳通行证，我一头雾水，不知道该准备什么东西，而且我的情况还比较特殊，因为我的户口在研究生报到的时候没有迁到北京。我去网上搜了一下，看到了北京市公安局出入境网站的港澳通行证办理说明，我把说明从头到尾仔细看了一遍，摘录出来对我有用的东西。按照说明，我属于非京籍学生，也享有在北京办理港澳通行证的权利，只是需要一些额外的证明材料，对于这些额外材料，网站上是这么写的:\n高等院校在读大学生须提交本人户口簿（首页、本人页及变更页）、有效期内的二代居 民身份证、就读院校出具的有效期内的《北京高校非北京户籍大学生在学证明》原件以 及由学校学籍管理部门核实并加盖公章的《教育部学籍在线验证报告》原件\n我先从最容易办的材料开始，先让老妈从家里寄来户口本，然后去公安局认可的照相馆拍了照片，拿到照片回执单。接着开始办理《北京高校非北京户籍大学生在学证明》和《教育部学籍在线验证报告》，我们属于研究所，所以我以为盖章的地方就是研究生部，去了研究生部，找到负责的老师，说明我需要开一个在学证明，给学籍验证报告盖章，老师看了一眼，问我导师是谁，然后扔给我一个表格，让我找谭老师签字，签字以后才能给我盖章。我给谭老师去了一封邮件说明需要他的签字，谭老师同意了，让我找马秘书盖章。可是上午马老师一直在会议室开会，正好上午山哥送上来马老师团购的樱桃，让我转交给马老师。我等到上午十一点半，还未见他们开完会，就先回宿舍吃饭了，我打算下午交给她樱桃的时候顺便盖章。下午到了实验室，去马老师办公室敲了好几次门，一直没有人。后面马老师来电了，让我帮她把樱桃带下去交给她，我借机说明了盖章的事情，马老师说不急的话明天再给我盖章。结果第二天上午和下午我去敲了几次办公室门，还是没有人，我等不及了，给马老师发了一条短信，马老师回信说她先生生病了，所以没来上班，让我去找尹老师盖章。我匆忙去找尹老师说明情况，终于盖上了谭老师的签字章。\n接着去研究生部盖研究生部的章，盖了章，回实验室和 WHS 师兄交流了一下，他告诉我，他 2015 年办理护照和港澳通行证的时候，去的是北京市公安局海淀分局，在「西钓鱼台」，而且不用预约办理。但是官网的说明上要求预约办理，为了稳妥，我登录北京市公安局出入境网站准备预约，可是在填写预约信息的网页，怎么都无法点击「下一步」按钮，进入下一步的页面，不知道什么原因，我以为是我电脑的原因，去 PB 师兄那里试了一下，还是不行，点击网页下方「下一步」就是没反应。因为 WHS 师兄说不预约也行，我就骑摩拜赶到附近最近的中关村西派出所，先去了解一下到底什么情况，到了地方，办事的人告诉我，必须先预约才能办理，在手机上也可以预约，我出去在手机上试了一下，发现前面在实验室填写的网页有一个输入框填写出了问题：「户口所在地」一栏，设计的是必须从所给的选项中选一项，但是也允许自己输入，我输入的内容多了一个「省份」的「省」字，因此通过不了，我使用的 Chrome 浏览器，弹出不了错误提示，所以我一直不知道问题在哪里，直到使用手机，弹出了错误窗口，我才知道问题所在。想着办一次证明不容易，以后护照也可能会用得到，索性把港澳通行证和护照一起办了吧，结果我发现护照办理可以预约中关村西派出所，但是港澳通行证办理只能预约出入境管理总队，不知道怎么回事，如果这两个证件不能选到一起，那证明材料岂不是要准备两份了。我看看手机，还没到下班时间，赶快又去派出所问了一下，值班的是两个女工作人员，她们告诉我，如果把办护照和通行证的地点选在一个派出所，可以只用一份证明材料，如果在两个地方，那么肯定需要两份证明材料。我告诉她们，网站上港澳通行证只能选择出入境总队，不能选择这个派出所，她们异口同声不可能，后面有一个女民警补充说，可能是我的签注类型选的「其他」类型，她们这里只能办理旅游签证，其余签证类型需要到总队去办理，我只好取消了预约，重新预约了一遍，把护照和港澳通行证的办理地点都选在了出入境管理总队。\n第二天一大早，我坐地铁到了出入境管理中心，结果发现钱包里没有身份证，急得我满头大汗，以为身份证丢了，如果真丢了，那就太麻烦了：我户口不在这里，如果身份证丢了，还得补办，不知道何时才能办好。好不容易冷静下来，仔细想了一下，马上想起来是前一天晚上复印身份证的时候放在了复印机的上面没取，心情就平复了。问了一下工作人员，必须带身份证才能办理，我又咨询了一下我在同一个地方办理护照和通行证，证明材料需要几份，那个工作人员很礼貌的回答说需要一份就可以了，又问我去香港做什么，我答是开学术会议，他问开多少天，我答最多不超过七天，他就建议我办理旅游类型签注，简单，不需要其他证明材料。我离开了出入境总队，打电话给 YK 让他帮我看一下身份证是否在打印机上面，他看了一下，果然在那里，我让他帮我把身份证收到了工位抽屉里面，坐地铁返回实验室。\n周三下午，带好身份证，预约了牡丹园地铁站附近的花园路派出所，提交了我的材料，不一会工作人员叫我过去，跟我说，我的材料盖章不行，需要国科大的盖章，所里的盖章没用。我问了一下国科大那边的联系电话，打电话过去，那边的办事老师让我到国科大的网站上找一下相关的材料，又告诉我她三点半有事，三点半之前能赶过去就过去办理，不能就第二天再去办理，我看时间已经不早了，需要的材料我还没弄好，决定第二天再去国科大盖章。\n回到实验室，上国科大的官网找了关于非京籍学生办理在学证明的说明，发现需要到所里给《中国科学院大学在学证明办理申请表》盖章，然后才是去国科大学籍办公室盖章，第二天上午去所里研究生部盖了章，骑摩拜去国科大中关村校区的学籍办公室盖了章，学籍验证报告由于没有照片，负责的老师还让我贴了一张照片才给盖章，同时也给在学证明盖了章。办好这些，我马上用手机预约了花园路派出所上午的号，赶了过去。第二次递交材料，过了一会，又被叫进去，被告知学籍验证报告上的章不行，有三个字不清晰，需要重盖。而且他们认为《在学证明》上面的签字和系统上的不符合，让我找负责老师重新签字，我看了一下，系统上的签字是比较草的，不像证明上那么工整。并且派出所的人告诉我，学籍验证报告上不需要照片，我试图解释，这是国科大负责老师让贴的，被数落了一顿：我们让你这么弄你就这么弄，不要废话，听我们的还是听国科大负责老师的？是我们给你办理还是她给你办理？我「识趣」地回去了，骑摩拜回去的路上，我想，虽然「学籍验证」报告上面的章不太清晰，但是「在学证明」上面的章是清晰的，这两个章是我同时盖的，为什么就不能说明问题呢，如果在学证明的章是真的，那学籍验证上面的章怎么可能是假的呢？这样不是把我当成了犯罪分子一样质疑，觉得我弄的材料不可信嘛。我作为中国公民，在自己的国家想要办理一个去香港通行证，怎么就这么困难呢，像做贼一样被防备着。另外，香港不是我们伟大祖国的一部分么？去一次香港怎么就这么费事呢？骑摩拜到了中关村小区已近十二点，我去复印了户口本首页还有我的户口页，担心派出所的人再有什么细节要求，我就按照不同方式复印了户口本，防止中途再去复印，复印完，办事老师已经下班了，只好下午上班时间再去重新盖章。\n下午两点又去国科大中关村学籍办公室，老师没来，打电话询问，她告知我暂时有事，大约三点才能到。我百无聊赖，坐在附近的一个草坪边上，看到了老人和妇女们带着小孩子在游乐园里面玩耍，只有我一个无所事事的人。等到了三点，说明了上午盖章不被派出所认可的情况，负责老师重新给学籍验证报告盖了章，在《在学证明》上又签了一个名字。出来以后，我用手机再次预约花园路派出所，骑摩拜第三次前往，这次材料终于没问题了，在工作人员指引下，我小心翼翼、诚惶诚恐地填了申请表格，然后交钱，签字，收到了回执单，整个过程不到十分钟就办完了。\n骑车回所里的路上，心里如释重负，嘴角扬起了开心的微笑。\n","date":"30 April 2017","externalUrl":null,"permalink":"/2017/04/30/apply-for-hk-visa/","section":"Posts","summary":"\u003cp\u003e这个月中旬，ICME Workshop 的投稿结果公布，我投的论文被接收了，忙完 camera-ready 论文的提交和注册，我开始办理香港签证相关的东西。\u003c/p\u003e","title":"申请香港通行证","type":"posts"},{"content":"最近换了一台新的手机 OnePlus 3T，这个手机简洁是简洁，预装的应用非常少，自带的文件管理功能不是很全，所以我研究了一下 Android 上常用的一些文件管理 APP。\n根据网上的推荐，我下载试用了很多款安卓文件管理 APP，经过使用留下了三款，分别是「ES文件浏览器」，「MiXplorer」 以及 「X-plore」。\n三款软件优缺点 # 这三款软件都支持对文件以及文件夹的常用操作，如复制，剪切，重命名，查找等。「ES文件浏览器」和 「X-plore」 相对来说，功能更为丰富，譬如自带有播放视频或者音乐的功能。 「MiXplorer」 优点是它占用空间很少，安装以后，大概只占 1.3M 左右的空间，功能也不算太薄弱。另外 「ES文件浏览器」是有广告的，其余两款软件没有广告，如果不喜欢广告，可以不考虑 「ES文件浏览器」或者考虑购买 「ES文件浏览器 Pro」。\n保留这三款 APP 的一个重要原因，就是它们都支持不同的文件传输协议，使用这些 APP 可以方便地在手机和电脑之间分享文件。\n在电脑和手机之间无线传输文件 # 先说一下要实现本部分内容的基本配置，首先是一台电脑和一部手机，然后电脑和手机都必须是在同一个局域网内：我使用的是台式电脑，电脑上插了一个 「360随身wifi」，手机通过无线连接到 「360随身wifi」上，这样就可以实现手机电脑位于同一局域网了。\n要实现电脑和手机无线传输文件，有三种可选的方案。第一种是通过 LAN/SMB 方式，在电脑上设置一个共享目录，然后在手机上简单设置以后，就可以连接到电脑上这个共享目录，通过这个共享目录就可以实现电脑和手机的互联，具体的设置方式，可以参考这里。第二种方式就是在手机上建立 FTP 服务器， 然后在电脑的文件管理器地址栏输入 FTP 服务器的地址，就进入了手机目录，然后就可以像操作电脑上的文件夹一样操作手机上的文件了，如果要经常访问手机，可以考虑在电脑上增加了一个网络位置，新增加的位置就像电脑又多了一个硬盘分区一样，这样只要打开手机上 FTP 服务器，在电脑上直接点击这个分区，就可以进行手机文件管理，不要太方便。第三种方式就是使用 WebDAV 协议，通过在手机上临时设置一个 HTTP 服务器，在浏览器输入这个服务器的网址，就能在浏览器里面实现对手机文件的操作了，也比较方便。\n不同软件对三种传输方式的支持 # 经过我的使用，发现这三款软件对三种不同的文件传输方式的支持不一定是全面的，有的方式可能不支持，或者也可能是我没有找到使用方法。下面这张表给出了三款 APP 对三种协议的支持情况。\nLAN/SMB FTP WebDAV ES文件浏览器 YES YES NO MiXplorer YES YES YES X-plore YES NO YES 传输速度评测 # 为了比较三个 APP 使用不同传输方法传输速度的差异，我使用了二百多张总共大约约为27M 的图片进行测试，下图显示了不同应用在不同传输协议下的速度，左图为电脑到手机端传输速度，右图为手机端到电脑端的传输速度。\n(看上面的表格，「MiXplorer」支持 WebDAV, 但是不支持批量上传和下载文件，只能一个一个文件操作，所以我也无法测试具体的传输速度。「X-plore」 支持 WebDAV 协议，但是上图只给出了电脑端到手机端的传输速度，并未给出手机到电脑的传输速度，原因是使用 「X-plore」，从手机往电脑批量传输文件，这些文件会被打包成压缩文件形式，因此不具有可比性，但是这种传输速度确实很高，是三个软件中最高的，27M 的文件，几乎是瞬间就从手机打包下载到了电脑上。)\n根据上图，从电脑到手机端，传输速度最快的使用 LAN/SMB 协议的 「X-plore」，传输速度实测约为 1.29M/s; 从手机端到电脑端，如果不考虑上面提到的 「X-plore」 在使用WebDAV协议时，可以批量压缩文件、打包下载，那么传输速度最快的是使用 FTP 传输协议的 「ES文件浏览器」，速度约为 728kb/s，当然如果考虑 WebDAV 协议，最快的是 「X-plore」。\n结语 # 「X-plore」 是免费的软件，功能强大，并且占用存储比较小，另外结合文件传输测试来看，「X-plore」 无疑是速度最快的 APP，因此我觉得 「X-plore」 是最好的选择。 其次是 「ES文件浏览器」和 「MiXplore」，前者虽然功能更全，但是有广告，并且有一些无用的功能，后者虽然功能少一些，但是非常轻量化和简洁。\n参考 # 设置 LAN/SMB， 不过后面的设置安全权限什么的不是必需的 「ES文件浏览器」介绍如何设置 LAN/SMB 「ES文件浏览器」 FTP 服务器设置 MiXplorer 各种传输协议的设置 ","date":"26 March 2017","externalUrl":null,"permalink":"/2017/03/26/transfer-file-android-windows/","section":"Posts","summary":"\u003cp\u003e最近换了一台新的手机 OnePlus 3T，这个手机简洁是简洁，预装的应用非常少，自带的文件管理功能不是很全，所以我研究了一下 Android 上常用的一些文件管理 APP。\u003c/p\u003e","title":"如何使用 Android 文件管理器在电脑与手机之间无线传输文件","type":"posts"},{"content":"这篇文章集中写一些在使用 Sublime Text 3 时遇到的问题以及解决办法，某些问题在不 同系统的解决办法可能都是一样的，但是未经测试，所以使用的时候请先验证。\n打开中文文件乱码 [Windows, Linux] # 如果中文文件是使用的 GBK 等中文独有的编码方式 ，而不是通用的 UTF-8 编码，使用 Sublime Text 打开以后会发现文件显示乱码，因为 Sublime Text 目前为止并不原生支持 GBK 等中文编码。 好在有一款 Sublime Text 的插件，可以帮助解决这个问题。 这款插 件名字叫 \u0026ldquo;ConvertToUTF8\u0026rdquo;， 安装好以后打开中文编码文件就可以自动转换为 UTF-8 编码，值得注意的是关闭文件以后 ，这个库默认把 UTF-8 编码再转为该文件初始编码，如果不想要这种行为，可以通过设定 \u0026quot;convert_on_save\u0026quot; : false 来关闭这项功能。 如果不想下载这个插件，用系统自带的 记事本打开文件，然后另存为 UTF-8 编码也可以。\n新建一个 build system，编译运行 C++ 文件[Linux, Windows] # Sublime Text 3 自带 CPP 的 build system： \u0026ldquo;C++ Single File\u0026rdquo;，但是这个 build system 只能编译，不能直接运行编译好的程序，所以运行简单的 CPP 文件有点麻烦，编 译好以后，还需要自己去 shell 里面运行。 我们可以新建一个简单的 build system，实 现自己的需求，依次点击 \u0026ldquo;Tools\u0026ndash;\u0026gt;Build System\u0026ndash;\u0026gt;New Build System\u0026rdquo;，使用下面的配 置\n{ \u0026#34;cmd\u0026#34; : [\u0026#34;g++ -std=c++11 -Wall ${file_name} -o ${file_base_name} \u0026amp;\u0026amp; ./${file_base_name}\u0026#34;], \u0026#34;selector\u0026#34; : \u0026#34;source.c\u0026#34;, \u0026#34;shell\u0026#34;: true, \u0026#34;working_dir\u0026#34; : \u0026#34;$file_path\u0026#34; } 如何使程序直接在系统的 terminal 或者 console 运行 # Sublime Text 运行需要从 standard input (一般来说就是 console) 输入数据的程序时 ，该程序无法正常接收输入，如何解决这个问题呢？ 我们可以给编译 C++ 增加一个可选 的方式，Sublime Text 里面称为 \u0026ldquo;variants\u0026rdquo;，然后指定在 GUI terminal 里面运行编译 好的文件。 Linux 系统与 Windows 系统设置稍有不同。\nLinux 配置 # 完整的配置文件如下\n{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34;\u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;source.c++, source.cpp, source.cc, source.cxx\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Run in Terminal\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -std=c++11 -Wall \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}\\\u0026#34; \u0026amp;\u0026amp; xterm -e \u0026#39;${file_path}/${file_base_name} \u0026amp;\u0026amp; echo \u0026amp;\u0026amp; echo Press ENTER to continue \u0026amp;\u0026amp; read line \u0026amp;\u0026amp; exit\u0026#39;\u0026#34;, // \u0026#34;shell_cmd\u0026#34;: \u0026#34;gnome-terminal -e \u0026#39;bash -c \\\u0026#34;${file_path}/${file_base_name}\u0026amp;\u0026amp; echo \u0026amp;\u0026amp; echo Press ENTER to continue \u0026amp;\u0026amp; read line \u0026amp;\u0026amp; exit\\\u0026#34;\u0026#39;\u0026#34;, // for gnome-terminal // \u0026#34;shell_cmd\u0026#34;: \u0026#34;xterm -e \u0026#39;${file_path}/${file_base_name}; bash\u0026#39;\u0026#34;, // for xterm // \u0026#34;shell_cmd\u0026#34;: \u0026#34;xterm -hold -e ${file_path}/${file_base_name}\u0026#34;, // for xterm // \u0026#34;shell_cmd\u0026#34;: \u0026#34;konsole --hold -e ${file_path}/./${file_base_name}\u0026#34;, // for konsole \u0026#34;shell\u0026#34;: true, }, ] } 上述配置文件提供了针对 genome-terminal, xterm, Konsole 的配置，可以按照自己正在 使用的 GUI terminal 选择对应的配置。 上述配置还可以保证程序在运行结束以后， terminal 的窗口不会立即关闭。 当运行需要从 console 输入数据的程序时，直接使用 CTRL + SHIFT + B 快捷键，然后选择 Run in Terminal 选项即可。\nWindows 配置 # 以上的配置针对的 Linux 系统，如果你使用的是 Windows 系统，情况会稍有不同，下面 的配置是适用于 Windows 的配置，\n{ \u0026#34;shell_cmd\u0026#34;: \u0026#34;g++ -Wall -std=c++11 \\\u0026#34;${file}\\\u0026#34; -o \\\u0026#34;${file_path}/${file_base_name}.exe\\\u0026#34;\u0026#34;, \u0026#34;file_regex\u0026#34;: \u0026#34;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\u0026#34;, \u0026#34;working_dir\u0026#34;: \u0026#34;${file_path}\u0026#34;, \u0026#34;selector\u0026#34;: \u0026#34;source.c++\u0026#34;, \u0026#34;variants\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Run\u0026#34;, \u0026#34;shell_cmd\u0026#34;:\u0026#34;\\\u0026#34;${file_path}/${file_base_name}\\\u0026#34;\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;Run in CMD\u0026#34;, \u0026#34;shell_cmd\u0026#34;: \u0026#34;start cmd /k $file_base_name \u0026#34; // \u0026#34;shell_cmd\u0026#34;: \u0026#34;start \\\u0026#34;$file_base_name\\\u0026#34; call $file_base_name\u0026#34; } ] } 使用 CTRL + B 来编译源代码，然后使用 CTRL + SHIFT + B 来选择在 Sublime Text 的 console 运行还是直接在 Windows CMD 窗口运行，上述的配置也可以保证程序运行以 后，terminal 的窗口不会自动关闭，方便用户查看输出结果。\n输入法图标不跟随输入光标 # 在 Sublime Text 中使用中文时，发现输入法的候选字的框不跟随输入光标，这个 bug 官 方没有解决，有一个插件 IMESupport 可以解决这个问题。\n更改 package 的 user setting，保存的时候一直提示 \u0026ldquo;Unexpect trailing characters\u0026rdquo;[Windows, Linux] # 安装了一个 package 以后，需要进行个性化设置，然后保存设置的时候一直提示错误，错 误信息如下\nError trying to parse settings: unexpected trailing characters\n这个原因是输入的 setting 不是有效的 JSON 格式，我的问题是忘记在 setting 外加大 括号了。例如下面的 setting 就是有问题的\n// Convert when previewing file: true or false \u0026#34;preview_action\u0026#34; : false, 正确的写法应该是\n{ // Convert when previewing file: true or false \u0026#34;preview_action\u0026#34; : false, } 新建一个 snippet [Windows, Linux] # 所谓 snippet，简单来说就是一个代码片段，你为这个 snippet 设立一个关键词，当你输 入关键词以后，就会激活这个 snippet，省去了重复输入的麻烦。 在编写 C++ 程序的时 候每次都需要输入头文件，using declaration，比较麻烦，可以创立一个 snippet，建立 好 CPP 文件以后输入关键词，自动填充预定义的模板。 建立方法如下，依次打开Tools -\u0026gt; Developer -\u0026gt; New Snippet..., 在生成的文件里填写如下内容，\n\u0026lt;snippet\u0026gt; \u0026lt;content\u0026gt;\u0026lt;![CDATA[ #include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;algorithm\u0026gt; using std::cout; using std::vector; using std::string; int main(){ return 0; } ]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;cpp\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;!-- \u0026lt;scope\u0026gt;source.python\u0026lt;/scope\u0026gt; --\u0026gt; \u0026lt;/snippet\u0026gt; 然后给创建的 snippet 起一个名字，如 C++_default_template.sublime-snippet, 然 后在文件中输入 cpp，再点击Tab，就会直接输入对应的 snippet。\n如何编辑 Sublime Text 自带的 build system [Windows, Linux] # 在 Sublime Text 中，package 都是以 .sublime-package 的压缩文件形式存在，以 C++ build system 为例，如果要编辑 Sublime Text 自带的 C++ build system，首先要 安装 PackageResourceViewer ，然后使用 Ctrl+Shift+P，打开 Package Control 的窗口，输入 prv, 选择 Open Resource，然后输入 C++，向下移动光标，选择 C++ Single File.sublime-build，打开这个文件，按照自己意愿编辑，编辑以后保存就 可以了。\n使用 Package Control 安装插件的时候提示 “There are no packages available for installation”[Windows, Linux] # 问题如题所示，重装 Package Control 解决了这个问题。 首先，卸载 Package Control ，然后，重新安装 Package Control 。\n使用 Ctrl + backtick 无法打开 console[Windows, Linux] # Sublime Text 默认打开 console 的快捷键 (shortcut) 是 Ctrl+`，但是在我的系统上，按这个组合键，没有任何反应， 根据 Stackoverflow 上的回答 ， 点击打开 console，然后输入 sublime.log_input(True), 监听按键，发现按下 Ctrl+` 时，Sublime 并未记录到按键。于是根据别人的答案， 自己设置了另外一个快捷键组合 Ctrl+\u0026rsquo; 来打开 console, 在自 己的 user key binding 设置里面加上一项：\n{ \u0026#34;keys\u0026#34;: [\u0026#34;ctrl+\u0026#39;\u0026#34;], \u0026#34;command\u0026#34;: \u0026#34;show_panel\u0026#34;, \u0026#34;args\u0026#34;: {\u0026#34;panel\u0026#34;: \u0026#34;console\u0026#34;, \u0026#34;toggle\u0026#34;: true} }, 参考 # Sublime Text 解决中文编码问题 示例 build system build system 中一些关键词还有内置变量含义 解决输入法不跟随光标问题 Unexpected trailling characters 解决办法 snippet 的文档. Windows，如何使程序运行后窗口不自动关闭 Windows，防止程序运行后窗口自动关闭 Windows，防止窗口关闭另外一种方法 ","date":"19 March 2017","externalUrl":null,"permalink":"/2017/03/19/windows-sublime-usage-related-issue/","section":"Posts","summary":"\u003cp\u003e这篇文章集中写一些在使用 Sublime Text 3 时遇到的问题以及解决办法，某些问题在不\n同系统的解决办法可能都是一样的，但是未经测试，所以使用的时候请先验证。\u003c/p\u003e","title":"Sublime Text 3 使用相关问题及解决办法","type":"posts"},{"content":"Loss functions are frequently used in supervised machine learning to minimize the differences between the predicted output of the model and the ground truth labels. In other words, it is used to measure how good our model can predict the true class of a sample from the dataset. Here I would like to list some frequently-used loss functions and give my intuitive explanation.\nCross Entropy Loss Cross Entropy Loss is usually used in classification problems. In essence, it is a measure of difference between the desired probablity distribution and the predicted probablity distribution. Suppose the classification is binary classification problem, the label are \\({0, 1}\\). Then the loss function for a single sample in the dataset is expressed as:\n\\[-y \\log(p)-(1-y) \\log(1-p)\\ ,\\]\nwhere \\(y\\) is the label of the sample, and \\(p\\) is the predicted probability of the sample belonging to class 1.\nFor \\(K\\)-class (\\(K \u0026gt;2\\) ) classification problems, the predicted probablity output for a single sample is a vector of length \\(K\\): \\([p_0, p_1, \\ldots, p_{K-1}]\\). The Cross Entropy Loss is extended as: \\[-log (p_k)\\ ,\\] where \\(k\\) is the ground truth label for the sample. If \\(p_k\\) equals 1, then there is no loss incurred for that sample.\nWe often see the term “Softmax Loss” in literature or blog post. In fact, there is no such thing as “Softmax Loss”, as is discussed on this Quora post. Suppose the original prediction for a sample is \\([x_0, x_1, \\ldots, x_{K-1}]\\), we can get the normalized probablity \\([p_0, p_1, \\ldots, p_{K-1}]\\)， where we have:\n\\[p_k = \\frac{\\exp(x_k)}{\\sum_{i=0}^{K-1}\\exp(x_i)}\\ .\\]\nSo the Cross Entropy Loss really is:\n\\[-\\log \\frac{\\exp(x_k)}{\\sum_{i=0}^{K-1}\\exp(x_i)}\\ .\\]\nIn brief, the so-called Softmax Loss is just Softmax function followed by Cross Entropy Loss.\nContrastive Loss Contrastive Loss is often used in image retrieval tasks to learn discriminative features for images. During training, an image pair is fed into the model with their ground truth relationship \\(y\\): \\(y\\) equals 1 if the two images are similar and 0 otherwise. The loss function for a single pair is:\n\\[yd^2+(1-y)\\max (margin-d, 0)^2\\ ,\\]\nwhere \\(d\\) is the Euclidean distance between the two image features (suppose their features are \\(f_1\\) and \\(f_2\\)): \\(d = \\Vert f_1 - f_2\\Vert_2\\). The \\(margin\\) term is used to “tighten” the constraint: if two images in a pair are dissimilar, then their distance shoud be at least \\(margin\\), or a loss will be incurred.\nTriplet Loss Triplet Loss is another loss commonly used in CNN-based image retrieval. During training process, an image triplet \\((I_a, I_n, I_p)\\) is fed into the model as a single sample, where \\(I_a\\), \\(I_n\\) and \\(I_p\\) represent the anchor, postive and negative images respectively. The idea behind is that distance between anchor and positive images should be smaller than that between anchor and negative images. The formal definition is:\n\\[\\max \\left( {\\Vert f_a- f_p \\Vert}^2 - {\\Vert f_a - f_n \\Vert}^2 + m, 0\\right)\\ .\\]\nIn the above equation, \\(m\\) is a margin term used to “stretch” the distance differences between similar and dissimilar pair in the triplet, \\(f_a, f_p, f_n\\) are the feature embeddings for the anchor, postive and negative images.\nReferences Contrastive Loss Triplet Loss Cross Entropy Loss A lot more loss functions in machine learning ","date":"13 March 2017","externalUrl":null,"permalink":"/2017/03/13/some_loss_and_explanations/","section":"Posts","summary":"\u003cp\u003eLoss functions are frequently used in supervised machine learning to\nminimize the differences between the predicted output of the model and\nthe ground truth labels. In other words, it is used to measure how good\nour model can predict the true class of a sample from the dataset. Here\nI would like to list some frequently-used loss functions and give my\nintuitive explanation.\u003c/p\u003e","title":"Some Loss Functions and Their Intuitive Explanations","type":"posts"},{"content":"Today I found that compiling LaTeX source is insanely slow(took me several minutes to compile a simple file). After a lot of trial and error, I found the reason.\nThe problem description # I was trying to compile a tex file on my Windows 8.1 machine and observed that the compilation speed was insanely slow. I created a test file with only a few Chinese character and compiled it. The compilation time is around 1.15 minutes. At first, I thought it was probably due to the Chinese character. So I replaced the Chinese character with simple English words. After that, I recompiled the file, but found no noticeable speedup in compilation time. The follwing is my testing code:\n\\documentclass{article} \\usepackage{xeCJK} \\begin{document} 测试 % change the Chinese character to English does not make a difference \\end{document} If I comment out \\usepackage{xeCJK}, the compilation process also sped up.\nThe solution # After some search on the Internet, I found a relevant post on the Stack Exchange. It turned out that it was caused by a new install of font. After a font is installed or removed, we should manually run fc-cache -f from command line to rebuild the TeX Live font cache. After this rebuilding process, compiling files with xelatex should be normal again.\nReferences # Discussion of this on the TeX Live mailing list ","date":"6 March 2017","externalUrl":null,"permalink":"/2017/03/06/windows-xelatex-slow/","section":"Posts","summary":"\u003cp\u003eToday I found that compiling LaTeX source is insanely slow(took me several\nminutes to compile a simple file). After a lot of trial and error, I found the\nreason.\u003c/p\u003e","title":"Why Did XeLaTeX Suddenly Run Insanely Slow?","type":"posts"},{"content":"引子 # 由于受不了 VSCode 打开文件的龟速，我决定换一个编辑器，以前就大致了解有三款评价不错的编辑器，分别是 GitHub Atom, Sublime Text 3 以及微软的 VSCode。\n这三个编辑器我都使用过，总的感觉是 Atom 和 Visual Studio Code 打开文件的速度比较慢，Sublime Text 打开文件速度是最快的。Atom 和 Sublime Text 由于推出的比较早，都有大量的插件可以使用，VSCode 相对来说插件少一些，现在也在迎头赶上。这三个产品，除了 Sublime Text 是付费产品1，其余两个都是开源托管在GitHub. 我也找到了一篇对三个编辑器的最新评测。最终，由于我比较在意打开文件的速度，我决定使用 Sublime Text。以下介绍一些Markdown 写作中常用的插件。\nMarkdown 文件编辑插件 MarkdownEditting # 根据推荐，我使用了MarkdownEditting 这款插件，这款插件支持 Markdown 的多种「方言」， 支持快捷键插入多种常用的Markdown 格式模版，非常方便。\n常用的技巧 # MarkdownEditting 提供了一些方便的 snippet 以及快捷键，熟练使用这些快捷操作会极大提升输入 Markdown 文档的速度。\n快速插入 link，image link 以及 code block 模板，分别输入 mdl, mdi 以及 mdc， 然后按下 Tab, 对应的模板就能快速生成，避免重复劳动。\n快速把复制的网页地址变成 inline link，使用快捷键 Ctrl+Win+V2。\n快速把复制的地址变为 inline image，使用快捷键 Shift+Win+K\n插入 footnote，使用 Alt+Shift+6 快速插入各级标题。Markdown 语言提供了六级标题，MarkdownEditting 提供了对 1，2，3 级标题的快捷输入支持，分别输入 mdh1 到 mdh3，然后按 Tab，即可生成对应级别的标题模板。 如果要把某段文字变为标题或者想要更改某个标题的级别，首先选中该段文字，然后按下 Ctrl+NUM， NUM 代表标题级别 。\nMarkdown 主题 # 从 Sublime Text 的 package control 网站发现了 Boxy Theme, 该主题提供的 Boxy Monokai color scheme 渲染出的 Markdown 文档显示效果更好，推荐使用。\n为 Markdown 文件设定默认的语法高亮 # 发现每次打开新的 *.md 文件时，默认的语法高亮并不是 MarkdownEditting, 可以通过点击菜单栏, View-\u0026gt;Syntax-\u0026gt;Open all with current extension as ... 来选择 MarkdownEditting 支持的一种语法, 这样以后打开以 md 作为后缀的文件，默认渲染语法就是 MarkdownEditting。\nMarkdown 预览插件 Markdown Preview # 预览 Markdown 文件的效果我选用了 Markdown Preview。安装插件以后，使用快捷键 Ctrl + Shift + M 可以在浏览器预览当前文件生成 html 以后的效果，Markdown Preview 支持两个 parser: github 以及 markdown，所以每次预览的时候都会弹出一个小窗口，让你选择使用哪个 paser 转换 md 文件，比较烦，可以通过设置 Markdown Preview 的 user setting 中的\n\u0026#34;enabled_parsers\u0026#34;: [\u0026#34;markdown\u0026#34;], 默认使用 markdown parser，这样每次使用快捷键预览，就不会弹出弹窗提示，让你选择 parser 了。\nLiveReload 的使用 # Markdown Preview 可以在浏览器预览 Markdown 文件生成的 html 效果，如果当前正在编辑的 Markdown 文件修改以后，要预览修改后的效果，必须手动刷新浏览器，比较繁琐。LiveReload 可以自动刷新网页，免去了手动刷新之苦。\n可以使用 Package Control 安装LiveReload, 直接使用 livereload 关键词搜索安装即可。 安装以后，在 LiveReload的 user setting 里面加上如下设置：\n{ \u0026#34;enabled_plugins\u0026#34;: [ \u0026#34;SimpleReloadPlugin\u0026#34; ] } 使用 Ctrl + Shift + M 在浏览器预览生成的 html 文件，继续编辑 Markdown 文件，保存，你会发现浏览器的 html 文件也随之自动更新。 参考了 这里 的设置。\n更改 Sublime Text 的显示字体 # 参考网上的建议，选用了 Source Code Pro 这款字体，安装字体以后，在 Preferences 下的 Settings 加入下面的 User 配置：\n\u0026#34;font_face\u0026#34;: \u0026#34;Source Code Pro\u0026#34;, 如何查看字体的名字，可以参考 这里。\n发现了另外一款不错的免费字体 Space Mono， 显示效果更好，推荐使用。\n增加一个插入图片的 snippet # 在写作 Markdown 的时候，经常会使用到原始的 HTML 语法插入图片，因此想写一个snippet 作为插入图片的模板代码，方便插入图片，关于 snippet 的介绍，可以参考这里，一个比较简单的插入 html 图片的 snippet 如下：\n\u0026lt;snippet\u0026gt; \u0026lt;description\u0026gt;insert an image in html syntax\u0026lt;/description\u0026gt; \u0026lt;content\u0026gt; \u0026lt;![CDATA[\u0026lt;img src=\u0026#34;${1:image link}\u0026#34; title=\u0026#34;${2:image title}\u0026#34; style=\u0026#34;float: middle;\u0026#34; \u0026gt;]]\u0026gt;\u0026lt;/content\u0026gt; \u0026lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --\u0026gt; \u0026lt;tabTrigger\u0026gt;iimg\u0026lt;/tabTrigger\u0026gt; \u0026lt;!-- Optional: Set a scope to limit where the snippet will trigger --\u0026gt; \u0026lt;scope\u0026gt;text.html.markdown, text.html.markdown.multimarkdown\u0026lt;/scope\u0026gt; \u0026lt;/snippet\u0026gt; 使用方法：在需要插入图片的地方，输入 iimg，然后敲击 Tab，预设的模板就会出现。\n更新历史 # 2017-10-11: 增加了如何创建一个简单的插入图片 snippet 的方法。 2017-12-14: 增加了 MarkdownEditting 使用 tips。 2017-12-17: 增加了 LiveReload 的安装使用方法。 2018-01-04: 修改了一些错误 2018-02-08: 增加了在 Windows 10 Fall Creator 上，修改 inline 快捷键的方法。 参考 # Markdown 插件安装使用 v2ex 上对编程字体的介绍 为某种后缀名文件设定默认的语法高亮 Source Code Pro 字体安装使用 Sublime Text package 的在线仓库 MarkdownEdit 的一个 snippet create single image with tile in html syntax 虽然 Sublime Text 是付费产品，但是，如果你愿意，可以一直试用。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n如果你使用的是最新的 Windows 10 Fall Creator 更新，该快捷键不再有效，可以使用 PackageResourceViewer 打开 MarkdownEditing 插件，然后进入 MarkdownEditing 库的目录下，找到文件 Default (Windows).sublime-keymap，把 ctrl+super+v 换成 ctrl+alt+v。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"4 March 2017","externalUrl":null,"permalink":"/2017/03/04/sublime-windows-markdown/","section":"Posts","summary":"\u003ch1 class=\"relative group\"\u003e引子 \n    \u003cdiv id=\"%E5%BC%95%E5%AD%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%BC%95%E5%AD%90\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cp\u003e由于受不了 VSCode 打开文件的龟速，我决定换一个编辑器，以前就大致了解有三款评价不错的编辑器，分别是 \u003ca href=\"https://atom.io/\" target=\"_blank\"\u003eGitHub Atom\u003c/a\u003e, \u003ca href=\"https://www.sublimetext.com/\" target=\"_blank\"\u003eSublime Text 3\u003c/a\u003e 以及微软的 \u003ca href=\"https://code.visualstudio.com/\" target=\"_blank\"\u003eVSCode\u003c/a\u003e。\u003c/p\u003e","title":"Sublime Text 3 Markdown 写作设置","type":"posts"},{"content":"I came across this amazing tool called Listary yesterday and found that it is just an amazing piece of software that will change my experience on Windows fundamentally!\nListary is a tool which facilitates tasks such as searching files and launching applications on your system and operating on them and more\u0026hellip; It is definitely better than Everything, another tools which is also used to search files. In my opinion, Listary is definitely the best among its kind.\nSearch files and applications # After installing and running Listary, you are ready to search literally everything in your computer and beyond. Listary has two working modes. The first one is called \u0026ldquo;File Manager Mode\u0026rdquo; and the second is called \u0026ldquo;Launcher Mode\u0026rdquo;. The two modes work differently.\nFile manager mode # The first mode takes effect once you open the File Explorer and it is mainly used to search files and folders. If you want to search a file under a particular directory, just type part of the name of that file. Listary will automatically list files matching the given name under that directory using regex. For example, I have a file named css_intro.html in F:\\source_code\\webpage. If I want to find that file, I just need to open the File Explorer and change to F:/ disk. Then I type css html, the Listary search bar appears at the lower right of the File Explorer window and the file with that name is shown at the top of the result list.\nYou can navigate up and down the list by pressing CTRL+P or CTRL+N. After a file or folder is selected, press CTRL+O to take actions on it.\nLauncher mode # The second mode is the full-featured mode where you can launch an application, open a file, search the web using a specific engine and more\u0026hellip; This mode is activated by pressing the CTRL key twice or press Win+G. Easy and convenient! After you activate this mode, a search bar will appear in the middle your screen and be ready to accept input. You can use Esc to dismiss it.\nLaunch an application # Launch an application by typing keywords whether or not it is on your system PATH. For example, if I want to launch the Foxmail application on my computer, I just need to type foxmail in the search bar. The Foxmail application appears at the top of returned results. Then I can launch Foxmail by simply pressing Enter.\nSearch a file and operate on it # This works similarly to search a file in \u0026ldquo;File manager mode\u0026rdquo;. After the file is located, you can take action on it by using the shortcut Ctrl+O which will bring up an action menu.\nSearch in the web or in the APP # Listary has built-in command for searching something through the search engine such as Google, Bing. It is located in Keywords -\u0026gt; Web panel (see image below),\nFor example, if you want to search \u0026ldquo;cat\u0026rdquo; using Google, just type gg cat in the Listary search bar.\nAdding custom search website keywords is also easy. See below for an example,\nOr you can search a word using a dictionary in your PC. Here, we use the famous open source software GoldenDict as an example, the settings are shown below:\nFiltering the result by path and file type # You can enable advanced search features by indicating file path and file type. In order to indicate a file path, simply append a trailing \\ to a character string.\nThere are six default file type filters (a string followed by a colon):\nfolder: Folder file: File doc: Document pic: Picture audio: Audio video: Video You can combine file path and file type filtering for quicker location of your files. For example, in order to find images with cat in their names in the f:\\ disk, simply use f:\\ pic: cat as the search query. The result shows up instantly!\nCreate a project # If you frequently open up a specific folder and do your work under that folder. You may create a project for it. Go to Options --\u0026gt; Projects and click the plus sign in lower left (see image below) and set up the project folder and keyword for open the project root directory.\nAfter the setting, we can search files or directories under that folder easily: just type the project keyword and give any file or folder names you want to open.\nMore questions? # If you encounter problems when you are using Listary, you can go to the Listary discussion forum for help. The developer of Listary are willing to answer usage-related questions about Listary.\nSupport copyright # Listary is free to evaluate indefinitely. If you can afford it, I think it is better to buy a licence to support the development of this excellent software.\nReferences # The Listary official documentation Awesome tools list for Windows (it is written in Chinese.) ","date":"1 March 2017","externalUrl":null,"permalink":"/2017/03/01/listary_intro/","section":"Posts","summary":"\u003cp\u003eI came across this amazing tool called \u003ca href=\"http://www.listary.com/\" target=\"_blank\"\u003eListary\u003c/a\u003e\nyesterday and found that it is just an amazing piece of software that will\nchange my experience on Windows fundamentally!\u003c/p\u003e","title":"An Introduction to Listary: A Blazing Fast Search Tool","type":"posts"},{"content":"本文主要总结 Hexo 博客使用，博客写作以及更新 Hexo 和 NexT 主题的内容。关于如何安装配置 Hexo 和 NexT 主题，可以参考这篇文章。\n博客使用相关问题 # 博客顶部的菜单的语言在英语与德语乱跳 # 这个是由于在站点配置文件没有指定语言，指定语言为 en 可以解决这个问题 。\nlanguage: en 如果想在菜单栏显示汉字,那么语言就指定为 zh-Hans，参考了这个答案。\n添加 sitemap.xml 到谷歌搜索引擎 # 首先按照博客一给出的步骤生成正确的 sitemap.xml 文件，这里我遇到的问题是生成的 sitemap.xml文件里面都是 yousite.com 这种格式，原因很简单，因为没有在站点配置文件里把博客的URL 改成自己的实际地址(见下面的代码)，把 url 改成自己博客的地址，再生成一遍就不会有这个问题。\nurl: https://jdhao.github.io 生成 sitemap.xml 以后，需要验证自己的网站(也就是证明网站是你的)，继续参考博客一的方法(有的博客上提到的方法属于过去式，譬如博客二第三步中提到的手动添加验证的方法对于 NexT 主题已经不再需要，那篇博文的名字叫 「｜Hexo优化｜如何向google提交sitemap（详细）」)。验证网站以后，就可以添加 sitemap.xml 到谷歌了，这一步参考博客二中博文从第四步开始的内容。\n这一部分还参考了博客三，加入了robots.txt 文件，不过我没有设置百度的 sitemap。\n更改了 NexT 主题，部署以后发现更改未生效 # 使用 hexo s -g 本地预览网页没问题，部署以后发现主题没有改变，解决办法是先使用hexo clean，并且删除 blog 目录下的 .deploy_git 目录，重新部署，然后打开博客网页，按 CTRL+F5，强制刷新，更新资源，然后就能看到更新以后的主题了。\n点击某个标题，生成指向该标题的 URL # 很多网页都使用 named anchor功能，当点击目录中的某个标题的题目，就会自动跳转到该标题在网页中位置，并且浏览器地址栏随之改变，URL 增加了 #header_name 部分，如果想要打开该博文的时候自动到达该标题对应的位置，而不是到达该页面的顶端，只需要使用这个新的 URL 即可，这个功能可以通过替换 Hexo 自带的 renderer 实现，具体可以看这里，不再多说。设置完成以后，鼠标移动到某个标题最右边，可以看到「¶」。效果如下图\n点击它，可以看到 URL 发生改变，如下图\n更改一篇 post 的 categories 或者 tags 的大小写，部署以后发现更改无效 # 写好一篇 post，部署以后，想要更改 categories 或者 tags 的大小写，更改以后，再次部署，打开博客的 categories 页面，发现更改是生效的，但是点击刚才更改名字大小写的类别，你会得到 404 not found error 。这个问题是由于在 case-insensitive 系统上 (譬如 Windows 和 Mac OSX)，git 会忽略对文件或者目录大小写的更改，hexo 暂时还未修复这个问题，具体的 workaround 可以参见这里。\n在博文中增加文件的下载链接 # 可以在 source 目录下创建一个目录来存放你的文件，例如可以创建 source/files/ 目录，然后把文件放在该目录下面，假设文件名称为 test.pdf，在博文中需要引用该文件的地方，直接使用以下 Markdown 代码即可\n[点击这里下载文件](/files/test.pdf) 更详细的讨论，可以参考这里。\n使用 Hexo 输入 LaTeX 公式遇到的奇怪 bug # 使用 Hexo 输入公式的时候，遇到一个奇怪的 bug，提示的错误信息是：\nFATAL Something\u0026rsquo;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html Template render error: (unknown path) [Line 1, Column 10] expected variable end\n经过查找，找到了对这个 bug 的一个说明，参见这里，同时也感谢提这个 issue 的人，他也在自己的博客里提到了这个问题，赞赏这种探索精神。具体来说就是，写 LaTeX 公式的时候，两个花括号 { 不能紧挨着，中间必须有空格隔开，否则使用 hexo generate 的时候就会出现上述的错误提示信息。官方目前还没有修复这个 bug，写公式的时候一定要注意。\n博客写作相关问题 # 生成博客的时候遇到编译错误 # 生成博客的时候，遇到下面的跟 YAML 有关的错误提示：\nYAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:\n这个原因是 YAML 对格式有严格要求，key 后面的冒号和 value 之间之间 必须用空格隔开，不能连起来写，加上空格即可解决这个问题。\n一篇博客使用多个 categories 和 tags # 如何生成 tags 和 categories 页面，参考这篇，然后一篇博文如果想要指定多个 tags，或者使用多个 categories，直接谷歌 “hexo multiple tags” 就能找到答案了，值得注意的是 categories 是层级结构的，写在后面的 category 名字被认为是前一类的子类，但是 tags 没有层级结构，各个 tag 之间是平等的。\n图片相关 # 使用云存储存放图片 # 图片可以放到 D:/hexo/blog/source/_data 目录下，然后在 Markdown 文件中使用相对路径引用，但是由于博客托管在 Github，仓库容量有限制，图片数量多了，会占据不小的空间，因此最好选择云存储来存放图片。我用的是七牛，有 10 G 免费空间，用来存放图片应该足够了。\n如何向七牛云存储上传图片 # 首先新建一个存储空间，然后点击「内容管理」，然后点击「文件上传」即可。参考的这里。采用这种方式，每次上传图片都要打开网页，然后上传文件，拷贝图片的外链，太耗费时间，可以使用 极简图床 来加快贴图的速度。它还提供了 Chrome 浏览器的插件，可以方便上传图片。上传图片需要设置好自己的七牛帐号，进入极简图床的主界面，点击右上角的 “设置按钮” 进入七牛云存储的设置界面，如下图，\n然后进入了如下界面，\n具体设置可以参考 官方说明。\n如何设置图片大小 # 有多种方法可以实现，最笨的办法就是人工缩放到具体大小，，七牛本身提供了多种图片处理方法，具体参见七牛官方文档。例如下面的示例代码：\n\u0026lt;img src=\u0026#34;https://blog-resource-1257868508.file.myqcloud.com/file_transfer_speed_test.jpg\u0026#34; title=\u0026#34;不同应用在不同情况下的传输速度\u0026#34; style=\u0026#34;float: middle;\u0026#34; \u0026gt; 如何居中图片 # 直接使用 HTML 的 \u0026lt;img\u0026gt; tag 即可，例如 \u0026lt;img src=\u0026quot;some_img.jpg\u0026quot;\u0026gt;。在网上还看到一种使用 \u0026lt;div\u0026gt; 来居中图片的方法，但是发现生成的网页中图片与上下文间距太大，遂放弃。\n换行与分段有问题 # 写好文章，预览的时候，发现本该是一个段落，不该分行的地方突然分行了，也就是页面上一行还没到头，就开始了第二行，因此段落的排版显得非常丑，在网上找了一圈好像也没有找到到底什么原因。后面突然意识到，Markdown 文件与 LaTeX 文件不同，即使文字在一起，中间没有空行，也不会被认为是一个段落，一段文章在写 *.md 文件的时候应该是一行，不应该人为使用回车分段，如果使用了回车，那么在生成的网页中对应的位置就会有一个换行。\n博客首页设置为显示每篇博文一部分而不是全文 # NexT 官方的推荐的方式是在需要截断的地方使用 \u0026lt;!--more--\u0026gt;，当然也可以使用另外两种方式。\n如何在一篇博文引用另外一篇博文 # 最简单的方式就是找到要引用的博文对应的网页地址，按照引用普通网页的方式引用即可，另外也可以使用 Hexo 提供的 post link tag 功能，引用文章，假如有一篇文章的题目是hello_world.md，那么在博文中引用的方法如下：\n{% post_link hello_world %} 参考这里。\n如何在博客的题目中使用冒号 # 如果博客的题目（title）包含冒号，在渲染的时候回出现问题，因为 YAML 格式中冒号属于分隔 key 和 value 的分隔符，如果需要在题目中使用冒号，可以把题目用引号包围，参见这里。下面给出一个示例：\ntitle: \u0026#34;An Introduction to Listary: A Blazing Fast Search Tool\u0026#34; 更新 Hexo 以及 NexT 主题 # Update Hexo # Updating Hexo is easy. Go to your blog root (on my computer, it is D:\\hexo\\blog). Issue the following command:\nnpm install hexo Now check that your hexo is updated successfully by running\nhexo --version Update NexT # I followed the official guide on how to update NexT but without success. After doing what is instructed, I can not successfully generate the site.\nYou can try the brute-force way. Backup all your settings for the NexT theme, then remove the directory which contains the NexT theme. Then git clone the newest repo into your computer. After that, modify the theme configuration file based on your backup file. I think it is the most simple way. No bell and whistles.\nNexT development discontinued? # According to this post, the creator of NexT theme seems to have discontinued his maintenance of this repo. So one of the contributor (ivan-nginx) to this theme decide to create a new orgnization repo named hexo-theme-next and continue to update the theme there.\n使用新的 theme-next # 正如前面所说，NexT 的原开发者由于某种不可知原因，已经很长时间没有对 NexT repo commit 过了，所以其他开发者 fork 了 NexT，重新开了一个 repo。从原 NexT 过渡到现在的 NexT 相当顺畅，相当于重新安装了一个新的主题，直接把原主题的配置拷贝过去就可以，改动很小。具体参见这里的更新说明。\n","date":"26 February 2017","externalUrl":null,"permalink":"/2017/02/26/hexo-use-markdown-writing-issue/","section":"Posts","summary":"\u003cp\u003e本文主要总结 Hexo 博客使用，博客写作以及更新 Hexo 和 NexT 主题的内容。关于如何安装配置 Hexo 和 NexT 主题，可以参考\u003ca href=\"https://jdhao.github.io/2017/02/26/hexo-install-use-issue/\" target=\"_blank\"\u003e这篇文章\u003c/a\u003e。\u003c/p\u003e","title":"Hexo 使用，博客写作相关问题及解决方法","type":"posts"},{"content":"In this post, I will describe the complete step to install both Hexo and theme NexT on Windows.\nInstall Hexo and deploy your post # First, we need to install the Hexo framework. The main steps are as follows:\nInstall Node.js and Cmder # We need to install Node.js and git for Windows. You can skip installing git for Windows if you choose to install Cmder(highly recommended on Windows). Choose the Full package if you decide to install Cmder (only the full package contains git for Windows).\nSet up the blog frame # Install the Hexo command line tool,\nnpm install -g hexo-cli Then, we need the build the frame of our blog. Go to a directory where you want to set up your blog, for example, d:/. Use the following command:\nhexo init hexo-blog cd hexo-blog npm install The above command will create a directory named hexo-blog and set up the frame of your blog.\nReplace the default renderer # This step is optional. But it is highly recommended.\nChange the default renderer shipped with Hexo. The renderer is used to translate your markdown file to HTML files. But it has weak functionality and does not support LaTeX style equations. We need to remove it first:\nhexo uninstall hexo-renderer-marked --save We can use the Pandoc renderer which is more powerful. Make sure that you have installed Pandoc , and then use the following command to install the Panodc renderer,\nhexo install hexo-renderer-pandoc --save Set up the GitHub pages # Set up your GitHub pages and choose to set up a user site (see image below). The name of the newly created repo must have the format username.github.io, where username is your GitHub user name. For me, the user name is jdhao.\nCreate website pages # This is discussed thoroughly in Official documentation. We are going to create 4 more pages for our blog site and they are tags, categories, archives and about page. Use the following command to create the 4 pages:\nhexo new page \u0026#34;tags\u0026#34; hexo new page \u0026#34;categories\u0026#34; hexo new page \u0026#34;archives\u0026#34; hexo new page \u0026#34;about\u0026#34; Write posts and preview your site # You can write your personal introduction in file source\\about\\index.md. In the command line, you can use\n`hexo new post \u0026#34;some_post\u0026#34;` to initialize a new template post named some-post.md, which is located in directory source\\_posts under the Hexo root directory.\nThe template post will only include a yaml format header, which is used to configure the post meta info. A sample header is shown below:\n--- title: How to Install Hexo and Theme NexT from Scratch on Windows date: 2017-02-26 15:52:00 +0800 lastmod: 2018-02-08 15:42:00 +0800 tags: [Markdown, NexT, Hexo, LaTeX] categories: [technique] --- Then you can write your post in this file using your favorite editor. After finishing your post, you can use hexo generate to generate your blog website locally.\nTo preview your blog website, you can use hexo server to set up a local http server. Then you can preview your website in the browser by using the local address localhost:4000.\nDeploy your blog # In order to deploy your blog to GitHub, you need to install the deployer,\nnpm install hexo-deployer-git --save Then we need to configure our GitHub user name and email. My configuration is as follows:\ngit config --global user.email \u0026#34;jdhao@hotmail.com\u0026#34; git config --global user.name \u0026#34;jdhao\u0026#34; Change the command above to suit your need. In the file hexo-blog\\_config.yml, we need to configure the address of your GitHub pages repo.\ndeploy: type: git repo: https://github.com/jdhao/jdhao.github.io branch: master You can use hexo d -g to generate and deploy your blog to GitHub. You will be prompted to input your email and password to confirm your identity. After that, your site will be deployed to GitHub. Anyone will be able to visit your blog.\nGenerate your ssh key # You can generate your ssh key to avoid inputting email and password every time. First, use the following command to generate your key,\nssh-keygen -t rsa -C \u0026#34;jdhao@hotmail.com\u0026#34; # please use your own email address The above command will generate two file: one (file name is id_rsa) for your private key and the other (file name is id_rsa.pub) for your public key. The files are located in C:/Users/jdhao/.ssh (look for something similar on your system). Open the file id_rsa.pub and add your public key to GitHub.\nAfter adding the public key, we need to confirm it is successfully configured:\nssh -T git@github.com You will see something like:\nThe authenticity of host \u0026lsquo;github.com (IP ADDRESS)\u0026rsquo; can\u0026rsquo;t be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no)?\nInput yes and press Enter, and you will see the following output:\nHi jdhao! You\u0026rsquo;ve successfully authenticated, but GitHub does not provide shell access.\nThis message will confirm that your setting is correct. You do not need to input your email and password from now on.\nNow, it is all set. You can start writing your posts.\nInstall NexT theme # Go to the blog root D:/hexo-blog and execute the following command to install the latest NexT theme,\ngit clone https://github.com/theme-next/hexo-theme-next themes/next-new NexT theme has its own configuration files, it is located in themes/next-new/_config.yml. You can customize as you wish. There are several plugins which is useful.\nEstimate post word count and read time. # The plugin hexo-symbols-count-time can be used to calculate the post word number and estimate your read time. Install this plugin\nnpm install hexo-symbols-count-time --save In the Hexo configuration file, use the following setting:\nsymbols_count_time: symbols: true time: true total_symbols: false total_time: false Local search # Install the plugin hexo-generator-searchdb to add the local search feature:\nnpm install hexo-generator-searchdb --save Edit the Hexo _config.yml file and add the following settings:\nsearch: path: search.xml field: post format: html limit: 10000 Also, you need to edit the theme Next configuration themes/next-new/_config.yml, and change the setting for local search,\nlocal_search: enable: true Compress your blog # Install the plugin hexo-filter-optimize to compress your blog,\nnpm install hexo-filter-optimize --save In the Hexo _config.yml file, add the following setting,\nfilter_optimize: enable: true # remove static resource query string # - like `?v=1.0.0` remove_query_string: true # remove the surrounding comments in each of the bundled files remove_comments: false css: enable: true # bundle loaded css file into the one bundle: true # use a script block to load css elements dynamically delivery: true # make specific css content inline into the html page # - only support the full path # - default is [\u0026#39;css/main.css\u0026#39;] inlines: excludes: js: # bundle loaded js file into the one bundle: true excludes: # set the priority of this plugin, # lower means it will be executed first, default is 10 priority: 12 After using this plugin, you may find some of the icons are not displayed correctly. This issue has been raised here. The solution is to edit the theme NexT configuration file and use custom CDN address for fontAwesome,\nfontawesome: https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css Show related posts # It would be nice to show related posts in the post page. Just install the hexo-related-popular-posts,\nnpm install hexo-related-popular-posts --save Use the following setting in the theme NexT configuration file,\nrelated_posts: enable: true title: Related posts display_in_home: false params: maxCount: 5 #PPMixingRate: 0.0 #isDate: false #isImage: false #isExcerpt: false Now, you have have finished all the configurations. Happy writing!\n","date":"26 February 2017","externalUrl":null,"permalink":"/2017/02/26/hexo-install-use-issue/","section":"Posts","summary":"In this post, I will describe the complete step to install both Hexo and theme NexT on Windows.\nInstall Hexo and deploy your post # First, we need to install the Hexo framework. The main steps are as follows:\nInstall Node.js and Cmder # We need to install Node.js and git for Windows. You can skip installing git for Windows if you choose to install Cmder(highly recommended on Windows). Choose the Full package if you decide to install Cmder (only the full package contains git for Windows).","title":"How to Install Hexo and Theme NexT from Scratch on Windows","type":"posts"},{"content":"1 月 26 日大清早起床赶到北京西站，坐上了早上八点半左右的火车，前往武汉，晚上大约七点半到达武昌火车站。在武汉呆了整整一周，2 月 3 号中午坐车回的北京。谈谈我对武汉的印象。\n武汉印象 # 街道 # 在武汉的几天还算充实，吃饭是在爸爸所在的项目的食堂，饭菜味道一般，每顿饭三菜一汤，很丰盛，只是油太多。第二天和哥哥一起出去逛了一下，向他普及了一下摩拜单车的使用方法，他对新事物的很热情，然后我们一人一辆就开骑了，沿着东湖南路，绕着武大的校园走了一段，然后又骑回住的地方\u0026mdash;光谷广场，骑了二十几公里。\n后面我和哥哥、表哥一起骑车去昙华林逛了一下，发现没啥意思，只有很短的一条街，街边有一些文艺青年喜欢的咖啡店，大概就是这样吧，我感觉很尴尬，把他们带过来，发现其实没有什么可以玩的。好在昙华林距离武汉有名的户部巷很近，我们一起去小吃街逛了一下，整条小吃街都卖的是很雷同的东西，味道也不怎么好。由于是春节，武汉有名的小吃店「蔡林记」的其他门店大部分关门了，户部巷由于旅游的人比较多，没有关门，我们在那里吃了一次「蔡林记」的热干面。\n后面我自己也骑车出去逛了一下，骑了更远的路，绕着珞瑜路上的华中科大骑到八一桥，再到东湖南路，最后一直骑到了东湖风景区，坐公交回去的。通过几次的骑行，也感觉出武汉道路的问题，一方面道路不是很平整，经常有坑坑洼洼、非常破损的路面，另外就是自行车道很不完善，很多道路直接没有自行车道，骑自行车的体验很不好。还有一个让人印象不好的地方，就是武汉的街道靠近街边商店的部分经常有很多油污，可以看出是餐厨油污，即使是在靠近光谷广场的街道，也能看到黑黑的沾满油污的街面。\n我们住的地方就在光谷广场附近，用围栏围起了一片地，然后放置了两排铁皮集装箱房子，不过设施还算完善，有厕所，有洗澡的地方，还有热水房。大部分人都回家过年了，爸爸安排我住的房间就我一个人。光谷广场是好多条路的交汇地，周围也繁华，有三四个大型购物广场，还有一条光谷步行街，我们吃完饭就经常去步行街散步，过年那几天大多数店铺都关门了，没有太多可逛的。步行街里面的很多店铺，总让人有一种山寨的感觉，这些店大多是卖衣服的，不知道能否盈利，我也确实看到了一些转让商铺的广告。过年那几天在步行街还看到一个留学生，摆了一个小摊位，在卖自己用沙做成的立体画，上去交流了一下，他是在华中科大读研究生，武汉的留学生还是挺多的。光谷广场所在的区域是一个大学城，有武汉大学，华中科技大学，华中师范大学，武汉理工大学，中国地质大学(武汉)等，还有一些小的专科类的大学，武大校园我没进去，华科和爸妈进去稍微参观了一下，树木很多，绿化不错，校园的面积也很大。\n小吃与风景 # 没有到之前，在网上查的时候看到有很多推荐武汉美食的帖子，看得我很向往，到了武汉，我去吃了热干面，在 「蔡林记」吃的，感觉味道也没有那么惊艳，我还吃了三鲜豆皮，灌汤包子，豆皮味道还可以，但是包子味道其实一般。\n去了户部巷，也没发现什么让人特别想吃的东西，些卖的东西让我没有太大的食欲。在吃的方面，我觉得武汉完全比不上西安。来之前也查了一些景点，我去了昙华林、户部巷，不是很喜欢，昙华林破破旧旧的，没有看出来什么文艺风，而且离昙华林不远的地方就是城中村一样的地方。我一个人骑车去了湖北省博物馆，没进去，从外面看，这个博物馆建的比较难看，颜色也选的不好，是那种青灰色，类似于农村的瓦片的颜色，也骑车骑到了东湖风景区那里，不过也没进去。和妈妈一起去了黎黄陂路和汉口江滩，汉口江滩就是建在长江边上的公园，特别长，有好几公里，我们在那里拍了几张照片，可惜武汉的雾霾也挺严重，拍出来的照片也是一片灰蒙蒙。\n黎黄陂路离汉口江滩也不远，有一些民国时代的老建筑，我们参观了「宋庆龄故居」，「八七会议旧址」，我一向不喜欢这些景观，草草参观了事。有一些旧建筑保护的很好，看起来仍然很气派，另外一些旧建筑可能是因为有人住，沾染了太多烟火气，都变得破旧不堪，已经被清空了，据说这些建筑会被整修一下重新开放。\n闲谈 # 我们在一起有时候也会谈谈闲话，会谈到耄，我妈是耄的粉丝，她的历史知识就是那些宣传材料，她翻来覆去说的就是那么几条，耄为了革命，自己一家好多人牺牲了，自己的儿子岸英都送到了朝鲜战争；耄很简朴，花的都是自己的工资以及稿费；耄很厉害，带领中国革命取得了成功；她还认为耄和周的关系很好。我跟她说耄有特供，她不相信，大家只要一跟她说耄没有那么好的话，她就很生气，认为我们是胡说，坚定地认为她所理解的耄是真正的耄，我只好不再说话了。\n读书 # 除了逛街，我把在去武汉的火车上开始看的《夹边沟记事》看完了，这是一部右派的血泪史，从中能够了解到那段历史的一角，现在的年轻人很难想象，我们国家曾发生了如此荒谬和悲惨的事情，而且是以国家名义发生的大范围的事情，这一切的起源，则是因为最高领导人的个人私心与宫廷政治角斗。\n看完这本书，我对杨显惠先生的其他书也产生了兴趣，看了他写的《定西孤儿院纪事》以及《甘南记事》，《定西孤儿院记事》讲的是由于 1958 年大跃进和浮夸风，甘肃定西地区农村人口大量死亡，产生了大量孤儿的故事，每篇故事不是很长，故事之间也有一定的联系，在武汉看了一大部分，武汉到北京的火车上，我躺在铺位上又看了一部分，那些悲苦无奈心酸的情节，让我忍不住哭了两三次，泪水流到了枕头上，洇湿了一块。杨先生的描述是克制的，不掺杂太多个人的评论与煽情的描述，书中人物的对白不仅多用甘肃方言而且甘肃人原汁原味的说话方式，克制的描述加上朴实的甘肃方言对白，让人一次次为书里的孤儿们伤心落泪，太苦了，太惨了。时至今日，我们的国家还会再来一次这么惨绝人寰的事情吗？“历史的三峡”1何时才能渡过？\n“历史的三峡”由历史学家唐德刚提出，大意是中国社会自 1840 鸦片战争开始转型，要真正转型为民主发达的国家，需要 200 多年的时间，期间社会可能还会有后退和许多曲折，就像长江三峡一样回环蜿蜒，不是一帆风顺的，另外可参见唐德刚著《晚清七十年》\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"25 February 2017","externalUrl":null,"permalink":"/2017/02/25/spring_festival_in_wh/","section":"Posts","summary":"1 月 26 日大清早起床赶到北京西站，坐上了早上八点半左右的火车，前往武汉，晚上大约七点半到达武昌火车站。在武汉呆了整整一周，2 月 3 号中午坐车回的","title":"在武汉过春节","type":"posts"},{"content":"去年的时候还是前年，在谷歌上搜索东西，看到了很多人的博客都是用 GitHub 托管的，使用 GitHub 提供的 GitHub Pages 功能。我一看就喜欢上这种开源并且简洁的方式，却没有立即行动。\n以前用 cnblog 写过一些偏技术的东西，总觉得体验很不好。我从去年 3 月多开始使用微信公众平台写东西，零零星星写了几篇，起初还保持一定的频率，后面就没有怎么写过了。每次写公众号，我都用的是官方提供的网页版的操作界面，个人感觉相当难用，而且也不支持Markdown。微信公众号的审查很严，经常能够看到自己关注的一些公众号因为犯忌，或者文章被删除，或者被禁一段时间，当然还有更严重的，投胎转世不知道多少回了，譬如王五四，“王阿姨”，“王红杏”，“王酥麻”\u0026hellip;所有的名字都让人想笑。每次投胎都会带着他那独具气质的头像，这头像也是他的认证，看到这头像你就知道他是谁了。\n虽然我不写那些所谓「犯忌」的东西，但是我讨厌这种蛮横的行为，随心所欲的删贴导致人们习惯于自我审查，并且引以为荣，当然闷声发大财是坠吼的。\n以后就在这里写博客了，这是一个更自由的空间，有时间的话也会把以前写的一些东西迁移过来，整理在一起。当然如果连 GitHub 也被墙了，我就没啥可说了嗷。自由万岁！\n","date":"24 February 2017","externalUrl":null,"permalink":"/2017/02/24/my_first_post/","section":"Posts","summary":"去年的时候还是前年，在谷歌上搜索东西，看到了很多人的博客都是用 GitHub 托管的，使用 GitHub 提供的 GitHub Pages 功能。我一看就喜欢上这种开源并且简洁的方式，却没有立","title":"A New Start","type":"posts"},{"content":"前一段时间和一个同学谈到了尊严，就用 A 来表示吧。A 认为人在弱小的时候，谈不上尊严，你只有放弃自己的尊严，才能活下来，强者才有尊严，或者说强者的尊严比弱者多。A 的话，让我想到了\u0026quot;弱肉强食\u0026quot;这个词：如果你弱小，那么不要谈尊严，你只是别人盘里的菜而已，尊严对你来说太奢侈了。\n中国人在骨子里似乎特别认同这种看法：尊严与荣誉是没有价值的，不珍惜尊严与荣誉，只有利益才是真实的。君不见多少人，对待比自己\u0026quot;弱\u0026quot;的人往往充满优越感，对弱者十分鄙夷，仿佛和他们在一起就降低了自己的身价，他们一旦看到比自己\u0026quot;强\u0026quot;的人，便马上转换颜色，充满谄媚与讨好。\n许多人都拥有这种冷血的逻辑，认为弱者不配拥有尊严，可是他们忘了或者假装不知道，强弱从来不是绝对的，谁是绝对的强者呢？崇尚\u0026quot;弱肉强食\u0026quot;的人自己成为别人的猎物的时候，不知是会坦然接受这种命运还是会充满恐惧地等待自己的末日？\n","date":"5 January 2017","externalUrl":null,"permalink":"/2017/01/05/thought_on_diginity/","section":"Posts","summary":"\u003cp\u003e前一段时间和一个同学谈到了尊严，就用 A 来表示吧。A 认为人在弱小的时候，谈不上尊严，你只有放弃自己的尊严，才能活下来，强者才有尊严，或者说强者的尊严比弱者多。A 的话，让我想到了\u0026quot;弱肉强食\u0026quot;这个词：如果你弱小，那么不要谈尊严，你只是别人盘里的菜而已，尊严对你来说太奢侈了。\u003c/p\u003e","title":"关于「尊严」","type":"posts"},{"content":"优化的方法有很多种，在深度学习中，占有绝对主导地位的还是 stochastic gradient optimization (简称 SGD) 以及它的一些变种，如 SGD with momentum，Adam 等。 SGD 是一种基于一阶梯度信息的优化方法，仅从优化的速度上来讲，效率不是最高的，一些利 用二阶信息的优化方法，理论上优化速度更快，但是，SGD 反而是在深度学习的优化中使 用的最多的优化方法，为什么其他类型的优化方法在深度学习中不经常使用呢？它们相比 SGD 有什么缺点？或者说 SGD 有什么优点呢？ 这篇文章试图对这个问题给出自己的思考 与总结。\n本文基于大量参考资料，对其中的要点进行提炼，主要介绍三种常见的优化方法：基于启 发式搜索的方法，基于一阶梯度信息的方法以及基于二阶梯度信息的方法。同时对实际使 用中一些论文中常用的术语以及它们的区别进行了说明。由于文章有一部分公式，所以我 采用了 LaTeX 书写本文，生成的 PDF 请点击这里下载。\n","date":"25 November 2016","externalUrl":null,"permalink":"/2016/11/25/thought-on-optimization-for-cnn/","section":"Posts","summary":"\u003cp\u003e优化的方法有很多种，在深度学习中，占有绝对主导地位的还是 stochastic gradient\noptimization (简称 SGD) 以及它的一些变种，如 SGD with momentum，Adam 等。 SGD\n是一种基于一阶梯度信息的优化方法，仅从优化的速度上来讲，效率不是最高的，一些利\n用二阶信息的优化方法，理论上优化速度更快，但是，SGD 反而是在深度学习的优化中使\n用的最多的优化方法，为什么其他类型的优化方法在深度学习中不经常使用呢？它们相比\nSGD 有什么缺点？或者说 SGD 有什么优点呢？ 这篇文章试图对这个问题给出自己的思考\n与总结。\u003c/p\u003e","title":"关于神经网络优化的一些思考","type":"posts"},{"content":"坐火车回北京，我坐在过道边，过道另一边是一个老人家带着她的孙子，小孩子约一岁，能说模糊不清的字。小孩子一路上都在吵吵闹闹，一刻不停歇，写作此文时候的举动是把前面座位上贴的布给扯掉，扔在地上，他的奶奶似乎无动于衷，也不批评，也不行动，过了一会儿，打扫卫生的人员过来了，把布捡起来，又贴在了原位置。小孩子仍然不满足，继续进行他的游戏，又把布扯掉扔在地上，奶奶似乎也有点不满意了，把布捡起来粘在了原处，然后小孩和他的奶奶重复这个回合若干次，奶奶并未对孩子讲这样做有什么不对，只是寄希望于小孩别再拽掉那块可怜的布了。\n仔细观察小孩子的行为，你会发现他们非常懂得察言观色与使用手段，他们会观察大人的行动，以此来决定自己将要采取的行动，当自己的要求得不到满足，就会装哭，或者大叫，希望博取大人的恻隐或者说关爱之心。我记得谁说过，小孩子很小，不懂得道理，对于这种论调，我也不知道说什么好。\n我记得在微博上看到一个故事，有一个妈妈带着她的孩子坐火车，结果孩子一直哭闹，怎么也不听劝，妈妈就带着孩子下车了，让他在下面尽情哭闹，什么时候闹够了再坐车，无论孩子孩子怎么闹也不理他，就让他一直在那里哭闹，最后孩子终于停止了哭闹。经过这么一次，孩子以后应该不会再乱闹了，我喜欢这样的父母。每一个熊孩子的背后，必然有他的土壤，不要抱怨你为什么生了一个熊孩子。\n提到孩子，我想到了很多，谁又结婚了，谁又有孩子了。在微博上看到一句话，说的是，中国的许多家长都很有自信，认为自己天生就懂得如何去养一个孩子，完全不需要学习。养个动物都得学习呢，这些家长真自信。我自己对于养孩子就完全没有信心，觉得有太多的未知，万一生一个孩子不能提供很好的环境，那不是坑了人家吗？显然很多人跟我的想法不一样，他们的逻辑是，父母生了你，给了你生命，你应该感到幸运，你应该感恩父母给你生命，怎么还能有这么多要求呢？对于这种论调，我也不知道该说什么。\n孩子，只愿你在一个正常的家里，有着正常的父母，有着正常的环境，正常的成长，快快长大吧。孩子，愿你成为一个正常的人，这就足够了。\n","date":"5 September 2016","externalUrl":null,"permalink":"/2016/09/05/thought_on_raising_children/","section":"Posts","summary":"\u003cp\u003e坐火车回北京，我坐在过道边，过道另一边是一个老人家带着她的孙子，小孩子约一岁，能说模糊不清的字。小孩子一路上都在吵吵闹闹，一刻不停歇，写作此文时候的举动是把前面座位上贴的布给扯掉，扔在地上，他的奶奶似乎无动于衷，也不批评，也不行动，过了一会儿，打扫卫生的人员过来了，把布捡起来，又贴在了原位置。小孩子仍然不满足，继续进行他的游戏，又把布扯掉扔在地上，奶奶似乎也有点不满意了，把布捡起来粘在了原处，然后小孩和他的奶奶重复这个回合若干次，奶奶并未对孩子讲这样做有什么不对，只是寄希望于小孩别再拽掉那块可怜的布了。\u003c/p\u003e","title":"关于孩子","type":"posts"},{"content":"公元 2016 年，真是一个多事之年啊，各种事件接踵而至，纷至沓来，仿佛排演好的一般，不断在现实与虚拟空间制造着冲突、对抗，也制造着话题。\n爱国青年们这几天盯紧了赵薇，指出赵薇启用了有着台独嫌疑以及发表有关慰安妇问题不当言论的戴立忍作为新片《没有别的爱》的主演，我刚开始以为这只是闹剧，大家骂几句就算了，过过嘴瘾而已，没想到，事情却越发起了变化：前几天发文支持戴立忍的剧组，昨天又发文要撤换戴立忍了。变化之快，让我惊讶于舆论的\u0026quot;力量\u0026quot;。\n我好奇的是，都是谁不辞辛苦在网上为国家前途命运而斗争呢？作为一个学生，我连自己的事情都搞不完，更别提精神高亢地上网讨伐\u0026quot;共济会\u0026quot;成员、阴谋颠覆我们伟大祖国、以美国为代表的帝国主义\u0026quot;汉奸走狗\u0026quot;及其\u0026quot;代理人\u0026quot;了。在这一点上，我觉得十分惭愧，没有做出一点微小的工作，没有为海峡两岸的统一大业献上一份自己的力量。\n相比我国人民的幸福生活，外国人民的生活可谓是水深火热了，真的是为外国人民担忧啊。这不法国昨天发生了恐怖袭击，一个突尼斯裔 Muslim 驾驶着卡车，对人群进行了冲撞碾压，有八十多人死亡，还有更多的人受伤。对于这样的事情我表示理解不了，只能表示谴责了。\n早上一起来，又看到了一条新闻，土耳其军人发动军事政变，结果貌似没有成功，偃旗息鼓了，发动政变理由是对土耳其现任政府的伊斯兰化表示不满，想要平衡伊斯兰的力量。\n我一向对政治、宗教的事情无法理解，不知道这些东西有什么意义，当然这不代表这些东西真的没有没价值，只不过依我愚钝的见识，没有认识到而已，因此也只能说一句愚钝的话：\u0026ldquo;关我*事？\u0026rdquo; 将来哪一天，我开化了，再来仔细研究一下意义问题吧。\n","date":"16 July 2016","externalUrl":null,"permalink":"/2016/07/16/thought_on_patriotism/","section":"Posts","summary":"\u003cp\u003e公元 2016 年，真是一个多事之年啊，各种事件接踵而至，纷至沓来，仿佛排演好的一般，不断在现实与虚拟空间制造着冲突、对抗，也制造着话题。\u003c/p\u003e","title":"「汉奸走狗」与「关我*事」","type":"posts"},{"content":"你可能不信，人的想法转变可能是一瞬间的。\n上个月和宇明聊天，他跟我提到了\u0026quot;绝命毒师\u0026quot;这部美剧，我鬼使神差记下来了，而且下载下来去看了，还喜欢上了。主人公Walter White 是一个才华横溢的高中化学老师，对于自己的本职工作简直不能用胜任来形容了。当得知自己得了肺癌以后，为了筹集治病的钱以及为自己的脑瘫儿子和未出生的女生留下一笔生活费，开始和自己以前的学生利用自己的化学知识制造冰毒。Walter White 是一个普通人，充满善心，谨小慎微， 老实巴交，这样的人我们的周围也一大堆。得了癌症以后，他的精神发生了巨大的变化，记得最深的一个场景是：有一个小年轻在模仿自己的脑瘫儿子，嘲笑他，Walter 并没有忍气吞声，而是勇敢地狠狠修理了那个家伙一顿。在发生了一系列反常的事情以后，妻子问他，到底发生什么了？他的回答令我印象深刻 :\u0026ldquo;I am awaken.\u0026quot;。\n每个人都有这种 awaken 的时刻吧？突然一瞬间，你觉得自己的内心正在从某种硬壳中挣扎出来，心情无比的愉快，一个长期套在头上的紧箍咒消失了，这样的时刻，对于自己来说真是值得铭记的时刻，但是这个时候，没有小说中的紫气冲天，也没有天降祥瑞，都没有，世界还是如常运转。但是你知道，有的东西改变了，一旦改变了就很难重回原路了。\n这几天抽空看了一本书，台湾版名字叫《大路，高速中国里的低速人生》，很有意思的是，这本书的大陆版名字叫《大路，高速中国里的工地记事》，这本书由广西师范大学出版社出版，但是这本书揭了咱伟大祖国的短，书写了阴暗面，不积极，给咱社会主义抹了黑，因此就 404 not found 了。作者是独立纪录片导演张赞波，可能也没有几个人听说过。他为了拍一部属于中国的\u0026quot;公路片\u0026rdquo;，在湖南溆浦高速的工地上与筑路者一起渡过了三年时光，经历了许多鲜为人知的背后的故事。你知道一条高速公路是如何修成的吗？有多少活着的人抑或是死去的灵魂要为高速公路让路？高速公路修建中有怎么样的利益纠葛？普通的筑路民工以及生活在高速路线沿途的民众又有怎么样辛酸动人的故事？这本书向我们展示了其中一角。最后引用书中的一段话作为尾声：\n当\u0026quot;发展\u0026quot;成为这个时代的永恒主题,那是一条更漫长、更宽广、更有力的道路。没有人能之神奇外：外来者与本地人，城里人与乡下人，劳心者与劳力者，富贵者与贫寒者，权势者与无权者，既得利益者和被侮辱被损害的人\u0026hellip;.. 他们虽然彼此对立，各走一边，却不得不共同前进。没有人能和这条大路背道而驰，逃脱它制定的轨迹、方向和速度。滚滚向前的，是永不停息的时光和宿命。\n","date":"30 May 2016","externalUrl":null,"permalink":"/2016/05/30/i_am_awaken/","section":"Posts","summary":"\u003cp\u003e你可能不信，人的想法转变可能是一瞬间的。\u003c/p\u003e","title":"I Am Awaken","type":"posts"},{"content":" 从乡下搬到市里不到一年，时间不是很长，注意到了两个事情，让我总是想写点什么来说一说。\n我们住的公寓建于零几年，距今已有十几年的历史，公寓里总共有四部电梯，我曾认真地看过电梯的牌子，竟然是\u0026quot;OTIS\u0026ldquo;牌，我心中 OTIS 牌电梯属于质量很好的电梯，但是这些电梯竟然经常出问题：时不时就因为什么问题，外面挡了一个围栏，正在维修；而且有很长一段时间，进入电梯会看到一个公告，大意是说电梯正在申请年检，遇到问题，请打某某电话。看来好品牌也耗不过时间？\n电梯经常出现的一个问题是，按的楼层数总共不能超过三个，如果超过三个，所有按的楼层都会熄灭，需要重新再按。公寓总共有十四层，每次电梯到了一楼，大家一拥进了电梯，总发现 13、14 已经被按了，如果有人又按了 10，11 层，那么住在 7 层的我就很尴尬，到底是按还是不按呢？遇到这样的情况多了，我总在想，一进去电梯就把 13、14 层按掉的人，到底是怎么想的呢，是不知道电梯的问题，还是其他原因呢？如果明知道电梯的问题，仍然去抢先按掉 13、14 层，为什么？这件事让我想到了大家的怕吃亏，喜欢抢占先机，就像去听一场讲座，或者去上一堂非常爆满的课，就算我不去，我也会先让同学占个座，我的手里绝不能空空如也，我需要抓住一些东西，才能觉得满足。就算我知道，等电梯一层一层往上，下层的熄灭以后我可以再按 13、14 层，我也不想这么去做，一进电梯就按楼层，给我一种安全感，我知道自己可以到达那里，而不是会被带到另外的楼层，需要再爬楼梯之类。在这样的一个小事上，我看到了一颗颗急迫的心。\n从公寓到实验室有一个十字路口，每次南北方向的绿灯灭掉，向西转的绿灯亮起，就有人想要往对面穿行，这样一来，往西转的车不得不以更缓慢的速度行驶，以避免撞到行人，行人同样也必须走的非常小心，以防止被车撞。明明往西转的绿灯变红以后有大把的时间可以让你安心地过去，那么你为什么宁愿胆战心惊也要闯过去？是有什么非常要紧的事情吗？\n为什么我们的国人都那么的不安，坐公交需要去抢座，坐地铁也需要抢座位，去上课也要去抢个位置，买房子也要抢，不是泰国的大虾也要抢吗，日本的马桶也要抢，我们的抢从国内发扬到了国外，也算是发扬光大了，抢似乎已融入我们的基因与文化了。到底出了什么问题？自古以来我们就是这么的一个民族吗？\n这几天正好日本地震，爱国的人士也一片欢呼，恨不得日本岛都能给震沉没了才开心，看了一些报道，灾民没有慌乱，排队领取吃的东西，出超市买水也未出现抢购潮，还有一些人主动低于限额购买饮用水。何时我们也能如此从容呢？\n","date":"18 April 2016","externalUrl":null,"permalink":"/2016/04/18/our_worry_and_anxiety/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190528010725.png\" width=\"800\"\u003e\n\u003c/p\u003e\n\u003cp\u003e从乡下搬到市里不到一年，时间不是很长，注意到了两个事情，让我总是想写点什么来说一说。\u003c/p\u003e","title":"我们的焦躁与不安","type":"posts"},{"content":" 我还没骑过电动车，也想过以后要骑电动车。据说，很多电动车车主经常横冲直撞，完全不遵守交通规则，造成了大量严重的交通事故，每年因为电动车死了不少人，这些说法把我吓住了。前些时候有人建议对电动车加以限制，我很赞成。说实在的，哪能容许这些电动车如此随意地开来开去。但假如我对这件事还有点了解，我要说：除了一刀切禁掉，没有什么限制的方法。那东西开起来太快，太邪门了。现代社会技术发达，电动车也越造速度越快，想要管理不出事故太难了，不如禁止方便。假如我骑电动车上班，或者我是送外卖的，没有电动车会有些困难。但我何必为那些人操心？在大街上，大量的电动车在行驶。但是我，一个搞研究的，不使用它们完全可以。所以，把电动车禁掉吧，省得我听了心烦。\n电动车是方便人近距离行动的省力工具。还有让电动车行走的工具，就是各种路。你想想看，没有马路，有电动车也跑不了。再说，三轮车，平衡车等也可能造成交通事故。必须破坏掉各种马路，禁止通行，这才是治本。这回我可有点舍不得\u0026mdash;我想到哪里去玩，有时候也会乘坐公交，而公交要行走在马路上。我从高中开始走马路，我用它去网吧，去市中心玩，去学校上学。\n顺便说一句，走马路上学是种幸福，没有马路，走山路去学校是种巨大的痛苦。但是它不学好，居然能走电动车了，这可是它自己作死，别人救不了它。看在十年老交情上，我为它说几句好话：古代的土路是无害的。那种颠簸不平整的土路，没有能力让车走的很快。现代的铺上水泥或者柏油沥青的路才是有罪的：这些马路非常平整，在上面车能开得很快，把它禁了吧……但现在走古代的土路，不一定能办到。为此，可以要求政府聘请专家，仔细研究古代典籍，制造古代的土路。政府听了瞪眼，说：你们是不是有毛病？回答应该是：我们没毛病，你才有毛病\u0026mdash;但要防止政府把我们的民众代表送进疯人院。当然，如果决定了禁掉一切马路，我也能对付。我可以走小路看电影吃饭，去车站，要上学就走小道去。残疾不能走小道的可以让别人背着你走小道嘛，虽然找到这么一个人比较难，但是\u0026ndash;谢天谢地，我现在已经不用上学了。\n除了电动车，小汽车也在载人。在这方面，我的态度是坚定的：我赞成严加管理。首先，外国的汽车与中国特色的国情不符，应该通通禁掉。其次，国内的汽车生产厂家良莠不齐，做出的汽车也多有不好的……我是做研究的，与做汽车无缘，只不过想有点创新。吉利，奇瑞，比亚迪，做出的汽车，我也看不入眼，但他们可都发大财了。应该严格审查\u0026ndash;话又说回来，把大街上跑的汽车统统检查一遍，不放过任何一辆不大容易，倒不如通通禁掉算了。中国古代几千年历史了，只靠马车、步行、骑马不也活过来了嘛。我可不像年轻人，走几步路就叫嚷着嫌远。我有土路走就行了。说来说去，我把自行车漏掉了。这种乌七八糟的东西，应该首先禁掉。年轻人没有事，可以多走走路，既陶冶了性情，又锻炼了身体……\n这样禁来禁去，总有一天禁到我身上。我是搞图像方面的研究的，但让我说我做的东西完全不会造成什么事故或者伤害，我也做不到。再说，到那时我已经吓傻了，哪有精神给自己辩护。电动车，小汽车都能禁，为什么不能禁搞研究？我们爱做研究，还有不识字的人呢，他们准赞成禁止搞研究。好吧，我不搞研究了，到建筑工地搬砖去。我的身体还凑活，能当搬运工。别的人未必搬得动砖头……\n我赞成对危害公众安全秩序的东西加以限制，只要限制不到我。但限制来限制去，结果却出乎我的想象。\n海明威在《钟为谁鸣》里说过这个意思：所有的人是一个整体，别人的不幸就是你的不幸。所以，不要以为丧钟是为谁而鸣\u0026mdash;它就是为你而鸣。但这个想法我觉得陌生，我就盼着别人倒霉。五十多年前，有个德国的新教牧师说：起初，他们抓共产党员，我不说话，因为我不是工会会员；后来，他们抓犹太人，我不说话，因为我是亚利安人；后来他们抓天主教徒，我不说话，因为我是新教徒，……最后他们来抓我，已经没人能为我说话了。众所周知，这里不是纳粹德国，我也不是新教牧师。所以，这些话我也不想记住。\n","date":"11 April 2016","externalUrl":null,"permalink":"/2016/04/11/thought_on_motor_ban/","section":"Posts","summary":"\u003cp align=\"center\"\u003e\n\u003cimg src=\"https://blog-resource-1257868508.file.myqcloud.com/20190528010420.png\" width=\"800\"\u003e\n\u003c/p\u003e","title":"从「禁摩限电」说起","type":"posts"},{"content":"想起了一个很好笑的笑话，有人在网上提问：“老婆怀孕了，但是隔壁邻居家里有wifi，我该怎么办，在线等，急！”有人回答：“送邻居一个仙人掌，能防wifi。”生活中，你也经常听到有人对你说，新买的手机必须完全放电，然后才能充满电，必须重复这样几次；还有人对你说，手机电池必须用到快没有电再去充电才行，否则会损伤电池。\n有时候你也对别人这么说，你说的很理直气壮，因为你觉得是真的，事实就是这样的，难道不是这样吗？可是认真往深处挖掘，使劲地挖掘，你开始思考，我这样的认知有根据吗，我的认知基于什么呢，科学实验？日常经验？别人经常这么说，我听的多了，就这么认为了？你于是觉得，所谓坚定不移认为正确的，是多么不堪一击，在稍微严肃的思考下。\n你不想去做严肃的思考，毕竟你还年轻，你还有很多更重要的事情去做，你要发论文，你得挣钱，买房子，怎么能浪费时间去想这些对你没什么用的事情呢，再说你觉得自己也想不清楚，还不如看两集电视剧，或者再刷一遍朋友圈，是吧。\n疫苗事件非常火热，有人写了一篇“疫苗之殇”，把最近的疫苗事件和13年财新网的一篇报道放在了一起，迅速引爆微博，转发量和评论都惊人，你随便看了看，没有认真思考就相信了，然后你觉得非常愤。\n接着，就有人辟谣了，这个疫苗只是二类疫苗，不是一类疫苗，并且信誓旦旦向你保证，就算疫苗在高温下运输，没有采用冷链运输，最大的可能性是失去活性，注射到人体没什么危害，当然他也很好心地向你提供了另外一种微小的可能，即注射以后可能会造成严重的后果，譬如死亡，或者植物人：你看了以后，觉得真客观，还把可能不好的结果都说出来了。于是你放心了，还觉得前面的“疫苗之殇”的作者怎么这么可恶呢？把注射疫苗产生的不良反应和正常疫苗失去活性以后的结果等同起来，误导广大的人民群众，造成恐慌，太坏了，你义愤填膺，觉得自己太蠢了，怎么没有认真分析一下呢，为什么没有认真看文章，为什么只看了那一边就相信了这是事实呢，怎么就被骗了呢，你觉得痛心疾首。然后，你又看到了“和菜头”的文章《每一个文盲都喜欢用“殇”字》，以及“小道消息”Feng的文章，指责媒体操纵群众情绪，利用无知群众达到自己的不可告人的目的，譬如推广国外的疫苗，你更加郁闷了，为什么我就这么轻易地相信了呢？\n但是，每一个精彩的故事，没有一波三折怎么行？接着就有“王五四“的文章出来了，《有免于恐惧的疫苗吗？给我来一针》，批评和菜头这种给疫苗洗地行为，表扬广大人民群众为了自己的权利而奋斗的行为，指出虽然群众可能并不明白其中的各种科学常识，虽然愚昧，但是群众也是为了自身的安全着想，怎么能在这个时候站在群众的对立面呢？难不成以后所有的新闻都要使用新华社的统一稿件吗？然而并没有完，又有人指出，疫苗高温运输，最大可能性是失活，这话没错，但是你们想过没有，无效的东西本来就是一种伤害好吗，你如你被狗咬了，然后你去注射了一阵无效的狂犬疫苗，然后恭喜你，你发病，并且“不可救药”地身亡了；再譬如医院给你开个无效的药品，结果你的病情加重了，医院说，这怎么能怪我呢，我只是给你开了一个无效的药品而已，又不会伤害你，你这时候大概想问候一下他的祖先，再痛扁他一顿。你又一次痛悔，哭天抢地，我XX怎么就这么蠢，就怎么相信了失活的疫苗不会造成危害，还觉得我已经知道最终的答案呢？\n上周末，看到了一篇文章，说到了哲学家加数学家罗素在1959年接受BBC的一次采访，在访问最后，他被问道，如果1000年以后有人会看到今天的采访，你想对他们说什么，他是这么回答的：\nI should like to say two things, one intellectual and one moral.\nThe intellectual thing I should want to say to them is this: When you are studying any matter, or considering any philosophy, ask yourself only what are the facts and what is the truth that the facts bear out. Never let yourself be diverted either by what you wish to believe, or by what you think would have beneficent social effects if it were believed. But look only, and solely, at what are the facts. That is the intellectual thing that I should wish to say.\n希望你能从中收获一点点东西，还饿吗:)\n参考 # 罗素对未来的寄语 ","date":"26 March 2016","externalUrl":null,"permalink":"/2016/03/26/are_your_hungry_about_vaccine/","section":"Posts","summary":"\u003cp\u003e想起了一个很好笑的笑话，有人在网上提问：“老婆怀孕了，但是隔壁邻居家里有wifi，我该怎么办，在线等，急！”有人回答：“送邻居一个仙人掌，能防wifi。”生活中，你也经常听到有人对你说，新买的手机必须完全放电，然后才能充满电，必须重复这样几次；还有人对你说，手机电池必须用到快没有电再去充电才行，否则会损伤电池。\u003c/p\u003e","title":"你饿不饿？来吃点东西好吗","type":"posts"},{"content":"In this post I summarize the commonly-used methods in Python os package.\nmethod related to paths # method description os.path.join join string to from a path os.path.split split directory and file name os.path.basename get the base name of file from a complete path os.path.abspath get the absolute path a file os.path.dirname get the directory name from a path If you want to combine several string to form a valid path, you can use os.path.join(). For example, if you want to combine \u0026quot;F:\\\\paper_ref\u0026quot;, \u0026quot;cnn_classify\u0026quot;, \u0026quot;hinton2012.bib\u0026quot; into a complete path，you can manually combine them using path separator of your system. But this way has some potential portability issue and is also error-prone. The best way is to use os.path.join method.\nos.path.join(\u0026#34;F:\\\\paper_ref\u0026#34;,\u0026#34;cnn_classify\u0026#34;,\u0026#34;hinton2012.bib\u0026#34;) os.path.split can split the directory name and file anme, for example,\nos.path.split(\u0026#34;d:/my_program/read_image.cc\u0026#34;)\r# output: (\u0026#39;d:/my_program\u0026#39;, \u0026#39;read_image.cc\u0026#39;) you can use os.path.basename to remove directory info and only get the base name of a file.\nos.path.basename(\u0026#34;f:/test/test.jpg\u0026#34;) # output: \u0026#39;test.jpg\u0026#39; With os.path.abspath, we can get the absolute path of a file in a folder. Suppose there is file named colour_themes.conf under current directory, you can use following command to get its absolute path,\nos.path.abspath(\u0026#39;colour_themes.conf\u0026#39;)\r# output: \u0026#39;/home/jdhao/files/colour_themes.conf\u0026#39; The os.path.dirname() method will return the path of a file (not including the file name)\nos.path.dirname(\u0026#34;file/music/song1.mp3\u0026#34;)\r# output: file/music check path or file # method decription os.path.isabs() decide if a path is absolute path os.path.isdir() decide if a path is directory path and check if it really exists os.path.isfile() decide if the given string is a file, also check if it really exists os.path.exists() check if a file or directory really exists directory manipulations # method description os.getcwd() get current working directory os.chdir() change current working directory os.listdir() list sub-directory and files under a certain directory1 os.mkdir() create a new directory os.rmdir() remove an empty directory, it can not remove non-empty directory2 os.remove() delete a file some attribute # There are also several use attribute. For better portability of your code, you should considering using these attribute instead of hard code.\nattribute description os.linesep line break character os.sep separator in a normal directory path name os.pathsep separator for the PATH environment variable References # http://www.cnblogs.com/feeland/p/4463682.html https://pymotw.com/2/ospath/ note that this method only output sub-directory and file names, with no path info\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nif you want to delete a non-empty directory, use shutil.rmtree\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"17 March 2016","externalUrl":null,"permalink":"/2016/03/17/common_methon_in_python_os_module/","section":"Posts","summary":"\u003cp\u003eIn this post I summarize the commonly-used methods in Python os package.\u003c/p\u003e","title":"Commonly-used Methods in Python OS Package","type":"posts"},{"content":"神经网络，从大学时期就听说过，后面上课的时候老师也讲过，但是感觉从来没有真正掌握，总是似是而非，比较模糊，好像懂，其实并不懂。\n为了搞懂神经网络的运行原理，有必要搞清楚神经网络最核心的算法，也就是误差反向传播算法的工作原理，本文以最简单的全连接神经网络为例，介绍误差反向传播算法的原理。\n在开始推导之前，需要先做一些准备工作，推导中所使用的神经网络如上图所示。一个神经网络由多个层 (layer) 构成，每一层有若干个节点 (node)，最左边是「输入层」，中间的层被称为「隐含层」，最右边是「输出层」；上一层节点与下一层节点之间，都有边相连，代表上一层某个节点为下一层某个节点贡献的权值。通常为了使得网络能够模拟复杂的关系，上一层节点的输出乘以权值矩阵得到下一层节点后，需要再经过「激活函数」对得到的各个节点的值进行非线性化处理。激活函数可以选用很多的形式，这里使用sigmoid 函数，表达式如下：\n\\[\\begin{equation}\\label{eq1} f(x)=\\frac{1}{1+\\exp(-x)} \\end{equation}\\]\n公式 \\(\\eqref{eq1}\\) 之所以使用 sigmoid 函数，一个很重要的原因就是「mathematical convenience」，sigmoid 函数的导数很好计算，\n\\[\\begin{equation} f\u0026#39;(x)=f(x)(1-f(x)) \\end{equation}\\]\n接下来，对推导中使用的符号做一个详细的说明，使推导的过程清晰易懂。我们用 \\(L\\) 代表网络的层数，用 \\(S_l\\) 代表第 \\(l\\) 层的节点的个数；用 \\(z^{(1)}\\) 和 \\(a^{(1)}\\) 表示第 \\(l\\) 层经过激活函数前/后的节点向量 (\\(z^{(l)}_i\\) 和 \\(a^{(l)}_i\\) 代表经过激活函数前/后节点 \\(i\\) 的值)，根据以上的表示，\\(a^{(1)}\\) 代表网络的输入 \\(x\\), \\(a^{(L)}\\)代表网络的输出 \\(y\\), 也就是上图中的 \\(h_{W,b}(x)\\)；用 \\(W^{(l)}\\) 表示第\\(l\\) 层与第\\(l+1\\) 层之间的权值形成的矩阵，\\(W^{(l)}_{ij}\\) 代表 \\(l\\) 层的节点 \\(j\\) 与\\(l+1\\) 层的节点 \\(i\\) 之间的权重(注意这种表示方式),用 \\(b^{(l)}\\) 代表 \\(l\\) 层到\\(l+1\\)层之间的偏置向量。\n有了上面的符号化表示，神经网络各层之间的关系，可以用简洁的向量矩阵形式来表达如下：\n\\[\\begin{align} z^{(l+1)} \u0026amp;= W^{(l)}a^{(l)}+b^{(l)} \\label{eq3} \\\\ a^{(l+1)} \u0026amp;= f\\left(z^{(l+1)}\\right) \\label{eq4} \\end{align}\\]\n根据以上的式子，我们就可以计算网络中每一层各个节点的值了，上述的过程称为「前向传播」(forward propagation) 过程，在深度学习库中通常都被叫做「forward」。\n通常，网络刚创建好时，我们随机初始化每两层之间的权值矩阵以及偏置向量，但是这样得到的网络，输出与实际的值差距太大。使用神经网络的目的，当然是想要网络的输出与实际的值差距尽可能小，随机初始化网络，显然不能满足这个目的。但是如何调整各层之间的权值矩阵以及偏置呢，这并不是一个很简单的问题，下面要推导的反向传播(backward propagation) 算法就是解决这个问题的利器。\n正式开始推导 通常来说，如果想要得到一个较好的网络，需要有一批已知的训练数据，假设我们现在总共有\\(m\\)个样本,即\n\\[\\left\\{(x^{(i)}, y^{(i)})\\right\\}, i= 1,2,\\ldots,m\\]\n对于每一个样本来说，我们优化的目标为 ：\n\\[\\begin{equation}\\label{eq5} J\\left(W,b;x^{(i)}, y^{(i)}\\right) = \\min_{W,b} \\frac{1}{2}\\left\\lVert h\\left(x^{(i)}\\right)- y^{(i)} \\right\\rVert^2 \\end{equation}\\]\n公式 \\(\\eqref{eq5}\\) 中，为了简化，我们用 \\(h(x^{(i)})\\) 表示 $h_{W,b}(x^{(i)}) $\n对于所有样本来说,我们需要最小化的目标函数为：\n\\[\\begin{equation} \\begin{aligned} J(W, b) \u0026amp;= \\frac{1}{m}\\sum_{i=1}^{m}J\\left(W,b;x^{(i)}, y^{(i)}\\right) + \\frac{\\lambda}{2}\\sum_{l=1}^{L-1}\\left\\lVert W^{(l)} \\right\\rVert_{F}^{2}\\\\ \u0026amp;= \\frac{1}{m}\\sum_{i=1}^{m}\\frac{1}{2}\\left\\lVert h(x^{(i)}) - y^{(i)}\\right\\rVert^2 + \\frac{\\lambda}{2}\\sum_{l=1}^{L-1}\\left\\lVert W^{(l)} \\right\\rVert_{F}^{2} \\end{aligned}\\label{eq6} \\end{equation}\\]\n上述优化目标函数 \\(\\eqref{eq6}\\)，并不简单是各个样本优化目标的和，而是由两项构成：第一项为误差项，第二项称为「正则项」(英文叫「regularization term」也称为weight decay term)，用来控制各层权值矩阵的元素大小，防止权值矩阵过大，网络出现过拟合，这和曲线拟合中对参数使用正则道理是一样的，只不过曲线拟合中，参数是向量，这里的参数是矩阵。我们使用 \\(F\\) 范数的平方来约束权重矩阵元素的大小，正则项前面的系数 \\(\\lambda\\) (称为weight decay parameter) 用来控制正则项与误差项之间的权重。另外，一般来说，只对权值矩阵进行正则，不对偏置进行正则。\n关于F范数的一点小知识 为了计算目标函数对权重矩阵的偏导，有必要对 \\(F\\) 范数 (也称为 \\(F\\)-norm) 有所了解。假设矩阵 \\(A\\) 是实数矩阵，大小为 \\(m\\times n\\),其 \\(F\\) 范数用公式可以表示为：\n\\[\\begin{equation} \\lVert A \\rVert_F = \\sqrt{\\sum_{i=1}^{m}\\sum_{j=1}^{n} (a_{ij})^2} \\end{equation}\\]\n另外关于矩阵 \\(A\\) 的 \\(F\\) 范数对矩阵 \\(A\\) 如何求导，有如下公式：\n\\[\\begin{equation}\\label{eq8} \\frac{\\partial \\lVert A \\rVert_F^2 }{\\partial A}= 2A \\end{equation}\\]\n抽丝剥茧，不断深入 我们优化网络的目标是计算各层的权值矩阵以及偏置向量，使得优化目标函数取得最小值。根据梯度下降算法，可以计算目标函数对各个参数的偏导，采用迭代方式来更新参数，最终得到最优的参数值。但是事实上，上述函数是非凸函数，梯度下降算法并不一定能够得到全局最优解(global optimum)，一般只能得到局部最优解(local optimum)。实际中得到的结果一般都是比较接近最优结果，在可以接受的范围之内，所以才使用梯度下降算法来优化神经网络。另外实际优化过程中，还有一些技巧，譬如加入 momentum 项，使得目标函数能够跳出local optimum 点，从而得到global optimum。在实际的深度学习训练中，一般都会使用momentum 来加快收敛的速度，这里仅讨论最基本情况，对增加 momentum 项的情况不予讨论。\n如果已经求得目标函数对各个函数的偏导数，那么各个参数的更新公式如下：\n\\[\\begin{align} W_{ij}^{(l)} \u0026amp;= W_{ij}^{(l)} - \\alpha \\frac{\\partial J(W,b)}{\\partial W_{ij}^{(l)}} \\label{eq9} \\\\ b_i^{(l)} \u0026amp;= b_i^{(l)} - \\alpha \\frac{\\partial J(W, b)}{\\partial b_i^{(l)}} \\label{10} \\end{align}\\]\n以上的式子中，\\(\\alpha\\) 称为「学习率」(learning rate)，用来控制权重和偏置项的更新幅度，如果 \\(\\alpha\\) 太大，网络的参数收敛速度快，但是可能出现来回震荡的情况，甚至不能收敛；如果 \\(\\alpha\\) 太小，网络收敛速度太慢，训练时间长。需要说明，权重矩阵以及偏置向量的学习率可以不一样，根据需要分别设置，实际上，Caffe 就是这么做的，可以在 prototxt 里面指定每层的权重以及偏置的学习率，其他的深度学习框架也可以类似设置。\n从上面的公式可以看出，现在的关键是，如何计算目标函数对权重矩阵以及偏置项各个元素的偏导，根据目标函数 \\(J(W, b)\\) 的计算公式 \\(\\eqref{eq6}\\)，可以得到目标函数\\(J(W, b)\\) 对权重矩阵以及偏置项各元素的导数：\n\\[\\begin{align} \\frac{\\partial J(W, b) }{\\partial W_{ij}^{(l)}} \u0026amp;= \\left[\\frac{1}{m}\\sum_{i=1}^{m}\\frac{\\partial J\\left(W, b; x^{(i)}, y^{(i)}\\right)}{\\partial W_{ij}^{(l)}} \\right] + \\lambda W_{ij}^{(l)} \\label{eq11}\\\\ \\frac{\\partial J(W, b) }{\\partial b_i^{(l)}} \u0026amp;= \\frac{1}{m}\\sum_{i=1}^{m}\\frac{\\partial J\\left(W, b; x^{(i)}, y^{(i)}\\right)}{\\partial b_i^{(l)}} \\label{eq12} \\end{align}\\]\n上面两个公式中,公式 \\(\\eqref{eq11}\\) 后半部分可以参考前面对于矩阵范数求导的公式\\(\\eqref{eq8}\\) 得到。\n观察以上公式，接下来的问题就是，如何求取样本目标函数对于权重矩阵以及偏置向量的偏导，也就是如何求 \\(\\frac{\\partial}{\\partial W_{ij}^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\) 以及 \\(\\frac{\\partial}{\\partial b_{i}^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\)？如果得到每个样本的目标函数对于各个参数的偏导，整个问题就解决了。\n这就要用到我们前面所说的 back-propagation 的思想了，当我们把一个样本输入到网络，通过前向传播，得到最终的输出，最终输出与实际的值之间有误差，然后我们通过某种有组织有规律的方式把误差一层一层向前传播，得到误差相对于每一层参数的偏导，这是求解该问题的核心思想。\n为了便于推导，再引入变量 \\(\\delta_{i}^{(l)}=\\frac{\\partial}{\\partial z_{i}^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\), 即最终的误差对每一层节点经过激活函数前的变量的偏导，用它来衡量某一层某个节点对最终误差的贡献量。\n计算辅助变量的值 对于最后一层(第 \\(L\\) 层)，我们可以很方便的计算 \\(\\delta_i^{(L)}\\)，详细推导如下：\n\\[\\begin{equation} \\begin{aligned} \\delta_{i}^{(L)}\u0026amp;=\\frac{\\partial}{\\partial z_{i}^{(L)}}\\left(\\frac{1}{2}\\left\\lVert y - h(x) \\right\\rVert^2\\right) \\\\ \u0026amp;= \\frac{\\partial}{\\partial a_{i}^{(L)}}\\left(\\frac{1}{2}\\left\\lVert y - h(x) \\right\\rVert^2\\right)\\cdot \\frac{\\partial a_{i}^{(L)}}{\\partial z_{i}^{(L)}}\\\\ \u0026amp;=\\frac{1}{2}\\left[ \\frac{\\partial}{\\partial a_{i}^{(L)}}\\sum_{j=1}^{S_L} \\left(y_j - a_j^{(L)}\\right)^2 \\right] \\cdot \\frac{\\partial a_{i}^{(L)}}{\\partial z_{i}^{(L)}}\\\\ \u0026amp;=-\\left(y_{i}-a_{i}^{(L)}\\right)f\u0026#39;\\left(z_{i}^{(L)}\\right) \\end{aligned}\\label{eq13} \\end{equation}\\]\n上述公式 \\(\\eqref{eq13}\\) 中，\\(f\u0026#39;\\left(z_{i}^{(L)}\\right)=a^{(L)}_{i}\\left(1-a^{(L)}_{i}\\right)\\) ，对于其他层也是如此计算，不再赘述。对于其他层(\\(l=L-1,L-2,\\cdots,2\\))的辅助变量，计算就不那么容易了，因为输出误差并不直接和这些层的节点相关，所以我们需要构造关系，利用微积分里面的链式法则 (chain rule),具体计算过程如下：\n\\[\\begin{equation} \\begin{aligned} \\delta_{i}^{(l)}\u0026amp;=\\frac{\\partial}{\\partial z_{i}^{(l)}}J(W,b;x,y) \\\\ \u0026amp;=\\sum_{j=1}^{s_{l+1}}\\frac{\\partial J}{\\partial z_{j}^{(l+1)}}\\cdot \\frac{\\partial z_{j}^{(l+1)}}{\\partial z_{i}^{(l)}}\\\\ \u0026amp;=\\sum_{j=1}^{s_{l+1}}\\delta_{j}^{(l+1)}\\cdot W_{ji}^{(l)}f\u0026#39;\\left(z_{i}^{(l)}\\right)\\\\ \u0026amp;=\\left(\\sum_{j=1}^{s_{l+1}} W_{ji}^{(l)}\\delta_{j}^{(l+1)}\\right)\\cdot f\u0026#39;\\left(z_{i}^{(l)}\\right) \\end{aligned}\\label{eq14} \\end{equation}\\]\n为了便于书写，上面公式\\(\\eqref{eq14}\\)中，\\(J(W,b;x,y)=J\\)。求误差对 \\(l\\) 层某个节点的偏导，无法直接求解，因为误差只和最后一层的节点有直接关系，但是如果我们已经知道了误差相对于下一层 (也就是 \\(l+1\\) 层) 节点的偏导，而下一层节点和本层 (\\(l\\) 层)直接相关，那么整个链条就可以打通了。关于如何由第一行得到第二行，我起初并没有正确得到，后来结合网上给的参考结果，逐渐想通如何计算。微积分中有针对多个中间变量的链式法则，其思想为：如果目标变量 (dependent varialbe)是三个中间变量(intermediate variable) \\(P,Q,R\\) 的函数，而这三个中间变量又是自变量 (independent variable) \\(x\\) 的函数，那么很容易证明下面的式子成立，\n\\[\\begin{equation}\\label{eq15} \\frac{\\partial \\, obj}{\\partial x}=\\frac{\\partial \\, obj}{\\partial P}\\cdot \\frac{\\partial P}{\\partial x}+\\frac{\\partial \\, obj}{\\partial Q}\\cdot \\frac{\\partial Q}{\\partial x}+\\frac{\\partial \\, obj}{\\partial R}\\cdot \\frac{\\partial R}{\\partial x} \\end{equation}\\]\n上述公式 \\(\\eqref{eq14}\\) 中第二行的求和符号就是这么来的，起初推导时少了求和符号，只求了误差相对于下一层节点 \\(i\\) 的偏导，没有意识到下一层的每个节点其实与上一层的每个节点都有关系, 利用链式法则，我们就可以很容易求得误差相对于本层的偏导，这就是误差反传的思想。\n根据我们前面的定义，上面的公式 \\(\\eqref{eq14}\\)，第二行求和符号里面的第一项\\(\\frac{\\partial J}{\\partial z_{j}^{(l+1)}}\\)，等于 \\(\\delta_{j}^{(l+1)}\\)。第二项如何显式表达出来呢？结合公式 \\(\\eqref{eq3}\\) 和 \\(\\eqref{eq4}\\)，具体如下：\n\\[\\begin{equation} \\begin{aligned} z_{j}^{(l+1)}\u0026amp;= \\left [\\sum_{i=1}^{s_l} W_{ji}^{(l)}\\cdot a_{i}^{(l)} \\right]+b_{j}^{(l)} \\\\ \u0026amp;=\\left [\\sum_{i=1}^{s_l} W_{ji}^{(l)}\\cdot f\\left(z_i^{(l)}\\right)\\right]+b_{j}^{(l)} \\end{aligned}\\label{eq16} \\end{equation}\\]\n有了公式 \\(\\eqref{eq16}\\)，那么公式 \\(\\eqref{eq14}\\) 第二行第二项偏导就很容易得到了：\n\\[\\begin{equation} \\frac{\\partial z_{j}^{(l+1)}}{\\partial z_{i}^{(l)}}=W_{ji}^{(l)}f\u0026#39;(z_{i}^{(l)}) \\end{equation}\\]\n这就是公式 \\(\\eqref{eq14}\\) 第三行第二项的来历。\n计算误差相对于矩阵元素和偏置向量元素的偏导 有了以上的铺垫，我们现在可以计算误差相对于矩阵元素以及偏置向量元素的偏导了。\n\\[\\begin{equation} \\begin{aligned} \\frac{\\partial J}{\\partial W_{ij}^{(l)}}\u0026amp;=\\frac{\\partial J}{\\partial z_{i}^{(l+1)}}\\cdot\\frac{\\partial z_{i}^{(l+1)}}{\\partial W_{ij}^{(l)}} \\\\ \u0026amp;= \\delta_{i}^{(l+1)}\\cdot a_{j}^{(l)} \\end{aligned} \\end{equation}\\]\n\\[\\begin{equation} \\begin{aligned} \\frac{\\partial J}{\\partial b_{i}^{(l)}}\u0026amp;=\\frac{\\partial J}{\\partial z_{i}^{(l+1)}}\\cdot\\frac{\\partial z_{i}^{(l+1)}}{\\partial b_{i}^{(l)}}\\\\ \u0026amp;= \\delta_{i}^{(l+1)}\\cdot 1 \\\\ \u0026amp;= \\delta_{i}^{(l+1)} \\end{aligned} \\end{equation}\\]\n向量化表示 对于输出层：\n\\[\\begin{equation} \\delta^{(L)}=-\\left(y-a^{(L)}\\right)\\cdot f\u0026#39;\\left(z^{(L)}\\right) \\end{equation}\\]\n对于其他层 (\\(l=L-1,L-2,\\cdots,2\\)):\n\\[\\begin{equation} \\delta^{(l)}=\\left[\\left(W^{(l)}\\right)^{T}\\delta^{(l+1)}\\right]\\cdot f\u0026#39;\\left(z^{(l)}\\right) \\end{equation}\\]\n权重以及偏置更新公式：\n\\[\\begin{align} \\frac{\\partial J}{\\partial W^{(l)}} \u0026amp;= \\delta^{(l+1)}\\left(a^{(l)}\\right)^{T}\\\\ \\frac{\\partial J}{\\partial b^{(l)}} \u0026amp;= \\delta^{(l+1)} \\end{align}\\]\n把所有公式整合在一起 现在我们可以把所有的公式结合在一起，得出最终的参数更新公式了。\n初始化，对于所有层 (\\(l=1,2,\\cdots,L-1\\))，令 \\(\\Delta W^{(l)}=0\\), \\(\\Delta b^{(l)}=0\\),前一项是一个矩阵，后一项是一个向量，分别代表对权重矩阵以及偏置向量的更新量。\n对于一个batch的所有训练样本 (for i=1 to m)\n使用误差反传计算 \\(\\nabla_{W^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\) 和 \\(\\nabla_{b^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\) \\(\\Delta W^{(l)}:= \\Delta W^{(l)}+\\nabla_{W^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\) \\(\\Delta b^{(l)}:= \\Delta b^{(l)}+\\nabla_{b^{(l)}}J\\left(W,b;x^{(i)},y^{(i)}\\right)\\) 更新参数\n\\[\\begin{align} W^{(l)} \u0026amp;= W^{(l)}-\\alpha\\left[\\left(\\frac{1}{m}\\Delta W^{(l)}\\right) + \\lambda W^{(l)} \\right] \\\\ b^{(l)} \u0026amp;= b^{(l)}-\\alpha\\left[\\frac{1}{m}\\Delta b^{(l)}\\right] \\end{align}\\]\n至此，误差反传以及参数更新的全部内容完成！\n参考资料 http://ufldl.stanford.edu/wiki/index.php/Backpropagation_Algorithm https://en.wikipedia.org/wiki/Backpropagation http://neuralnetworksanddeeplearning.com/chap2.html ","date":"19 January 2016","externalUrl":null,"permalink":"/2016/01/19/back-propagation-in-mlp-explained/","section":"Posts","summary":"\u003cp\u003e神经网络，从大学时期就听说过，后面上课的时候老师也讲过，但是感觉从来没有真正掌握，总是似是而非，比较模糊，好像懂，其实并不懂。\u003c/p\u003e\n\u003cp\u003e为了搞懂神经网络的运行原理，有必要搞清楚神经网络最核心的算法，也就是\u003ca\nhref=\"https://en.wikipedia.org/wiki/Backpropagation\"\u003e误差反向传播算法\u003c/a\u003e的工作原理，本文以最简单的全连接神经网络为例，介绍误差反向传播算法的原理。\u003c/p\u003e","title":"神经网络中误差反向传播(back propagation)算法的工作原理","type":"posts"},{"content":"本文主要介绍在 Windows 系统下，如何安装 Python 和 Pip, 以及 Pip 的简单使用。\n安装 Python # 可以从官方途径安装 python，安装包比较小，但是这个安装包只包含了运行 Python 所必需的库以及 Python 内置的一些库，因此缺少很多常用的库，例如 Numpy, PIL, Matplotlib 等等，如果需要使用这些库，需要自己手动去安装。\n另外一个不错的选择是直接安装 Anaconda。Anaconda 是科学计算常用的一个 Python 发型版本，包含 Python 的可执行程序，Anaconda 预装了很多常用的 Python 库，例如 Matplotlib，Numpy, 省去了自己安装的麻烦。并且 Anaconda 自带了库管理工具 conda, 相当于加强版的 pip，非常方便。\n请注意，安装 python 以后请把 python 可执行文件的路径加入系统的 PATH 变量，以便后面可以直接在命令行使用 python 命令。\n安装 pip # 安装 Python 以后（我的 Python 版本是 32 位，版本号 2.7.10），如果需要安装一些其他的库，一般有两种办法，一种是自己手动去各个库的官网下载，自己安装, 这种方式十分麻烦，有的库可能还需要编译，如果不熟悉，很容易弄错；另一种方法是安装 pip，使用 pip 可以方便安装各种 Python 库。\n你是否需要安装 pip？ (updated: 2018-01) # 根据 pip 文档介绍，如果 python 版本满足 Python 2 \u0026gt;=2.7.9 or Python 3 \u0026gt;=3.4，那么安装的 Python 已经自带了 pip 工具，不要单独安装 pip。\n在命令行使用 python --version 查看系统安装的 Python 版本来确定你是否需要安装pip。\n使用 get-pip.py 安装 pip # 首先，下载 get-pip.py 文件，然后在命令行中进入该文件下载的目录，执行下面的命令\npython get-pip.py --user pip 就安装好了。\npip 的使用 # 要安装某个python库，直接使用 pip install \u0026lt;package_name\u0026gt; 即可。如 pip install matplotlib 要查看 python 都安装了哪些库，可以使用 pip list 要删除某个安装的库，可以使用 pip uninstall \u0026lt;package_name\u0026gt; 命令 要显示某个库的详细信息，可以使用 pip show \u0026lt;package_name\u0026gt; 命令。如 pip show numpy，结果如下 显示安装的库中有哪些是需要升级的，可以使用 pip list -–outdated，显示如下： 升级一个已经安装的package，使用 pip install --upgrade \u0026lt;package_name\u0026gt;，例如 pip install –-upgrade numpy 参考 # https://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows https://pip.pypa.io/en/latest/quickstart/ ","date":"21 October 2015","externalUrl":null,"permalink":"/2015/10/21/python-pip-install/","section":"Posts","summary":"\u003cp\u003e本文主要介绍在 Windows 系统下，如何安装 Python 和 Pip, 以及 Pip 的简单使用。\u003c/p\u003e","title":"Windows 系统下 Python 以及 Pip 的安装和使用","type":"posts"},{"content":"LaTeX 写作中，参考文献一般单独放在一个 *.bib 文件中，每个文章对应该文件的一个 条目，每个文章有一个独一无二的 Key，在文章中使用 key 来引用对应的文章。 bibtex 可以根据 *.bib 文件产生 LaTeX 可以识别的引用条目，然后我们才可以在 LaTeX 中引用相关的文献。 本文主要写一些和文献管理以及引用相关的注意事项。\n关于多个作者的姓名如何正确分开 # 一般来说，如果一篇文章有多个作者，作者姓名之间直接用 and 连接，作者姓名按照 first_name last_name 或者 first_name middle_name last_name 来写即可，如果一 个作者名字不是这种形式，那么需要用花括号把作者的 last_name括起来，以便 bibtex 程序能够正确识别作者姓名。例如，\nSan Zhang and Si Li and Ma Zi Wang G{\\”o}del Jose {Dos Santos} 引用的文字与文献之间用 ~ (tilde) 连接 # 为了防止 LaTeX 把文字和对应的引文编号排版在两行，文字和对应的引文之间要使用 ~ 符号，这在 LaTeX 中被称为 unbreakable space ，举例如下，\nZhang et al.~\\cite{zhangsan2010cvpr} 另外，在引用 Figure，table，equation 等内容是也要使用 unbreakable space，例如\nFig.~\\ref{fig:foo1} Table~\\ref{tab:bar1} Eqn.~\\ref{eq:foo1} 为引用的文献选择正确的 entry type 以及 field 名称 # 不同的参考文献有不同的类型，我们必须为参考文献指定正确的类型，例如 article, conference 等。同时，不同类型可能需要不同的域（field）。\n常用的参考文献的类型以及含义 # @article :An article from a journal or magazine @inproceedings: An article in a conference proceedings @conference: The same as inproceedings @book: A book with an explicit publisher @booklet: A work that is printed and bound, but without a named publisher or sponsoring institution @inbook: A part of a book, which may be a chapter (or section or whatever) and/or a range of pages @incollection: A part of a book having its own title @manual: Technical documentation @mastersthesis: A Master\u0026#39;s thesis @misc: Use this type when nothing else fits @phdthesis: A PhD thesis @proceedings: The proceedings of a conference @techreport: A report published by a school or other institution, usually numbered within a series @unpublished: A document having an author and title, but not formally published field 类型 # 常用的 field 类型以及说明如下\nauthor The name(s) of the author(s), in the format described in the LaTeX book. title The work\u0026#39;s title, typed as explained in the LaTeX book. booktitle Title of a book, part of which is being cited. See the LaTeX book for how to type titles. For book entries, use the title field instead. chapter A chapter (or section or whatever) number. journal A journal name. Abbreviations are provided for many journals. year The year of publication or, for an unpublished work, the year it was written. Generally it should consist of four numerals, such as 1984, although the standard styles can handle any year whose last four nonpunctuation characters are numerals, such as `\\hbox{(about 1984)}\u0026#39;. volume The volume of a journal or multi-volume book. howpublished How something strange has been published. The first word should be capitalized. edition The edition of a book---for example, ``Second\u0026#39;\u0026#39;. This should be an ordinal, and should have the first letter capitalized, as shown here; the standard styles convert to lower case when necessary. institution The sponsoring institution of a technical report. key Used for alphabetizing, cross referencing, and creating a label when the ``author\u0026#39;\u0026#39; information is missing. This field should not be confused with the key that appears in the cite command and at the beginning of the database entry. month The month in which the work was published or, for an unpublished work, in which it was written. You should use the standard three-letter abbreviation, as described in Appendix B.1.3 of the LaTeX book. number The number of a journal, magazine, technical report, or of a work in a series. An issue of a journal or magazine is usually identified by its volume and number; the organization that issues a technical report usually gives it a number; and sometimes books are given numbers in a named series. organization The organization that sponsors a conference or that publishes a manual. pages One or more page numbers or range of numbers, such as 42--111 or 7,41,73--97 or 43+ (the `+\u0026#39; in this last example indicates pages following that don\u0026#39;t form a simple range). To make it easier to maintain Scribe-compatible databases, the standard styles convert a single dash (as in 7-33) to the double dash used in TeX to denote number ranges (as in 7--33). school The name of the school where a thesis was written. series The name of a series or set of books. When citing an entire book, the the title field gives its title and an optional series field gives the name of a series or multi-volume set in which the book is published. field 与 entry 的名称都是 case insensitive # field 与 entry 的名称都是 case insensitive，因此 author，Author，AUTHOR之 间没有区别。\ntitle 中保持某些字符的大小写状态 # title 中的字母大小写对最终输出是没有影响的，大小写等格式由参考文献的风格来决定 1，因此如果想要保持 title 中某些字母的大写，需要用花括号把字母括起来。如：\ntitle = \u0026#34;Proof of the {R}iemann {H}ypothesis\u0026#34; 参考 # 书写作者姓名，http://nwalsh.com/tex/texhelp/bibtx-23.html https://faculty.math.illinois.edu/~hildebr/tex/bibliographies0.html https://faculty.math.illinois.edu/~hildebr/tex/bibliographies.html LaTeX primer, section IV, https://www.tug.org/twg/mactex/tutorials/ltxprimer-1.0.pdf Entry type 的含义，https://nwalsh.com/tex/texhelp/bibtx-7.html 在 LaTeX 中通过 \\bibliographystyle{} 命令来设定具体使用哪种参考文献风格。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"16 October 2015","externalUrl":null,"permalink":"/2015/10/16/latex-reference-bibtex/","section":"Posts","summary":"\u003cp\u003eLaTeX 写作中，参考文献一般单独放在一个 \u003ccode\u003e*.bib\u003c/code\u003e 文件中，每个文章对应该文件的一个\n条目，每个文章有一个独一无二的 Key，在文章中使用 key 来引用对应的文章。\n\u003ccode\u003ebibtex\u003c/code\u003e 可以根据 \u003ccode\u003e*.bib\u003c/code\u003e 文件产生 LaTeX 可以识别的引用条目，然后我们才可以在\nLaTeX 中引用相关的文献。 本文主要写一些和文献管理以及引用相关的注意事项。\u003c/p\u003e","title":"LaTeX 中参考文献管理以及注意事项","type":"posts"},{"content":"In this post, I would like to share how to insert beautiful latex equations into Microsoft Office Word and PowerPoint.\nI assume that one of the LaTeX distributions has been installed on your system. On Windows, either TeX Live or MiKTeX is fine.\nInsert LaTeX equation in Word # Free software # There is a free plugin called texsword which can generate good quality LaTeX equations in Word.\nHow to install # Download the package from sourceforge, extract it. You will see something like this,\nFor Office 2007 and later versions, copy the file texsword.dotm to the directory C:\\Users\\\u0026lt;USER_NAME\u0026gt;\\AppData\\Roaming\\Microsoft\\Word\\STARTUP, \u0026lt;USER_NAME\u0026gt; represents your user name. In case that you can not locate this directory in this way, here is how you can find it in your computer:\nClick on the File ribbon (Office 2010) or Office button (Office 2007) Click Options Click Advanced Scroll down and find a button File Locations. Click on it. Find Startup folder in the list of the Word system folders. Remember where it is and close the Word. Copy the file. If everything went well, upon next Word launch, you will see the TeXsword buttons in the Add-Ins ribbon.\nHow to use # To insert equations, click the button with TeX label (see image above). There is also a shorcut to insert LaTeX equations: just press ALT+T.\nFor more usages, please consult the texword_readme.docx file bundled with the texsword.dotm. It has detailed instructions on how to use it.\nCommercial and shareware # There is a well-known software MathType which support LaTeX syntax. The only problem is that the license fee is too high for a student. I have found another software which is cheaper and can do the same thing. It is called AxMath and is developed by a Chinese company.\nYou can use the software free with limited features1 or you can purchase a license for about $6.12 (￥39) to activate full feature.\nAfter you have installed this software, a ribbon will appear in the Word menu.\nYou can insert inline, display and numbered equations. To change to the LaTeX input mode, click the button in the lower right of panel or press shortcut key Ctrl+Tab.\nIt support LaTeX command auto-completion once you start typing \\, which is convenient.\nAfter finishing equations, you can use Shift+Enter to render the equations.\nInsert LaTeX equation in PowerPoint # Install IguanaTex # To type LaTeX in PowerPoint, you can use IguanaTex. Download it from here. Following instructions on the website (there is a installation part) and set up IguanaTex properly. Then a ribbon with name IguanaTeX will appear in PowerPoint,\nHow to use # Type the LaTeX code just as you do in LaTeX,\nClick the Generate button to generate LaTeX equations. If you want to update the equation, select the generated image, then click the Edit LaTeX display button under the IguanaTeX ribbon. After finishing editting, click the button Regenerate to regenerate the equation.\nHow use Chinese character inside math mode? # By default the math mode in IguanTeX does not support Chinese character even if you have wrapped the characters with \\text{} command.\nTo use Chinese, you have to do several things:\nInstall GhostScript2. Install Imagemagick. Use pdflatex instead of the default latex command. You also need to the set the path of GhostScript and Imagemagick executable files correctly in the IguanaTex settings, as shown below\nI test the following script and it works as expected:\n\\documentclass[UTF8]{ctexart} \\usepackage{amsmath} \\pagestyle{empty} \\begin{document} $\\text{比例} = \\frac{\\text{部分}}{\\text{全部}}$ \\end{document} But I think the free version is good enough for normal use.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf you have installed the full version of Tex Live, you don not need to install GhostScript. It is packaged with Tex Live under TEXLIVEROOT/YEAR/tlpkg/tlgs/bin and the name is something like gswin32c.exe if you use Windows.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"13 October 2015","externalUrl":null,"permalink":"/2015/10/13/ms-office-latex-equation/","section":"Posts","summary":"\u003cp\u003eIn this post, I would like to share how to insert beautiful latex equations\ninto Microsoft Office Word and PowerPoint.\u003c/p\u003e","title":"How to Insert LaTeX Equations in Microsoft Office Word and PowerPoint","type":"posts"},{"content":"本文简单介绍如何手动安装一个 LaTeX 宏包。\n一般来说，下载的 TeX 发行版已经自带了很多宏包，可以满足绝大部分需求，但是偶尔我们也可能碰到需要使用的宏包碰巧没有安装的情况，这时我们就需要自己下载安装宏包了。\n下载 package 可以从 CTAN（Comprehensive TeX Archive Network）下载。下载下来的宏包，有的直接包含 .sty 文件（.sty 文件就是 package 的最终形式）;有的下载下来只包含了 .ins, .dtx，以及一个 readme 文件，这时需要自己编译生成 .sty 文件，以及生成相应的 manual。下面详细介绍生成 sty 文件以及帮助文档的步骤。\n生成 package 的步骤 # 以下步骤的前提是你已经安装好了 TeX 发行版，本文以 MikTeX 为例，请确保 MikTeX 的可执行程序已经加入了系统的环境变量中（PATH）。另外我的系统的 Win 8.1，win 7 应该也是一样的。\n第一步：下载宏包，解压，不赘述，下载地址 https://www.ctan.org/pkg，我下载的一个宏包名称是 qrcode，是用来生成二维码的，以这个宏包的编译为例来讲解。\n第二步：找到宏包解压后安装包地址，在我的电脑上是 E:\\LaTeX_package\\qrcode， 然后打开电脑的命令提示符界面，把当前的路径改到这个 package 所在的文件夹，也就是 E:\\LaTeX_package\\qrcode\n第三步：生成 qrcode.sty，在命令提示符界面输入 latex qrcode.ins, 经过一段时间编译，qrcode.sty 就生成了；然后接着生成帮助文档 manual, 在命令提示符界面输入 latex qrcode.dtx,编译完成以后，会生成一个叫做 qrcode.dvi 的文件，这个文件也可以用 ctex 自带的 yap 程序打开，不过不是很方便，所以最好还是把它转为 PDF，需要两步操作，先输入 dvips qrcode.dvi，生成 qrcode.ps 文件，再输入 ps2pdf qrcode.ps，最终就生成了 qrcode.pdf的帮助文档，帮助文档包含这个 package 的基本用法，命令的格式等。最终完成的样子如下\n第四步：生成 qrcode.sty 文件以后还需要把这个文件放到 LaTeX 能够识别的路径下，在 ctex 下，以我的电脑为例，这个路径是 D:\\Program Files\\CTEX\\MiKTeX\\tex\\latex,你可以在这个路径下建立一个文件夹，譬如 qrcode，然后把 qrcode.sty 放到这里。接着在你的电脑里找到 MikTeX 的 settings 这个程序，settings 有两个，选择后面括号里有 admin 的那个,打开以后，在 general 选项卡下有 Refresh FNDB 按钮，点击，过一会，这个 package 就会被加入 MikTeX 的路径中，然后在你的 tex 文件中就可以使用这个 package 了。\n使用 # 利用这个宏包，最后可以生成文本对应的二维码，代码如下：\n\\documentclass{article} \\usepackage{qrcode} \\begin{document} This is a qrcode for Google HK. \\qrcode{https://www.google.com.hk/} \\end{document} 最后生成的二维码如下图：\n其他宏包如果要手动安装，都是类似操作的。Happy TeXing！\n如果不想如此麻烦，可以选择使用 TeX Live，完整版已经预装了大多数你要使用的 package。\n参考 # https://en.wikibooks.org/wiki/LaTeX/Installing_Extra_Packages https://tex.stackexchange.com/questions/150182/dvi-to-pdf-convertor ","date":"23 September 2015","externalUrl":null,"permalink":"/2015/09/23/latex_install_package_manually/","section":"Posts","summary":"本文简单介绍如何手动安装一个 LaTeX 宏包。 一般来说，下载的 TeX 发行版已经自带了很多宏包，可以满足绝大部分需求，但是偶尔我们也可能碰到需要使用的宏包碰","title":"Windows 下 LaTeX 手动安装宏包（package）以及生成帮助文档整套流程","type":"posts"},{"content":"有一句俗话说“两鸟在林不如一鸟在手”，讲的是抓在手里的东西才会让人踏实，如果手里什么也没有，所谓“无所恃”，大多数人就会变的着急，会恐慌；还有一句相对的话叫“恃宠而骄”，范围过于狭窄，应该叫“恃物而骄”，马克思主义哲学的物质观告诉我们，世界是物质的，物质具有客观实在性，因此这物就是广义的了，财富，权力，荣誉\u0026hellip;\u0026hellip;这句话说的是人一旦有所恃，除却个别精神十分平淡的人，其余的人都会有“飘飘乎”而不知自省的状态。\n无所恃的人容易自卑，有所恃的人容易自负，人性的东西是很难逃脱的，无论你是平凡人或是伟人。\n我一直在想什么东西才是人真正可以凭借的，地位？财富？权力？这些东西都太脆弱，不堪一击，朝夕变化的故事已经并不断在上演。正好昨天下午看了一篇日志《如何接过一根搅屎棍》，文章很短，里面写道，作者在自己的新书发布会上遇到了一名小青年，他们有一段对话，摘录下来（版权作者所有）。\n小青年：“ 王路是谁？” 我：“是我。” 小青年 ：“这书是你写的？” 我：“嗯。” 小青年骨碌骨碌打量我一圈：“哎呀我X，现在咋是个人都能出书呢！” 我：“是啊是啊。像我这样能出书的人多，像你这样肯说实话的人就没几个啦。”\n我佩服作者的智慧，也喜欢他的幽默，他必是那样一种“有所恃”的人，可是那是什么呢？我大概也知道了答案：真正有所恃的人可能看起来并无所恃，那些上去有所恃的人未必真有所恃（好拗口的一句话。。。）。这也就是所谓的“大音希声，大象无形”吧。\n","date":"22 October 2013","externalUrl":null,"permalink":"/2013/10/22/i_have_nothing_to_depend/","section":"Posts","summary":"\u003cp\u003e有一句俗话说“两鸟在林不如一鸟在手”，讲的是抓在手里的东西才会让人踏实，如果手里什么也没有，所谓“无所恃”，大多数人就会变的着急，会恐慌；还有一句相对的话叫“恃宠而骄”，范围过于狭窄，应该叫“恃物而骄”，马克思主义哲学的物质观告诉我们，世界是物质的，物质具有客观实在性，因此这物就是广义的了，财富，权力，荣誉\u0026hellip;\u0026hellip;这句话说的是人一旦有所恃，除却个别精神十分平淡的人，其余的人都会有“飘飘乎”而不知自省的状态。\u003c/p\u003e","title":"有所恃的与无所恃的","type":"posts"},{"content":"大三下学期似乎没有什么大事，平淡中度过。\n读过的书 # 《浪潮之巅》，巨星公司的起浮与衰落：抓住革命的大潮，不断创新。投资银行：科技公司的吹鼓手，在当今社会，投资银行至关重要，公司扩大资本的模式已经不是经年积累式。 《匆匆那年》，个人感觉写的一般，略微粗糙。 《编码的故事》，比较有趣，从最简单到复杂，了解pc工作的好书，前几周一直在读，结果都没有认真听课。 《未央歌》，过于抒情和文艺化了，不过蔺燕梅和小童真讨人喜欢，喜欢他们一起上山钓鱼那节，好美的景色，好般配的一对小男女，还记得那个词“蘑菇”。 重读《东藏记》，再读 《北归记》，作者的文字功底 太深厚，艰难时事中仍让读者感受到“善”与”美“。 半拉子《暗时间》，思维品质很重要。 《数学那些事儿》，看了一遍，通俗易懂的教科书。 《虚数的故事》，对于自己不熟练的事反而更感兴趣。 上过的课 # 对老师彻底失望了，很多课都翘掉，PLC老师目中无生，我也果断目中无他了，不过这门课还是有点意思，曾认真做过实验，不过最后验收时没有做出，考试一般。 《最优控制》，花了一些时间，老师很认真，但是这门课并不简单，对学习以外的话更留意，譬如要讲卫生，讲素质，譬如中日差异。 《电力电子》默泪，不喜欢这个老师，讲课无水准与节操，认真复习了几周结果仍然惨不忍睹。 《供配电》水水的老师，看到吐血的复习，考完就忘的差不多。 《单片机》，其他老师，不过内容较简单。 《计控》，无聊的讲课，有用的内容，书本相当粗糙，还优秀课本？手一抖买了一本《digital control of dynamic systems》。 《嵌入式》，坑爹的教材，编书的人良心何在，祝厄运不断。 《仿真》，水水的老师，烂烂的教材，不过仍学到一些东西。 班级活动 # 开学初的真人cs，一直在玩，却未打中一个人；滑旱冰，没有去，段爷举行的活动都很”不拘一格“。杂事与生活一起自习的人；增强型信心；路边摊与黑面包车没有了；喜欢听的歌《城里的月光》，《love for a child》，某天晚上忽然想起来陈绮贞《太聪明》；玩起了新浪微博，八胀安姑娘真的是太搞笑了，太有趣了，给人很多欢乐；win 8系统各种重装，各种撺掇别人去装win8 ；第一次剪超短的发型；清明时节的感冒，令我元气大伤，感慨不已；每天晚上坚持的跑步；还有那匆匆的武汉面试之行。\n","date":"17 September 2013","externalUrl":null,"permalink":"/2013/09/17/2013_first_semester/","section":"Posts","summary":"\u003cp\u003e大三下学期似乎没有什么大事，平淡中度过。\u003c/p\u003e","title":"2013 上半年","type":"posts"},{"content":"我了解《三国杀》这个游戏，还是刚升入大学那会儿，那时我们和隔壁宿舍已有几位熟悉玩法的爱好者。大一初始，隔壁宿舍就是他们厮杀的战场，经常是几个人一玩到深夜。我那时对这个游戏虽有兴趣但又觉得规则、技能太多，难于记忆，便没玩，所以当他们玩的正酣时，我却在宿舍睡觉呢。\n《三国杀》的热潮没能持久，到了上学期后期，似乎已没人玩了，大家都已经找到代替了吧？\n正式接触《三国杀》，还是大二寒假，在家无事，就去记忆了一下卡牌。回学校后也曾玩过几次，没再动过。真正开始玩，是在大二暑假，八月初回学校参加数模培训，空闲时间一部分贡献给了它。那时对各种武将已基本熟悉，可仍是菜鸟，经常会因出错牌被队友骂。\n大三上玩的较多，晚自习回来或者有空就会玩几局，级别不断增长，低级场，中级场，再向高级场。偶尔和隔壁一起玩，常能得到配合的快感。这学期也玩了N多局，当然不是玩物丧志的那种玩了，由高级场进入了至尊场。\n这个游戏有许多亮点，是QQ 《英雄杀》无法超过的：卡牌设计精良，武将插画精致;人物配音相当专业，有些颇有喜感，如典韦的“吃我一击”，经常被大家说成“吃我一鸡”；游戏中的表情，很受欢迎，个人最喜欢的是那个“震惊”的表情，简单的设计，萌萌的表情，胜过千言万语，可惜有的表情仅限会员；它还拥有数量众多的免费武将，加上每周免费试玩武将，让你不会感到烦腻；它的完善的签到和时间奖励机制，让你在登录一定天数或时间后领奖，如手气卡，换将卡；最新上线的银两系统，让你不用花钱也可以买到武将，虽然数量有限。这些特点都让游戏积聚了大量人气。\n玩《三国杀》有很多的乐趣，也见识了各种奇葩队友，有时大家简直要笑破肚皮了，这欢乐难以估值。偶尔的一次爆发也足以让玩家们自豪不已，所谓“秒全场”或者“一刀N滴血”大概是每个玩家的愿望，当一个个敌对势力的人在你的手里被杀死，那种成就感，激荡人心。《三国杀》中还充满了各种搞笑的词汇，如“小学生有三宝：卡了，按错，家长好”，这句话用来讽刺那些技术不高，乱出牌，还来找借口的人，还有诸如“菊花刀”，“神将、渣将”，局外人恐怕很难理解这些词汇的含义。\n《三国杀》最苦情的角色莫过于内奸。八人场瞬息万变，内奸控局艰难。不管你跳反、装忠抑或是捣乱，都不会讨好，经常被忠臣或者反贼问候全家，常见的比较客气的问候语是“小内傻缺吗，还不跳？”。大家已经普遍养成了一种“仇内”的不良情绪，主、内、反的局面，主公宁愿托管让反贼赢，也不愿内奸得逞，小内的悲情可见一斑。\n可是当你在玩《三国杀》，究竟在玩什么？\n我曾遇到一局，自己主公，一忠臣觉形势不妙，索性撒手托管，坐以待毙，勇气如此。另一忠臣仍不放弃，坚持到底，最终主忠逆袭成功！自始至终，那个昵称为“爱骑自行车1949”的人，一言不发，只是冷静而正确的出牌，挽回了颓势，我佩服这样的人，或许说“窥游戏而知其人”过于片面，但是窃以为并非道理全无。\n身份局是最讲求“team work ”的场合，这是我体会最深的地方，团队合作就要求每个人应以总体利益最大化为核心准则，不应太在意个人得失，没有这种思想的人，注定失败。常遇到一些自认为技能强大，就自以为是的人，丝毫不考虑配合，个人英雄主义太盛，结果坑了队友，输了牌局：懂得为团队牺牲，是一种智慧和胸襟，来自于平时的。\n这学期有天下午玩，被队友坑得很惨，大家都相互指责、攻讦，事后心里十分郁闷。得失心太重，就会过分在意输赢，游戏的意义已被扭曲，其中的乐趣也将远离你。平常心才是最重要，看淡输赢需要胸怀的。\n每每看到有人乱出牌，总忍不住讥讽或骂几句，回想起来其实不必，徒扰心境尔，尽好本分，他人的事，无法左右的，好的德行胜过成败。当你在玩游戏，你在玩什么呢？\n","date":"16 July 2013","externalUrl":null,"permalink":"/2013/07/16/thought_on_san_guo_sha/","section":"Posts","summary":"\u003cp\u003e我了解《三国杀》这个游戏，还是刚升入大学那会儿，那时我们和隔壁宿舍已有几位熟悉玩法的爱好者。大一初始，隔壁宿舍就是他们厮杀的战场，经常是几个人一玩到深夜。我那时对这个游戏虽有兴趣但又觉得规则、技能太多，难于记忆，便没玩，所以当他们玩的正酣时，我却在宿舍睡觉呢。\u003c/p\u003e","title":"当你在玩《三国杀》，你在玩些什么？","type":"posts"},{"content":"有一次看到问题，“which teacher do you respect most？”。走在上课的路上，脑子里回味着这个问题，答案却未能蹦出来。\n小学 # 上了十多年的学，老师也碰到一大把，人生中那些或低沉或精彩的片段，无不有老师的痕迹。三年级时候遇到的语文老师是极温柔关爱的，从来不去打骂学生，即使偶尔犯了小错。有次太调皮，误伤同学，心里怕得要死，老师却未责罚于我，只是轻声细语。五年级的数学老师在我感冒时给我的药片和一杯温水，在深夜里为那些学习成绩落后的同学的辅导，还有那句“山外青山楼外楼”都让人心中无限温暖。\n初中 # 初中三年的语文老师，一幅不修边幅的的样子，喜欢抽烟，字写得极好。犹记得他拽着我的耳朵质询我怎么那么吊儿郎当的情形，那时眼泪都快流出来了。讲课的事情反而记不大清了，只对他讲授的《藤野先生》有模糊印象。初一初二的年轻的数学老师那些苦口婆心的教导以及因生气班级秩序紊乱不上课的有点幼稚的举动，现在想来也是十分感激，忍不住要会心一笑。初三数学老师对我们的种种鼓励与期望，对我的特别关注，都让我感动。\n高中 # 高中学校的名师和各种声名在外的老师，不胜枚举，当然不能一一聆听授课。高一语文老师教给我们学习语文应该达到的目标，老师是四川人，讲话虽有一丝娇滴滴却很动听入耳，还有她那篇《我为何到山西来》，对北方的包容之心，难得。高一的英语老师，毕业于上海外国语大学，讲课从不带书本，轻声细语，讲述着语法，句型。高二时听到他的一些跟同学发生的不愉快的事情，以至于最后不知为何离开学校，怀念这位博学的小眼睛的英语老师。还有那高二、高三时期，有点“疯疯癫癫”，十分活跃的语文老师，在课堂上高声朗读一些文章的情形，历历在目。也记得高三元旦老师的请客和借她的那本《成长》。\n大学 # 大一的《微积分二》老师和大二的《电路理论》老师，讲授认真负责，虽然也是绝大部分PPT，却值得尊重。当然教授《新闻英语》的朱老师对我们的启发和引导，也让人难忘。\n这些都是在我过去的学习中让我印象深刻的老师，小学、初中、高中、大学，但是那个“最”着实令人犯难，或许那样一位老师并不存在？我所尊敬的老师，知识渊博，却没有掉书袋的嗜好，所有的讲授内容融于胸中，旁征博引，向学生传达知识的精妙；我所尊敬的老师，必是谦逊而友善的，并不因为技高于人而自得，不会轻视学生的浅陋，他懂得引导，且有耐心，就像在经营苗圃，以为他知道学生的成长关键点，需要有指引人；我所尊敬的老师，必是仁爱的，不因成绩、外貌而小看任何学生，因为他知道年轻人的潜力无可限量。\n有一时也曾开玩笑说想做一名大学老师，去拯救苦逼的大学生们，引导他们，帮助他们，不过是玩笑罢了。大学的老师也是无奈的，无形之手在掌控着所谓秩序，秩序的打破并非易事，上上学期在教学楼前为自己举牌的老师值得尊重。甚至还想写一篇文章讽刺一下大学老师，题目就叫作《大学老师养成记》，想想还是罢了，隔靴搔痒，效果甚微，还是“务正业”吧。怀旧并不能解决现实问题，我还是继续务我的所谓“正业”吧，那些改革就留给革命家了。\n四月份写的吧，各种对老师的吐槽。。。\n","date":"19 June 2013","externalUrl":null,"permalink":"/2013/06/19/the_kind_of_teach_you_like/","section":"Posts","summary":"\u003cp\u003e有一次看到问题，“which teacher do you respect most？”。走在上课的路上，脑子里回味着这个问题，答案却未能蹦出来。\u003c/p\u003e","title":"Which Teacher Do You Respect Most?","type":"posts"},{"content":"新学期从暑假开始，热气满盈的培训教室，三国杀乐趣多，《国家干部》、《万历十五年》以及《亲爱的安德烈》，通宵达旦的数模比赛之夜，开学前两周的酱油生活，《那些回不去的年少时光》与《你好旧时光》，又闻桂花香，国庆登岳麓，编程趣味多，二食堂三楼很火呐，酱油的传感和检测实验以及课程，“蹭”了一个学期课的《电机拖动》，勤勉的略带苦口婆心的安老师，缺乏激情、乏味的“现控”课，起于十月中旬的托福单词，讲《误差理论》的认真负责的彭老师，“cut the rope ”一个有趣的游戏，充满智慧的《线性代数》公开课，“倾倾百老汇”成周末习惯，过生日与生日礼物，那些无名烦躁，自习圣地A座414，粉冶自习人，一直坚持的跑步，后湖小区的包子不错，《因为痛所以叫青春》，再读《成长》，练习汇编程序编写，“耿耿于怀”的传感考试，自省，为班级宣传拍视频，某某某乃真屌丝，a crisis in the end of 11，我逃课我喜欢，《肖申克的救赎》为何让我流泪，对外文教材的无来由崇拜，为课设不断看书，《半生缘》与《倾城之恋》，轻松过关的体育测试，干涸了一整个学期的人工河，打酱油于优秀班级答辩，后湖那还不错的杂酱面，我终究没能完成，惭愧的课设，《最美的时光》，坑爹的检测考试，写报告的不眠之夜，雪中漫步，考试前爆满的三教，据说图书馆很火爆，教室的空调能规律点否，元旦吃火锅，考完现控的后悔与令人揪心的微机，本学期网购的书可不算少，重游铁道，激战三国杀，只是“吃饭”的聚餐，托福单词完结，are you a changed man ？\n","date":"18 February 2013","externalUrl":null,"permalink":"/2013/02/18/2012_second_semester/","section":"Posts","summary":"新学期从暑假开始，热气满盈的培训教室，三国杀乐趣多，《国家干部》、《万历十五年》以及《亲爱的安德烈》，通宵达旦的数模比赛之夜，开学前两周的酱","title":"倏忽一年：2012 下","type":"posts"},{"content":"有时候觉得自己对人生的许多道理都懂了，给别人讲的时候都是很有气势，自己遇到了呢？人生中的有些事是不是真的别去想就好了？恐怕不是吧，不去想一些事有时是自信不足的表现，想要像鸵鸟一样把自己蒙蔽起来，不去想，不去看，问题就没了？当然不会的。有时候很害怕去解剖自己，这带来的一个后果就是在意旁人的看法，好像还没有那么强大，可以完全只注意自己的内心，就譬如别人说你很强大或者不行，你就真的是那样了？你会在意别人的看法么？甚至你会不会自嘲一下自己，把自己贬的体无完肤，但是内心确是无比的清醒，知道自己的位置，毫不迷糊茫然？\n越来越觉得认识你自己是很有意义的事情，一本书里说别人给你的看法就像是枷锁，很轻易就能锁上一个人，打破枷锁！教育给你的东西，你也要去把握，你有一定主动权，坐以待教并不好，欺骗自己也很差劲；教育给人更多适应性还是更少？\nLife is hope ，有这句话吗，“生活就是希望”，当然还是要主动，选择鸿毛，太不值当，会遭鄙视与遗忘。就像那因为失恋就“嗝屁”（倾倾百老汇）的大三学长，逝去只给人以笑料……\n","date":"6 September 2012","externalUrl":null,"permalink":"/2012/09/06/zi_chao_zi_xing/","section":"Posts","summary":"有时候觉得自己对人生的许多道理都懂了，给别人讲的时候都是很有气势，自己遇到了呢？人生中的有些事是不是真的别去想就好了？恐怕不是吧，不去想一些","title":"自嘲与自省","type":"posts"},{"content":"华硕ASUS，严肃的模电老师，模电好困难，不抛弃不放弃，其实张教主挺好（至少无可指摘）的，平和的数电老师，一个陌生女生的信息，胃酸真的挺痛苦，这医生太坑人了！木有听懂自控老师的课啊::\u0026gt;_\u0026lt;:: 自救者天救，初次物理实验的谨慎、认真看来是可笑的，新闻英语与晦涩的英美名篇选读，爱默生的《self-reliance》，社会时事和人生感悟，这个朱老师不一样！鸡肋物理实验and 自控实验，写报告真是一件奇葩的事，拿什么拯救你我们变质的实验？一口湖南话的毛邓老师，干净利索的复变老师，六级单词的完结，选修课老师有点“重口味”^^，自习圣地不再（A座415），忙碌的物联网杰哥，南校操场的跑步，清明岳阳楼之行，学习的观念（《成长》），百里毅行，做收音机，少吃辣椒了，二食堂二楼也不那么难吃的，三楼开始不错唉，后来……偶尔的焦虑与烦躁，人要理智一些！五一“美妙的”月亮岛之行@@，夜爬岳麓山，电工实践有点意思，我跟锋哥的组合天下无敌！读书：《追随智慧》，《联想风云》，《成长》，《中国的新革命》。更能承受了，成长了吗？\n","date":"24 July 2012","externalUrl":null,"permalink":"/2012/07/24/2012_first_semester/","section":"Posts","summary":"华硕ASUS，严肃的模电老师，模电好困难，不抛弃不放弃，其实张教主挺好（至少无可指摘）的，平和的数电老师，一个陌生女生的信息，胃酸真的挺痛苦","title":"2012 上半年","type":"posts"},{"content":"分班，新班级，二辉诗贤转专业，新班级聚会吃饭，申请奖学金，申请表，被扣德育分（不通人情的辅导员老师），国庆岳麓山，博物馆，电路自习，六级单词（新东方），看《西征记》，金工实习，一波三折的锤子，EC被刷，晚上睡觉很迟，梁中武看电视剧，电子电工实验，网络逃课，概率论乱七八糟，电路陈宁挺好，英语没怎么认真学，逃听力课，奋力去做数据库，漫长的自习（圣地A座415~_~），杰哥的认真学习，一位不曾说过话的自习人，为什么都去图书馆，概率论考试给我打击，bbc 英语，一种内在的焦躁，无聊的马克思，令人发狂的电路，二食堂一楼四楼吃饭，偶尔二楼，跑步没有坚持住，书包丢了，悲催的物理学习（蒋亦民，彭政），新的个性同学，岳麓山越野，宿舍的冷战与对峙，我对某些事的冷静态度，搞笑的人。\n","date":"12 January 2012","externalUrl":null,"permalink":"/2012/01/12/2011_second_semester/","section":"Posts","summary":"分班，新班级，二辉诗贤转专业，新班级聚会吃饭，申请奖学金，申请表，被扣德育分（不通人情的辅导员老师），国庆岳麓山，博物馆，电路自习，六级单词","title":"2011 下半年","type":"posts"},{"content":" 心态 # 总是在追逐，在忙碌，却没有停下脚步，问问自己:\u0026ldquo;你在做什么？”心里不安静，受外物干扰太深，各种念头太多，易激动，易手忙脚乱。为何不能平静地地做事呢？任何时候都尽量不去生气，不去发怒，想办法去解决。一颗平静的心能帮你拨开那层层的雾霭，看见光明。\n爱情 # 一个人一定会寂寞吗？一个人寂寞了，就去找一个女朋友，这是爱情吗？每个人都应该有自己的度，不要逾越，偶尔逾越也要回来，赶快回来，be sensible！两个人在一起，是为了痛苦吗？是为了快乐，一种心灵的愉悦，与物质关联要少。不要降低自己的人格，不要永远卑微地乞求，爱情应该是平等自由的，不是施舍与恩惠。\n思想奴役与束缚 # 最近时不时脑中就想这个问题，我们有多少看法是空中楼阁呢？我们有多少自己原创的思想？人长大了，脑中也被灌进了许多我们不知对错却奉为真理的东西。我们认为一个事应该是那样，很多时候不是因为那样就是正确的，而是别人是那样说的。我们对许多事情的看法都过于偏激。说到高考，那就必须是咬牙切齿，什么摧残人才，什么应试教育的各种不是，还有那黑色的高三。仔细想想，我们从哪里得来这些看法？有可靠依据吗？就算别人说的每一项都是是真的，你也要自己去体验，去感受，从来不要未体验就去传播这些不知对错的看法，勿盲目。说到政府，人们一般就是各种负面评价，官员腐败啊，权钱交易啊，官僚主义啊，滥用公款云云，政府是有各种问题，我也对某些丑恶行为深恶痛绝，但是这些想法是你自己形成的还是受他人影响的？它们是否真的就是对的？有没有夸大或者编造？我们要有自己的看法，不要轻易受别人的影响，不要被用做一个会说话会传播的工具，理智地思考。\n","date":"9 December 2011","externalUrl":null,"permalink":"/2011/12/09/some_recent_thought/","section":"Posts","summary":"心态 # 总是在追逐，在忙碌，却没有停下脚步，问问自己:\u0026ldquo;你在做什么？”心里不安静，受外物干扰太深，各种念头太多，易激动，易手忙脚乱","title":"最近的一些感想","type":"posts"},{"content":"这几天，就是国庆节了，没有去旅游，每天都在宿舍，早上睡到很晚才起来，中午有时磨磨蹭蹭，一阵消磨，真是 kill time。\n不知怎么就想到了人生的目标上面，现在的生活确实是有一丝波澜不惊，有一丝平静的，以至于大家都想去寻求刺激。人当然是需要轻松的时光的，需要娱乐，可是有时又是在娱乐中忘记了自己的事，或者是在逃避自己的事，太麻烦了，太沉重了，虽然很烦这种颓废，却又像有瘾者一样不能戒除，偶尔也会自责，然后继续沉沦？这就是放假的生活？这就是美好的生活吗？什么是美好的生活，做自己想做而且应该做的事，完成它，尽量放弃那些让你沉迷的却又令你偶尔有一丝痛苦的事，运动，适当的娱乐。就像蜘蛛侠一样，坏的思想、习惯像那件邪恶的衣服一样难以除去，但是不去除，只会越来越受它的影响，坚强地脱掉那件“坏衣服”，给自己一个新的我！积极一点，莫空虚度日！\n","date":"6 October 2011","externalUrl":null,"permalink":"/2011/10/06/try_to_be_more_positive/","section":"Posts","summary":"\u003cp\u003e这几天，就是国庆节了，没有去旅游，每天都在宿舍，早上睡到很晚才起来，中午有时磨磨蹭蹭，一阵消磨，真是 kill time。\u003c/p\u003e","title":"尝试积极 -- 国庆节感想","type":"posts"},{"content":"来到大学，一年多了，的确看到了许多同学因失去了高中时的严加束缚而整日放浪形骸，好多同学由于玩游戏、不上课导致挂科、重修。可能正是因为辅导员老师经历了许多类似的事，因此才制定了「查寝」的政策，完全可以理解辅导员老师的一片苦心，希望信息院的孩子都能努力学习嘛。刚开始我对此是不屑一顾的，因为我自己肯定是不会躲在宿舍打游戏的，何况我没有电脑。没有自行车，要去新校区，得走二十分钟，好浪费时间；去三教吧，人又那么多，人挤人的学习氛围给人不舒服的心情，所以我就选择了在宿舍自习。在宿舍，一个人，打开一盏台灯，倒一杯开水，氤氲的水汽，给人温馨的感觉。有多少个夜晚，在这样宁静的空间里，静静地思考，累了就听一首歌，或者到阳台上眺望一下校区的夜景，多么理想的自习之地。上个学期，我一直在宿舍自习，期间当然遇到了好多查寝的同学，我也记不清被查到了多少次，那时的我一直是问心无愧的，我只是在宿舍学习而已，有错吗？\n查寝的感想 # 这个学期，大家才知道，查寝是有目的的，评奖学金时，如果被查到过，德育成绩就会被降低，我想破脑袋，也想不通「德育成绩低=德育不好=查寝被查到」这个连等式是怎么奇迹般地实现的，查寝被查到，好吧，跟德育有关吗？\n我真的想说，no sane person would ever do that。查寝是否能起到作用呢？我不认为它能有什么作用，6点至9点，宿舍不能亮灯，于是一个在宿舍睡大觉的人没有被查到，一个认真学习的人被查到了，扣分了；一个在网吧玩游戏的人可能被认为是在学习，同样一个在学习的人被查了……好荒唐的场面。如果老师真的想让同学们去好好学习，不如把他们指定到一间教室，就像高中那样。如果老师真的关心学生的发展，在学生们迷茫时，在学生们因挂科苦恼时，老师就应该去帮助他们！希望我们的老师是真正地关心学生的发展。\n每一项政策、规定，其实行都会对大批人产生影响，就如这个「查寝」，很多同学对此都是不喜欢的。政策、规定的制定者能否在制定规定以前，考虑到方方面面的因素，制定出有效的规定？我们的规定能否更加人性化，而不是那么刻板、固执？\n大学生都是成年人，应该明白自己的所作所为对未来的影响，应该对自己的行为负担全部的责任。一个人想不想学习，是要学习还是要玩游戏，都是自己的决定，别人也不需要强制他们做什么事。与其通过「查寝」逼他们离开宿舍，不如给他们一些警醒与忠告。只有他们从内心愿意去学习，才是最好的结果。何况，离开宿舍并不能保证他们就是去学习了。毕竟他们总是要独自去面对一些事的，没有人会永远提醒他们，你们要努力，你们要这样，不要那样。\n由此，我也想到了「自由」两个字，我们的大学是「自由」的吗？我们的大学是开放包容的吗？有人说你怎么能由一点就去概括全貌呢，是啊，那我们大学的自由到底是从哪里体现出来的呢？自由难道不正是通过一些很小的细节体现的吗？我们的大学是在忠实地实践它的口号「培养创新型人才」吗？在选择自习地点这个小问题上都不能凭个人意愿，自由那么远，太多的行政命令，干扰了大学的自由精神，政策与制度的东西，有一些不合理，所以才会有一些到国外读书、研究的人不愿在学成以后回到中国，不是他们不爱国，而是“想说爱你不容易”，希望我们的大学更自由，这其中的关键就是管理者的心要是自由的、宽容的，这样学术的幼苗才能成长，中国本土未来才有可能出现诺贝尔奖得主。\n一个猥琐的查寝者 # 好多政策怎么一执行就变味了？由此在贴吧里看到一个同学，在距离晚上九点两分钟的时候，由于进了宿舍，被等候多时的查寝人员「光荣」地查到了，运气可真够背的。同时也不得不佩服该查寝童鞋的一丝不苟的工作态度，锱铢必较以及吃苦耐劳的工作精神，我不知等了多长时间，不抓住一个人，今天晚上的查寝岂不是没有收获了，抓你没商量。我感到了悲哀，同时也感到了一种内心的畸形，规定竟然被如此的毫无人性化的执行！诚然，有的东西必须一丝不含糊的执行，而查寝的目的是什么？是督促同学们的学习，不是找各种机会把同学们的名字记在所谓的查寝记录簿上完事！为了查寝而查寝，该同学之谓也。\n","date":"30 September 2011","externalUrl":null,"permalink":"/2011/09/30/no_sane_person_do_that/","section":"Posts","summary":"\u003cp\u003e来到大学，一年多了，的确看到了许多同学因失去了高中时的严加束缚而整日放浪形骸，好多同学由于玩游戏、不上课导致挂科、重修。可能正是因为辅导员老师经历了许多类似的事，因此才制定了「查寝」的政策，完全可以理解辅导员老师的一片苦心，希望信息院的孩子都能努力学习嘛。刚开始我对此是不屑一顾的，因为我自己肯定是不会躲在宿舍打游戏的，何况我没有电脑。没有自行车，要去新校区，得走二十分钟，好浪费时间；去三教吧，人又那么多，人挤人的学习氛围给人不舒服的心情，所以我就选择了在宿舍自习。在宿舍，一个人，打开一盏台灯，倒一杯开水，氤氲的水汽，给人温馨的感觉。有多少个夜晚，在这样宁静的空间里，静静地思考，累了就听一首歌，或者到阳台上眺望一下校区的夜景，多么理想的自习之地。上个学期，我一直在宿舍自习，期间当然遇到了好多查寝的同学，我也记不清被查到了多少次，那时的我一直是问心无愧的，我只是在宿舍学习而已，有错吗？\u003c/p\u003e","title":"No Sane Person Will Ever Do That -- 关于大学傻逼的查寝","type":"posts"},{"content":"人的心理真是太微妙了，这是我这些天一直在考虑的问题。在两个人的交往中就可以窥见这种微妙，起初两个人并不熟识，然后突然有一天你很有兴趣跟某个人说话，这种愿望好象是闯入脑子里的，没有任何征兆。回忆一下和你认识的人的交往，其发端似乎都很微小，以致于我难以想起为什么两个人彼此认识了。\n然而正是因为人的心理是微妙的，有一天你突然觉得倦了，烦了，没有兴趣了，于是你变得淡漠了，不积极了，而你的朋友可能却毫无察觉，可能会有察觉，于是心照不宣，默契地变成了“熟悉的陌生人”，而这种陌生感是令人不舒服的。\n当然也有可能是另一个人变了。通常情况下你并不知道原因，但你可以感觉到，他们变得不热情了，当你和他们说话时，会明显感到一种尴尬。当你邀请他们一起去玩或者一起去吃饭时，他们开始变得推脱，这时你意识到，过去那种亲密的关系一去不复返了，你很难再找回那种谈天说地的感觉了。\n在小说《都市风流》中，这种例子太多了。张义兰追求杨建华，万家福追求张义兰，张义兰由最初不喜欢万家福，到最后同意跟家福在一起。市委书记高伯年一手提拔了市长阎鸿唤，而当阎鸿唤大刀阔斧进行城市改造，赢得民心的时候，高伯年心中又有一种悲凉感和不平之气，觉得自己培养了一个野心家。东市区老领导晋波支持区长康克俭让哄抢住房的人搬出楼房的决定，但当康克俭强制将他的儿子搬出楼房时，他又觉得自己很没有面子。柳若晨和徐里力由于社会原因结婚五年却如同陌生人一样，各住各的房，互不干扰，当徐里力在生命即将到头时，却发现了柳若晨的种种优点，甚至爱上了他，柳若晨亦然。还有杨建华，起初对肖玲这个女孩总是严肃冷淡，但最终喜欢上了她。张义民，这个有点悲剧的人物，为了能够有政治基础，不惜低三下四地向高伯年的女儿高婕示好，高婕起初很反感他，最后当高婕从上海回来大变样后，张义民又变得傲慢起来，仿佛一个胜利的将军……\n人的心理真是比最复杂的方程式还要难解，怪不得小时侯会学到这么一句话：“世事洞明皆学问，人情练达即文章。”\n","date":"20 January 2011","externalUrl":null,"permalink":"/2011/01/20/admire_wonder_of_world2/","section":"Posts","summary":"\u003cp\u003e人的心理真是太微妙了，这是我这些天一直在考虑的问题。在两个人的交往中就可以窥见这种微妙，起初两个人并不熟识，然后突然有一天你很有兴趣跟某个人说话，这种愿望好象是闯入脑子里的，没有任何征兆。回忆一下和你认识的人的交往，其发端似乎都很微小，以致于我难以想起为什么两个人彼此认识了。\u003c/p\u003e","title":"欣赏奇妙的世界2","type":"posts"},{"content":"我在少年时做过许多梦，其中一个最远大的梦（相信也是许多同学的梦）就是成为一名科学家。小时候对如何做科学家毫无概念，只知道科学家很伟大，可以想做什么就做什么，而且还能享受到极高的荣誉。\n可是现在，再来看一看，还有多少人的梦想是做一名科学家？因为经过种种的事情，我们明白了，科学家是一项要求很高的工作，不适宜凡人干的。闲话少说，我们就来看看科学家是怎样炼成的。\n先来欣赏一下科学家同志们的童年。他们大都不是什么安分的主，三天两头瞎鼓捣，还老爱问“为什么”，这也情有可原，因为他们打小就有着对自然、宇宙强烈的好奇心，这种好奇心驱使他们去探索未知的世界，进而有所收获。就拿法国昆虫学家法布尔来说，这孩子童年时就对虫虫怪怪感兴趣，当别的孩子在玩耍时，他却在认真地观察昆虫并顺便逮一些昆虫，所以他的口袋总是满满的：装满了各种昆虫。幸亏家长开明，要不未来的昆虫学家就要被扼杀在摇篮中了，要搁在中国，不好好学习，整天玩弄昆虫，早被家长教训了。\n准科学家同志稍微长大了一些，上学了（毕竟自学成才的科学家不多，难度太大）。可是他们天生就爱“胡思乱想”，老师讲个什么，他老觉得有问题，气得老师直叫唤。对大多数于老师来说，你只要记住知识就可以了，管它对与错，黑与白。但准科学家同志却偏偏要思考知识的来龙去脉，推敲它的正确性。就这样，自由思考、不拘泥于现有老一套的精神就这样扎根了。\n准科学家同志披荆斩棘，击败无数对手，跨过了“高考”的独木桥，来到了大学中。他长长舒了一口气，别急，还没完呢。上课听教授讲课，越听越郁闷，回到宿舍，茶饭不思，在想什么呢？原来他发现老师的讲的东西似乎不对，接着他就窝在某个不为人知的角落奋战若干个月，最后得到了自己的结论。于是也不顾教授的面子了，直接在教授演讲时指正他们的错误，从此一鸣惊人，出名了。比如我们的霍金同志，当年上牛津时，年轻气盛，勇敢质疑自己的教授，弄得教授好不尴尬，但霍金由此也提出了自己关于宇宙、黑洞的种种理论，闻名世界。\n我们的准科学家同志终于大学毕业了，由此正式开始了自己的研究生涯。唉，又发愁了，自己的专业领域如此广泛，而且即使自己选了一个项目，研究方法有千头万绪。这时，他的另一个秘密武器出场了：敏锐的判断力。这种能力使他能于千头万绪中找到自己的研究方向，并找到正确的研究方法。但是即使你找到了正确的方向，你也是有可能失败的，失败一次，擦干眼泪，再来；很不幸，又失败了，仔细分析综合，重来……，皇天不负有心人啊，凭着持之以恒，愈挫愈勇的精神以及对自己无比的信心，我们的准科学家同志终于成功了，激动啊，激动之情溢于言表！可谁又曾看见了，我们的科学家同志为了事业，起早贪黑，三过家门而不入，忍受了多少孤单与寂寞，还有那没有成功之前那巨大的压力！\n不管怎么说，我们的准科学家同志终于摘掉了“准”的帽子，成了科学家。于是各种邀请纷至沓来，什么讲座呀，剪彩呀，电视节目呀……真是“人怕出名猪怕壮”，但我们的科学家同志这时又展示了一项密不外传的武艺：耐得住名利的诱惑。毕竟辛辛苦苦干了这么多年，有这么大的成就，获得名利是理所应当的。可我们的科学家同志就是不愿意过一种名缰利锁的生活，他们所追求的只不过是内心的一种快乐而已。\n当然我们的科学家同志并不是完全独立于社会的。他们大都有一颗善良的心，愿意与自然与他人和谐相处。一个不热爱和平的科学家，很难说是一个真正的科学家，充其量不过一个利用科学工具的人，比如二战中使用氯气的德国科学家哈珀。\n至此我们的科学家才炼成了。困难吧，简直比唐僧师徒西天取经还难！做一名科学家不容易啊。\n鉴于此，向科学精神，向科学家致以我最神圣、最纯洁、最真诚的敬意！\n","date":"8 January 2011","externalUrl":null,"permalink":"/2011/01/08/how_to_be_a_scientist/","section":"Posts","summary":"\u003cp\u003e我在少年时做过许多梦，其中一个最远大的梦（相信也是许多同学的梦）就是成为一名科学家。小时候对如何做科学家毫无概念，只知道科学家很伟大，可以想做什么就做什么，而且还能享受到极高的荣誉。\u003c/p\u003e","title":"科学家是怎么样炼成的？","type":"posts"},{"content":"～～前一阵子，早上起得自以为还挺早，于是每天都能听到在公交车终点站对面有一群人在念英语，一般模式是一个人带头，其他人跟着念，念得很大声，很有激情。\n～～刚开始我也想笑他们在那里念书，有点做作，念书为什么不找个清静的地方，偏要在马路边念。或许是在学习老毛吧。每天早上匆匆忙忙上学时，有这样一些人，不失为一道风景，于是就习惯了。\n～～有一天早上上课时，又走到那里，正好听到有两个卖早点的夫妻的对话，老婆婆说：“他们一天早上咿咿呀呀吼些什么呀？”然后和老伴相对一笑。此时对面的“吼声”仍在继续，然后心中就发出了一声感叹，虽然空间上卖早点的夫妻跟那些人一样的，可是分明他们的世界却是如此鲜明地区别着。这是两个不同的世界，一个平常琐碎务实，另一个充满了激情、理想、稚嫩。\n～～当这边卖早点的在忙着卖早点时，那边朗朗书声也不断飘来，两个世界在这里形成了一种有趣的对峙。\n～～想到一句话：“世界的确是靠那些杰出的人物推进的，但世界又是靠那些平凡的人支撑的。”不知合不合适作为结尾？\n","date":"10 December 2010","externalUrl":null,"permalink":"/2010/12/10/intersection_of_two_world/","section":"Posts","summary":"\u003cp\u003e～～前一阵子，早上起得自以为还挺早，于是每天都能听到在公交车终点站对面有一群人在念英语，一般模式是一个人带头，其他人跟着念，念得很大声，很有激情。\u003c/p\u003e","title":"两个世界的碰撞","type":"posts"},{"content":"几天，我在操场上跑步时，不知不觉想到了世界的和谐与奇妙。这个世界如很多人所说，由于技术——无线通讯，互联网——的联通而变小了，但这个世界其实还是很宏大的。想想我们所生活的地球，这个地球上有多少人啊，每个人都在创造属于自己的生活。每一天每个人就那样生活，生活在自己的圈中，而自己或许并未认识到。\n当你和某个人未了解时，当然他之前也在生活，你也在生活，但是彼此互不知晓，毫无联系，两个圈子没有丝毫交错。于是我想，在你没有认识他们以前，他们在做些什么呢？那时的我们都在那里？我们为什么相遇却没有相识？他们的生活是否与现在一样？这种神秘性令人着迷。\n我们每个人的生活多么像一本书，一本小说，里面有无穷的故事，当然它与小说又不同，因为生活的小说是不断更新的。认识一个人，就像在读一个个故事。认识一个人，你就进入了一个崭新的世界，世界以另一种形式展现在你面前。\n可悲的是，现在的我们为了自己的“目标”，忽视了多少身边的人，忽视了多少相遇的人！现在的我们，实在是太“忙碌”了，我们忙着上课，忙着参加各种活动，忙着去听讲座，忙着去参加会议……沉思一下，你真的有必要那么忙么？我们与自己认识的人的谈话被无限的“压缩”了，仅仅局限于一些无关痛痒的话，而这种谈话根本无法去读懂一个人，去了解他们，去懂得和欣赏他们的故事与世界。\n静下心来想想，有多长时间你没有和一个要好的可以认为是朋友的人愉快地交谈几个小时了？不是在吃饭时的交谈，不是在打牌或学习时的交谈，仅仅是两个人，谈论自己，谈论社会，谈论人生。这样一想，心里不禁有点落寞与尴尬，这样的时间长的无法计算！\n正如老师所说，中国人现在太浮躁了，太功利了。我们很少去关注自己与别人的内心世界，很少做一些深层次的思考。\n什么时候可以找到那样一个人，那样一个时间，那样一个地方，去了解未知的奇妙的世界呢？\n","date":"4 December 2010","externalUrl":null,"permalink":"/2010/12/04/admire_wonder_of_world/","section":"Posts","summary":"\u003cp\u003e几天，我在操场上跑步时，不知不觉想到了世界的和谐与奇妙。这个世界如很多人所说，由于技术——无线通讯，互联网——的联通而变小了，但这个世界其实还是很宏大的。想想我们所生活的地球，这个地球上有多少人啊，每个人都在创造属于自己的生活。每一天每个人就那样生活，生活在自己的圈中，而自己或许并未认识到。\u003c/p\u003e","title":"欣赏奇妙的世界","type":"posts"},{"content":"","date":"16 October 2010","externalUrl":null,"permalink":"/tags/people/","section":"Tags","summary":"","title":"People","type":"tags"},{"content":"我听说郑星，也是在高二的时候了，记得那时有一次跟师胜锋在一起走路聊天，忽然听师胜锋叫了一句：“郑星！”我停住脚一看，见到一个瘦瘦的，个子中等，留着一头短发，脸上略微有一些雀斑的学生正拿着一沓书往大讲堂走，我一想就明白肯定是去听竞赛课\u0026mdash;那大概是我第一次听说有“郑星”这么一个人。\n师胜锋说郑星初中跟他在一个班呆过，跟他学习差不多，学习很刻苦（这点我倒略有耳闻，似乎说他高一时在 472 班时，经常学到很晚才睡），此后知道的关于他的一些消息却尽乎是「负面」的了，什么通宵上网呀，什么有点傻啦……这些都是从一些自诩“正道人士”的人口中得来的。关于他上网的事，当然不止是他，还有我们班的一些游戏迷也和他同去，到高二下学期，老师们都知道了，于是严禁星期六放假以后去网吧。后来到高三下半学期，我听他自己说，有时晚上拼命赶作业，学到两三点，然后星期天去网吧通宵。我觉得这样对身体损害太大了，这大概是有时我在操场跑步时见到他也在跑的原因吧；不过他跑得比我快多了，常常是拼命狂奔的。跑完后经常能听见他喘着粗气，大概只有快跑才能释放生命中太多的於积。\n郑星“名声大振”源于高二下学期的“捐款事件”，当时为汶川地震捐款，不知是怎么搞的，似乎是由自愿变成强制性的了，你不能不捐，也不能少捐，否则大家就会鄙视你，一连串“好话”也会接踵而至。大家当时似乎爱国之情空前高涨，至少都捐了五元，我也随大流捐了五元。后来就听说郑星只捐了一元，于是群情激愤了，我也听到了一些“畜生”, \u0026ldquo;郑星是个傻逼”，“郑星简直不是人”等不堪入耳的话从一些“爱国人士”口中蹦出，我很想替他鸣不平，但一想众怒难犯，只好作罢，不知当时他心里是怎么想的。\n而后在我们班上物理课时，物理老师也不齿郑星的行为，似乎也骂了他“不是人”还是其它什么的，事情已经过去一年多了，我已记不清了。大家都不是什么有钱人，捐一些钱，聊表心意，难道国家真的指望我们这点钱就能重建汶川吗？那些捐了成百上千万甚至一个亿的人是否可以就此戳着我们的脊梁骨，骂我们是民族败类呢？大家当然不服气，为什么我们对别人不能宽容、大气一些？\n之后就听到关于郑星的一个“笑话”。郑星去向物理老师问题，物理老师或许不屑于讲给他听，撂下一句干脆的话：“不会！” 想把郑星打发走，一般人听到这句话或许就走了，但郑星突然冒了一句：“你不会，不会去问别人别人吗？”这一句话可把物理老师惹恼了，气得说不出话来，只挤出一句话：“你给我滚！”不知道他是以怎样的心情从老师办公室里走出来的，得意的，还是悲伤的，抑或是两者兼而有之？这个故事是从别人那里听来的，不知有没有添油加醋，自我感觉还是比较真实的。\n后来到了高三，又看见郑星因为迟到，被物理老师揍了一顿，似乎还要让他搬出实验部什么的，不知这算不算老师在算旧账，反正物理老师见到郑星肯定是很不爽的。\n高考完填完志愿就没听到他的消息了，他给我的印象定格在填志愿时的某个晚上，他要去和同学上网，我们正好碰见了。我也不知道自己为什么写他，或许潜意识里我很“羡慕”他吧。\n","date":"16 October 2010","externalUrl":null,"permalink":"/2010/10/16/about_zheng_xing/","section":"Posts","summary":"\u003cp\u003e我听说郑星，也是在高二的时候了，记得那时有一次跟师胜锋在一起走路聊天，忽然听师胜锋叫了一句：“郑星！”我停住脚一看，见到一个瘦瘦的，个子中等，留着一头短发，脸上略微有一些雀斑的学生正拿着一沓书往大讲堂走，我一想就明白肯定是去听竞赛课\u0026mdash;那大概是我第一次听说有“郑星”这么一个人。\u003c/p\u003e","title":"关于郑星","type":"posts"},{"content":"——我是在去年暑假时听到舒曼的《梦幻曲》的，听过之后就再也忘不掉了。我不想说它的只想说它带给我的感觉，因为我可以说是一个乐盲—丝毫不懂音乐知识。\n——听《梦幻曲》，我常常有一种很强烈的“浮生若梦”的感觉，伴随着缓缓的乐曲，那慵懒缓慢而忧郁的曲调，释放出一种诱人的力量，不知不觉，你已陷入一种和缓忧郁之中。乐曲散发出一种高贵而优雅的忧伤，让人觉得一切都充满着奢华而虚幻的美，旧时那些美好的回忆一一涌现。美丽的曲子总让人有一种淡淡的哀愁和无奈。\n——这样的曲子似乎还要加上一些画面：精致而华美的宫殿，宫殿中生活单调的公主或王子，还有那似水流年。光阴就这样一点一滴从时间的沙漏中漏过，转眼间十几年就过去了，而深居宫殿的人们依旧过着惬意却乏味的生活。在一个阳光渐暗的傍晚，当Ta 从大厅往卧室走时，站在盘旋的楼梯上，忽然回头看见了夕阳，过去的一切电击石一样浮现在眼前。Ta 在想些什么呢？过去与恋人的欢乐时光吧，最终却没能走在一起。“罢了，一切都过去了，真是“浮生若梦”呀！转眼间已经过去这么久了。”一滴眼泪悄悄滑落，掉在了楼梯上，然后轻轻地，往上走，消失在了楼梯口。\n——我喜欢这高贵的忧伤。\n","date":"9 October 2010","externalUrl":null,"permalink":"/2010/10/09/thought_on_schumann/","section":"Posts","summary":"——我是在去年暑假时听到舒曼的《梦幻曲》的，听过之后就再也忘不掉了。我不想说它的只想说它带给我的感觉，因为我可以说是一个乐盲—丝毫不懂音乐知","title":"听舒曼《梦幻曲》","type":"posts"},{"content":"好些天以前，在宿舍里，大家不知不觉就谈到了哭，好像是讨论哪部电视剧使他们感动得哭了。那次讨论使久藏心中的一个话题再一次被激活，可是我终究没能写点什么。现在我觉得有写的必要了，一是因为实在有些抑制不住了；二是因为明天要考语文，就当是练习写作吧1。\n最早关于“哭”的印象是什么呢？大概是做错事了，被父母教训了一顿，当时还是小孩子，一半是因为疼，一半因为害怕，就哭了。因此我也想到，许多“哭”被欺负、被凌辱有关的，我小时候似乎与人打架的频率挺高的，一打输必然是要哭的，再比如初一时受班上那一帮人欺负，我也委屈地哭了；再看看古时的贤人们，屈原一定是痛哭过许多会的，“信而见疑，忠而被谤”，品格高尚，形象高洁的他生在那样一个时代，能不哭吗？站在汨罗江边的他，是否也流下了屈辱痛恨的眼泪呢？还有司马迁，在他被施以腐刑的时候，作为一个血性男儿，他是否也曾流下过屈辱的眼泪呢？\n小时候还有一种“哭”，是一种孤独无助的哭，小孩子嘛，能有多坚强呢？遇到自己感觉困难的事，不免哭出来。刚上三年级时，妈妈送我到学校，妈妈要走时，我的眼泪忍不住就掉了下来，毕竟是第一次离开妈妈！还有在冬天的时候，一个人躺在被子里冷得发抖，如果要再加上咳嗽或发烧，眼泪不自觉就流了出来。\n另一种“哭”，可以称之为青春的伤痛或伤感，说白了，在大人眼里，有些无病呻吟。\n到了高中，也经历了一些哭泣，却都已不是自己的了。有人为考试失利伤心落泪；有人为朋友背离而流泪；有人为失恋痛哭……印象最深的还是那次汶川地震时所见到的哭泣，大概是女生们大都多愁善感，当物理老师在讲台上讲着地震的一些情况时，很多女生都在啜泣，有几个男生在偷偷掉眼泪。\n有时真想大哭一场，不需要什么理由，可我却哭不出来，这难道是成熟的表现？也许我的泪腺已退化了吧？难道在以后的许多年里，真的不会再有眼泪了吗？\n这篇文章写于高中期间。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"7 October 2010","externalUrl":null,"permalink":"/2010/10/07/about_crying/","section":"Posts","summary":"\u003cp\u003e好些天以前，在宿舍里，大家不知不觉就谈到了哭，好像是讨论哪部电视剧使他们感动得哭了。那次讨论使久藏心中的一个话题再一次被激活，可是我终究没能写点什么。现在我觉得有写的必要了，一是因为实在有些抑制不住了；二是因为明天要考语文，就当是练习写作吧\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e。\u003c/p\u003e","title":"关于哭","type":"posts"},{"content":"长沙的天气确实不留情，算上今天，已经是我第五次在半夜被热醒了……索性下床喝了点水，洗了个脸，然后睡意全没了，那就随便写点什么吧。\n上大学，多么光荣，多么理想的事，从上高中起就在做的梦，现在梦想成真了。回想过去四年的岁月，感慨万千，我收获了一些东西：天外有天，对于第一不要拼命追求，坦然承认别人在某方面的能力很强，但自己仍要努力。也失去了一些东西：比如天真，有人说天真不好，我觉得天真挺好的，可惜已经失去了。高中岁月的 99.99% 都是由无尽的学习组成的，高二和高三给了人很不痛快的感觉，进入实验部，老师们夸奖我们是康中的精英，于是对我们“特殊优待”，我们的课程比别人深，我们的星期天也被剥夺了一部分。可是那些真有必要吗？至少大部分是无用的。身在实验部，自己就变成了最不起眼的小人物，每天还要担心自己被别人超越。高中我们做了无穷的卷子，只为高考能够金榜题名，现在想想，有种呕吐的感觉。我们学了很多知识和方法，高考完，却又吐回了高中。这不是一个人的悲哀，而是中国的悲哀，但你又对此无能为力。\n心情有点沉重，啊，终于上大学了！大学的确是五彩缤纷的，现在看来还是很轻松自由的。无拘无束的，我们像被放出笼的鸟，不知要往哪飞，许多人自此迷失。这里的学生好多呀，真正是来自五湖四海，我们扎进去依然没了踪影，我们还是小人物。我们虽是小人物，但却不能自我贬低，努力奋斗，小人物也可以有大未来！不要迷失自我，不要妄自菲薄，淡定坦然，心胸宽一些，踏实地走完四年的道路。\n","date":"20 September 2010","externalUrl":null,"permalink":"/2010/09/20/entering_college/","section":"Posts","summary":"\u003cp\u003e长沙的天气确实不留情，算上今天，已经是我第五次在半夜被热醒了……索性下床喝了点水，洗了个脸，然后睡意全没了，那就随便写点什么吧。\u003c/p\u003e","title":"上大学了","type":"posts"},{"content":"忽然想起了在新校餐厅吃饭时认识的一位卖饭姑娘，其实并不真认识，只是见了认识而已，甚至没说过什么话。不知怎么地，有时就会想起她。\n那个姑娘卖的是面，正好挨着三楼餐厅最红火的「郭姐盖饭」，因此总是显得冷冷清清的。我也是偶然一次才去那里吃的，她给我的印象是：穿着白色工作服，头上戴着一顶白帽子（卖饭的工作人员通常都是这身打扮）；她似乎有什么心事似的，或者她天生沉默，我从没听到她像其他卖饭的人一样吆喝，她总是静静地站在摊位旁，只有等你轻轻走过去，她才问你要吃什么；她很整洁，衣服上没有斑斑油迹，摊位也被擦得干干净净，不锈钢摊面发出耀眼的光，而且她递给你碗时，总把碗沿擦干净。那里的炒面很好吃，不同于别处，面软软的，滑滑的，后来我常去吃。她看见我走过去时，总是很热情，很高兴的样子，大概是因为我常去吃的缘故。\n有一次，我吃的是油泼面。当她把面断过来时，在碗里加了一些黄瓜丝，又给我加了一个鹌鹑蛋。我知道，油泼面里是没有那些东西的，于是我也渐生感动之情。\n现在她不知怎么样了，她还是那样对人和善友好吗？我时常会想起那位善良的卖饭姑娘，因为她使我觉得这世间虽然有许多自私与冷漠，但也有温情的光芒，我觉得这个世界是值得一活的。\n","date":"21 July 2010","externalUrl":null,"permalink":"/2010/07/21/the_girl_who_sells_food/","section":"Posts","summary":"\u003cp\u003e忽然想起了在新校餐厅吃饭时认识的一位卖饭姑娘，其实并不真认识，只是见了认识而已，甚至没说过什么话。不知怎么地，有时就会想起她。\u003c/p\u003e","title":"卖饭姑娘","type":"posts"},{"content":"This blog does not collect the user data.\n","date":"1 January 1990","externalUrl":null,"permalink":"/1990/01/01/privacy-policy/","section":"Posts","summary":"This blog does not collect the user data.","title":"Privacy Policy","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]